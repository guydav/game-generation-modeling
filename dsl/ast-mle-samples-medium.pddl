(define (game game-id-0) (:domain medium-objects-room-v1)
(:setup
  (forall (?o4 - game_object ?o - cube_block)
    (exists (?r - hexagonal_bin ?c - hexagonal_bin)
      (game-optional
        (adjacent desk desk)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d - wall ?o - book)
        (then
          (once (not (not (not (and (agent_holds ?o) (and (adjacent room_center ?o) (not (on ?o agent) ) (and (agent_holds ?o) (not (not (exists (?o4 - dodgeball) (agent_holds ?o4) ) ) ) (not (and (not (and (on ?o agent) (in_motion ?o) ) ) (agent_holds ?o) ) ) ) ) ) ) ) ) )
          (once (agent_holds ?o) )
          (hold (not (adjacent ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (not
        (>= (count itemInClosedDrawerAtEnd:beachball) (+ (count-once itemInClosedDrawerAtEnd:red) (count itemInClosedDrawerAtEnd:dodgeball:blue_dodgeball) )
        )
      )
      (>= (count itemInClosedDrawerAtEnd:green) (+ (+ 5 3 )
          (count-measure itemInClosedDrawerAtEnd:pink_dodgeball)
        )
      )
    )
    (>= (count-once itemInClosedDrawerAtEnd:book) (total-score) )
  )
)
(:scoring
  (external-forall-maximize
    (* (+ (- (* (* (count itemInClosedDrawerAtEnd:beachball:green) (count-once-per-objects itemInClosedDrawerAtEnd:pink_dodgeball) )
            (* (* 2 (* (* (* 30 7 )
                    (* 4 (+ (external-forall-maximize (count itemInClosedDrawerAtEnd:purple) ) (+ (count itemInClosedDrawerAtEnd:basketball) (* 6 5 )
                          (count-once-per-external-objects itemInClosedDrawerAtEnd:blue_dodgeball)
                          8
                          15
                          (* (count-once-per-objects itemInClosedDrawerAtEnd:beachball:dodgeball) )
                          0
                        )
                      )
                      (* (+ 2 3 )
                        (count-once-per-objects itemInClosedDrawerAtEnd:golfball:pyramid_block)
                      )
                      (* (external-forall-maximize (count itemInClosedDrawerAtEnd:golfball) ) 9 )
                      (* 18 8 (count itemInClosedDrawerAtEnd:white) )
                      (count itemInClosedDrawerAtEnd:beachball)
                    )
                    (count itemInClosedDrawerAtEnd:side_table)
                  )
                  (+ (external-forall-maximize (+ 9 10 )
                    )
                    3
                  )
                )
              )
              7
              3
              2
            )
          )
        )
        (external-forall-minimize
          (count-once-per-objects itemInClosedDrawerAtEnd:beachball)
        )
        (+ 3 6 )
      )
      (* (- 2 )
        6
      )
    )
  )
)
)



(define (game game-id-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?o3 - game_object ?t - curved_wooden_ramp)
        (not
          (or
            (in_motion ?t)
            (in_motion ?t)
          )
        )
      )
      (adjacent bed agent)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?b4 - dodgeball)
        (at-end
          (forall (?b - game_object ?b - dodgeball)
            (not
              (and
                (equal_z_position ?b4 ?b)
                (forall (?h - hexagonal_bin)
                  (faces ?b ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 )
    (total-time)
  )
)
(:scoring
  (* (count-once throwAttemptFromBehindBlock:green) (+ (* 30 (* (external-forall-maximize (= (count throwAttemptFromBehindBlock:beachball) 3 )
          )
          (count throwAttemptFromBehindBlock:hexagonal_bin:blue_cube_block)
        )
      )
      (* (* 6 3 )
        5
      )
    )
  )
)
)



(define (game game-id-2) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds tan)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?c1 - dodgeball ?h - doggie_bed)
        (then
          (once (on ?h ?h) )
          (once (or (and (is_setup_object ?h) (agent_holds ?h) ) ) )
          (once (and (and (on ?h ?h) (< (distance_side ?h right ?h) (distance door ?h)) ) (same_type ?h bridge_block) ) )
          (once-measure (exists (?r - teddy_bear ?h - hexagonal_bin) (in_motion ?h) ) (distance ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (total-score) )
)
(:scoring
  (+ (* (* (* (* (count-once throwObjectToBin:pink) (* 10 (count-measure throwObjectToBin:hexagonal_bin) (count throwObjectToBin:golfball) (count-once-per-objects throwObjectToBin:dodgeball:basketball) (* 100 (* (count throwObjectToBin:pyramid_block:dodgeball) )
                (+ (count-once-per-objects throwObjectToBin:dodgeball) (count-once-per-objects throwObjectToBin:pink:dodgeball) )
              )
              (count throwObjectToBin:basketball)
              (* (* 10 3 )
                (count throwObjectToBin:top_drawer:yellow)
              )
              (+ 5 (count throwObjectToBin:dodgeball) )
              (count-once-per-objects throwObjectToBin:green:green)
            )
            1
          )
          (count-shortest throwObjectToBin:pink)
        )
        (count throwObjectToBin:cube_block:blue_dodgeball)
      )
      (* 8 5 2 (count-once-per-objects throwObjectToBin:bed:dodgeball) 5 2 )
    )
    50
    (* (count-once throwObjectToBin:green) (* (external-forall-maximize (count-once-per-objects throwObjectToBin:yellow:white) ) (count throwObjectToBin:pink_dodgeball:purple) )
    )
  )
)
)



(define (game game-id-3) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds floor)
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?o - (either hexagonal_bin rug))
        (then
          (once (not (in desk ?o) ) )
          (hold (exists (?b - (either pyramid_block desktop floor hexagonal_bin) ?r1 - hexagonal_bin) (in ?o floor) ) )
          (hold-while (not (and (and (agent_holds ?o) (in_motion ?o) (in_motion ?o) ) (not (< (distance bed ?o) (distance ?o ?o)) ) ) ) (not (agent_crouches ) ) (in_motion agent) )
          (once (touch ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once blockInTowerKnocked:dodgeball:block) (external-forall-maximize (+ (- 5 )
        (count-once blockInTowerKnocked:dodgeball:dodgeball)
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockInTowerKnocked:pink_dodgeball:hexagonal_bin)
)
)



(define (game game-id-4) (:domain many-objects-room-v1)
(:setup
  (exists (?c3 - ball)
    (forall (?c - block)
      (game-conserved
        (in_motion ?c3)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?ob - dodgeball)
        (then
          (once (same_type ?ob bridge_block) )
          (hold (game_over ) )
          (hold (on ?ob ?ob) )
          (once (in_motion agent) )
          (hold (agent_holds ?ob) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count redDodgeballThrownToBinWithoutTouchingFloor:red) 2 )
    (>= (count redDodgeballThrownToBinWithoutTouchingFloor:basketball) (count-once redDodgeballThrownToBinWithoutTouchingFloor:doggie_bed:basketball) )
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:red:dodgeball:orange)
)
)



(define (game game-id-5) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - dodgeball)
    (game-conserved
      (on ?b1 ?b1)
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?b - ball)
        (then
          (hold-while (not (exists (?b - doggie_bed) (not (and (in_motion ?b) (game_start ) (and (not (agent_holds ?b) ) (on ?b ?b) ) (> 5 1) ) ) ) ) (not (not (and (agent_holds ?b) (forall (?o1 - curved_wooden_ramp) (on ?b agent) ) ) ) ) )
          (hold (in ?b ?b) )
          (once (in_motion ?b) )
          (once (adjacent ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (- (* 1 (* (count-once-per-objects blockToBinFromRug:blue_dodgeball) 30 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blockToBinFromRug:beachball)
)
)



(define (game game-id-6) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?d - (either cd watch tall_cylindrical_block golfball key_chain yellow_cube_block doggie_bed) ?t1 - hexagonal_bin)
      (in_motion ?t1)
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?h - hexagonal_bin ?d - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (hold-while (not (in ?d ?d) ) (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-time) (- 6 )
    )
  )
)
(:scoring
  (+ (* 10 6 (* (count blockKnockedFromBuildingInBin:red) 50 (external-forall-maximize (= (external-forall-maximize (- (+ 25 (count-once-per-external-objects blockKnockedFromBuildingInBin:blue_dodgeball:basketball) )
              )
            )
            5
            (count blockKnockedFromBuildingInBin:blue_dodgeball)
          )
        )
        (* (external-forall-maximize (* 1 5 )
          )
          (count-once-per-external-objects blockKnockedFromBuildingInBin:dodgeball)
        )
      )
      (* 180 )
    )
    5
    (+ 7 (count blockKnockedFromBuildingInBin:alarm_clock) )
    (* 15 (- (count-once-per-objects blockKnockedFromBuildingInBin:pink_dodgeball) )
    )
  )
)
)



(define (game game-id-7) (:domain few-objects-room-v1)
(:setup
  (forall (?y ?y0 - upside_down ?b6 - (either hexagonal_bin cellphone))
    (forall (?l1 - dodgeball ?h - hexagonal_bin ?p1 ?r2 - dodgeball)
      (and
        (game-conserved
          (not
            (and
              (above ?b6 ?p1)
              (above ?r2 ?p1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - doggie_bed)
      (and
        (preference gameBlockFound
          (exists (?o - hexagonal_bin ?b - red_dodgeball)
            (then
              (once (agent_holds ?b) )
              (once (adjacent desk ?o4) )
              (once (on ?b agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count gameBlockFound:golfball:basketball) 15 )
)
(:scoring
  (count-once-per-external-objects gameBlockFound:dodgeball)
)
)



(define (game game-id-8) (:domain few-objects-room-v1)
(:setup
  (forall (?p2 - cube_block ?b6 - hexagonal_bin ?b4 ?d ?b2 ?o - doggie_bed)
    (forall (?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (agent_holds ?o)
            (touch agent bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either doggie_bed key_chain bridge_block) ?h - game_object)
      (and
        (preference ballThrownFromDoor
          (exists (?c1 - pillow)
            (then
              (hold (and (and (touch ?h ?h) (adjacent rug ?h) (in ?c1 agent) ) (not (in_motion ?c1) ) ) )
              (once (not (in ?h ?c1) ) )
              (once-measure (in ?c1 ?c1) (distance room_center ?c1) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?x - light_blue)
            (then
              (once (in_motion ?h) )
              (hold (agent_holds rug) )
              (once (and (and (not (in ?h ?h) ) (not (in ?h ?h) ) ) (in_motion ?h) ) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (then
            (once (in_motion ?h) )
            (once (and (and (in_motion ?h) (not (not (game_over ) ) ) ) (not (in ?h ?h) ) (not (agent_holds ?h) ) ) )
            (once (and (and (and (is_setup_object agent) (agent_holds ?h) ) (and (on bed agent) (and (and (or (in ?h ?h) (not (and (not (in_motion ?h) ) (and (< (x_position ?h) 3) (touch ?h ?h) ) ) ) ) (touch ?h ?h) ) (agent_holds ?h) (and (and (and (game_start ) (adjacent door ?h) ) (not (on ?h ?h) ) ) (on ?h ?h) ) ) ) ) (in_motion ?h) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 10 (* 15 (count ballThrownFromDoor:yellow) )
      )
    )
    (>= (count ballThrownFromDoor:beachball) (count ballThrownFromDoor:hexagonal_bin) )
  )
)
(:scoring
  (* (count throwBallToDoggieBed:purple) 3 )
)
)



(define (game game-id-9) (:domain many-objects-room-v1)
(:setup
  (forall (?r2 - hexagonal_bin ?x - pink)
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (forall (?d ?o - shelf ?d - dodgeball ?o1 - game_object ?h - (either hexagonal_bin dodgeball) ?h - hexagonal_bin)
      (and
        (preference blockCorrectlyPicked
          (exists (?w1 - dodgeball ?b5 - ball)
            (then
              (hold (not (same_type ?h pillow) ) )
              (hold (not (on bed ?h) ) )
              (hold (and (toggled_on ?b5) (< (distance_side bed front ?b5) 1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count blockCorrectlyPicked:green) )
)
(:scoring
  (count blockCorrectlyPicked:wall)
)
)



(define (game game-id-10) (:domain few-objects-room-v1)
(:setup
  (exists (?f - cube_block)
    (exists (?o1 - desktop)
      (forall (?x - brown)
        (and
          (game-conserved
            (and
              (exists (?c5 ?w1 ?b - doggie_bed)
                (equal_x_position ?o1 ?f)
              )
              (on ?o1 ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - drawer)
      (and
        (preference pillowMovedToRoomCenter
          (exists (?h - hexagonal_bin ?h - sliding_door ?h - doggie_bed ?d - game_object)
            (then
              (once (adjacent ?d ?r) )
              (once (not (not (adjacent ?r ?d) ) ) )
              (once (in ?r ?r) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?r2 ?r - dodgeball)
        (at-end
          (in_motion ?r)
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?b4 - chair)
        (then
          (once (on ?b4 ?b4) )
          (once (adjacent bed ?b4) )
          (hold (not (adjacent room_center ?b4) ) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?h - hexagonal_bin ?p3 - doggie_bed)
        (then
          (once (agent_holds agent) )
          (once (or (not (in_motion ?p3) ) (in ?p3 ?p3) ) )
          (once (in ?p3 ?p3) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?c1 - hexagonal_bin)
        (then
          (once (in_motion top_shelf) )
          (hold (or (and (agent_holds ?c1) (< 5 (distance desk floor)) ) (equal_z_position ?c1 ?c1) ) )
          (once (exists (?o ?g ?o3 ?d ?s ?o1 - cube_block ?d - doggie_bed) (adjacent room_center agent) ) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?b10 - (either bridge_block key_chain flat_block pyramid_block))
        (then
          (once (and (agent_holds ?b10) (agent_holds ?b10) (in_motion ?b10) ) )
          (once (on ?b10 ?b10) )
          (hold (not (and (and (touch ?b10 top_shelf) (not (and (adjacent_side south_wall back ?b10 left) (not (agent_holds ?b10) ) ) ) (not (not (touch ?b10 ?b10) ) ) ) (game_over ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (or
        (>= (* 4 (count throwToRampToBin:dodgeball:beachball) )
          (+ 3 (* 300 (count-once ballThrownToRampToBed) )
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects ballOnBedAtEnd:blue_pyramid_block) (count ballThrownToRampToBed:hexagonal_bin) 180 (count throwToRampToBin:alarm_clock) (count-increasing-measure ballThrownToRampToBed:dodgeball:dodgeball) 3 )
)
)



(define (game game-id-11) (:domain few-objects-room-v1)
(:setup
  (forall (?b3 - triangular_ramp ?d - flat_block)
    (forall (?c4 - (either main_light_switch dodgeball dodgeball))
      (game-conserved
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - (either tall_cylindrical_block dodgeball side_table wall doggie_bed pencil pyramid_block) ?b5 - hexagonal_bin)
        (then
          (hold (not (in_motion ?b5) ) )
          (once (and (adjacent_side bed front ?b5) (in ?b5 ?b5) ) )
          (hold-while (exists (?r - hexagonal_bin ?g - book ?o - ball ?h - dodgeball ?o5 - shelf) (not (is_setup_object ?b5) ) ) (agent_holds ?b5) )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?r - ball)
        (then
          (once (in ?r ?r) )
          (hold (in ?r ?r) )
          (hold (agent_holds ?r) )
        )
      )
    )
    (forall (?b8 - cube_block)
      (and
        (preference throwTeddyOntoPillow
          (exists (?w2 - dodgeball ?b3 - doggie_bed)
            (at-end
              (agent_holds ?b8)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (count beachballOnRug:pink_dodgeball) )
)
(:scoring
  (count throwTeddyOntoPillow:yellow_pyramid_block)
)
)



(define (game game-id-12) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (and
      (in_motion agent)
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b1 - wall ?b10 - (either dodgeball wall tall_cylindrical_block book dodgeball cylindrical_block pencil))
        (at-end
          (and
            (not
              (on ?b10 ?b10)
            )
            (in_motion ?b10)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 4 )
    (>= (- 10 (count-once-per-objects pinkObjectMovedToRoomCenter:pink) ) 5 )
  )
)
(:scoring
  (count pinkObjectMovedToRoomCenter:basketball:dodgeball)
)
)



(define (game game-id-13) (:domain medium-objects-room-v1)
(:setup
  (exists (?b7 - block ?b3 - drawer)
    (and
      (game-conserved
        (agent_holds ?b3)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - hexagonal_bin ?b - ball)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?b2 - pillow)
            (then
              (hold-while (exists (?b - (either bridge_block laptop) ?f ?t - dodgeball) (in_motion agent) ) (not (in ?b2 ?b2) ) (in_motion agent) (agent_holds bed) )
              (once (equal_z_position room_center rug) )
              (once (same_type rug pillow) )
            )
          )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?t1 - block)
            (at-end
              (and
                (and
                  (in ?t1 ?h)
                  (= 4 1 (distance ?t1 ?t1))
                )
                (touch agent ?h)
                (in_motion ?t1)
                (and
                  (in ?h ?t1)
                  (on ?t1 ?t1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 3 )
    (total-time)
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromBehindBlock:dodgeball)
)
)



(define (game game-id-14) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either rug doggie_bed))
    (game-conserved
      (< (distance_side room_center front bed left) 2)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?h - game_object)
        (then
          (once (< 1 (distance desk bed)) )
          (hold-while (agent_holds ?h) (and (not (on ?h ?h) ) (and (in ?h ?h) (not (adjacent desk ?h) ) (<= (distance room_center ?h) 1) (in_motion ?h) ) ) (on ?h ?h) (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?l - dodgeball)
        (then
          (once (in_motion ?l) )
          (hold (agent_crouches ) )
          (once (and (< (distance door ?l) (distance door ?l)) (not (agent_holds ?l) ) (on agent ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (or
        (>= 5 (total-score) )
        (>= 3 2 )
      )
    )
  )
)
(:scoring
  (count itemsHidingScreens:hexagonal_bin)
)
)



(define (game game-id-15) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l3 - game_object ?c4 ?c - (either pyramid_block cube_block cube_block golfball))
      (and
        (exists (?o5 - wall)
          (exists (?b9 ?c ?b - wall)
            (game-conserved
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?o - hexagonal_bin)
        (then
          (once (agent_holds ?o) )
          (once (and (agent_holds ?o) ) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?b1 - hexagonal_bin)
        (then
          (once (and (not (not (touch ?b1 ?b1) ) ) (in_motion ?b1) (exists (?h - (either triangular_ramp dodgeball)) (on ?b1 ?b1) ) (not (in ?b1 ?b1) ) (or (and (in_motion ?b1) (agent_holds ?b1) ) (adjacent ?b1 ?b1) ) (in ?b1 ?b1) (agent_holds ?b1) ) )
          (once (and (in ?b1 ?b1) (and (in_motion ?b1) (agent_holds ?b1) ) ) )
          (hold (in ?b1 ?b1) )
        )
      )
    )
  )
)
(:terminal
  (> 3 10 )
)
(:scoring
  (* 5 6 )
)
)



(define (game game-id-16) (:domain few-objects-room-v1)
(:setup
  (forall (?b1 - doggie_bed)
    (and
      (and
        (and
          (exists (?l1 - hexagonal_bin)
            (and
              (exists (?p1 - doggie_bed ?x - red)
                (game-optional
                  (not
                    (in_motion ?l1)
                  )
                )
              )
            )
          )
        )
        (game-optional
          (and
            (and
              (in_motion agent)
              (not
                (not
                  (agent_holds ?b1)
                )
              )
            )
            (in ?b1 ?b1)
          )
        )
      )
      (exists (?r - shelf)
        (game-conserved
          (or
            (in_motion ?r)
            (or
              (and
                (on brown ?r)
                (agent_holds ?b1)
              )
              (and
                (and
                  (in ?r ?b1)
                  (not
                    (and
                      (in ?b1 ?b1)
                      (on ?r ?r)
                      (and
                        (in_motion ?r)
                        (not
                          (adjacent room_center ?r)
                        )
                      )
                    )
                  )
                )
                (on ?b1 ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?bl ?o1 ?d ?d ?d ?c2 ?w ?d ?db ?b - doggie_bed ?b - dodgeball)
        (then
          (once (in_motion ?b) )
          (once (in_motion ?b) )
          (once (above ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 3 )
)
(:scoring
  (count dodgeballThrownToBin:yellow_cube_block:basketball)
)
)



(define (game game-id-17) (:domain few-objects-room-v1)
(:setup
  (forall (?o - green_triangular_ramp)
    (and
      (game-optional
        (adjacent_side ?o left ?o right)
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?l3 - (either cube_block beachball))
        (then
          (once (and (agent_holds ?l3) (on ?l3 ?l3) ) )
          (once (in_motion ?l3) )
          (once (on ?l3 ?l3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballKnocksBlockFromRug:pink) (count ballKnocksBlockFromRug:dodgeball) )
)
(:scoring
  (count-total ballKnocksBlockFromRug:pink_dodgeball:yellow)
)
)



(define (game game-id-18) (:domain few-objects-room-v1)
(:setup
  (exists (?bl - hexagonal_bin)
    (game-conserved
      (same_color ?bl purple)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b - ball)
        (then
          (once (in_motion ?b) )
          (hold (and (on ?b ?b) (in_motion ?b) ) )
          (once (and (forall (?p1 - curved_wooden_ramp) (< (distance room_center ?b) 8) ) (touch top_drawer ?b) ) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?f - hexagonal_bin)
        (then
          (hold (agent_holds pink) )
          (hold (on ?f ?f) )
          (hold (not (and (and (not (not (not (not (and (and (not (and (in_motion ?f) (in_motion floor) ) ) (not (on ?f ?f) ) ) (agent_holds ?f) (in_motion ?f) ) ) ) ) ) (on ?f ?f) ) (exists (?g - (either cylindrical_block golfball) ?d - cube_block) (not (equal_z_position door ?f) ) ) (and (forall (?b - ball) (or (and (and (same_color ?b ?b) (on ?b ?b) ) (agent_holds ?b) ) (> (distance ?b ?f) 1) ) ) (and (in_motion ?f) (in ?f desk) ) ) ) ) )
          (hold-while (agent_holds ?f) (not (on ?f ?f) ) (game_start ) )
        )
      )
    )
    (preference itemsBroken
      (exists (?w2 - bridge_block)
        (at-end
          (in_motion ?w2)
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?h - beachball ?ob - shelf)
        (then
          (once (not (not (and (not (in_motion ?ob) ) (in_motion ?ob) ) ) ) )
          (once (open ?ob) )
          (hold (not (in_motion ?ob) ) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?t - building)
        (then
          (once (> 4 2) )
          (once (not (on ?t ?t) ) )
          (once (on ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count-once-per-objects beachballBouncedOffRamp:dodgeball) (count-once-per-external-objects throwTeddyOntoPillow:dodgeball:beachball) )
    (> (count beachballBouncedOffRamp:dodgeball:blue:dodgeball) 5 )
  )
)
(:scoring
  (* (count beachballBouncedOffRamp:pink) (count golfballInBinFromPillow:basketball) )
)
)



(define (game game-id-19) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either laptop desktop) ?o1 - hexagonal_bin ?db ?h - ball)
    (exists (?y ?y0 ?y1 - upside_down ?o2 - chair ?t - doggie_bed)
      (and
        (game-conserved
          (on ?db ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?p - hexagonal_bin)
        (then
          (once (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count ballOnBedAtEnd:rug) 4 5 (>= (* (count-once ballOnBedAtEnd:dodgeball) (external-forall-maximize (count ballOnBedAtEnd:dodgeball:basketball) ) )
        (count ballOnBedAtEnd:tan)
      )
    )
    (count-once-per-external-objects ballOnBedAtEnd:hexagonal_bin)
  )
)
(:scoring
  (count ballOnBedAtEnd:purple)
)
)



(define (game game-id-20) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 ?o4 ?o1 ?l ?c2 ?bl - hexagonal_bin ?w - (either main_light_switch desktop dodgeball))
    (exists (?d - ball)
      (and
        (and
          (forall (?t1 - (either dodgeball cd))
            (forall (?b2 ?o ?b5 ?h ?c ?c ?b4 ?c1 ?p ?c2 - (either cellphone dodgeball teddy_bear))
              (game-conserved
                (agent_holds ?b5)
              )
            )
          )
        )
        (and
          (and
            (and
              (game-conserved
                (< 1 (distance ?w ?d))
              )
              (and
                (and
                  (exists (?h - hexagonal_bin)
                    (forall (?x ?x0 ?x1 - orange)
                      (exists (?p2 - (either mug))
                        (exists (?p - tan_cube_block)
                          (exists (?l4 - pyramid_block)
                            (game-conserved
                              (not
                                (in_motion ?w)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?c5 - hexagonal_bin ?d - game_object)
                    (or
                      (game-conserved
                        (< (distance desk ?w) 8)
                      )
                      (exists (?b6 - tall_cylindrical_block)
                        (and
                          (exists (?o - triangular_ramp)
                            (and
                              (and
                                (and
                                  (exists (?d - ball ?b4 - teddy_bear)
                                    (forall (?b5 - red_dodgeball)
                                      (game-conserved
                                        (>= (x_position ?d) 0)
                                      )
                                    )
                                  )
                                  (exists (?c - hexagonal_bin ?c - pyramid_block)
                                    (exists (?b2 - shelf ?f - ball)
                                      (game-optional
                                        (and
                                          (not
                                            (adjacent ?c agent)
                                          )
                                          (> (distance ?c floor) (distance ?c ?b6))
                                          (touch ?o ?o)
                                        )
                                      )
                                    )
                                  )
                                  (game-optional
                                    (above ?d ?w)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?t - dodgeball)
                    (forall (?t1 - red_dodgeball)
                      (game-conserved
                        (touch ?t ?d)
                      )
                    )
                  )
                )
              )
              (exists (?b - dodgeball ?l3 - ball)
                (game-optional
                  (not
                    (touch ?w ?d)
                  )
                )
              )
            )
            (and
              (and
                (exists (?db - hexagonal_bin ?x ?x0 ?x1 - green)
                  (forall (?h - (either laptop cd) ?b ?c6 - (either alarm_clock golfball))
                    (game-optional
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?b ?d ?p1 ?c5 - hexagonal_bin ?d - (either doggie_bed pyramid_block))
        (then
          (once (not (in_motion agent) ) )
          (once (not (and (in ?d ?d) (in_motion ?d) ) ) )
          (once (not (same_color ?d color) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count smallObjectThrownToBed:dodgeball:basketball) 2 )
    (>= (total-time) 2 )
  )
)
(:scoring
  (count-once-per-objects smallObjectThrownToBed:dodgeball:blue_pyramid_block)
)
)



(define (game game-id-21) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (and
      (or
        (and
          (and
            (and
              (forall (?c3 - hexagonal_bin ?c4 - chair ?o - dodgeball)
                (forall (?b ?c - pillow)
                  (exists (?y ?y0 - (either sideways diagonal))
                    (exists (?d - green_triangular_ramp ?y - upside_down ?w2 - game_object)
                      (game-conserved
                        (in ?w2 ?o)
                      )
                    )
                  )
                )
              )
            )
            (or
              (and
                (exists (?b4 - ball)
                  (game-conserved
                    (on ?b4 desktop)
                  )
                )
              )
              (game-conserved
                (not
                  (object_orientation ?o diagonal)
                )
              )
            )
          )
        )
        (game-optional
          (and
            (not
              (and
                (agent_holds ?o)
                (<= (distance_side ?o back ?o left) (x_position ?o))
              )
            )
            (in_motion ?o)
            (touch ?o desk)
          )
        )
        (game-conserved
          (and
            (not
              (not
                (in_motion agent)
              )
            )
            (and
              (in ?o ?o)
              (on ?o ?o)
            )
            (in_motion ?o)
          )
        )
      )
      (game-conserved
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c2 - dodgeball)
        (then
          (once (not (on ?c2 ?c2) ) )
          (once (not (agent_holds ?c2) ) )
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 0 180 )
    10
  )
)
(:scoring
  (count ballThrownMissesEverything:yellow_pyramid_block)
)
)



(define (game game-id-22) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - (either dodgeball golfball))
    (forall (?o - dodgeball)
      (and
        (game-optional
          (> 5 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - pillow)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?o - triangular_ramp ?l2 - ball)
            (at-end
              (and
                (and
                  (agent_holds ?c)
                  (agent_holds agent)
                )
                (and
                  (not
                    (in_motion ?l2)
                  )
                  (agent_crouches )
                )
                (in_motion ?c)
              )
            )
          )
        )
        (preference throwAttempt
          (exists (?o - ball)
            (then
              (hold-while (on ?c ?o) (adjacent_side ?o front ?o front) )
              (once (not (not (not (not (rug_color_under rug white) ) ) ) ) )
              (once (forall (?h ?b5 ?b - hexagonal_bin ?c - ball) (agent_holds ?o) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (total-time) (* 3 4 )
    )
    (> 4 (- (count throwAttempt:dodgeball) )
    )
  )
)
(:scoring
  (count-once ballThrownThroughRampToBin:beachball)
)
)



(define (game game-id-23) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - blue_cube_block ?l - hexagonal_bin)
    (exists (?d - flat_block)
      (exists (?c2 - building ?o - chair ?c - ball)
        (game-conserved
          (opposite ?l ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - (either mug triangle_block key_chain))
      (and
        (preference cubeBlockInBuilding
          (exists (?b - cube_block)
            (then
              (once (not (adjacent bed ?b) ) )
              (hold (adjacent room_center ?b) )
              (hold (and (and (agent_holds ?b) (game_start ) (in_motion ?b) ) (opposite ?c1 ?b) (adjacent room_center ?c1) (in_motion agent) ) )
            )
          )
        )
        (preference blockInTowerAtEnd
          (exists (?h - dodgeball)
            (at-end
              (agent_holds ?c1)
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?l2 - cube_block ?b4 - block)
            (then
              (once (and (in ?b4 ?b4) (and (and (in ?c1 ?b4) ) (exists (?c5 - hexagonal_bin) (agent_holds ?b4) ) ) ) )
              (hold (equal_z_position ?c1 ?c1) )
              (hold (and (and (on ?c1 top_shelf) (agent_holds bottom_shelf) ) ) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?z - (either front front_left_corner front_left_corner) ?c - hexagonal_bin)
            (at-end
              (agent_holds ?c1)
            )
          )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?s - shelf ?o2 - (either bridge_block tall_cylindrical_block))
        (then
          (once (not (in ?o2 ?o2) ) )
          (hold-while (and (not (and (exists (?p3 - chair) (in_motion ?p3) ) (= 1 (distance_side desk front ?o2 back)) ) ) (not (on ?o2 ?o2) ) ) (adjacent room_center ?o2) (in_motion ?o2) )
          (once (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ (* (* (- (count thrownBallHitsBlock:pink) )
              (+ (* (* (* 5 4 (+ 5 (+ (count-once-per-objects cubeBlockInBuilding:blue_dodgeball) 5 )
                      )
                    )
                    (count-once-per-external-objects ballOnBedAtEnd:pink_dodgeball)
                  )
                  (* (count-once-per-external-objects objectInBuilding:red_pyramid_block:wall) (count thrownBallHitsBlock:golfball) )
                  (count-once-per-objects blockInTowerAtEnd:red)
                  (count ballOnBedAtEnd)
                )
                (external-forall-maximize
                  (/
                    (count-once objectInBuilding:cube_block)
                    3
                  )
                )
              )
            )
            (count ballOnBedAtEnd:yellow_cube_block)
          )
          (count blockInTowerAtEnd:dodgeball:red)
          (count thrownBallHitsBlock:book)
        )
        (total-score)
      )
      (> (count-once-per-objects blockInTowerAtEnd:orange) (count blockInTowerAtEnd:basketball) )
      (<= (+ (count-unique-positions thrownBallHitsBlock:dodgeball) (count thrownBallHitsBlock:brown) )
        (count blockInTowerAtEnd:dodgeball)
      )
      (>= (count blockInTowerAtEnd:basketball) (< (- (* (* (* 2 (count objectInBuilding) )
                (count ballOnBedAtEnd:dodgeball:beachball:golfball)
              )
              (count-total ballOnBedAtEnd:dodgeball)
            )
          )
          50
        )
      )
    )
    (> (+ (count-once thrownBallHitsBlock:dodgeball) 5 )
      (* (* (count-once-per-objects objectInBuilding:cube_block) (* (* (+ 3 (- (* 3 5 )
                )
                2
                (count ballOnBedAtEnd:white)
                (+ 10 (count objectInBuilding:basketball) )
                5
              )
              30
              (count-longest ballOnBedAtEnd:yellow)
            )
            (count thrownBallHitsBlock:beachball)
          )
          (+ 5 1 )
          (* (* (count cubeBlockInBuilding:beachball) 3 )
            (count thrownBallHitsBlock:basketball:dodgeball)
          )
          50
          (count-once thrownBallHitsBlock:green)
        )
        5
        (+ 6 (count thrownBallHitsBlock:red) )
      )
    )
  )
)
(:scoring
  (* (* (* 4 (+ 3 (count-same-positions blockInTowerAtEnd:basketball:basketball) )
      )
      (* (count-measure ballOnBedAtEnd) 20 )
    )
    15
    (+ (count-once thrownBallHitsBlock:beachball) (- 2 )
    )
    (count-once-per-objects ballOnBedAtEnd:golfball)
    1
    (count-once thrownBallHitsBlock)
  )
)
)



(define (game game-id-24) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o - watch)
      (exists (?b - dodgeball)
        (not
          (and
            (exists (?l4 ?t - block)
              (game-optional
                (same_color ?t agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r1 - dodgeball ?c - cube_block)
      (and
        (preference castleBuilt
          (exists (?b9 - cube_block ?h ?r ?c2 ?o1 ?c ?p - doggie_bed ?bl - hexagonal_bin ?s - golfball)
            (then
              (hold (and (not (and (touch ?s ?c) (< 1 (distance room_center ?s)) ) ) (on ?s ?c) ) )
              (hold (agent_holds ?c) )
              (hold-while (forall (?l3 - drawer) (in_motion ?c) ) (not (adjacent east_sliding_door ?c) ) )
            )
          )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?c - cylindrical_block ?c - teddy_bear)
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (> (count failedThrowToBin:golfball) (total-time) )
)
(:scoring
  (+ 3 100 )
)
)



(define (game game-id-25) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - (either block cellphone))
        (at-end
          (open ?h)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (external-forall-maximize (count beachballOnRug:dodgeball) ) )
)
(:scoring
  (count beachballOnRug:green:top_drawer)
)
)



(define (game game-id-26) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l1 - desk_shelf ?g - triangular_ramp ?p3 - game_object)
      (and
        (exists (?b3 - dodgeball)
          (game-optional
            (not
              (not
                (game_over )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?o - (either game_object pencil desktop dodgeball))
        (forall (?o2 - doggie_bed)
          (game-conserved
            (exists (?h ?p1 ?b ?b3 ?d2 - (either triangle_block pencil) ?b1 ?c ?c ?h ?d ?o2 - game_object)
              (and
                (not
                  (and
                    (and
                      (above ?o2 ?o)
                      (on ?d ?d)
                      (adjacent_side desk left ?d)
                    )
                    (and
                      (in_motion ?d)
                      (touch ?o2 ?d)
                    )
                  )
                )
                (on ?b1 ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?b1 - (either alarm_clock golfball))
        (then
          (hold-while (not (agent_holds ?b1) ) (exists (?g - hexagonal_bin ?bl - cube_block) (or (not (agent_holds ?bl) ) ) ) )
          (once (on ?b1 ?b1) )
          (hold (and (not (and (adjacent bed ?b1) (same_object ?b1 ?b1) ) ) (exists (?b ?d - cube_block) (same_type ?b1 ?b) ) ) )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?t - hexagonal_bin)
        (then
          (once (equal_x_position ?t ?t) )
          (hold (not (not (agent_holds ?t) ) ) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (<= 20 5 )
)
(:scoring
  (* (count-overlapping gameObjectToBin:beachball) (+ 40 (- (external-forall-maximize (count dodgeballBouncesOnceToDoggieBed:golfball) ) )
    )
  )
)
)



(define (game game-id-27) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - ball)
    (game-conserved
      (adjacent ?d desk)
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?t2 - dodgeball)
        (then
          (once (not (and (not (same_type agent ?t2) ) (in_motion ?t2) ) ) )
          (once (not (and (and (and (not (in bed ?t2) ) (and (and (touch ?t2 ?t2) (not (< 1 1) ) ) (not (rug_color_under ?t2 yellow) ) (and (on ?t2 ?t2) (on ?t2 ?t2) ) (not (in ?t2 ?t2) ) (rug_color_under ?t2 yellow) ) ) (not (agent_holds ?t2) ) ) (touch ?t2 ?t2) ) ) )
          (once (between ?t2 ?t2 ?t2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects woodenBlockMovedFromRugToDesk:green) (count-once-per-objects woodenBlockMovedFromRugToDesk:green) )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:red)
)
)



(define (game game-id-28) (:domain few-objects-room-v1)
(:setup
  (forall (?db - dodgeball)
    (game-optional
      (in_motion ?db)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?b - pink_dodgeball ?ob - pillow)
        (then
          (once (not (and (agent_holds ?ob) (on ?ob ?ob) ) ) )
          (hold (agent_holds ?ob) )
          (once (in_motion ?ob) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects throwAttemptKnocksBlock:pink:pink) 10 )
)
(:scoring
  (* (count-once-per-objects throwAttemptKnocksBlock:red) (count throwAttemptKnocksBlock:red) )
)
)



(define (game game-id-29) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - blue_cube_block)
    (and
      (and
        (forall (?t2 - building ?w1 - shelf)
          (and
            (game-conserved
              (in ?w1 ?w2)
            )
            (forall (?b - cube_block)
              (game-conserved
                (on ?w1 agent)
              )
            )
          )
        )
      )
      (game-conserved
        (on ?w2 ?w2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - chair ?c2 - building)
        (then
          (hold (in top_drawer ?c2) )
          (once (game_start ) )
          (hold (in ?c2 agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (total-score) 2 )
  )
)
(:scoring
  (count ballThrownToWallToAgent:blue_dodgeball:basketball)
)
)



(define (game game-id-30) (:domain many-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (forall (?c - hexagonal_bin)
      (exists (?l4 - dodgeball ?o - dodgeball)
        (game-optional
          (in_motion rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?c - dodgeball)
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (not
    (<= 3 3 )
  )
)
(:scoring
  (count-once blueObjectMovedToRoomCenter:blue_dodgeball:yellow)
)
)



(define (game game-id-31) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (adjacent desk top_drawer)
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin)
      (and
        (preference throwAttemptFromDoor
          (exists (?d - ball ?r - desk_shelf)
            (then
              (hold (and (and (agent_holds floor) (on tan ?c2) (and (broken ?r) (not (and (= (distance ?c2 agent) 1) (in_motion ?c2) ) ) ) ) (not (and (not (not (on ?c2 rug) ) ) (in_motion top_shelf) (opposite ?c2 ?r) ) ) (and (on ?c2 ?c2) (in ?r ?c2) (and (and (agent_holds ?r) (object_orientation ?r upright) ) ) ) ) )
              (once (agent_holds ?c2) )
              (once (agent_holds ?c2) )
            )
          )
        )
        (preference gameBlockFound
          (exists (?w - (either pyramid_block dodgeball))
            (then
              (hold-while (on ?c2 desk) (not (on floor ?w) ) )
              (once (adjacent ?c2 ?c2) )
              (once (in_motion ?w) )
            )
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?h - hexagonal_bin ?x - color)
        (then
          (hold (and (not (and (< 1 5) (in bed ?h) ) ) (in ?h ?h) (and (and (not (equal_x_position desk agent) ) (not (< 3 1) ) ) (or (forall (?h - tan_cube_block ?h - sliding_door) (on ?h ?h) ) ) ) ) )
          (once (not (agent_holds ?h) ) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:block:beachball:pink) (+ (count throwAttemptFromDoor:dodgeball:purple) (count-same-positions gameBlockFound:blue_cube_block) (count gameBlockFound:purple) (count gameBlockFound:dodgeball) (count-same-positions throwAttemptFromDoor:book) 2 )
  )
)
(:scoring
  (count objectOnBed:pink)
)
)



(define (game game-id-32) (:domain medium-objects-room-v1)
(:setup
  (exists (?o4 - dodgeball ?b - ball)
    (and
      (game-conserved
        (exists (?c - shelf)
          (agent_holds ?c)
        )
      )
      (game-conserved
        (< (x_position ?b) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?b3 - (either dodgeball dodgeball bridge_block))
        (at-end
          (and
            (adjacent room_center ?b3)
            (and
              (agent_holds ?b3)
              (in ?b3 ?b3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 7 (count blockFromRugToDesk:pink_dodgeball) )
)
(:scoring
  (external-forall-maximize
    (* (+ (count-once-per-objects blockFromRugToDesk:red) (count-once-per-objects blockFromRugToDesk:basketball:side_table) )
      15
    )
  )
)
)



(define (game game-id-33) (:domain many-objects-room-v1)
(:setup
  (exists (?s - building ?g - dodgeball)
    (and
      (exists (?d - (either doggie_bed mug cellphone))
        (exists (?t - game_object)
          (exists (?b3 - hexagonal_bin)
            (game-conserved
              (in ?d ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?c - (either cube_block side_table pyramid_block) ?o2 ?c3 ?ob - chair)
        (then
          (once (adjacent desk ?ob) )
          (once (on west_wall agent) )
          (hold-while (< (distance desk ?c3) 1) (adjacent room_center agent) )
        )
      )
    )
  )
)
(:terminal
  (> (* (- (count towerFallsWhileBuilding:hexagonal_bin) (external-forall-maximize (count towerFallsWhileBuilding:beachball) ) ) (count-once-per-objects towerFallsWhileBuilding:blue_dodgeball) 5 )
    (total-time)
  )
)
(:scoring
  (* 7 (count-measure towerFallsWhileBuilding:top_drawer) )
)
)



(define (game game-id-34) (:domain medium-objects-room-v1)
(:setup
  (exists (?h ?b - wall ?c2 - building)
    (forall (?b6 - hexagonal_bin ?w1 - hexagonal_bin)
      (game-optional
        (agent_holds ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?l2 - hexagonal_bin ?c3 - hexagonal_bin)
        (at-end
          (adjacent room_center ?c3)
        )
      )
    )
  )
)
(:terminal
  (>= 0 (* (count-unique-positions throwToDrawerOrBin:pink) (count-once-per-objects throwToDrawerOrBin) (count throwToDrawerOrBin:yellow) (count throwToDrawerOrBin:dodgeball:beachball) 5 (* 10 (count-increasing-measure throwToDrawerOrBin:pink) )
    )
  )
)
(:scoring
  (count throwToDrawerOrBin:dodgeball:dodgeball)
)
)



(define (game game-id-35) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - dodgeball ?h - golfball ?b - (either lamp book cube_block alarm_clock key_chain))
    (exists (?d2 - building ?b - teddy_bear ?b5 - dodgeball ?o2 - hexagonal_bin ?c1 - (either cd))
      (game-conserved
        (not
          (not
            (not
              (exists (?d - cube_block)
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?b4 - hexagonal_bin)
        (then
          (once (agent_holds ?b4) )
          (hold (and (on ?b4 ?b4) (not (agent_holds ?b4) ) ) )
          (once (adjacent room_center ?b4) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?s ?d - pillow)
        (then
          (once (on ?d ?s) )
          (once (not (agent_holds ?d) ) )
          (once (adjacent room_center desk) )
          (once (in_motion ?s) )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?d - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (agent_holds ?d) (agent_holds ?d) ) )
          (once (in_motion ?d) )
          (hold-while (not (not (not (not (not (not (touch ?d agent) ) ) ) ) ) ) (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockIncorrectlyPicked:hexagonal_bin) (count throwToBinFromOppositeWall:basketball) )
)
(:scoring
  (* (count-once-per-objects bounceBallToBin:golfball) 2 5 10 (= (count throwToBinFromOppositeWall:pink) (count blockIncorrectlyPicked:beachball) 3 )
    3
  )
)
)



(define (game game-id-36) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (<= 2 5)
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?b4 - curved_wooden_ramp)
        (then
          (hold (agent_holds ?b4) )
          (hold (and (in_motion ?b4) (< (distance room_center ?b4) (distance ?b4 ?b4)) ) )
        )
      )
    )
    (forall (?d - dodgeball)
      (and
        (preference ballThrownToRampToBed
          (exists (?d - (either doggie_bed cellphone) ?d - cylindrical_block ?l3 - teddy_bear)
            (then
              (hold (and (not (in ?l3 ?l3) ) (game_over ) ) )
              (once (and (agent_holds ?l3) (not (not (not (not (object_orientation ?l3 sideways) ) ) ) ) ) )
              (once (agent_holds ?l3) )
            )
          )
        )
        (preference brownObjectMovedToRoomCenter
          (exists (?r - yellow_pyramid_block)
            (at-end
              (in_motion bed)
            )
          )
        )
      )
    )
    (preference objectInBuilding
      (at-end
        (not
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count objectInBuilding:dodgeball:beachball:orange) (* 4 4 (* (* (count throwFromDoorToBin:doggie_bed) 3 )
        (count-once-per-objects ballThrownToRampToBed:orange)
      )
      8
      (external-forall-maximize
        (count brownObjectMovedToRoomCenter:green)
      )
      2
    )
  )
)
(:scoring
  (count-longest brownObjectMovedToRoomCenter:pink_dodgeball:red)
)
)



(define (game game-id-37) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - hexagonal_bin)
    (and
      (forall (?c4 - ball ?o - dodgeball ?c3 - teddy_bear)
        (and
          (game-conserved
            (and
              (on ?c3 ?w1)
              (agent_holds ?c3)
            )
          )
          (forall (?d1 - dodgeball ?d - game_object)
            (and
              (game-optional
                (in_motion ?c3)
              )
            )
          )
          (game-conserved
            (agent_holds ?w1)
          )
        )
      )
      (exists (?o4 - ball)
        (and
          (game-conserved
            (on ?w1 agent)
          )
          (and
            (game-optional
              (in_motion ?w1)
            )
            (game-optional
              (touch agent ?o4)
            )
          )
        )
      )
      (and
        (game-conserved
          (exists (?w1 - golfball)
            (is_setup_object ?w1)
          )
        )
      )
      (exists (?c - building)
        (exists (?w2 - golfball)
          (exists (?d - hexagonal_bin ?d2 - hexagonal_bin ?o5 - chair ?l4 - curved_wooden_ramp)
            (and
              (and
                (and
                  (exists (?o4 - game_object)
                    (forall (?c1 - yellow_cube_block)
                      (forall (?b - hexagonal_bin ?l4 - building ?o1 ?d ?w2 - block ?s - ball)
                        (exists (?o2 - hexagonal_bin ?r1 ?b9 ?h - dodgeball)
                          (forall (?l - hexagonal_bin)
                            (game-optional
                              (not
                                (on ?c ?w2)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (not
                    (and
                      (forall (?b4 - hexagonal_bin ?b - (either beachball pyramid_block) ?b4 - curved_wooden_ramp)
                        (and
                          (forall (?c4 - pyramid_block)
                            (forall (?bl - block ?g - hexagonal_bin)
                              (forall (?c6 - hexagonal_bin)
                                (game-conserved
                                  (and
                                    (touch ?c4 ?c)
                                    (and
                                      (same_color ?b4 yellow)
                                      (game_over )
                                    )
                                    (and
                                      (not
                                        (in_motion ?c4)
                                      )
                                      (and
                                        (and
                                          (and
                                            (in ?c4 ?c6)
                                            (agent_holds ?w1)
                                          )
                                          (in_motion ?b4)
                                        )
                                      )
                                      (between ?g ?g desk)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-optional
                            (in_motion ?l4)
                          )
                          (game-conserved
                            (and
                              (agent_holds ?w2)
                              (and
                                (not
                                  (exists (?d - (either book))
                                    (in_motion agent)
                                  )
                                )
                                (touch ?l4 top_shelf)
                                (not
                                  (and
                                    (not
                                      (touch ?b4 ?w1)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (and
                  (not
                    (exists (?g - hexagonal_bin)
                      (game-optional
                        (in_motion ?c)
                      )
                    )
                  )
                  (and
                    (and
                      (and
                        (game-conserved
                          (in_motion ?c)
                        )
                      )
                    )
                    (not
                      (exists (?o1 - game_object ?s - shelf)
                        (forall (?b - dodgeball ?f - game_object)
                          (and
                            (exists (?b1 - ball ?c - hexagonal_bin)
                              (and
                                (game-conserved
                                  (agent_holds ?w2)
                                )
                                (exists (?b - ball ?o4 - hexagonal_bin ?p2 - curved_wooden_ramp)
                                  (and
                                    (game-conserved
                                      (on ?f ?w1)
                                    )
                                  )
                                )
                                (exists (?c - hexagonal_bin)
                                  (game-conserved
                                    (in ?l4 agent)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (agent_holds ?w2)
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?w2)
                )
              )
              (game-conserved
                (and
                  (and
                    (agent_holds ?l4)
                    (exists (?t1 - teddy_bear)
                      (and
                        (not
                          (not
                            (adjacent_side bed front_left_corner desk)
                          )
                        )
                        (and
                          (in_motion ?c)
                          (in_motion ?l4)
                        )
                      )
                    )
                    (exists (?r - (either doggie_bed))
                      (in_motion bed)
                    )
                  )
                  (in_motion ?l4)
                )
              )
            )
          )
        )
      )
      (or
        (exists (?o - cube_block ?c - pyramid_block ?c - (either key_chain alarm_clock dodgeball))
          (game-conserved
            (same_color ?w1 tan)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?c - (either golfball cube_block))
        (then
          (once (and (and (and (in_motion ?c) (in_motion ?c) (and (not (equal_z_position ?c ?c) ) (agent_holds ?c) ) ) (in ?c ?c) ) (in ?c ?c) (adjacent bed ?c) ) )
          (hold (exists (?o - game_object) (agent_holds ?c) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects throwBallToDoggieBedOffWall:basketball) (* (count throwBallToDoggieBedOffWall:dodgeball:dodgeball) 3 )
    )
  )
)
(:scoring
  (count throwBallToDoggieBedOffWall:blue_dodgeball:blue_pyramid_block)
)
)



(define (game game-id-38) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o1 - teddy_bear)
      (and
        (forall (?d - cube_block)
          (exists (?o5 - hexagonal_bin)
            (game-optional
              (or
                (not
                  (faces agent ?d)
                )
                (< 6 (distance door ?d))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?o - doggie_bed)
      (and
        (preference ballDroppedInBin
          (exists (?t1 - dodgeball ?c - shelf)
            (then
              (once (agent_holds ?c) )
              (once (in_motion ?o) )
              (hold (= (building_size ?c)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 1 )
)
(:scoring
  (count ballDroppedInBin)
)
)



(define (game game-id-39) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (game_over )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?l - dodgeball ?c6 - building)
        (at-end
          (= 0 (distance ?c6 ?c6))
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-increasing-measure objectInBuilding:golfball) (- (count objectInBuilding:dodgeball) )
    )
    (>= (count-once objectInBuilding:golfball) (* (count-once-per-objects objectInBuilding:blue_dodgeball) 4 )
    )
  )
)
(:scoring
  (* 3 (count objectInBuilding:dodgeball) (* (count objectInBuilding:green:dodgeball) (count-once objectInBuilding:yellow:golfball) (* (* (+ (count objectInBuilding:dodgeball) (* (count objectInBuilding:blue_dodgeball:side_table) (* (count-once-per-objects objectInBuilding) (count objectInBuilding:red) )
            )
          )
          (count-once-per-objects objectInBuilding:beachball)
        )
        (count-once-per-objects objectInBuilding:yellow_pyramid_block)
      )
      (* 300 (* (count objectInBuilding:golfball:beachball) (* (count-once-per-external-objects objectInBuilding:purple) (count objectInBuilding:beachball:basketball) )
        )
      )
    )
    (count-once-per-objects objectInBuilding:yellow:golfball)
    (count-once-per-objects objectInBuilding:yellow)
    3
    10
    (+ (count objectInBuilding) 2 )
    (* 2 (- 3 )
    )
  )
)
)



(define (game game-id-40) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - ball ?d - dodgeball)
    (and
      (and
        (and
          (and
            (game-optional
              (adjacent ?d ?d)
            )
          )
        )
      )
      (exists (?r - curved_wooden_ramp)
        (game-optional
          (in ?d ?r)
        )
      )
      (or
        (exists (?c - cube_block ?p3 - wall)
          (exists (?l ?l4 - block ?b8 - ball ?r - wall)
            (game-conserved
              (above ?r ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?b - hexagonal_bin)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownFromBehindBlock:purple:alarm_clock) (+ 10 6 5 )
    )
    (external-forall-maximize
      (>= (external-forall-minimize (count-once ballThrownFromBehindBlock:blue_dodgeball:basketball) ) (* (- (count ballThrownFromBehindBlock:blue) )
          (+ (count ballThrownFromBehindBlock:yellow:yellow_cube_block) (count-once-per-objects ballThrownFromBehindBlock:blue_pyramid_block) )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownFromBehindBlock:beachball:blue_dodgeball)
)
)



(define (game game-id-41) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?o - (either cube_block))
    (and
      (or
        (and
          (game-conserved
            (above ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - sliding_door ?d ?t2 - dodgeball)
      (and
        (preference throwAttemptFromBehindBlock
          (exists (?h - ball ?o - hexagonal_bin)
            (then
              (once (adjacent desk ?d) )
              (once (agent_holds ?o) )
              (once (agent_holds ?t2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 1 (+ (count-shortest throwAttemptFromBehindBlock:beachball) (* (+ (count-longest throwAttemptFromBehindBlock:red) 10 )
          (- (count throwAttemptFromBehindBlock:dodgeball) )
        )
      )
    )
    (or
      (> (count throwAttemptFromBehindBlock:dodgeball) 3 )
    )
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:book:yellow_pyramid_block)
)
)



(define (game game-id-42) (:domain many-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (exists (?s - game_object)
      (game-optional
        (< 7 (distance room_center ?s))
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin ?h - (either cube_block yellow_cube_block desktop))
      (and
        (preference objectMoved
          (exists (?o - dodgeball)
            (at-end
              (not
                (in bed rug)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects objectMoved:blue_dodgeball) 5 )
)
(:scoring
  (/
    (count objectMoved:beachball)
    16
  )
)
)



(define (game game-id-43) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?b6 - (either mug teddy_bear dodgeball))
    (game-optional
      (< (distance ?b6 ?b6) 0)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?h - wall)
        (then
          (once (in_motion agent) )
          (hold (and (exists (?o - curved_wooden_ramp ?b - book) (and (toggled_on agent) ) ) (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (forall (?w1 - cube_block ?w - cube_block)
      (and
        (preference ballToBinFromBed
          (exists (?s - cube_block ?t2 - hexagonal_bin ?c ?d - dodgeball)
            (at-end
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 8 )
)
(:scoring
  (* (count-once-per-objects ballThrownIntoTarget:dodgeball:bed) 12 )
)
)



(define (game game-id-44) (:domain medium-objects-room-v1)
(:setup
  (exists (?d2 - hexagonal_bin)
    (and
      (game-conserved
        (not
          (same_object ?d2 agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?o1 - doggie_bed)
        (at-end
          (agent_holds ?o1)
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (count blockPlacedInBuilding:dodgeball:dodgeball)
)
)



(define (game game-id-45) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - chair)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b6 - hexagonal_bin)
        (then
          (hold (and (agent_holds brown) ) )
          (once (in_motion ?b6) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 0 10 )
  )
)
(:scoring
  (count-once-per-external-objects itemInClosedDrawerAtEnd:purple:yellow)
)
)



(define (game game-id-46) (:domain few-objects-room-v1)
(:setup
  (forall (?g - ball)
    (exists (?c1 - dodgeball)
      (forall (?b - hexagonal_bin)
        (and
          (exists (?h - cube_block ?d ?s ?bl ?g ?h ?b8 - doggie_bed)
            (game-optional
              (and
                (game_start )
                (in_motion ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - red ?w - (either game_object wall))
      (and
        (preference objectInBuilding
          (exists (?d2 - triangular_ramp)
            (then
              (once (agent_holds ?w) )
              (hold (is_setup_object ?d2) )
              (hold (on ?w ?w) )
            )
          )
        )
      )
    )
    (forall (?l - game_object ?d - game_object ?b - (either wall))
      (and
        (preference throwBallToBin
          (exists (?c2 - building ?c - game_object ?c - (either cellphone key_chain))
            (then
              (once (and (and (in ?c ?c) (above ?b agent) ) (in_motion agent) ) )
              (hold-while (and (in_motion ?b) (agent_holds ?c) ) (and (forall (?x ?x0 - color) (agent_holds ?c) ) (and (not (agent_holds ?b) ) (not (in_motion ?c) ) ) ) )
              (once (on ?c ?c) )
            )
          )
        )
        (preference objectMoved
          (exists (?w2 - hexagonal_bin)
            (then
              (hold (in_motion ?w2) )
              (once (not (in_motion ?b) ) )
              (hold (agent_holds ?w2) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - (either triangle_block cube_block))
        (then
          (once (not (in_motion floor) ) )
          (hold (and (on ?b ?b) (on ?b ?b) (not (in top_drawer ?b) ) (on ?b ?b) ) )
          (hold (>= (distance room_center ?b) (distance_side desk front ?b)) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?b - triangular_ramp)
        (then
          (hold (in_motion ?b) )
          (hold (same_type ?b pillow) )
          (hold (not (and (and (forall (?h - hexagonal_bin) (adjacent desk ?h) ) (and (not (not (agent_holds agent) ) ) (adjacent ?b ?b) ) (in_motion rug) ) (< 1 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 9 )
)
(:scoring
  (external-forall-maximize
    (= (- 2 (+ (* 3 (count throwBallToBin:green:beachball) )
          (+ (* (<= 1 6 )
              10
            )
            (+ (count-once throwToRampToBin:pink_dodgeball) 4 )
          )
        )
      )
      (count throwToRampToBin:blue_dodgeball:book)
    )
  )
)
)



(define (game game-id-47) (:domain few-objects-room-v1)
(:setup
  (forall (?h - chair)
    (game-optional
      (not
        (and
          (and
            (< 3 (x_position ?h))
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?c2 - dodgeball)
        (at-end
          (not
            (in_motion ?c2)
          )
        )
      )
    )
    (forall (?b - ball)
      (and
        (preference blockInTowerAtEnd
          (exists (?w1 - game_object)
            (then
              (once (in_motion ?w1) )
              (once (in_motion ?w1) )
              (hold (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?g - chair)
        (then
          (once (in_motion ?g) )
          (hold (not (and (not (in_motion ?g) ) (in_motion ?g) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count itemInClosedDrawerAtEnd:doggie_bed:cube_block:blue_dodgeball) (* 6 (+ 5 (count blockInTowerAtEnd:golfball) )
        )
      )
      (>= (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) (* 6 (= 2 (count throwKnocksOverBear:dodgeball) )
        )
      )
    )
    (> (total-score) 2 )
    (>= 8 (* (count-once-per-objects blockInTowerAtEnd:dodgeball) 0 )
    )
    (>= (count-longest blockInTowerAtEnd:basketball) 5 )
  )
)
(:scoring
  (count throwKnocksOverBear:dodgeball)
)
)



(define (game game-id-48) (:domain many-objects-room-v1)
(:setup
  (forall (?h - golfball ?s ?l4 ?c4 - block)
    (exists (?w1 - hexagonal_bin)
      (game-optional
        (in_motion ?s)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?o3 - dodgeball ?c1 - bridge_block)
        (then
          (hold (and (and (and (in ?c1 ?c1) (agent_holds ?c1) ) (adjacent_side ?c1 front ?c1 front) ) (in_motion ?c1) ) )
          (once (not (and (and (in_motion ?c1) (agent_holds ?c1) (and (and (and (agent_holds ?c1) (not (on ?c1 ?c1) ) (and (in_motion agent) (in ?c1 ?c1) (exists (?c2 - hexagonal_bin ?o4 - game_object) (agent_holds ?c1) ) ) ) (in_motion ?c1) (in_motion bed) ) (not (not (agent_holds ?c1) ) ) ) (and (is_setup_object agent) (and (not (in ?c1 ?c1) ) (on blue ?c1) ) ) ) (in_motion floor) ) ) )
          (once (in ?c1 ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (count ballThrowAttempt:red) )
    1
  )
)
(:scoring
  (+ (count ballThrowAttempt:golfball) (* (>= 10 30 )
      1
    )
    (* (count-shortest ballThrowAttempt:hexagonal_bin) (count ballThrowAttempt:dodgeball) )
    (count ballThrowAttempt:beachball)
    (count-once-per-objects ballThrowAttempt:pink_dodgeball)
    (count ballThrowAttempt:red)
    (count ballThrowAttempt:basketball)
    (* 15 8 (* 2 7 )
      5
      (= (external-forall-maximize (count ballThrowAttempt:pink_dodgeball) ) (count-once-per-objects ballThrowAttempt:basketball) )
      (count ballThrowAttempt:orange)
    )
    5
    (count-once-per-objects ballThrowAttempt:alarm_clock)
    (count-once ballThrowAttempt:green)
    (count-once-per-objects ballThrowAttempt:dodgeball:yellow)
  )
)
)



(define (game game-id-49) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - block)
    (game-optional
      (not
        (and
          (agent_holds ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o ?l2 - dodgeball)
      (and
        (preference ballRolledOnRampToRug
          (exists (?r - doggie_bed)
            (then
              (hold (= 0 1) )
              (once (is_setup_object ?l2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 5 (* 10 (count ballRolledOnRampToRug:red) )
  )
)
(:scoring
  (count ballRolledOnRampToRug:purple)
)
)



(define (game game-id-50) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?c ?l2 - hexagonal_bin ?h ?b6 ?r2 - doggie_bed)
        (adjacent ?b6 ?r2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?w2 - flat_block)
        (then
          (once (< (distance ?w2 ?w2) 5) )
          (once (and (touch ?w2 ?w2) (and (not (and (not (adjacent desk bed) ) (not (agent_holds ?w2) ) (forall (?d - hexagonal_bin) (in_motion ?w2) ) (and (not (in agent ?w2) ) (not (same_color ?w2 rug) ) ) (in_motion ?w2) (in ?w2 ?w2) ) ) (broken agent) ) ) )
          (once (toggled_on ?w2) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (count-once ballThrownHitsAgent:golfball:dodgeball:basketball)
)
)



(define (game game-id-51) (:domain many-objects-room-v1)
(:setup
  (forall (?b7 - bridge_block)
    (exists (?c5 - hexagonal_bin)
      (forall (?b - dodgeball)
        (exists (?r1 - beachball ?d - hexagonal_bin ?db - wall)
          (exists (?b2 - (either pen yellow_cube_block) ?o2 ?db - teddy_bear ?p1 - triangular_ramp)
            (game-conserved
              (and
                (forall (?h - hexagonal_bin)
                  (on agent ?b)
                )
                (equal_z_position ?b7 ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?d1 - block)
        (then
          (once (in_motion ?d1) )
          (once (touch top_shelf ?d1) )
          (once (and (not (in_motion bed) ) (in_motion ?d1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:blue_cube_block:orange) 10 )
    (or
      (and
        (or
          (> (total-time) (* (* 1 (* (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:tall_cylindrical_block) (count golfballUnderBridgeWithoutTouchingBlock:dodgeball) )
                (* 20 (* (* 10 7 )
                    (count golfballUnderBridgeWithoutTouchingBlock:golfball)
                  )
                )
                (count golfballUnderBridgeWithoutTouchingBlock:yellow)
                10
                (/
                  8
                  (* (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:hexagonal_bin) (+ (- 2 )
                      20
                    )
                  )
                )
                (count golfballUnderBridgeWithoutTouchingBlock:beachball)
                (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball:hexagonal_bin)
                6
                (+ (- (count-increasing-measure golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball:golfball:pyramid_block) )
                  5
                )
                (count golfballUnderBridgeWithoutTouchingBlock:yellow)
                100
              )
              5
            )
          )
        )
      )
    )
  )
)
(:scoring
  (+ (count-once golfballUnderBridgeWithoutTouchingBlock:yellow:beachball) (count-total golfballUnderBridgeWithoutTouchingBlock:pink) )
)
)



(define (game game-id-52) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either laptop golfball) ?o - green_triangular_ramp)
    (forall (?d - block)
      (or
        (game-conserved
          (in_motion ?d)
        )
        (game-conserved
          (on ?d ?d)
        )
        (exists (?d - dodgeball)
          (forall (?d - ball ?t ?b - beachball ?db ?t - (either cylindrical_block blue_cube_block))
            (game-conserved
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball tall_cylindrical_block chair))
      (and
        (preference throwFromEdgeOfRug
          (exists (?b - hexagonal_bin ?s - shelf ?c - chair)
            (at-end
              (not
                (is_setup_object ?c)
              )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?b10 - dodgeball ?h - (either yellow_cube_block book dodgeball))
            (then
              (once (not (not (agent_holds ?h) ) ) )
              (once (agent_holds ?h) )
              (once (in_motion ?h) )
            )
          )
        )
        (preference throwAttemptFromBehindBlock
          (exists (?l3 - block ?t - block)
            (then
              (hold (and (not (agent_holds ?t) ) (in_motion agent) ) )
              (once (agent_holds ?h) )
              (once-measure (or (on agent ?t) ) (distance ?t ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 5 )
    (count-once-per-objects throwFromEdgeOfRug:dodgeball)
  )
)
(:scoring
  (- (>= (count throwKnocksOverBear:purple) (count-once-per-objects throwFromEdgeOfRug:purple:red) )
  )
)
)



(define (game game-id-53) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 - building ?b3 - (either dodgeball dodgeball laptop))
    (not
      (game-conserved
        (not
          (adjacent_side ?b3 front_left_corner ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?t - block ?z - back ?c2 - ball)
        (then
          (hold (not (not (forall (?h - wall) (in_motion ?h) ) ) ) )
          (hold (agent_holds ?c2) )
          (once (and (in_motion ?c2) (opposite ?c2 desk) (and (in ?c2 ?c2) (in_motion ?c2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count beachballOnRug:wall) (count beachballOnRug:beachball) )
)
(:scoring
  (* 3 6 )
)
)



(define (game game-id-54) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - dodgeball ?c4 - ball ?d - cube_block)
    (and
      (exists (?h - hexagonal_bin)
        (exists (?r - cube_block ?g - pillow)
          (and
            (exists (?h - curved_wooden_ramp)
              (exists (?w - hexagonal_bin ?y - upside_down ?f - building)
                (exists (?r - (either dodgeball hexagonal_bin))
                  (game-conserved
                    (in_motion ?f)
                  )
                )
              )
            )
            (game-conserved
              (on ?d agent)
            )
            (forall (?d ?l2 - hexagonal_bin)
              (and
                (game-conserved
                  (on ?l2 ?g)
                )
              )
            )
            (forall (?d - ball)
              (or
                (exists (?w1 - chair)
                  (game-optional
                    (agent_holds ?d)
                  )
                )
                (game-conserved
                  (same_object ?g ?d)
                )
              )
            )
            (game-conserved
              (not
                (and
                  (in_motion ?h)
                  (and
                    (on ?h ?d)
                    (adjacent side_table ?d)
                    (adjacent_side ?g left ?g)
                  )
                )
              )
            )
          )
        )
      )
      (and
        (exists (?o1 - ball)
          (game-optional
            (exists (?c2 - dodgeball ?b4 - building ?ob - ball)
              (agent_holds ?o1)
            )
          )
        )
      )
      (and
        (game-optional
          (exists (?z ?z0 - left)
            (not
              (same_type ?d bridge_block)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b4 - (either laptop beachball))
      (and
        (preference objectOnBed
          (exists (?h - game_object)
            (at-end
              (not
                (open ?b4)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 30 (total-score) )
)
(:scoring
  (external-forall-maximize
    (count objectOnBed:blue_dodgeball)
  )
)
)



(define (game game-id-55) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - block)
    (and
      (game-conserved
        (exists (?b5 - cube_block)
          (in_motion ?b5)
        )
      )
      (and
        (or
          (and
            (and
              (game-optional
                (not
                  (game_over )
                )
              )
              (game-conserved
                (not
                  (exists (?r ?g ?h - hexagonal_bin ?d - game_object)
                    (in_motion green_golfball)
                  )
                )
              )
            )
          )
          (and
            (forall (?l2 - wall)
              (and
                (exists (?y ?y0 ?y1 - sideways ?d - (either alarm_clock bridge_block))
                  (exists (?c - block ?s - hexagonal_bin)
                    (game-optional
                      (agent_holds ?b)
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?b)
                )
                (game-conserved
                  (touch ?l2 ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?r - cube_block ?s - hexagonal_bin)
        (at-end
          (agent_holds ?s)
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 20 )
    2
  )
)
(:scoring
  (count cubeBlockFromBedToShelf:red)
)
)



(define (game game-id-56) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - flat_block)
    (exists (?o ?d ?tb - hexagonal_bin ?c2 - dodgeball)
      (exists (?t2 - building ?d - hexagonal_bin)
        (exists (?b - curved_wooden_ramp)
          (game-optional
            (adjacent desk agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?b - hexagonal_bin)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (* (count dodgeballThrownToBin:dodgeball) 7 2 )
      5
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBin:tan:cube_block)
)
)



(define (game game-id-57) (:domain few-objects-room-v1)
(:setup
  (forall (?c4 - game_object)
    (or
      (forall (?c - teddy_bear)
        (and
          (and
            (exists (?p - game_object)
              (exists (?f - cube_block ?r - (either alarm_clock doggie_bed cube_block))
                (forall (?c - doggie_bed ?h - pyramid_block)
                  (and
                    (forall (?ob - flat_block)
                      (game-optional
                        (in_motion ?ob)
                      )
                    )
                  )
                )
              )
            )
            (not
              (game-conserved
                (broken ?c4)
              )
            )
          )
          (game-optional
            (< 2 1)
          )
        )
      )
      (or
        (exists (?h - pillow)
          (and
            (game-conserved
              (in_motion agent)
            )
            (game-conserved
              (in_motion ?c4)
            )
          )
        )
        (game-conserved
          (>= (distance_side desk left ?c4) (x_position ?c4))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?l4 - flat_block ?w2 ?b - dodgeball ?c - pillow)
        (then
          (hold-while (in_motion ?c) (not (agent_holds ?c) ) (agent_holds ?c) )
          (once (on ?c ?c) )
          (once (same_object ?c ?c) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?h - cylindrical_block)
        (at-end
          (and
            (not
              (in ?h ?h)
            )
            (agent_holds desk)
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ (count golfballUnderBridgeWithoutTouchingBlock:dodgeball) 50 )
      20
    )
  )
)
(:scoring
  (- (count-once-per-external-objects golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball) )
)
)



(define (game game-id-58) (:domain few-objects-room-v1)
(:setup
  (forall (?r - shelf)
    (exists (?s - dodgeball)
      (forall (?r2 - ball)
        (and
          (exists (?s - dodgeball ?w2 - hexagonal_bin ?o1 - (either alarm_clock beachball) ?h - wall)
            (forall (?d - hexagonal_bin ?b9 - (either alarm_clock) ?l1 - shelf)
              (and
                (and
                  (forall (?b6 - (either dodgeball))
                    (game-optional
                      (not
                        (not
                          (agent_holds ?r2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?w1 - dodgeball ?p - dodgeball)
        (then
          (hold (in_motion ?p) )
          (once (touch ?p ?p) )
          (hold (forall (?c - block ?d ?h - ball) (same_type agent ?p) ) )
          (once (not (forall (?d - (either ball pyramid_block)) (in_motion ?d) ) ) )
        )
      )
    )
    (forall (?tb ?b ?b6 ?c2 ?d ?o2 - ball ?w1 ?o - wall)
      (and
        (preference blockToBinFromRug
          (exists (?r - dodgeball)
            (then
              (once (in_motion ?w1) )
              (hold (touch ?w1 ?o) )
              (hold (not (in_motion ?w1) ) )
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?y ?y0 ?y1 - diagonal)
            (then
              (hold (and (on ?o ?w1) (adjacent_side green_golfball front ?w1) ) )
              (once (faces rug ?w1) )
              (once (adjacent ?o bed) )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?h ?h ?d ?h ?h - curved_wooden_ramp)
            (then
              (once (on ?d ?o) )
              (once (same_object ?h ?w1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  (count dodgeballsInPlace:dodgeball)
)
)



(define (game game-id-59) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (forall (?c3 - hexagonal_bin ?c5 - building)
        (game-conserved
          (not
            (not
              (and
                (equal_z_position door ?c5)
                (and
                  (not
                    (and
                      (same_color ?c5 ?c5)
                      (not
                        (agent_holds ?c5)
                      )
                    )
                  )
                  (on ?c5 ?c5)
                  (on ?c5 ?c5)
                )
                (touch ?c5 agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?c1 - (either golfball key_chain cube_block))
        (then
          (hold (and (touch ?c1 ?c1) (in_motion ?c1) ) )
          (once (not (in_motion ?c1) ) )
          (once (open ?c1) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?h - hexagonal_bin)
        (then
          (hold-while (agent_holds rug) (not (adjacent bed ?h) ) )
          (once (and (touch agent ?h) (same_object ?h ?h) ) )
          (once (not (and (and (and (equal_x_position room_center ?h) (opposite ?h ?h) ) (not (on ?h ?h) ) ) (not (in_motion ?h) ) ) ) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?c2 - golfball ?h ?tb - hexagonal_bin)
        (then
          (hold (rug_color_under ?h green) )
          (once (agent_holds ?tb) )
          (once (not (not (and (< (distance ?tb ?tb) (distance bed ?h)) (and (in_motion ?h) (in_motion ?h) (and (and (and (in ?h ?tb) (adjacent ?tb ?tb) (in agent ?h) (in_motion ?tb) ) (< 2 5) ) (not (in ?h ?h) ) ) (in_motion pink) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 1 )
)
(:scoring
  (count blockPickedUp:hexagonal_bin)
)
)



(define (game game-id-60) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (forall (?h - dodgeball ?d - hexagonal_bin ?w ?h - block)
      (on ?w ?h)
    )
  )
)
(:constraints
  (and
    (forall (?o4 - chair)
      (and
        (preference ballToBinFromBed
          (then
            (hold (touch ?o4 ?o4) )
            (once (in_motion ?o4) )
            (once (same_color desk ?o4) )
            (once (agent_holds ?o4) )
          )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?t1 - red_dodgeball)
        (then
          (once (game_start ) )
          (hold (is_setup_object ?t1) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownFromDoor:golfball) (* (count ballThrownFromDoor:pink:dodgeball) 12 )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromDoor:rug)
)
)



(define (game game-id-61) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?p - block)
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?l1 - cube_block ?o - cube_block)
        (then
          (once (in ?o ?o) )
          (once (not (on ?o ?o) ) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (> (+ 10 1 )
    (total-score)
  )
)
(:scoring
  (count-once-per-external-objects ballThrownOntoTarget:red)
)
)



(define (game game-id-62) (:domain many-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-conserved
      (between ?c ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?o4 - hexagonal_bin)
        (then
          (once (or (forall (?d2 - ball ?t - hexagonal_bin) (or (on ?o4 ?o4) (in_motion ?o4) (in ?t ?o4) ) ) (and (same_color ?o4 desk) (in_motion ?o4) (in ?o4 ?o4) ) ) )
          (once (touch ?o4 ?o4) )
          (hold (on ?o4 ?o4) )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?p ?b5 - cube_block)
        (then
          (hold (on ?b5 ?b5) )
          (hold (and (and (agent_holds ?p) (exists (?c - hexagonal_bin) (not (and (not (adjacent ?p ?c) ) (not (not (on ?p ?p) ) ) ) ) ) ) (in_motion ?b5) (same_object ?b5 ?p) ) )
          (hold-while (and (in ?p ?p) (in_motion ?p) ) (agent_holds ?b5) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrowAttempt:dodgeball:basketball) (count ballThrownIntoTarget:book) )
)
(:scoring
  (count-same-positions ballThrownIntoTarget:book)
)
)



(define (game game-id-63) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-conserved
        (game_start )
      )
      (exists (?o1 - wall ?b9 - chair)
        (and
          (and
            (exists (?h - curved_wooden_ramp)
              (game-optional
                (in_motion ?h)
              )
            )
            (game-optional
              (agent_holds ?b9)
            )
          )
          (forall (?r - (either dodgeball))
            (game-optional
              (in_motion ?r)
            )
          )
        )
      )
      (exists (?t - cube_block)
        (game-conserved
          (not
            (in_motion ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?f - dodgeball)
        (then
          (once (and (agent_holds top_drawer) (agent_holds ?f) (agent_holds ?f) ) )
          (once (and (same_type ?f drawer) (> 9 1) (and (adjacent ?f ?f) (and (adjacent_side door right ?f) (and (agent_holds ?f) (exists (?s - hexagonal_bin) (in_motion ?s) ) ) ) ) ) )
          (once (not (and (> 2 (distance door ?f)) (agent_holds ?f) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count throwKnocksBlock:tall_cylindrical_block:yellow_cube_block) )
)
(:scoring
  (external-forall-minimize
    (+ 10 (external-forall-maximize (<= 5 5 )
      )
    )
  )
)
)



(define (game game-id-64) (:domain few-objects-room-v1)
(:setup
  (forall (?h ?c1 ?b - hexagonal_bin)
    (and
      (game-optional
        (in_motion ?b)
      )
      (game-optional
        (and
          (exists (?l2 - (either main_light_switch cube_block) ?p2 - game_object)
            (and
              (and
                (agent_holds ?p2)
                (in_motion ?p2)
              )
              (not
                (not
                  (agent_holds ?c1)
                )
              )
              (not
                (not
                  (exists (?s - cube_block ?d - ball)
                    (agent_holds ?c1)
                  )
                )
              )
              (not
                (in_motion ?b)
              )
            )
          )
          (touch ?h ?b)
          (and
            (in ?h ?h)
            (on ?c1 ?c1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?c - pillow ?b ?d - dodgeball)
        (then
          (hold-while (agent_holds ?d) (not (and (and (> (distance ?b ?d) (distance desk ?d)) (and (not (agent_holds agent) ) (same_type ?d pillow) ) ) (in_motion agent) ) ) )
          (hold (in_motion ?d) )
          (hold (exists (?d - doggie_bed) (toggled_on ?d) ) )
        )
      )
    )
    (forall (?x - green)
      (and
        (preference throwFromDoorToBin
          (exists (?r2 ?ob ?c2 ?d ?o2 ?b ?o ?b6 ?c2 ?o2 - (either mug triangle_block))
            (at-end
              (in_motion ?o)
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?p2 - wall)
            (then
              (hold (adjacent room_center ?p2) )
              (once (agent_holds ?p2) )
              (once (not (in_motion ?p2) ) )
            )
          )
        )
      )
    )
    (forall (?b5 - shelf)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?b4 - hexagonal_bin)
            (then
              (hold-while (not (in_motion ?b5) ) (touch ?b5 desk) )
              (hold (and (or (agent_holds ?b4) (in_motion green_golfball) (> (distance_side desk front ?b4 back) 4) ) (on ?b5 ?b4) ) )
              (hold (not (on ?b4 ?b5) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 1 9 )
      (>= (total-time) 2 )
    )
  )
)
(:scoring
  (/
    (count-increasing-measure throwBallToDoggieBedOffWall:pink_dodgeball)
    (+ (count throwBallToDoggieBedOffWall:dodgeball:pink) 2 15 )
  )
)
)



(define (game game-id-65) (:domain few-objects-room-v1)
(:setup
  (exists (?db - hexagonal_bin ?b - curved_wooden_ramp)
    (game-conserved
      (in_motion tan)
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?d1 - game_object)
        (then
          (hold (agent_holds ?d1) )
          (hold (on rug ?d1) )
          (hold (exists (?b - dodgeball ?g - building) (on ?d1 rug) ) )
        )
      )
    )
    (forall (?w1 - (either alarm_clock main_light_switch) ?o2 - dodgeball)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?b8 - curved_wooden_ramp ?c1 - drawer ?p - hexagonal_bin)
            (then
              (hold (not (in_motion blue) ) )
              (hold (touch ?o2 ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-same-positions tanObjectMovedToRoomCenter:dodgeball) (+ 300 (- (* (count tanObjectMovedToRoomCenter:beachball) (count throwInBin:red) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwInBin:hexagonal_bin:beachball)
)
)



(define (game game-id-66) (:domain many-objects-room-v1)
(:setup
  (exists (?g ?c - desk_shelf)
    (exists (?b2 - game_object)
      (exists (?c - (either hexagonal_bin dodgeball))
        (game-conserved
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?w1 ?o - shelf)
        (then
          (once (above agent ?w1) )
          (once (touch ?o ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballDroppedInBin:beachball:dodgeball:wall) (count-once ballDroppedInBin:dodgeball:beachball) )
)
(:scoring
  (count ballDroppedInBin:purple)
)
)



(define (game game-id-67) (:domain many-objects-room-v1)
(:setup
  (forall (?t - flat_block ?d - (either pyramid_block cellphone))
    (exists (?b6 - ball)
      (and
        (game-optional
          (in_motion ?d)
        )
        (game-optional
          (agent_holds ?b6)
        )
        (exists (?h - (either pyramid_block doggie_bed) ?b1 - dodgeball)
          (and
            (game-conserved
              (on ?b1 ?b1)
            )
          )
        )
        (exists (?w2 - hexagonal_bin)
          (forall (?c1 - dodgeball ?x ?x0 ?x1 - green ?p3 - ball)
            (and
              (or
                (and
                  (game-conserved
                    (and
                      (agent_holds ?p3)
                      (agent_holds ?d)
                    )
                  )
                )
                (game-optional
                  (not
                    (adjacent ?d ?b6)
                  )
                )
                (exists (?w1 ?l4 - hexagonal_bin)
                  (and
                    (and
                      (exists (?c - building)
                        (forall (?p2 - dodgeball ?d1 - game_object)
                          (and
                            (game-conserved
                              (in_motion ?b6)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (or
                (exists (?h - pillow)
                  (exists (?b - (either curved_wooden_ramp cube_block cube_block) ?d - game_object)
                    (exists (?d - pink_dodgeball ?b - hexagonal_bin)
                      (and
                        (and
                          (game-conserved
                            (same_type ?b6 drawer)
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?c ?o ?l - building ?l2 - hexagonal_bin)
                    (game-conserved
                      (and
                        (agent_holds agent)
                        (in_motion ?b6)
                      )
                    )
                  )
                  (and
                    (exists (?c1 - game_object)
                      (forall (?bl - hexagonal_bin)
                        (forall (?o3 - pillow)
                          (game-optional
                            (agent_holds ?p3)
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (agent_holds agent)
                  )
                )
              )
              (forall (?c5 ?t ?d ?d ?o1 ?p3 ?h ?b5 ?d ?b1 - pillow)
                (exists (?o ?t1 - game_object)
                  (and
                    (and
                      (and
                        (or
                          (exists (?d - hexagonal_bin ?h - hexagonal_bin)
                            (game-conserved
                              (< 1 (x_position top_drawer))
                            )
                          )
                          (and
                            (and
                              (and
                                (game-conserved
                                  (in_motion ?o1)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (not
                              (adjacent green_golfball ?c5)
                            )
                          )
                        )
                        (game-conserved
                          (or
                            (not
                              (not
                                (not
                                  (not
                                    (and
                                      (agent_holds ?p3)
                                      (not
                                        (agent_holds ?o)
                                      )
                                      (on ?o ?o)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-conserved
                        (in_motion agent)
                      )
                      (exists (?r - building ?h ?c3 - doggie_bed)
                        (and
                          (not
                            (game-conserved
                              (and
                                (and
                                  (in_motion ?b5)
                                )
                                (and
                                  (in ?h ?p3)
                                  (not
                                    (or
                                      (adjacent desk ?o)
                                      (in ?d ?p3)
                                    )
                                  )
                                  (not
                                    (exists (?c - curved_wooden_ramp)
                                      (adjacent ?t ?o)
                                    )
                                  )
                                  (touch ?b6 ?t)
                                  (touch ?h west_wall)
                                  (in ?o ?b1)
                                )
                              )
                            )
                          )
                          (game-conserved
                            (>= 1 8)
                          )
                          (game-optional
                            (in ?b1 ?t)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?l2 - doggie_bed)
          (exists (?d - curved_wooden_ramp)
            (game-conserved
              (not
                (adjacent ?b6 ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - (either yellow_cube_block golfball))
      (and
        (preference basketMadeFromRug
          (exists (?h - chair)
            (then
              (hold (adjacent desk ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (+ (* (* 3 2 )
          (count basketMadeFromRug:alarm_clock)
        )
        (count basketMadeFromRug)
      )
      (count-once-per-objects basketMadeFromRug:basketball)
    )
    (>= (external-forall-maximize (- (external-forall-maximize (>= (* (count-once basketMadeFromRug:cylindrical_block) (count-once-per-objects basketMadeFromRug:golfball:brown) )
              0.7
            )
          )
        )
      )
      (* (* (count basketMadeFromRug:beachball) (count basketMadeFromRug:green) )
        10
      )
    )
  )
)
(:scoring
  (* 2 (count-once-per-external-objects basketMadeFromRug:pink:blue) 10 )
)
)



(define (game game-id-68) (:domain few-objects-room-v1)
(:setup
  (exists (?o - cylindrical_block ?h - hexagonal_bin ?y ?y0 - (either diagonal))
    (and
      (exists (?c - flat_block)
        (and
          (forall (?c - triangular_ramp)
            (exists (?c - dodgeball ?c - ball ?b3 - (either book block))
              (and
                (and
                  (forall (?o - pyramid_block ?b - dodgeball)
                    (game-optional
                      (not
                        (not
                          (and
                            (and
                              (touch ?b3 ?c)
                              (touch agent ?h)
                              (= (distance ?b3 ?c) (distance ?b ?b3) 2 (distance ?b ?h))
                            )
                            (in_motion ?b)
                          )
                        )
                      )
                    )
                  )
                  (forall (?b - cube_block)
                    (exists (?db ?r - building)
                      (exists (?c - ball)
                        (exists (?c - (either chair hexagonal_bin))
                          (game-conserved
                            (adjacent bed ?db)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either dodgeball laptop))
      (and
        (preference ballThrownIntoTarget
          (exists (?h - (either game_object blue_cube_block))
            (then
              (once (and (rug_color_under top_shelf orange) (and (not (not (same_object ?d ?h) ) ) (on ?d ?h) ) (< 1 (distance desk bed)) (agent_holds ?d) ) )
              (once (is_setup_object ?d) )
              (once (and (and (agent_holds ?d) (agent_holds ?h) ) (and (is_setup_object ?d) (exists (?c - hexagonal_bin) (not (in ?c ?d) ) ) (on ?d ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballThrownIntoTarget:dodgeball:dodgeball) 2 )
)
(:scoring
  (count-once-per-objects ballThrownIntoTarget:basketball)
)
)



(define (game game-id-69) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?b1 - hexagonal_bin)
      (< 6 1)
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b8 - block)
        (at-end
          (and
            (adjacent desk ?b8)
            (on ?b8 ?b8)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count throwBallToBin:blue_dodgeball:blue_pyramid_block) (count-once-per-objects throwBallToBin:yellow_pyramid_block) )
    (total-score)
  )
)
(:scoring
  (- (count throwBallToBin:golfball) )
)
)



(define (game game-id-70) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?b3 ?h - (either doggie_bed pencil lamp))
    (game-optional
      (in_motion ?b3)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?d - dodgeball)
        (then
          (hold-while (not (and (faces ?d ?d) (forall (?c4 - ball) (and (not (and (not (agent_holds agent) ) (= (distance ?c4 ?c4) (distance room_center ?c4) (distance desk ?c4)) ) ) (same_type ?d ?d) (agent_holds ?c4) ) ) ) ) (and (same_color ?d ?d) (adjacent_side ?d front_left_corner bed) ) )
          (hold (in_motion agent) )
          (hold-while (and (on floor ?d) (and (agent_holds ?d) (in_motion ?d) ) (agent_holds ?d) ) (not (and (not (exists (?c5 - cube_block ?d - ball ?x - white ?r2 - dodgeball ?d - ball) (< (distance west_wall ?d) 5) ) ) (in_motion ?d) (in_motion ?d) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count failedThrowAttempt:beachball) (count-once-per-objects failedThrowAttempt:red) (count failedThrowAttempt:purple:cube_block) (count-once-per-objects failedThrowAttempt:blue_cube_block) (count failedThrowAttempt:yellow) 2 )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:yellow)
)
)



(define (game game-id-71) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block)
    (game-optional
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (forall (?d ?b5 - chair ?h - (either beachball tall_cylindrical_block))
      (and
        (preference ballThrowAttempt
          (exists (?b - building ?h - game_object)
            (then
              (once (on ?h ?h) )
              (once (not (on ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrowAttempt:golfball) (total-time) )
)
(:scoring
  (count ballThrowAttempt:beachball:green)
)
)



(define (game game-id-72) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - doggie_bed ?b - building ?l1 - (either dodgeball cd yellow_cube_block))
    (and
      (game-conserved
        (agent_holds bed)
      )
      (game-conserved
        (agent_holds ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b3 - game_object ?b - dodgeball)
        (then
          (hold-while (on ?b ?b) (agent_holds ?b) )
          (hold (not (in_motion ?b) ) )
          (once (not (< (distance_side ?b front brown) 7) ) )
        )
      )
    )
    (forall (?o ?d ?c ?p1 - building)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?r - hexagonal_bin)
            (then
              (once (and (and (and (not (in ?d ?r) ) (not (adjacent ?d bed) ) (in_motion bed) ) (on ?c floor) (and (touch ?c ?r) (game_over ) ) ) (on ?c ?d) (in_motion ?d) ) )
              (hold (and (agent_holds ?d) (and (same_object ?o ?p1) (in_motion ?r) ) ) )
              (once (agent_holds ?o) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (then
            (once (and (game_over ) (not (agent_holds ?c) ) ) )
            (once (in_motion ?p1) )
            (once (not (exists (?c2 - hexagonal_bin) (not (on ?c ?p1) ) ) ) )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?c - game_object)
            (then
              (once (on ?o ?p1) )
              (once (and (= 1 (distance door ?o)) (>= (distance ?p1 ?d) 3) ) )
              (once (not (in agent ?p1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-once-per-objects dodgeballHitsBinBottom:beachball:rug) )
    (>= 9 (- (+ (count-once-per-objects throwBallToDoggieBedOffWall:side_table) (count-once-per-objects throwBallToDoggieBedOffWall:blue_cube_block) )
      )
    )
    (> (total-time) (total-time) )
  )
)
(:scoring
  (count cubeBlockInBuilding:beachball)
)
)



(define (game game-id-73) (:domain many-objects-room-v1)
(:setup
  (exists (?x - white ?d - hexagonal_bin)
    (exists (?c - (either blue_cube_block ball doggie_bed))
      (forall (?db - hexagonal_bin)
        (and
          (not
            (and
              (exists (?o - (either main_light_switch alarm_clock cube_block) ?w1 - dodgeball)
                (exists (?f - (either cylindrical_block doggie_bed) ?h - pink_dodgeball)
                  (and
                    (and
                      (exists (?o - hexagonal_bin ?c3 - ball ?b2 - building ?b - chair ?b - hexagonal_bin)
                        (game-conserved
                          (in ?b ?b)
                        )
                      )
                      (game-conserved
                        (in agent ?w1)
                      )
                      (game-optional
                        (agent_holds ?c)
                      )
                    )
                  )
                )
              )
              (exists (?c5 - red_dodgeball ?c - game_object)
                (and
                  (exists (?r1 - curved_wooden_ramp)
                    (game-conserved
                      (and
                        (same_color ?db ?c)
                        (agent_holds ?r1)
                        (adjacent room_center agent)
                      )
                    )
                  )
                  (game-conserved
                    (or
                      (on ?d ?d)
                    )
                  )
                )
              )
              (forall (?b - (either top_drawer laptop golfball golfball))
                (and
                  (forall (?c - hexagonal_bin ?t - hexagonal_bin)
                    (and
                      (and
                        (game-conserved
                          (agent_holds ?c)
                        )
                      )
                      (game-optional
                        (on agent ?c)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (in ?db ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?o - cube_block)
        (then
          (once (touch ?o rug) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?t - building)
        (then
          (once (not (<= 5 1) ) )
          (hold-while (on ?t ?t) (and (in desk ?t) (touch ?t ?t) (agent_holds ?t) ) )
          (once (and (adjacent ?t ?t) (and (in_motion ?t) (agent_holds ?t) ) ) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?b - (either laptop cd doggie_bed) ?d - (either tall_cylindrical_block doggie_bed pyramid_block main_light_switch))
        (then
          (once (on ?d ?d) )
          (once (on ?d ?d) )
          (once (and (touch ?d ?d) (agent_holds ?d) (and (toggled_on ?d) (and (on ?d ?d) (and (on ?d ?d) (and (not (touch ?d ?d) ) (agent_holds ?d) ) ) ) ) (not (agent_holds ?d) ) (agent_holds ?d) (and (not (on ?d ?d) ) (same_color ?d ?d) (not (and (not (and (adjacent door ?d) (< (building_size ?d) 6) ) ) (not (exists (?db - hexagonal_bin) (in_motion ?d) ) ) ) ) (not (in_motion ?d) ) (and (agent_holds ?d) (and (or (and (in_motion ?d) (in_motion ?d) ) (not (in_motion ?d) ) ) (adjacent ?d ?d) ) (in_motion agent) ) (and (touch ?d ?d) (and (and (in_motion ?d) (not (touch ?d ?d) ) ) (and (in_motion ?d) (not (not (>= (distance_side door back ?d front_left_corner) (x_position ?d)) ) ) (and (agent_holds ?d) (in ?d ?d) (< 0 3) (not (and (not (opposite ?d ?d) ) (or (and (agent_holds ?d) (exists (?f - cube_block) (exists (?x ?x0 - gray) (and (agent_holds top_shelf) (agent_holds ?d) ) ) ) ) (not (and (agent_holds ?d) (in_motion ?d) (agent_holds ?d) (on ?d ?d) ) ) (agent_holds rug) ) ) ) ) ) (in_motion ?d) (in_motion ?d) (and (agent_holds ?d) (agent_holds ?d) ) (and (and (adjacent bed ?d) (= (distance_side ?d right ?d front) 0.5) ) (same_color ?d ?d) ) ) ) ) (and (and (in ?d ?d) (on ?d ?d) ) (and (in_motion ?d) (in_motion ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count pyramidBlockAtopTowerAtEnd:doggie_bed) 180 )
      3
    )
  )
)
(:scoring
  (count-shortest baseBlockInTowerAtEnd:triangle_block)
)
)



(define (game game-id-74) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o5 - chair)
      (and
        (game-optional
          (in_motion ?o5)
        )
        (and
          (forall (?db - doggie_bed)
            (game-conserved
              (and
                (not
                  (in_motion ?db)
                )
                (in_motion ?o5)
              )
            )
          )
          (and
            (game-conserved
              (equal_z_position room_center ?o5)
            )
          )
        )
        (game-conserved
          (in_motion ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - doggie_bed)
        (at-end
          (and
            (agent_holds ?h)
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-overlapping basketMadeFromRug:basketball) (total-score) )
)
(:scoring
  (count-once-per-objects basketMadeFromRug:red)
)
)



(define (game game-id-75) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?g - hexagonal_bin ?b4 - (either cube_block laptop) ?b - chair)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?b - game_object)
        (at-end
          (open ?b)
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o - doggie_bed ?o - dodgeball ?h - hexagonal_bin)
        (then
          (hold (agent_holds ?h) )
          (hold (on ?h ?h) )
          (once (not (in_motion agent) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?l ?d - game_object)
      (and
        (preference basketMadeFromRug
          (exists (?r - block)
            (then
              (hold (agent_holds agent) )
              (hold (in ?d bed) )
              (once (not (above agent ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= 10 (total-score) )
    )
    (>= 5 (* (external-forall-minimize (* (- (external-forall-minimize (count-longest pyramidBlockAtopTowerAtEnd:alarm_clock) ) )
            3
          )
        )
        (- 10 )
      )
    )
  )
)
(:scoring
  (count pyramidBlockAtopTowerAtEnd:doggie_bed)
)
)



(define (game game-id-76) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (and
      (exists (?b - triangular_ramp)
        (forall (?r ?d1 ?b ?d ?r - block)
          (game-conserved
            (and
              (agent_holds ?d)
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?b7 - hexagonal_bin ?h - dodgeball)
        (at-end
          (not
            (in_motion ?h)
          )
        )
      )
    )
    (preference dodgeballThrownToBinFromDesk
      (exists (?b - drawer ?h - game_object)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (forall (?c - ball)
      (and
        (preference throwAttemptFromDoor
          (exists (?c4 - red_pyramid_block)
            (at-end
              (in_motion pink)
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?l - book)
            (then
              (once (in_motion ?c) )
              (once (and (and (not (in ?c ?c) ) (in_motion ?l) ) (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor:dodgeball:beachball) (total-score) )
)
(:scoring
  (count-once-per-objects brownObjectMovedToRoomCenter:hexagonal_bin)
)
)



(define (game game-id-77) (:domain many-objects-room-v1)
(:setup
  (forall (?b4 - triangular_ramp)
    (and
      (game-optional
        (agent_holds ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?c - beachball ?h - book)
        (then
          (once (and (agent_holds ?h) (opposite ?h ?h) (between ?h ?h ?h) ) )
          (once (and (and (not (and (object_orientation agent upright) ) ) ) (not (on agent ?h) ) ) )
          (hold (and (and (not (and (game_start ) (in_motion ?h) ) ) (not (in_motion agent) ) (same_color ?h agent) ) (not (forall (?o - dodgeball) (in_motion ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (count-once-per-objects throwTeddyOntoPillow:dodgeball) (* (count throwTeddyOntoPillow:blue_pyramid_block:blue_dodgeball) (external-forall-maximize (count-once-per-objects throwTeddyOntoPillow:beachball) ) )
    )
    (not
      (= 1 (count-unique-positions throwTeddyOntoPillow:red) )
    )
    (not
      (or
        (or
          (>= (* (- 3 )
              5
            )
            (* (count throwTeddyOntoPillow:dodgeball) (count throwTeddyOntoPillow:basketball:yellow_pyramid_block) 20 1 )
          )
          (and
            (and
              (>= 20 15 )
            )
            (>= (total-score) (* 3 (count throwTeddyOntoPillow:blue_dodgeball) )
            )
            (>= (+ 40 3 )
              40
            )
          )
          (>= 5 (count throwTeddyOntoPillow:beachball) )
        )
      )
    )
  )
)
(:scoring
  (count throwTeddyOntoPillow:brown)
)
)



(define (game game-id-78) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (forall (?b - ball)
      (and
        (exists (?w1 - dodgeball)
          (game-optional
            (and
              (adjacent room_center ?w1)
              (in ?b ?w1)
            )
          )
        )
        (and
          (game-optional
            (not
              (agent_holds ?b)
            )
          )
          (and
            (and
              (game-conserved
                (agent_holds agent)
              )
            )
          )
        )
        (exists (?b6 - triangular_ramp)
          (and
            (exists (?d - block)
              (game-conserved
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?d - shelf)
        (then
          (once (on ?d ?d) )
          (once (or (not (on ?d bed) ) (on ?d ?d) ) )
          (hold (not (same_color ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- (+ 2 10 6 (* 8 (count beachballOnRug:dodgeball) )
        (count beachballOnRug:tall_cylindrical_block:dodgeball)
        (count beachballOnRug:hexagonal_bin)
      )
    )
    (* (count beachballOnRug:beachball) 3 )
  )
)
(:scoring
  (+ (= (- (count beachballOnRug:tall_cylindrical_block) )
      (* (- (>= 3 (count beachballOnRug:doggie_bed) )
          (* 8 (count beachballOnRug:green) )
        )
        (* (count beachballOnRug:doggie_bed:red) (<= (external-forall-maximize (count-once-per-objects beachballOnRug:hexagonal_bin) ) (* (count-once-per-objects beachballOnRug:pink:red) 2 )
          )
        )
      )
    )
    (* (count-once-per-objects beachballOnRug:blue_dodgeball:beachball) 7 (+ (count-once beachballOnRug:dodgeball) (* (count beachballOnRug:yellow:yellow:dodgeball) 0 2 )
      )
    )
  )
)
)



(define (game game-id-79) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - game_object ?g - block)
    (game-conserved
      (between ?g agent ?g)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either desktop pyramid_block) ?d - pyramid_block)
      (and
        (preference objectToBinOnFirstTry
          (exists (?h - (either watch golfball))
            (then
              (hold (not (not (in_motion ?h) ) ) )
              (once (in_motion ?d) )
              (once (and (in_motion ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 3 5 )
)
(:scoring
  (* 10 (count-once-per-objects objectToBinOnFirstTry:golfball) )
)
)



(define (game game-id-80) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball ?b - ball)
    (or
      (and
        (exists (?r - hexagonal_bin ?w1 - chair ?f - hexagonal_bin)
          (and
            (and
              (exists (?g - hexagonal_bin)
                (game-optional
                  (and
                    (in_motion ?g)
                  )
                )
              )
            )
            (game-conserved
              (or
                (> 1 (distance east_sliding_door floor))
              )
            )
            (exists (?c4 - cube_block)
              (game-conserved
                (agent_holds tan)
              )
            )
            (and
              (and
                (and
                  (exists (?r - doggie_bed)
                    (forall (?d - hexagonal_bin)
                      (exists (?c2 ?h - doggie_bed)
                        (exists (?d - (either dodgeball blue_cube_block) ?bl - building ?s - (either desktop book) ?o - pyramid_block)
                          (exists (?b8 - bridge_block)
                            (game-optional
                              (not
                                (not
                                  (and
                                    (< 5 1)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - doggie_bed)
                    (game-conserved
                      (in_motion ?b)
                    )
                  )
                )
                (forall (?o - teddy_bear ?o - (either dodgeball wall basketball))
                  (exists (?r - blue_pyramid_block ?o5 - cube_block ?b2 - wall)
                    (forall (?b - block ?d - game_object)
                      (game-conserved
                        (and
                          (in_motion ?b2)
                          (agent_holds agent)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (equal_x_position west_wall ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?d - dodgeball ?l4 ?b5 - hexagonal_bin)
        (then
          (once (and (game_start ) (in_motion ?l4) ) )
          (once (adjacent door floor) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?h - hexagonal_bin ?d - hexagonal_bin ?b5 - (either cube_block cd golfball) ?g - flat_block)
        (then
          (once (and (on agent ?g) (in_motion ?g) (agent_holds ?g) ) )
          (once (and (and (same_color ?g rug) (exists (?b2 - ball) (adjacent ?g ?b2) ) (in_motion rug) (and (not (not (not (touch ?g rug) ) ) ) (agent_holds ?g) ) ) (= 8 8 (distance desk ?g)) ) )
          (once (not (agent_holds ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects blockInTowerAtEnd:pink) )
)
(:scoring
  (count-once-per-objects blockInTowerAtEnd:block)
)
)



(define (game game-id-81) (:domain many-objects-room-v1)
(:setup
  (forall (?c - game_object)
    (game-conserved
      (equal_x_position ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?s - hexagonal_bin)
        (then
          (hold (on ?s ?s) )
          (once (in_motion ?s) )
          (once (exists (?r1 - ball) (and (not (not (agent_holds ?s) ) ) (or (not (in_motion ?s) ) (and (on ?r1 ?r1) (agent_holds ?r1) ) (not (and (in ?s ?s) (in ?s bed) ) ) ) (on ?r1 ?s) ) ) )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?c - cube_block)
        (then
          (hold-while (and (agent_holds ?c) (touch ?c ?c) ) (> (distance door ?c) 3) )
          (once (adjacent ?c agent) )
          (hold (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blockThrowAttempt:yellow:basketball) (count-shortest blockThrowAttempt:dodgeball) )
    (or
      (>= (* 5 7 )
        (total-score)
      )
      (>= 20 (total-time) )
      (not
        (and
          (or
            (>= 2 (total-time) )
            (>= 3 (count castleBuilt:pink_dodgeball) )
          )
          (> (count castleBuilt:yellow) 0 )
        )
      )
    )
  )
)
(:scoring
  (count-once blockThrowAttempt:beachball)
)
)



(define (game game-id-82) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?w2 - sliding_door)
      (forall (?h - cube_block)
        (forall (?d - cube_block)
          (and
            (game-optional
              (agent_holds ?h)
            )
            (and
              (or
                (game-conserved
                  (in_motion agent)
                )
                (and
                  (exists (?b9 - hexagonal_bin)
                    (forall (?d - cube_block ?o4 ?d2 - hexagonal_bin)
                      (exists (?t - dodgeball ?p3 - bridge_block)
                        (or
                          (game-conserved
                            (and
                              (not
                                (agent_holds ?p3)
                              )
                              (and
                                (touch ?o4 ?d2)
                                (exists (?h - triangular_ramp)
                                  (in_motion ?b9)
                                )
                                (or
                                  (and
                                    (and
                                      (and
                                        (adjacent room_center ?d2)
                                        (not
                                          (in_motion ?d2)
                                        )
                                      )
                                      (not
                                        (and
                                          (< (distance ?h ?p3) 6)
                                          (on ?w2 floor)
                                          (agent_holds ?w2)
                                        )
                                      )
                                    )
                                    (same_color ?o4 brown)
                                  )
                                )
                              )
                            )
                          )
                          (forall (?c - block)
                            (exists (?h - doggie_bed)
                              (game-optional
                                (< (distance ?d2 ?o4) 7)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (exists (?h - dodgeball)
                    (game-optional
                      (not
                        (and
                          (on ?h ?d)
                          (and
                            (in_motion ?h)
                            (not
                              (adjacent ?w2 ?d)
                            )
                          )
                          (adjacent desk ?d)
                        )
                      )
                    )
                  )
                  (forall (?l2 - game_object ?t - dodgeball)
                    (forall (?s - block)
                      (game-conserved
                        (> 1 (distance ?w2 ?w2))
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (and
                (rug_color_under ?d purple)
                (in ?h ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?o - tall_cylindrical_block)
        (then
          (once (and (in ?o ?o) (and (rug_color_under ?o green) (in_motion ?o) ) ) )
          (once (in_motion ?o) )
          (once (above ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 (count ballThrownFromBehindBlock:alarm_clock) )
  )
)
(:scoring
  (count ballThrownFromBehindBlock:book)
)
)



(define (game game-id-83) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?h - (either dodgeball credit_card game_object))
    (or
      (or
        (game-optional
          (on ?d ?d)
        )
        (or
          (forall (?h - cube_block ?b3 - teddy_bear ?b - hexagonal_bin)
            (exists (?o1 - doggie_bed)
              (exists (?r2 - hexagonal_bin)
                (game-conserved
                  (adjacent_side ?h front ?r2)
                )
              )
            )
          )
          (game-conserved
            (exists (?d - cylindrical_block ?h - cube_block)
              (in_motion ?d)
            )
          )
          (forall (?d - beachball ?b5 - pillow ?c2 - dodgeball ?w2 - sliding_door)
            (game-conserved
              (on ?h ?d)
            )
          )
        )
      )
      (exists (?w2 - (either dodgeball dodgeball pyramid_block) ?b - dodgeball ?h - cube_block)
        (game-conserved
          (not
            (and
              (on ?d pink)
            )
          )
        )
      )
      (and
        (exists (?h - shelf)
          (forall (?d - bridge_block ?o2 - hexagonal_bin)
            (forall (?b - (either cylindrical_block ball))
              (exists (?h - teddy_bear)
                (and
                  (game-conserved
                    (agent_holds ?b)
                  )
                  (and
                    (exists (?h - ball)
                      (game-conserved
                        (agent_holds ?b)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (and
            (in ?d ?h)
            (adjacent ?h bed)
            (in ?h rug)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?w2 - dodgeball)
        (then
          (once (not (not (and (> (distance desk floor) (distance bed ?w2)) (agent_holds ?w2) ) ) ) )
          (once (agent_holds ?w2) )
          (once (and (in_motion ?w2) (not (on ?w2 agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (not
        (>= (total-score) (total-time) )
      )
    )
  )
)
(:scoring
  (* 5 (- (count-once-per-objects blockPlacedInBuilding:dodgeball:beachball) )
  )
)
)



(define (game game-id-84) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - sliding_door ?t - (either dodgeball dodgeball))
    (game-conserved
      (same_object ?t ?t)
    )
  )
)
(:constraints
  (and
    (forall (?d - curved_wooden_ramp ?o2 - dodgeball)
      (and
        (preference throwToRampToBin
          (exists (?g - game_object ?f - (either doggie_bed tall_cylindrical_block) ?h - game_object)
            (then
              (hold (adjacent room_center ?o2) )
              (once (not (not (on ?o2 ?o2) ) ) )
              (once (in ?o2 ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (total-score) )
)
(:scoring
  (* 15 (count throwToRampToBin:beachball) )
)
)



(define (game game-id-85) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?r - block)
      (and
        (on ?r ?r)
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?t - cube_block ?s ?d ?r ?t - hexagonal_bin)
        (then
          (once (agent_holds ?t) )
          (once (agent_holds ?s) )
          (once (agent_crouches ) )
        )
      )
    )
    (forall (?d - triangular_ramp ?p2 - hexagonal_bin ?b - shelf)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?w1 - (either key_chain pyramid_block) ?l ?h - cube_block)
            (then
              (hold-while (exists (?o1 - cube_block) (in_motion ?h) ) (and (not (adjacent_side ?b right rug back) ) (agent_holds desk) ) )
              (hold (agent_holds ?b) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?l - dodgeball ?db - hexagonal_bin)
        (then
          (once (and (in_motion floor) (agent_holds ?db) (not (not (not (= 3) ) ) ) ) )
          (once (< 1 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (count throwAttemptKnocksBlock:pink_dodgeball:pink_dodgeball) )
)
(:scoring
  (count throwAttemptKnocksBlock:hexagonal_bin)
)
)



(define (game game-id-86) (:domain few-objects-room-v1)
(:setup
  (forall (?z ?z0 - back)
    (and
      (and
        (and
          (exists (?o ?b ?l2 - (either laptop alarm_clock) ?w2 - (either golfball))
            (game-conserved
              (agent_holds ?w2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball ?c1 - teddy_bear)
      (and
        (preference cubeThrownToBin
          (exists (?d - curved_wooden_ramp ?c3 - hexagonal_bin ?h - hexagonal_bin ?b - wall ?o - dodgeball)
            (then
              (once (and (touch ?o ?o) (and (in_motion ?c1) (and (not (not (or (and (not (not (<= (distance room_center ?c1) (distance ?o ?c1)) ) ) (in_motion ?c1) ) (in ?o ?o) (not (and (in_motion ?o) (not (not (agent_holds ?c1) ) ) (exists (?c - cube_block ?o4 ?o4 ?h - (either block cd desktop basketball alarm_clock golfball doggie_bed)) (not (or (adjacent room_center ?o4) (in_motion ?c1) ) ) ) ) ) ) ) ) (in_motion ?c1) ) ) (adjacent door ?o) ) )
              (once (on ?o blue) )
              (once (agent_holds ?c1) )
              (once (and (same_type ?c1 ?o) (and (not (and (exists (?h - building) (in_motion ?o) ) (game_start ) ) ) (not (and (broken agent) (touch ?c1 ?c1) ) ) ) ) )
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count cubeThrownToBin:purple:red) )
    (< 3 (total-time) )
  )
)
(:scoring
  (count-once-per-objects cubeThrownToBin:dodgeball)
)
)



(define (game game-id-87) (:domain few-objects-room-v1)
(:setup
  (forall (?c ?b - ball)
    (game-optional
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?o - bridge_block)
        (then
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (<= (count ballToBinFromBed:pink:doggie_bed:beachball) (* 10 (count ballToBinFromBed:beachball:yellow_pyramid_block) )
  )
)
(:scoring
  (count ballToBinFromBed:red:basketball)
)
)



(define (game game-id-88) (:domain many-objects-room-v1)
(:setup
  (exists (?b3 - ball)
    (exists (?l1 - (either laptop key_chain))
      (and
        (game-conserved
          (agent_holds ?l1)
        )
        (game-conserved
          (on ?b3 ?b3)
        )
        (game-conserved
          (not
            (not
              (not
                (and
                  (adjacent desk ?b3)
                  (not
                    (touch agent floor)
                  )
                  (in ?l1 ?l1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?o3 - triangular_ramp ?o2 - flat_block ?c3 - dodgeball)
        (then
          (once (and (agent_holds ?c3) (and (agent_holds ?c3) (not (same_object ?c3 rug) ) (in_motion ?c3) (or (not (in_motion ?c3) ) (agent_holds desk) ) (adjacent room_center ?c3) (or (in ?c3 ?c3) (adjacent rug ?c3) (rug_color_under ?c3 yellow) ) (not (and (agent_holds ?c3) (same_type bed ?c3) ) ) (and (exists (?x ?x0 - white) (touch ?c3 ?c3) ) (exists (?h - wall) (same_color floor ?c3) ) ) (and (in ?c3 ?c3) (on ?c3 ?c3) ) (and (agent_holds ?c3) (>= 1 1) ) ) (not (agent_holds ?c3) ) ) )
          (hold-while (not (and (same_color ?c3 ?c3) (opposite ?c3 ?c3) ) ) (and (game_over ) (and (agent_holds ?c3) (and (touch ?c3 ?c3) (on ?c3 ?c3) ) ) ) )
          (once (and (touch bed ?c3) (agent_holds ?c3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (= 3 (* 4 7 )
      )
      (* (* (count dodgeballFromBlockToBin:book) (external-forall-maximize (/ 2 8 ) ) )
        (- 0 )
      )
    )
    (count-once-per-objects dodgeballFromBlockToBin:beachball:blue_cube_block:beachball)
  )
)
(:scoring
  (* (* (* 10 (* (- 2 (/ (* (count-once-per-external-objects dodgeballFromBlockToBin:book) (+ 6 (count-once-per-external-objects dodgeballFromBlockToBin:dodgeball:yellow) )
                (+ 4 (count dodgeballFromBlockToBin:yellow) )
                3
                (count dodgeballFromBlockToBin:basketball)
                (* 1 (external-forall-minimize (count dodgeballFromBlockToBin:hexagonal_bin) ) )
                (count dodgeballFromBlockToBin:basketball:dodgeball)
                0
                6
                (count dodgeballFromBlockToBin:golfball)
                (count dodgeballFromBlockToBin:dodgeball:green)
                (+ 20 (count-once-per-objects dodgeballFromBlockToBin:blue_pyramid_block) )
              )
              3
            )
          )
          (count dodgeballFromBlockToBin:pink)
        )
      )
    )
    (* (* (count dodgeballFromBlockToBin:purple:basketball) (count dodgeballFromBlockToBin:doggie_bed) (count-once-per-objects dodgeballFromBlockToBin:beachball) )
      1
    )
    5
    3
  )
)
)



(define (game game-id-89) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?h - pillow)
          (game-optional
            (same_color ?h ?h)
          )
        )
        (game-optional
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b6 - (either dodgeball side_table cube_block) ?b - tall_cylindrical_block)
        (then
          (hold (touch ?b ?b) )
          (once (in ?b rug) )
          (hold (and (agent_holds ?b) (and (agent_holds ?b) (same_type ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count beachballBouncedOffRamp:basketball) (+ (count beachballBouncedOffRamp:dodgeball) (* 40 (* (* (external-forall-maximize (external-forall-minimize (* (+ (count beachballBouncedOffRamp:block) 2 )
                      (count beachballBouncedOffRamp:dodgeball)
                    )
                  )
                )
                10
                2
              )
              (count-once-per-objects beachballBouncedOffRamp:dodgeball)
              (count-once beachballBouncedOffRamp:pink:cube_block)
              (count-once-per-objects beachballBouncedOffRamp:pink:pink)
              (count beachballBouncedOffRamp)
              (count beachballBouncedOffRamp:yellow)
            )
          )
          (count-once-per-objects beachballBouncedOffRamp:pink)
          (count beachballBouncedOffRamp:beachball:beachball)
        )
      )
    )
    (or
      (and
        (or
          (>= (count-once beachballBouncedOffRamp:green:green) (total-score) )
          (>= (* (count beachballBouncedOffRamp:blue_pyramid_block) 15 )
            (* (* 3 (count-once-per-objects beachballBouncedOffRamp:green) )
              (count beachballBouncedOffRamp:hexagonal_bin)
            )
          )
        )
        (and
          (>= (count beachballBouncedOffRamp:pink) (count-once-per-external-objects beachballBouncedOffRamp:dodgeball:pink_dodgeball) )
          (>= (count beachballBouncedOffRamp:green:basketball) (total-time) )
        )
        (> (count beachballBouncedOffRamp:beachball) (external-forall-maximize (count beachballBouncedOffRamp:beachball) ) )
      )
      (>= (* (external-forall-maximize (- (* (count-same-positions beachballBouncedOffRamp:dodgeball:pink_dodgeball) (count beachballBouncedOffRamp:orange:rug) (count beachballBouncedOffRamp) (* (count-once-per-objects beachballBouncedOffRamp:golfball:doggie_bed) (* (count beachballBouncedOffRamp:dodgeball) 3 )
                )
                10
                3
              )
            )
          )
          3
        )
        15
      )
    )
    (>= 300 5 )
  )
)
(:scoring
  (+ 5 3 (count beachballBouncedOffRamp) )
)
)



(define (game game-id-90) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (< 6 (distance room_center bed))
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?w1 - hexagonal_bin)
        (at-end
          (is_setup_object ?w1)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 1 (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball) )
      (count-once-per-external-objects golfballLandsInBinThroughRamp:pink_dodgeball)
    )
    (or
      (or
        (or
          (>= (count-once-per-objects golfballLandsInBinThroughRamp:side_table:dodgeball) 2 )
        )
        (and
          (< (count golfballLandsInBinThroughRamp:orange) (total-time) )
          (not
            (>= (* (count golfballLandsInBinThroughRamp:blue_pyramid_block) (count golfballLandsInBinThroughRamp:purple) (* (count golfballLandsInBinThroughRamp:dodgeball:hexagonal_bin) (+ 5 (* (count golfballLandsInBinThroughRamp:beachball:golfball) (count golfballLandsInBinThroughRamp:beachball) )
                  )
                  180
                  5
                  5
                  (* 6 (* (count golfballLandsInBinThroughRamp:beachball) 7 )
                  )
                  (count-once-per-objects golfballLandsInBinThroughRamp:brown)
                  (/
                    2
                    (count golfballLandsInBinThroughRamp:rug)
                  )
                  3
                )
                3
                (- 3 )
                (count golfballLandsInBinThroughRamp:golfball)
                5
              )
              (* 15 1 )
            )
          )
        )
      )
      (>= (total-time) (+ 5 2 (count golfballLandsInBinThroughRamp:yellow) (count-once-per-external-objects golfballLandsInBinThroughRamp:yellow_pyramid_block) (count-total golfballLandsInBinThroughRamp:dodgeball:hexagonal_bin) 3 )
      )
      (>= (total-score) (- (count golfballLandsInBinThroughRamp:basketball) )
      )
    )
    (and
      (or
        (<= (count-once-per-objects golfballLandsInBinThroughRamp:blue) (count-once-per-objects golfballLandsInBinThroughRamp:pink:dodgeball) )
        (or
          (>= (* (count-once-per-external-objects golfballLandsInBinThroughRamp:pink:white) (count golfballLandsInBinThroughRamp:red:dodgeball) )
            60
          )
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects golfballLandsInBinThroughRamp:golfball) (count golfballLandsInBinThroughRamp:side_table:beachball) )
)
)



(define (game game-id-91) (:domain many-objects-room-v1)
(:setup
  (exists (?x - yellow ?x - color)
    (forall (?h - block)
      (and
        (exists (?s - hexagonal_bin ?b - ball)
          (game-conserved
            (= (distance bed ?b) (distance_side room_center front ?h back))
          )
        )
        (forall (?t - hexagonal_bin)
          (exists (?d - doggie_bed)
            (game-conserved
              (in_motion ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b - (either tall_cylindrical_block rug dodgeball))
        (at-end
          (in ?b ?b)
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?t1 - hexagonal_bin)
        (at-end
          (on ?t1 ?t1)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (+ (* (* 3 (count-unique-positions ballThrownIntoTarget:dodgeball) 10 )
          3
        )
        6
      )
      (count-once-per-objects ballThrownIntoTarget:doggie_bed:cube_block)
      (count-once objectWithMatchingColor:pink)
      2
      15
      2
    )
  )
)
(:scoring
  (count-overlapping objectWithMatchingColor:red:dodgeball:dodgeball)
)
)



(define (game game-id-92) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - yellow_pyramid_block ?c - flat_block)
    (game-conserved
      (between ?c ?c ?c)
    )
  )
)
(:constraints
  (and
    (forall (?b1 - (either cube_block cellphone))
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?r - block ?d - block)
            (at-end
              (and
                (not
                  (agent_holds ?d)
                )
                (agent_holds ?d)
                (not
                  (exists (?h ?c - (either hexagonal_bin blue_cube_block) ?r - dodgeball)
                    (and
                      (and
                        (and
                          (or
                            (opposite ?d ?b1)
                            (not
                              (on ?d rug)
                            )
                          )
                          (not
                            (not
                              (and
                                (and
                                  (agent_holds agent)
                                  (and
                                    (or
                                      (agent_holds ?b1)
                                      (in_motion ?b1)
                                    )
                                    (in_motion ?b1)
                                  )
                                )
                                (agent_holds ?d)
                                (agent_holds ?d)
                              )
                            )
                          )
                        )
                        (agent_holds ?r)
                      )
                      (and
                        (exists (?t2 - pillow)
                          (not
                            (or
                              (on agent ?d)
                              (agent_holds ?r)
                              (not
                                (not
                                  (opposite ?t2 ?r)
                                )
                              )
                            )
                          )
                        )
                        (exists (?l - hexagonal_bin)
                          (and
                            (adjacent ?l agent)
                            (in ?d ?d)
                          )
                        )
                        (between ?r ?d ?d)
                      )
                      (exists (?l1 - dodgeball)
                        (and
                          (same_color ?d brown)
                          (on ?r ?b1)
                          (< (distance desk ?l1) (x_position ?d))
                          (and
                            (exists (?b - cube_block ?b3 - hexagonal_bin)
                              (and
                                (in_motion ?r)
                                (same_color ?l1 ?r)
                              )
                            )
                            (not
                              (open ?l1)
                            )
                            (in ?l1 ?l1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?tb - dodgeball)
        (then
          (hold (not (and (not (agent_holds ?tb) ) (in_motion ?tb) (on ?tb ?tb) (adjacent_side rug left agent) (not (agent_holds ?tb) ) (and (and (in_motion agent) (not (in_motion ?tb) ) ) (not (not (and (between ?tb agent ?tb) ) ) ) (in_motion ?tb) ) (is_setup_object ?tb) ) ) )
          (once (not (agent_holds ?tb) ) )
          (once (= (distance ?tb ?tb) (distance ?tb ?tb)) )
        )
      )
    )
    (forall (?g - beachball)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?b - block ?h - cube_block ?db ?h - hexagonal_bin)
            (at-end
              (< 6 (building_size ?h))
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?x - white)
            (then
              (once (and (agent_holds ?g) (and (agent_holds ?g) (not (not (and (on bed ?g) (in_motion ?g) ) ) ) ) ) )
              (hold (< (distance ?g ?g) 9) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once brownObjectMovedToRoomCenter:beachball:pink) (total-score) )
)
(:scoring
  (+ 4 (count-once-per-external-objects brownObjectMovedToRoomCenter:blue_dodgeball:blue) )
)
)



(define (game game-id-93) (:domain many-objects-room-v1)
(:setup
  (forall (?r1 - dodgeball ?y ?y0 ?y1 - (either upright))
    (exists (?w2 - hexagonal_bin)
      (exists (?b2 - hexagonal_bin ?h - (either laptop cd) ?c5 - shelf)
        (game-conserved
          (touch ?w2 desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - ball ?c3 - drawer)
      (and
        (preference objectsHidden
          (exists (?f - cube_block)
            (then
              (once (not (game_start ) ) )
              (hold-while (not (not (and (exists (?b2 - bridge_block) (on ?b2 ?f) ) (exists (?b - building) (not (and (in_motion ?f) (in_motion ?b) ) ) ) ) ) ) (agent_holds ?c3) (in_motion desk) )
              (hold-while (in_motion agent) (in pink ?c3) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?p ?b - building ?c1 - cube_block)
            (then
              (hold (same_type ?c3 ?c1) )
              (hold (on ?c1 ?c3) )
              (hold (in ?c3 ?c1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (< (count otherObjectsOnDeskShelf) (- 8 )
      )
    )
  )
)
(:scoring
  (* (>= 3 10 )
    (* (count-once otherObjectsOnDeskShelf:dodgeball:dodgeball) (count-once-per-objects otherObjectsOnDeskShelf:dodgeball:yellow) )
  )
)
)



(define (game game-id-94) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?h - (either basketball cube_block))
      (and
        (forall (?b - beachball ?b - hexagonal_bin)
          (exists (?x - red)
            (and
              (game-conserved
                (in_motion ?b)
              )
              (game-optional
                (in_motion ?b)
              )
            )
          )
        )
        (game-optional
          (adjacent ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object ?h - dodgeball)
      (and
        (preference objectOnBed
          (then
            (once (not (not (in_motion ?h) ) ) )
            (once (not (not (exists (?l - block) (in ?h ?h) ) ) ) )
            (once (and (<= 4 1) (and (and (not (between top_shelf ?h ?h) ) (in_motion ?h) ) ) (not (touch ?h ?h) ) (in_motion ?h) (and (<= 9 6) (on ?h ?h) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (* 0 3 )
    )
    (count objectOnBed:beachball)
  )
)
(:scoring
  (* 2 2 )
)
)



(define (game game-id-95) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - game_object)
    (exists (?o - (either laptop cellphone blue_cube_block) ?c - red_dodgeball)
      (game-optional
        (and
          (above ?c ?c)
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?c2 - chair ?g ?o - hexagonal_bin ?b1 - hexagonal_bin)
        (then
          (once (and (not (not (in ?b1 ?b1) ) ) (not (agent_holds rug) ) ) )
          (once (touch ?b1 ?b1) )
          (once (not (agent_holds ?b1) ) )
        )
      )
    )
    (preference throwBallToDoggieBedOffWall
      (exists (?g - doggie_bed)
        (then
          (hold (agent_holds ?g) )
          (once (and (same_color ?g ?g) (and (agent_holds ?g) (and (not (agent_holds ?g) ) (and (agent_holds ?g) (in_motion ?g) ) (agent_holds floor) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 18 10 )
)
(:scoring
  (count-once-per-objects throwBallToDoggieBedOffWall:blue_cube_block)
)
)



(define (game game-id-96) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?c - chair ?c2 ?h - hexagonal_bin)
        (then
          (hold (in_motion ?h) )
          (hold (in_motion ?h) )
          (hold-while (in ?h ?c2) (not (touch ?c2 ?c2) ) )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?b - building)
        (then
          (hold (agent_holds ?b) )
          (hold (and (same_object ?b ?b) (adjacent bed ?b) ) )
          (hold (not (open bed) ) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?o4 - building)
        (then
          (hold-while (and (< 1 2) (in ?o4 ?o4) (in_motion ?o4) (same_type ?o4 block) (not (not (on ?o4 ?o4) ) ) (not (on ?o4 ?o4) ) (and (> 1 (distance desk ?o4)) (adjacent ?o4 ?o4) ) ) (in_motion ?o4) )
          (once (agent_holds ?o4) )
          (once (on ?o4 ?o4) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?b7 - hexagonal_bin ?h - ball)
        (then
          (hold-while (on ?h ?h) (and (in_motion ?h) (not (in_motion ?h) ) ) )
          (once (touch ?h ?h) )
          (once (or (faces ?h ?h) (game_start ) (exists (?p3 - hexagonal_bin) (same_type ?h ?p3) ) (same_object ?h ?h) (same_object ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballHitsBinBottom:dodgeball) 30 )
)
(:scoring
  (count throwBallToDoggieBed:tall_cylindrical_block)
)
)



(define (game game-id-97) (:domain few-objects-room-v1)
(:setup
  (exists (?b3 - hexagonal_bin)
    (forall (?w1 - hexagonal_bin)
      (game-conserved
        (and
          (on ?b3 ?b3)
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - building)
      (and
        (preference bookOnDeskShelf
          (exists (?d - shelf)
            (at-end
              (and
                (agent_holds ?d)
                (on ?b2 desk)
              )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?b - dodgeball)
            (then
              (once (touch ?b agent) )
              (once (and (in_motion ?b) (and (in_motion ?b) (and (agent_holds desk) (on ?b ?b) ) ) ) )
              (hold-while (open ?b2) (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (- (* (count-once bookOnDeskShelf:hexagonal_bin) 5 )
      )
    )
    (>= (count ballThrownHitsAgent:yellow_pyramid_block) (total-score) )
    (> (count bookOnDeskShelf:dodgeball) 5 )
  )
)
(:scoring
  (count-once-per-objects ballThrownHitsAgent:pink)
)
)



(define (game game-id-98) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_crouches )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?o3 - hexagonal_bin ?b4 - flat_block ?h - building ?o - yellow_pyramid_block)
        (then
          (once (rug_color_under ?o pink) )
          (once (not (exists (?w - dodgeball ?b2 - (either blue_cube_block cd dodgeball)) (not (and (in ?o ?b2) (and (in ?b2 ?o) (and (in_motion ?o) (and (open ?o) (in ?o ?o) (or (agent_holds ?b2) (between ?o ?o agent) ) (in_motion ?o) ) ) ) (and (agent_holds ?o) (agent_holds ?o) ) ) ) ) ) )
          (hold (in_motion ?o) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?b - game_object ?t2 - ball)
        (at-end
          (and
            (not
              (not
                (exists (?r - red_dodgeball ?c - dodgeball)
                  (touch bed ?c)
                )
              )
            )
            (forall (?o ?h - game_object ?l ?l2 ?d ?c2 ?p ?c - game_object)
              (in_motion ?c)
            )
            (in ?t2 ?t2)
          )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?b - hexagonal_bin)
        (then
          (once (not (agent_holds ?b) ) )
          (once (in_motion ?b) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* 2 1 3 (count ballToBinFromBed:bed:doggie_bed) )
      2
    )
    (or
      (not
        (>= (total-score) 7 )
      )
      (not
        (or
          (>= 10 (+ (+ (count laptopAndBookInPlace) (* (count-unique-positions laptopAndBookInPlace:alarm_clock) (* (count throwFromEdgeOfRug:basketball) (count ballToBinFromBed:hexagonal_bin) )
                )
              )
              20
              (count ballToBinFromBed)
              (count laptopAndBookInPlace:beachball)
              9
              (- (count laptopAndBookInPlace:doggie_bed) )
            )
          )
          (>= 10 (count-once-per-objects throwFromEdgeOfRug:cube_block:dodgeball) )
        )
      )
      (> (total-score) 3 )
    )
  )
)
(:scoring
  (* (count throwFromEdgeOfRug:basketball) (count-increasing-measure ballToBinFromBed:blue_dodgeball) )
)
)



(define (game game-id-99) (:domain few-objects-room-v1)
(:setup
  (exists (?w - block)
    (game-conserved
      (or
        (object_orientation bed diagonal)
        (in ?w top_drawer)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d - triangular_ramp ?b2 - (either floor blue_cube_block))
        (then
          (once (and (in_motion ?b2) (and (and (in ?b2 ?b2) (agent_holds ?b2) ) (agent_holds ?b2) ) (not (not (not (in ?b2 ?b2) ) ) ) ) )
          (hold (and (agent_holds ?b2) (not (and (in_motion ?b2) (not (and (agent_holds ?b2) (< 10 (distance ?b2 ?b2)) ) ) ) ) ) )
          (hold (in_motion ?b2) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b - cube_block)
        (then
          (once (agent_holds ?b) )
          (once (agent_holds ?b) )
          (hold (exists (?b7 - curved_wooden_ramp) (in top_drawer ?b7) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (/ (count-longest throwToRampToBin:dodgeball) (count matchingBuildingBuilt:red_pyramid_block:pink_dodgeball) ) (* (* (external-forall-maximize (count throwToRampToBin:yellow_cube_block) ) (* 2 3 (count-once-per-objects matchingBuildingBuilt:orange) )
        )
        (count throwToRampToBin:dodgeball)
      )
    )
    (+ (+ (count throwToRampToBin:hexagonal_bin) 3 (* (+ 5 15 )
          (count-once matchingBuildingBuilt:wall)
        )
        (count-once-per-objects throwToRampToBin:golfball)
      )
      (+ 9 (count-once-per-objects throwToRampToBin:golfball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (* (* 2 20 )
      6
      0
      (* 20 (count throwToRampToBin:white:red) )
      1
      (count matchingBuildingBuilt:dodgeball)
      (count matchingBuildingBuilt)
      10
      (count-once throwToRampToBin:pink_dodgeball:dodgeball)
    )
  )
)
)



(define (game game-id-100) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - (either triangle_block cellphone))
    (game-optional
      (and
        (and
          (and
            (in ?b ?b)
          )
          (> 3 (distance desk top_shelf))
        )
        (is_setup_object ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?b4 - hexagonal_bin ?r1 - hexagonal_bin)
        (then
          (hold-while (not (and (in_motion agent) (in ?r1 ?r1) ) ) (touch ?r1 ?r1) )
          (once (agent_holds ?r1) )
          (once (on ?r1 ?r1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-score) )
    (> (count blockCorrectlyPicked:dodgeball) (external-forall-maximize (count blockCorrectlyPicked:hexagonal_bin) ) )
  )
)
(:scoring
  (* (* (count-once-per-external-objects blockCorrectlyPicked:beachball) (count blockCorrectlyPicked:brown:pink) )
    (+ (count blockCorrectlyPicked:dodgeball) (* 5 300 100 15 )
    )
    15
  )
)
)



(define (game game-id-101) (:domain few-objects-room-v1)
(:setup
  (exists (?c - (either dodgeball bed hexagonal_bin lamp flat_block cd cd) ?c2 - hexagonal_bin)
    (and
      (and
        (and
          (forall (?c2 - shelf ?l ?h - ball)
            (game-conserved
              (not
                (agent_holds ?h)
              )
            )
          )
        )
        (game-optional
          (not
            (not
              (and
                (agent_holds ?c2)
                (exists (?d - pillow ?o1 - curved_wooden_ramp ?c - doggie_bed ?b9 - game_object ?c6 ?b6 - golfball)
                  (on ?c6 ?b6)
                )
                (same_color ?c2 ?c2)
                (and
                  (and
                    (agent_holds ?c2)
                    (on ?c2 ?c2)
                  )
                  (not
                    (agent_crouches )
                  )
                  (broken ?c2)
                  (in_motion bed)
                  (and
                    (not
                      (in_motion ?c2)
                    )
                    (< (x_position ?c2) (distance door ?c2))
                  )
                  (in_motion ?c2)
                  (not
                    (in_motion ?c2)
                  )
                  (on agent ?c2)
                )
              )
            )
          )
        )
      )
      (forall (?w2 - shelf)
        (and
          (exists (?t1 - wall ?c - doggie_bed)
            (game-optional
              (and
                (and
                  (or
                    (not
                      (> (distance ?w2 ?c) 1)
                    )
                    (and
                      (not
                        (not
                          (not
                            (not
                              (and
                                (in_motion ?c)
                                (in_motion ?c)
                                (in ?w2 ?c)
                                (exists (?p - teddy_bear)
                                  (in_motion ?c2)
                                )
                              )
                            )
                          )
                        )
                      )
                      (in ?c ?c)
                    )
                    (< (distance room_center ?c2) 0)
                  )
                  (on ?c2 ?c2)
                )
                (agent_holds ?w2)
                (agent_holds ?w2)
              )
            )
          )
        )
      )
      (game-optional
        (on ?c2 ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?o - dodgeball)
        (then
          (once (and (not (and (in ?o ?o) (agent_holds ?o) (= 1 3) ) ) (adjacent ?o ?o) ) )
          (hold (is_setup_object ?o) )
          (once (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= 7 3 )
      (>= 1 (+ (count towerFallsWhileBuilding:golfball:pink_dodgeball:blue) (count-once-per-objects towerFallsWhileBuilding:alarm_clock) )
      )
    )
  )
)
(:scoring
  (count-once-per-objects towerFallsWhileBuilding:hexagonal_bin)
)
)



(define (game game-id-102) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in agent agent)
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?h - game_object)
        (then
          (once (above ?h ?h) )
          (once (touch agent ?h) )
          (hold (and (and (and (not (adjacent_side ?h left bed) ) (in_motion ?h) (in ?h ?h) (and (and (agent_holds ?h) (in_motion ?h) ) (adjacent room_center ?h) ) ) (not (in_motion ?h) ) ) (= 1 (distance ?h ?h)) ) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?h - chair)
        (then
          (hold (on ?h ?h) )
          (once (above ?h ?h) )
          (once (and (>= (distance ?h bed) 9) (and (agent_holds ?h) (on ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 3 )
)
(:scoring
  (count thrownBallReachesEnd:doggie_bed:pink)
)
)



(define (game game-id-103) (:domain few-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (game-conserved
      (and
        (in_motion ?h)
        (not
          (not
            (> (distance ?h ?h) (distance ?h ?h))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?y - diagonal ?b2 - game_object)
        (then
          (hold (in_motion ?b2) )
          (hold-while (in_motion ?b2) (and (and (in_motion ?b2) (not (same_type ?b2 bridge_block) ) ) (agent_holds ?b2) ) )
          (hold (and (in bed ?b2) (broken ?b2) (and (not (in_motion ?b2) ) (in ?b2 ?b2) ) (adjacent ?b2 ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count failedThrowAttempt:alarm_clock) )
)
(:scoring
  (count-once-per-external-objects failedThrowAttempt:doggie_bed)
)
)



(define (game game-id-104) (:domain many-objects-room-v1)
(:setup
  (exists (?h - red_pyramid_block)
    (and
      (and
        (game-conserved
          (on agent ?h)
        )
        (and
          (and
            (game-conserved
              (and
                (in_motion ?h)
                (and
                  (= 1 1)
                  (not
                    (game_start )
                  )
                )
              )
            )
            (and
              (game-conserved
                (and
                  (in_motion ?h)
                  (object_orientation ?h diagonal)
                )
              )
            )
            (exists (?b6 - (either blue_cube_block golfball hexagonal_bin))
              (game-conserved
                (not
                  (faces ?b6 ?h)
                )
              )
            )
          )
        )
        (exists (?b - (either dodgeball dodgeball bridge_block) ?p - (either dodgeball desktop))
          (exists (?d - golfball ?r - teddy_bear)
            (and
              (or
                (forall (?h - game_object)
                  (game-conserved
                    (and
                      (toggled_on bed)
                      (and
                        (agent_holds bed)
                        (agent_holds ?p)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (agent_holds ?h)
        )
        (forall (?o4 - ball ?h - dodgeball)
          (exists (?o - block)
            (game-conserved
              (not
                (agent_holds ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cube_block)
      (and
        (preference blockToBinFromRug
          (exists (?b5 - ball)
            (then
              (once (and (and (in ?b bed) (in_motion ?b5) ) (agent_holds floor) ) )
              (hold (and (agent_holds desk) (exists (?b2 - dodgeball) (and (touch ?b2 desk) (not (in_motion ?b2) ) ) ) ) )
              (hold (and (same_object ?b ?b5) (and (not (and (agent_holds ?b) (on ?b5 blue) (adjacent ?b5 ?b) (not (not (and (broken agent) (and (between ?b5 ?b ?b5) (>= (distance ?b5 ?b) 1) ) ) ) ) ) ) (and (< (distance ?b agent) 1) (on ?b5 ?b5) ) ) ) )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?o - ball)
            (then
              (hold (on brown ?b) )
              (hold (= 1) )
              (once (in_motion ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 1 )
)
(:scoring
  (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:basketball)
)
)



(define (game game-id-105) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-optional
      (on ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?s - (either alarm_clock pillow curved_wooden_ramp cd flat_block cd floor) ?o - hexagonal_bin)
        (then
          (once (and (not (agent_holds ?o) ) (or (and (on ?o ?o) (same_color ?o ?o) ) (in_motion ?o) ) (not (and (< (distance_side ?o right ?o back) (distance room_center ?o)) (not (object_orientation ?o diagonal) ) ) ) ) )
          (hold-while (agent_holds ?o) (in ?o ?o) (not (adjacent desk ?o) ) (in_motion ?o) )
          (once (adjacent_side desk front ?o) )
        )
      )
    )
    (forall (?b - game_object)
      (and
        (preference cubeThrownToBin
          (exists (?x ?x0 ?x1 - purple ?h - doggie_bed)
            (at-end
              (not
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?p2 - flat_block ?t1 - (either bridge_block chair) ?y ?y0 ?y1 - upside_down ?r2 - doggie_bed)
            (then
              (hold (not (on ?r2 ?r2) ) )
              (once (in_motion ?r2) )
              (hold (in_motion desk) )
            )
          )
        )
        (preference blueObjectMovedToRoomCenter
          (then
            (hold (agent_holds ?h) )
            (once (and (not (adjacent ?h ?h) ) (and (not (and (and (and (not (agent_holds ?h) ) (on ?h ?h) ) (< (distance desk ?h) (distance desk ?h)) ) (same_type ?h ?h) (adjacent ?h ?h) ) ) (not (not (and (and (and (and (is_setup_object ?h) (and (and (and (adjacent room_center ?h) (in_motion rug) (on ?h ?h) ) (and (not (not (agent_holds rug) ) ) (agent_holds brown) ) ) (and (agent_holds ?h) (agent_holds ?h) (and (exists (?p1 - cube_block) (in ?h floor) ) (agent_crouches ) ) ) (and (and (agent_holds ?h) (in_motion agent) ) (on ?h ?h) ) ) ) (agent_holds ?h) ) (and (agent_holds ?h) (and (adjacent desk bed) (touch ?h ?h) ) ) ) (and (not (agent_holds ?h) ) (agent_holds ?h) ) ) ) ) ) ) )
            (once (same_color ?h ?h) )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?b - game_object ?h - game_object)
            (then
              (hold (in floor ?h) )
              (hold (on ?h ?h) )
              (hold (adjacent room_center desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) -30 )
)
(:scoring
  (count-once pillowMovedToRoomCenter:basketball)
)
)



(define (game game-id-106) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds floor)
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?b3 - drawer ?b10 - cube_block)
        (then
          (hold-while (adjacent ?b10 ?b10) (on ?b10 ?b10) (not (not (opposite ?b10 ?b10) ) ) )
          (once (not (and (and (exists (?c - ball) (not (and (< (distance ?b10 ?c) 5) (in_motion ?b10) ) ) ) (and (and (broken ?b10) (in_motion ?b10) ) (not (on ?b10 ?b10) ) ) (agent_holds ?b10) ) ) ) )
          (once (and (on ?b10 ?b10) (and (between ?b10 ?b10 ?b10) (and (exists (?x ?x0 ?x1 - light_blue) (>= 1 (distance desk ?b10)) ) (agent_holds ?b10) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (+ (- (* 2 (count-once-per-objects ballKnocksBlockFromRug:dodgeball) )
    )
    (+ 0 10 )
    (count-once-per-objects ballKnocksBlockFromRug:hexagonal_bin)
    (count ballKnocksBlockFromRug:red)
    (* (+ 7 (count ballKnocksBlockFromRug:tall_cylindrical_block) )
      (count-longest ballKnocksBlockFromRug:beachball:basketball)
    )
    (- (count ballKnocksBlockFromRug:hexagonal_bin:pink_dodgeball) )
  )
)
)



(define (game game-id-107) (:domain medium-objects-room-v1)
(:setup
  (exists (?l1 - ball)
    (game-conserved
      (and
        (in_motion ?l1)
        (exists (?b7 - chair)
          (same_type ?l1 block)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?r - bridge_block ?h - cube_block)
        (at-end
          (and
            (on ?h desk)
            (and
              (not
                (< 2 (distance_side green_golfball front_left_corner top_shelf))
              )
              (open ?h)
            )
            (agent_holds ?h)
            (in_motion ?h)
            (not
              (exists (?r1 - chair)
                (not
                  (in_motion ?h)
                )
              )
            )
            (in_motion ?h)
            (and
              (on ?h ?h)
              (in ?h ?h)
            )
            (not
              (on ?h bed)
            )
            (touch ?h agent)
            (and
              (in_motion ?h)
              (not
                (same_type ?h ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-overlapping beachballBouncedOffRamp:yellow) (* (count beachballBouncedOffRamp:beachball:golfball) 5 )
  )
)
(:scoring
  (count-once-per-objects beachballBouncedOffRamp:basketball:yellow)
)
)



(define (game game-id-108) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - teddy_bear ?h ?w2 - hexagonal_bin)
    (game-conserved
      (> 7 (distance ?w2 ?w2))
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference bounceBallToBin
          (exists (?c - hexagonal_bin)
            (then
              (hold-while (in_motion agent) (not (not (and (not (adjacent ?o ?c) ) (and (not (agent_holds ?c) ) (on ?c ?c) ) (not (not (in_motion ?c) ) ) ) ) ) )
              (once (not (in ?o ?c) ) )
              (hold (and (in_motion ?o) ) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?o - hexagonal_bin ?b - blue_cube_block)
            (then
              (hold (forall (?b8 - wall) (in_motion ?b) ) )
              (once (agent_holds pink) )
              (once (on ?o ?b) )
            )
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?b1 - block)
        (then
          (hold (and (forall (?c4 - dodgeball) (in_motion desk) ) (agent_crouches ) ) )
          (once (not (not (not (and (on ?b1 ?b1) (agent_holds ?b1) ) ) ) ) )
          (hold-while (agent_holds ?b1) (not (agent_holds ?b1) ) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d ?b2 - chair ?c - pink_dodgeball)
        (then
          (once-measure (on ?c ?c) (x_position ?c) )
          (hold (and (broken west_wall) (touch agent ?c) (not (not (agent_holds ?c) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 3 300 )
)
(:scoring
  (* 1 6 (* (* (count cubeBlockInBuilding:pink) 6 )
      (* 0.7 (count cubeBlockInBuilding:yellow) )
    )
  )
)
)



(define (game game-id-109) (:domain many-objects-room-v1)
(:setup
  (exists (?g - dodgeball ?o4 - building)
    (game-conserved
      (forall (?d ?r - hexagonal_bin ?w - game_object)
        (and
          (and
            (agent_holds ?o4)
            (< (distance ?o4 ?o4) (distance door ?o4))
          )
          (adjacent ?w ?o4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?h - game_object)
        (then
          (hold (not (in_motion ?h) ) )
          (hold (< 1 (distance desk ?h)) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?ob - hexagonal_bin)
        (then
          (hold-while (and (and (in_motion ?ob) (or (in_motion ?ob) (and (on ?ob ?ob) (agent_holds agent) ) ) ) (in_motion ?ob) ) (forall (?h - dodgeball) (not (is_setup_object ?h) ) ) (agent_holds ?ob) (and (rug_color_under ?ob brown) (and (and (in_motion ?ob) (on ?ob ?ob) ) (and (and (not (and (in ?ob ?ob) (agent_holds ?ob) ) ) (and (> 2 (distance desk ?ob)) (and (same_type bed ?ob) (rug_color_under ?ob yellow) ) ) ) (not (not (not (object_orientation rug upright) ) ) ) ) (toggled_on ?ob) ) (in ?ob ?ob) ) )
          (once (on ?ob ?ob) )
          (once (adjacent ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (< (+ (count-once-per-external-objects throwBallToBin:rug) (* 10 (* (count throwBallToBin:beachball:basketball) (count beachballOnRug:pink_dodgeball:pyramid_block) 2 (count throwBallToBin:pink_dodgeball) (+ (count-once-per-objects throwBallToBin:golfball) (external-forall-maximize (count throwBallToBin:dodgeball) ) )
        )
      )
    )
    1
  )
)
(:scoring
  (- (external-forall-maximize (count-longest beachballOnRug:pink_dodgeball) ) )
)
)



(define (game game-id-110) (:domain many-objects-room-v1)
(:setup
  (forall (?s - hexagonal_bin ?g - (either yellow_cube_block doggie_bed hexagonal_bin mug))
    (and
      (exists (?h - (either bridge_block golfball) ?ob - triangular_ramp)
        (forall (?b - bridge_block ?g - chair)
          (game-conserved
            (agent_holds ?ob)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - wall)
      (and
        (preference ballThrownFromBehindBlock
          (exists (?d - beachball)
            (then
              (hold (and (not (between ?d ?d ?d) ) (> 2 (distance ?d ?d)) (agent_holds ?d) ) )
              (once (and (not (agent_holds agent) ) (touch ?d ?d) ) )
              (once (and (agent_holds ?d) (not (touch ?d agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count ballThrownFromBehindBlock:pyramid_block:blue_dodgeball) )
)
(:scoring
  (count-unique-positions ballThrownFromBehindBlock:dodgeball)
)
)



(define (game game-id-111) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - (either lamp cylindrical_block ball))
    (and
      (and
        (game-optional
          (on ?c1 ?c1)
        )
      )
      (exists (?z ?z0 - front ?bl - curved_wooden_ramp)
        (exists (?y - (either sideways sideways))
          (and
            (and
              (game-optional
                (and
                  (agent_holds ?bl)
                  (adjacent_side ?c1 back ?c1 left)
                )
              )
            )
            (game-optional
              (agent_holds ?c1)
            )
            (forall (?x ?x0 ?x1 - (either white color) ?t - pyramid_block)
              (game-conserved
                (exists (?f - dodgeball)
                  (exists (?z ?z0 - (either right left left))
                    (agent_holds ?bl)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (< (distance room_center ?c1) 3)
          (not
            (and
              (exists (?h - hexagonal_bin ?o - wall)
                (in_motion floor)
              )
              (agent_holds ?c1)
            )
          )
          (and
            (and
              (and
                (agent_holds rug)
                (adjacent room_center ?c1)
              )
              (on ?c1 ?c1)
              (and
                (agent_holds ?c1)
                (adjacent bed ?c1)
                (rug_color_under ?c1 purple)
              )
              (in ?c1 agent)
              (and
                (not
                  (and
                    (in agent ?c1)
                    (on ?c1 floor)
                  )
                )
                (not
                  (on ?c1 ?c1)
                )
              )
              (and
                (on ?c1 ?c1)
                (and
                  (agent_holds ?c1)
                  (and
                    (in_motion ?c1)
                    (not
                      (< 3 8)
                    )
                  )
                  (not
                    (and
                      (< (distance ?c1 ?c1) 1)
                      (and
                        (in_motion ?c1)
                        (in_motion ?c1)
                      )
                    )
                  )
                )
              )
              (on rug ?c1)
            )
            (on ?c1 ?c1)
          )
        )
      )
      (game-conserved
        (not
          (in_motion ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?d - block ?d - ball)
        (then
          (once (and (not (and (not (in ?d ?d) ) (agent_holds agent) (not (and (and (in_motion ?d) (agent_holds ?d) ) ) ) (adjacent_side ?d back ?d) (in_motion ?d) (and (and (not (and (and (agent_holds ?d) (not (forall (?g - dodgeball) (touch ?g ?d) ) ) ) (not (not (agent_holds blue) ) ) ) ) (and (not (exists (?p - cube_block) (agent_holds desk) ) ) (not (and (on ?d desktop) (> (distance ?d agent) (distance ?d ?d)) ) ) ) ) (adjacent_side room_center back ?d) ) ) ) (on ?d ?d) ) )
          (once (not (not (agent_holds ?d) ) ) )
          (once (adjacent_side bed front_left_corner ?d) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?b2 - dodgeball)
        (at-end
          (in ?b2 ?b2)
        )
      )
    )
  )
)
(:terminal
  (and
    (< (* (count blockFromRugToDesk:golfball) (count blockFromRugToDesk:pink_dodgeball:yellow) 2 (count smallObjectThrownToBed:pink) (* 10 (count blockFromRugToDesk:golfball) )
      )
      4
    )
    (>= 2 10 )
  )
)
(:scoring
  (* (count smallObjectThrownToBed:doggie_bed) 7 )
)
)



(define (game game-id-112) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - (either cd dodgeball dodgeball))
    (game-conserved
      (in_motion ?o2)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (touch ?d ?d) (agent_holds floor) ) )
          (once (adjacent ?d ?d) )
          (once (in ?d ?d) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?p - pink_dodgeball)
        (then
          (once (agent_holds ?p) )
          (hold-while (on ?p ?p) (agent_holds ?p) )
          (hold-while (and (and (agent_holds ?p) (is_setup_object ?p) ) (adjacent ?p ?p) ) (agent_holds ?p) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 10 )
)
(:scoring
  (count-once cubeBlockThrowAttempt:golfball)
)
)



(define (game game-id-113) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b5 - (either tall_cylindrical_block game_object))
      (exists (?b - hexagonal_bin)
        (and
          (game-optional
            (and
              (= (distance room_center ?b) 1)
              (agent_holds ?b)
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (exists (?p2 - dodgeball ?h - curved_wooden_ramp ?d - block)
        (exists (?h - hexagonal_bin ?b7 - building ?b - building)
          (or
            (and
              (game-conserved
                (touch ?d ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?b - building ?d - pyramid_block)
        (then
          (hold (and (agent_holds ?d) (agent_holds ?d) ) )
          (once (in ?d ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count throwAttemptFromBehindBlock:block) 2 )
    (count throwAttemptFromBehindBlock:dodgeball)
  )
)
(:scoring
  (count-once throwAttemptFromBehindBlock:pink_dodgeball)
)
)



(define (game game-id-114) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - dodgeball)
    (and
      (not
        (game-optional
          (not
            (and
              (in_motion ?o)
              (not
                (in ?o ?o)
              )
              (and
                (on ?o ?o)
                (in ?o ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?b - curved_wooden_ramp)
        (then
          (hold (< 1 (distance_side desk right ?b)) )
          (once-measure (on ?b rug) (distance ?b ?b) )
          (hold (agent_holds rug) )
          (once (touch ?b bed) )
        )
      )
    )
    (preference blindsOpened
      (exists (?t1 ?c - (either yellow_cube_block doggie_bed))
        (then
          (hold (agent_holds ?c) )
          (hold-while (and (and (not (in_motion ?c) ) (is_setup_object ?c) (= 5 1) (on ?c ?c) (in_motion ?t1) (and (on ?c ?c) (not (and (exists (?d1 - (either game_object dodgeball)) (on ?d1 ?t1) ) (in_motion ?c) ) ) ) ) (in_motion ?c) ) (agent_holds ?c) )
          (once (adjacent ?c ?c) )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?b3 - curved_wooden_ramp ?h ?o - block)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (forall (?b4 - doggie_bed)
      (and
        (preference ballNeverThrown
          (exists (?b ?r - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions ballNeverThrown:pink:beachball) (count-once-per-objects ballNeverThrown:dodgeball:dodgeball) )
)
(:scoring
  (count-once-per-external-objects golfballInBinFromPillow:book:dodgeball)
)
)



(define (game game-id-115) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either bridge_block cellphone tall_cylindrical_block))
    (or
      (exists (?h - (either cd))
        (forall (?b - desk_shelf)
          (game-conserved
            (and
              (not
                (and
                  (in_motion ?h)
                  (exists (?b - ball)
                    (not
                      (not
                        (agent_holds ?b)
                      )
                    )
                  )
                )
              )
              (on ?b ?h)
            )
          )
        )
      )
      (game-optional
        (not
          (and
            (on ?b ?b)
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?c - hexagonal_bin ?b - hexagonal_bin ?b6 - drawer)
        (then
          (hold (touch ?b6 agent) )
          (hold-while (touch ?b6 ?b6) (in_motion ?b6) )
          (once (in_motion ?b6) )
        )
      )
    )
  )
)
(:terminal
  (>= (<= (* (count bigObjectThrownToBed:hexagonal_bin) 5 )
      6
    )
    5
  )
)
(:scoring
  (count bigObjectThrownToBed:orange)
)
)



(define (game game-id-116) (:domain medium-objects-room-v1)
(:setup
  (forall (?t ?h - dodgeball)
    (game-conserved
      (agent_holds ?t)
    )
  )
)
(:constraints
  (and
    (forall (?d - ball ?y ?y0 ?y1 - (either upside_down))
      (and
        (preference thrownBallHitsBlock
          (exists (?b - building ?o ?l2 - game_object)
            (then
              (once (in_motion agent) )
              (once (in_motion ?o) )
              (once (same_color ?l2 ?l2) )
              (hold (adjacent ?l2 ?d) )
            )
          )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?d - hexagonal_bin ?b - pillow)
        (then
          (once (or (on agent ?b) (and (in_motion ?b) (agent_holds ?b) ) (in_motion ?b) ) )
          (once (not (and (touch ?b ?b) (on ?b ?b) ) ) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects throwFromDoorToBin:basketball) )
)
(:scoring
  (count-once-per-objects thrownBallHitsBlock:hexagonal_bin)
)
)



(define (game game-id-117) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?ob - dodgeball)
      (and
        (game-conserved
          (rug_color_under agent light_blue)
        )
      )
    )
    (game-conserved
      (not
        (exists (?w - chair)
          (not
            (in_motion ?w)
          )
        )
      )
    )
    (forall (?h - (either book side_table book))
      (game-conserved
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b - dodgeball)
        (then
          (hold (not (and (not (> (distance desk ?b) (distance ?b ?b)) ) (on ?b ?b) (not (and (in_motion ?b) (on ?b ?b) ) ) (rug_color_under ?b orange) ) ) )
          (once (in ?b ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 5 )
)
(:scoring
  (external-forall-maximize
    (* (- 6 3 ) 20 )
  )
)
)



(define (game game-id-118) (:domain medium-objects-room-v1)
(:setup
  (and
    (not
      (forall (?h - ball ?r - hexagonal_bin)
        (and
          (game-conserved
            (and
              (in_motion ?r)
              (and
                (agent_holds agent)
                (and
                  (and
                    (equal_x_position room_center ?r)
                    (not
                      (in ?r ?r)
                    )
                  )
                )
              )
            )
          )
          (forall (?t2 - cube_block ?o - teddy_bear)
            (and
              (exists (?h - golfball)
                (and
                  (forall (?db - hexagonal_bin ?o - teddy_bear ?p - dodgeball)
                    (game-optional
                      (and
                        (agent_holds desk)
                        (adjacent door ?p)
                        (not
                          (and
                            (not
                              (above ?h ?o)
                            )
                            (and
                              (not
                                (not
                                  (and
                                    (or
                                      (< 2 9)
                                      (= 5 (distance_side desk back ?r))
                                    )
                                    (and
                                      (in_motion ?r)
                                      (in ?h agent)
                                      (in_motion ?r)
                                      (not
                                        (exists (?h - hexagonal_bin)
                                          (agent_holds ?o)
                                        )
                                      )
                                    )
                                    (in_motion ?r)
                                  )
                                )
                              )
                              (touch ?h ?o)
                            )
                          )
                        )
                        (and
                          (> (distance_side room_center front ?r) (distance ?h ?h))
                          (> (distance ?r ?r) 3)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - dodgeball)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?c1 ?f - ball)
            (then
              (once (agent_holds ?c1) )
              (once (and (in_motion desk) (exists (?p - hexagonal_bin) (in ?o5 ?f) ) (not (on bed ?o5) ) (agent_holds ?f) ) )
              (hold (and (agent_holds bed) (exists (?l - sliding_door ?c4 - chair) (in_motion ?o5) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count tanObjectMovedToRoomCenter:beachball) 5 )
    (total-score)
  )
)
(:scoring
  (external-forall-maximize
    (* (count-once-per-objects tanObjectMovedToRoomCenter:yellow:hexagonal_bin) (* 2 2 )
    )
  )
)
)



(define (game game-id-119) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent desk agent)
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?s - doggie_bed ?tb - (either tall_cylindrical_block dodgeball))
        (then
          (once (object_orientation ?tb upright) )
          (once (touch ?tb ?tb) )
          (once (not (< (distance desk ?tb) (distance room_center ?tb)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (<= (+ 10 (* (* (count-overlapping blockPickedUp:basketball) 2 )
          (count blockPickedUp:pink)
        )
        (* 3 3 (- (count-once-per-objects blockPickedUp:golfball) (count blockPickedUp:yellow:dodgeball) ) (+ 10 5 (count-once-per-objects blockPickedUp) 6 (+ (* (count blockPickedUp:basketball) 10 (count blockPickedUp:dodgeball) )
              3
            )
            10
          )
          (+ (external-forall-maximize (count-once-per-objects blockPickedUp:dodgeball) ) (* (count blockPickedUp:pink) 30 (count blockPickedUp:pink:cylindrical_block) 6 (+ 5 (count-once blockPickedUp:purple) )
              (count blockPickedUp:basketball:pink_dodgeball)
              (+ 2 5 )
            )
          )
        )
      )
      (count blockPickedUp:basketball)
    )
  )
)
(:scoring
  (external-forall-minimize
    (+ (count-once-per-external-objects blockPickedUp:golfball) 1 )
  )
)
)



(define (game game-id-120) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (game-optional
      (and
        (between ?o ?o agent)
        (and
          (not
            (not
              (touch ?o ?o)
            )
          )
          (and
            (agent_holds rug)
            (and
              (exists (?c - (either golfball tall_cylindrical_block))
                (game_over )
              )
              (on ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - game_object)
        (then
          (once (agent_holds ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?s - hexagonal_bin)
        (then
          (once (same_color ?s ?s) )
          (once (same_object ?s ?s) )
          (once (in_motion ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 15 )
)
(:scoring
  (* (count-once-per-objects blockPlacedInBuilding:yellow_pyramid_block) (+ 20 (* (* (count woodenBlockMovedFromRugToDesk:rug) 5 )
        20
      )
    )
  )
)
)



(define (game game-id-121) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - block ?l4 - building ?x - purple)
    (exists (?b ?o ?d ?h - golfball)
      (game-conserved
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference failedThrowAttempt
          (then
            (hold (not (in_motion ?b) ) )
            (once (in_motion ?b) )
            (once (or (faces ?b ?b) (adjacent ?b ?b) ) )
            (hold (and (forall (?c - block) (not (on ?c ?b) ) ) (and (and (and (object_orientation floor upright) (and (and (adjacent_side ?b front_left_corner ?b) (not (agent_holds ?b) ) ) (in_motion ?b) ) ) (in_motion ?b) ) (game_start ) ) ) )
          )
        )
        (preference golfballInBinFromPillow
          (exists (?b8 - curved_wooden_ramp ?y ?y0 - sideways)
            (then
              (hold (and (in_motion ?b) (in_motion ?b8) ) )
              (hold (open ?b8) )
              (hold (not (touch ?b8 ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-shortest failedThrowAttempt:blue_dodgeball) (- 10 )
  )
)
(:scoring
  (* (count golfballInBinFromPillow:dodgeball) 3 )
)
)



(define (game game-id-122) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b2 - game_object)
      (and
        (and
          (game-conserved
            (and
              (not
                (> 1 (distance ?b2 ?b2))
              )
              (or
                (on ?b2 ?b2)
                (not
                  (< 1 9)
                )
                (in_motion ?b2)
                (< (distance ?b2 ?b2) (distance ?b2 ?b2))
                (not
                  (in ?b2 ?b2)
                )
              )
            )
          )
          (and
            (exists (?c - curved_wooden_ramp)
              (exists (?l - building)
                (exists (?b10 - block)
                  (forall (?d - ball ?w2 - (either alarm_clock cube_block blue_cube_block))
                    (and
                      (game-conserved
                        (on ?c ?b2)
                      )
                    )
                  )
                )
              )
            )
            (not
              (exists (?y - (either diagonal diagonal sideways) ?h - building ?p - curved_wooden_ramp ?l2 - cube_block)
                (and
                  (forall (?h - (either hexagonal_bin desktop pillow))
                    (and
                      (exists (?c ?l1 ?p - hexagonal_bin)
                        (not
                          (and
                            (exists (?tb - hexagonal_bin ?x - light_blue)
                              (and
                                (game-optional
                                  (on ?tb ?tb)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (touch ?l2 ?b2)
                  )
                  (game-conserved
                    (exists (?d - pillow ?b - hexagonal_bin)
                      (and
                        (or
                          (in_motion ?b)
                          (and
                            (and
                              (exists (?w - triangular_ramp ?l3 - dodgeball)
                                (not
                                  (agent_holds ?b)
                                )
                              )
                              (exists (?b8 - ball)
                                (agent_holds pink)
                              )
                            )
                            (same_color ?l2 ?b2)
                          )
                          (on ?l2 ?b)
                        )
                        (on ?l2 ?l2)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?o - hexagonal_bin)
              (game-optional
                (not
                  (and
                    (< 1 2)
                    (and
                      (on ?b2 ?o)
                      (in_motion ?b2)
                    )
                    (or
                      (or
                        (< 1 (distance ?o ?o))
                        (not
                          (agent_holds ?b2)
                        )
                      )
                      (and
                        (not
                          (not
                            (above agent ?b2)
                          )
                        )
                        (not
                          (in_motion ?b2)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (and
                  (not
                    (agent_holds ?b2)
                  )
                  (not
                    (in_motion ?b2)
                  )
                  (not
                    (and
                      (agent_holds ?b2)
                      (not
                        (rug_color_under ?b2 pink)
                      )
                    )
                  )
                )
                (not
                  (agent_holds ?b2)
                )
              )
            )
            (game-conserved
              (< (distance ?b2 ?b2) 3)
            )
          )
        )
        (and
          (and
            (game-optional
              (not
                (agent_holds ?b2)
              )
            )
          )
          (game-optional
            (in_motion ?b2)
          )
        )
        (game-conserved
          (not
            (not
              (agent_holds floor)
            )
          )
        )
      )
    )
    (and
      (forall (?d - (either book pyramid_block) ?c - dodgeball)
        (game-optional
          (agent_holds ?c)
        )
      )
      (game-conserved
        (agent_holds agent)
      )
    )
    (game-optional
      (forall (?l2 - building)
        (and
          (or
            (agent_holds ?l2)
            (in_motion ?l2)
          )
          (in_motion ?l2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - hexagonal_bin ?g - (either alarm_clock block))
        (then
          (hold-while (on ?g ?g) (in ?g ?g) )
          (once (not (in_motion ?g) ) )
          (once (and (in rug ?g) (in_motion ?g) (not (< (x_position ?g) 8) ) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o - cube_block)
        (then
          (hold (touch ?o ?o) )
          (once (and (agent_crouches ) (not (in_motion rug) ) (on ?o ?o) (= 1 (distance room_center agent)) (same_type ?o ?o) (not (in_motion agent) ) (in_motion rug) (< 1 3) (and (on ?o ?o) (in ?o ?o) ) (and (and (and (agent_holds agent) (opposite ?o ?o) ) (not (adjacent bed ?o) ) ) (not (toggled_on ?o) ) (on ?o bed) ) ) )
          (hold (touch agent agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin:orange) )
)
(:scoring
  (count-once-per-external-objects ballThrownThroughRampAndBlocksToBin:cube_block)
)
)



(define (game game-id-123) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b8 - hexagonal_bin)
      (forall (?h - hexagonal_bin)
        (and
          (game-optional
            (and
              (game_start )
              (forall (?b - hexagonal_bin)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?bl - ball)
        (then
          (once (on agent ?bl) )
          (once (exists (?b8 ?b6 - block ?b7 - (either cylindrical_block mug)) (> (distance ?bl ?b7) 1) ) )
          (hold-while (agent_holds ?bl) (same_color ?bl ?bl) )
        )
      )
    )
  )
)
(:terminal
  (<= (count objectMoved:cube_block:dodgeball) (count objectMoved) )
)
(:scoring
  (* (count objectMoved:pink:basketball) (* 3 )
  )
)
)



(define (game game-id-124) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - shelf ?o - (either dodgeball golfball))
    (forall (?c - pyramid_block ?d - (either dodgeball))
      (forall (?o3 - (either doggie_bed pyramid_block) ?c1 - bridge_block)
        (exists (?h - wall)
          (and
            (and
              (exists (?c - hexagonal_bin)
                (game-conserved
                  (touch ?d agent)
                )
              )
              (game-conserved
                (agent_holds ?h)
              )
              (game-conserved
                (< (distance_side ?c1 front ?o right) (distance_side ?h right ?d))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b1 - curved_wooden_ramp)
        (then
          (once (touch ?b1 ?b1) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count throwKnocksOverBear:blue_dodgeball:blue_pyramid_block) )
)
(:scoring
  (count-once-per-objects throwKnocksOverBear:beachball)
)
)



(define (game game-id-125) (:domain medium-objects-room-v1)
(:setup
  (exists (?p1 ?c1 ?h - building)
    (game-optional
      (and
        (agent_holds ?c1)
        (< 2 (distance desk ?p1))
        (< 1 1)
        (< 6 (distance door ?p1))
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d - (either game_object doggie_bed hexagonal_bin) ?b - hexagonal_bin)
        (then
          (once (in ?b floor) )
          (once (adjacent_side south_wall right ?b) )
          (once (< 9 (distance west_wall ?b)) )
        )
      )
    )
    (forall (?b - building)
      (and
        (preference throwInBin
          (exists (?b - dodgeball)
            (then
              (once (agent_crouches ) )
              (once (< 1 3) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?l1 ?l ?tb - game_object)
        (then
          (once (and (agent_holds agent) (< (distance desk ?l1) 0.5) ) )
          (once-measure (and (and (not (or (in_motion desk) (not (not (and (not (between ?l ?tb ?l) ) (agent_holds ?l1) ) ) ) (forall (?b - hexagonal_bin ?y ?y0 ?y1 - diagonal) (and (in_motion ?l1) (not (not (and (in ?l1 ?b) (exists (?b - cube_block ?o - building) (and (not (in ?b ?b) ) (and (in_motion agent) (in_motion ?l1) ) (not (and (on ?tb desk) (in_motion ?b) ) ) ) ) ) ) ) ) ) ) ) (agent_holds ?l) ) (exists (?b - block ?b1 - hexagonal_bin) (in_motion ?b1) ) ) (distance ?l ?tb) )
          (hold (on ?l1 ?tb) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?c - ball)
        (then
          (hold (not (and (not (on agent ?c) ) (and (and (and (not (in_motion ?c) ) (and (and (on ?c ?c) (not (< (distance desk ?c) (distance room_center ?c)) ) ) (on ?c ?c) ) ) (and (> 1 1) (and (not (and (not (and (agent_holds ?c) (and (agent_holds ?c) (not (adjacent ?c ?c) ) ) (in_motion ?c) ) ) (in_motion ?c) ) ) (and (<= (distance desk ?c) 1) (and (on ?c ?c) (not (= (distance ?c ?c) (distance ?c ?c)) ) ) ) (and (and (not (on desk ?c) ) (in_motion ?c) (in_motion ?c) (on ?c ?c) ) (in ?c ?c) ) ) ) (and (not (not (not (and (in_motion ?c) (on ?c ?c) ) ) ) ) (in_motion ?c) ) ) (and (exists (?c - teddy_bear) (on ?c ?c) ) (agent_holds ?c) ) (not (in_motion ?c) ) ) (and (in_motion ?c) (adjacent_side east_sliding_door left ?c) ) ) ) )
          (once (in ?c ?c) )
          (once (< 7 (distance ?c ?c)) )
        )
      )
    )
    (preference objectMoved
      (exists (?o ?h ?h - bridge_block)
        (at-end
          (in_motion bed)
        )
      )
    )
  )
)
(:terminal
  (>= (- (+ (count-once-per-objects objectMoved:yellow) 9 )
    )
    (count-longest blockFromRugToDesk:blue_pyramid_block)
  )
)
(:scoring
  (* 3 3 )
)
)



(define (game game-id-126) (:domain few-objects-room-v1)
(:setup
  (exists (?o - game_object)
    (and
      (and
        (exists (?db - (either key_chain cube_block) ?db - doggie_bed)
          (game-conserved
            (on ?o rug)
          )
        )
      )
      (or
        (and
          (and
            (exists (?b - blue_cube_block ?h - hexagonal_bin)
              (game-conserved
                (agent_crouches )
              )
            )
          )
        )
        (game-conserved
          (exists (?c - (either blue_cube_block dodgeball) ?d - (either dodgeball ball) ?x - blue)
            (in ?o bed)
          )
        )
      )
      (game-optional
        (in agent ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?h - hexagonal_bin ?r - pillow)
            (then
              (once (agent_holds ?r) )
              (hold (agent_holds ?r) )
              (once (on ?r ?r) )
            )
          )
        )
        (preference throwInBin
          (exists (?c - hexagonal_bin ?t2 - (either book dodgeball book triangle_block cube_block golfball alarm_clock))
            (then
              (once (not (not (< (distance bed ?h) (distance_side ?h front_left_corner ?h)) ) ) )
              (hold-while (same_color ?t2 ?h) (not (not (exists (?ob - chair) (in_motion ?ob) ) ) ) )
              (once (on ?t2 ?h) )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?t - hexagonal_bin)
            (then
              (hold (in ?t ?t) )
              (once (on ?h ?h) )
              (hold (and (and (not (in ?t ?t) ) (exists (?b - hexagonal_bin) (in ?t ?h) ) ) ) )
            )
          )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?ob - (either teddy_bear alarm_clock))
        (then
          (hold (< (distance bed ?ob) 1) )
          (once (not (not (not (touch desk ?ob) ) ) ) )
          (hold (between green_golfball ?ob ?ob) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?d1 - hexagonal_bin)
        (then
          (once (and (and (in_motion ?d1) (not (adjacent bed ?d1) ) ) (and (agent_holds ?d1) (above side_table ?d1) ) ) )
          (once (in_motion ?d1) )
          (hold-while (not (and (in_motion ?d1) (exists (?b3 - hexagonal_bin) (not (or (not (agent_holds bed) ) (or (on ?d1 ?b3) (above ?b3 ?d1) ) ) ) ) ) ) (agent_holds ?d1) )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (count throwInBin:yellow) )
)
(:scoring
  (count-shortest failedThrowToBin:beachball:dodgeball:blue_dodgeball)
)
)



(define (game game-id-127) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - ball)
    (and
      (game-optional
        (agent_holds ?p)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d1 - dodgeball ?w1 - block ?d ?r2 - hexagonal_bin)
      (and
        (preference throwToDrawerOrBin
          (exists (?c - (either tall_cylindrical_block ball dodgeball doggie_bed book bed yellow_cube_block))
            (at-end
              (open ?d)
            )
          )
        )
      )
    )
    (forall (?c - game_object ?t - hexagonal_bin)
      (and
        (preference ballThrownToRug
          (exists (?h ?b4 ?b ?f ?c ?l - red_dodgeball ?b2 - dodgeball ?b - hexagonal_bin ?h - shelf ?c3 ?h ?l - hexagonal_bin)
            (then
              (once (and (broken ?t) (and (on ?t ?l) (= (distance desk ?c3) (distance bed agent)) ) ) )
              (once (and (agent_holds ?c3) (exists (?c2 - beachball ?o - dodgeball) (in_motion ?l) ) (same_type ?t ball) (on agent ?l) ) )
              (hold (in_motion rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest throwToDrawerOrBin:alarm_clock) (count throwToDrawerOrBin:beachball) )
)
(:scoring
  (+ 4 (count ballThrownToRug:orange:blue) 10 )
)
)



(define (game game-id-128) (:domain many-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (game-conserved
      (in_motion ?l)
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?l - (either dodgeball))
        (then
          (once (in_motion west_wall) )
          (hold (opposite ?l ?l) )
          (once (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (count failedThrowAttempt:dodgeball:yellow_pyramid_block) 1 )
)
(:scoring
  (+ (count failedThrowAttempt) (count-once-per-objects failedThrowAttempt:pink_dodgeball) 5 )
)
)



(define (game game-id-129) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?r - teddy_bear)
    (forall (?w1 - hexagonal_bin)
      (exists (?x - yellow ?h ?h - teddy_bear)
        (not
          (forall (?o2 - cube_block)
            (forall (?f - block ?w2 ?tb ?h ?c ?tb ?d - hexagonal_bin)
              (forall (?h - dodgeball ?o4 - ball)
                (forall (?o4 - block ?b5 - ball)
                  (and
                    (game-conserved
                      (and
                        (same_object ?w1 ?d)
                        (in_motion ?w1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?d - building ?c - block)
        (then
          (once (opposite ?c ?c) )
          (once (in ?c ?c) )
          (once (not (and (equal_z_position desk ?c) (< 1 4) ) ) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?p2 - building ?l2 - (either pillow cube_block) ?b - (either book desktop))
        (then
          (hold (and (agent_holds ?b) (agent_holds ?b) ) )
          (once (same_type ?b block) )
          (hold (agent_holds ?b) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?bl - (either cylindrical_block dodgeball) ?b - pillow ?c1 - doggie_bed)
        (then
          (hold (on ?c1 ?c1) )
          (once (and (opposite ?c1 bed) (agent_holds ?c1) ) )
          (once (agent_holds ?c1) )
        )
      )
    )
  )
)
(:terminal
  (< 2 10 )
)
(:scoring
  (count-once-per-objects ballThrownOntoTarget:dodgeball:blue)
)
)



(define (game game-id-130) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (and
        (exists (?p2 - building ?s - dodgeball)
          (in_motion ?s)
        )
        (forall (?t - (either pyramid_block key_chain) ?x - pink)
          (in ?t top_shelf)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?ob - chair)
        (at-end
          (in_motion ?ob)
        )
      )
    )
    (forall (?h - triangular_ramp)
      (and
        (preference thrownObjectHitsComputer
          (exists (?c4 - game_object ?b7 - pillow)
            (then
              (hold (in ?b7 ?h) )
              (once (not (open ?b7) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-score) )
)
(:scoring
  (count-once-per-objects objectMoved:cube_block:green)
)
)



(define (game game-id-131) (:domain few-objects-room-v1)
(:setup
  (exists (?t - desk_shelf)
    (game-conserved
      (and
        (touch ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - game_object)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?h - curved_wooden_ramp)
            (then
              (once (and (adjacent door ?p) (exists (?h - curved_wooden_ramp) (on ?p ?h) ) (<= (distance ?p ?p) (distance desk ?h)) ) )
              (once (agent_holds ?h) )
              (once (not (agent_holds ?p) ) )
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?h - block)
            (then
              (hold (agent_holds north_wall) )
              (hold (> (distance bed ?h) (distance_side ?h front ?p)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (* (<= 10 100 )
        (count throwBallToDoggieBedOffWall:block)
        6
      )
    )
    (or
      (>= (count-overlapping baseBlockInTowerAtEnd:basketball) (total-score) )
      (or
        (= 2 3 )
        (< 25 (count throwBallToDoggieBedOffWall:book) )
        (> (count-once-per-objects throwBallToDoggieBedOffWall:red) (total-score) )
      )
    )
  )
)
(:scoring
  (= (count-once throwBallToDoggieBedOffWall:beachball) 5 6 )
)
)



(define (game game-id-132) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?c - chair)
      (and
        (preference teddyBearLandsInBin
          (exists (?h - teddy_bear)
            (then
              (once (in_motion floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects teddyBearLandsInBin:pink:beachball) (* 15 (count-once-per-objects teddyBearLandsInBin:yellow) 1 )
  )
)
(:scoring
  (count-once-per-objects teddyBearLandsInBin:tan)
)
)



(define (game game-id-133) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either key_chain blue_cube_block))
    (exists (?b3 ?o - hexagonal_bin)
      (and
        (game-conserved
          (agent_holds bed)
        )
        (game-optional
          (in_motion ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference throwToDrawerOrBin
          (exists (?h - chair ?p - hexagonal_bin)
            (then
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?b5 - game_object)
        (at-end
          (agent_holds ?b5)
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (+ (count-once-per-objects throwToDrawerOrBin:blue) (* (count-once-per-objects ballToBinFromBed:dodgeball) (count-once ballToBinFromBed:blue_pyramid_block:golfball) )
      )
    )
    (count ballToBinFromBed:dodgeball)
  )
)
(:scoring
  (* (count-once throwToDrawerOrBin:hexagonal_bin) )
)
)



(define (game game-id-134) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - dodgeball ?h - cube_block)
      (exists (?c5 ?c1 - building ?p - desk_shelf)
        (exists (?b - hexagonal_bin ?b - (either key_chain hexagonal_bin tall_cylindrical_block book))
          (game-conserved
            (in_motion ?h)
          )
        )
      )
    )
    (exists (?y ?y0 ?y1 - (either upside_down upright) ?t2 - hexagonal_bin)
      (forall (?o - dodgeball ?c2 - game_object)
        (game-optional
          (not
            (game_over )
          )
        )
      )
    )
    (forall (?o2 - hexagonal_bin)
      (exists (?h - ball ?b2 - hexagonal_bin)
        (and
          (game-optional
            (not
              (not
                (on bed ?b2)
              )
            )
          )
          (and
            (exists (?h - ball)
              (exists (?l - dodgeball ?o3 - curved_wooden_ramp)
                (game-optional
                  (adjacent desk ?o2)
                )
              )
            )
          )
          (game-optional
            (in agent ?o2)
          )
          (forall (?l - (either beachball mug blue_cube_block) ?d - cylindrical_block ?s - hexagonal_bin ?f ?d ?b4 - (either doggie_bed))
            (and
              (game-optional
                (same_type ?b2 bridge_block)
              )
              (game-conserved
                (in_motion ?o2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - shelf ?l - (either golfball lamp pyramid_block) ?d ?o4 - (either blue_cube_block flat_block bridge_block))
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?o - (either floor book triangular_ramp))
            (then
              (once (on ?o ?o4) )
              (once (in_motion ?d) )
              (hold (and (and (object_orientation ?d sideways) (and (and (not (not (opposite ?d ?o) ) ) (in_motion ?d) ) (not (adjacent_side desk front ?o4 front) ) ) ) (or (and (agent_holds ?d) (adjacent ?o4 ?o) ) (and (not (and (in_motion ?o4) (toggled_on ?o) ) ) (not (in_motion ?d) ) (on ?o4 ?o4) (in_motion ?o) ) (agent_holds ?o) ) (and (in brown ?d) (and (and (same_color ?d agent) (agent_holds ?d) ) (in_motion ?d) ) ) ) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?b3 - hexagonal_bin)
            (at-end
              (not
                (and
                  (in_motion ?b3)
                  (broken ?d)
                )
              )
            )
          )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?b - ball)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-score) )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd:red)
)
)



(define (game game-id-135) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - (either bridge_block basketball))
    (and
      (game-conserved
        (agent_holds ?o2)
      )
      (exists (?b - shelf ?h - hexagonal_bin ?h - block)
        (and
          (exists (?b7 - hexagonal_bin ?tb - hexagonal_bin)
            (game-conserved
              (touch ?tb ?h)
            )
          )
        )
      )
      (and
        (forall (?d1 - (either golfball golfball))
          (game-conserved
            (not
              (agent_holds ?d1)
            )
          )
        )
        (game-optional
          (and
            (agent_holds ?o2)
            (and
              (not
                (on ?o2 ?o2)
              )
              (not
                (adjacent ?o2 ?o2)
              )
            )
          )
        )
        (not
          (game-optional
            (agent_holds ?o2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - cube_block ?w1 - dodgeball)
        (then
          (once (and (in_motion ?w1) (game_over ) (same_object ?w1 ?w1) (in ?w1 bed) ) )
          (once (not (< (distance desk ?w1) (distance desk ?w1)) ) )
          (once (not (and (not (and (not (agent_holds ?w1) ) (in_motion ?w1) ) ) (not (agent_holds ?w1) ) ) ) )
        )
      )
    )
    (forall (?ob - dodgeball)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?t - building)
            (then
              (once (and (on ?ob ?ob) ) )
              (once (not (not (agent_holds ?t) ) ) )
              (hold (= 4 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-time) )
)
(:scoring
  (* 6 (* (* (* (count cubeBlockFromBedToShelf:basketball:cube_block) (count objectToBinOnFirstTry:beachball) (* (* (count-same-positions objectToBinOnFirstTry:dodgeball) (- 3 )
            )
            (count cubeBlockFromBedToShelf:dodgeball:basketball:brown)
          )
          (count-overlapping objectToBinOnFirstTry:dodgeball)
          0.5
          (count objectToBinOnFirstTry:doggie_bed)
        )
        (>= 100 (* (count-once cubeBlockFromBedToShelf:green) (* 5 5 3 )
          )
        )
      )
      (count objectToBinOnFirstTry:dodgeball)
    )
  )
)
)



(define (game game-id-136) (:domain few-objects-room-v1)
(:setup
  (exists (?l3 ?b ?h - dodgeball ?h - red_dodgeball)
    (or
      (game-conserved
        (and
          (<= (distance desk ?h) 1)
          (not
            (and
              (not
                (agent_holds ?h)
              )
              (on ?h brown)
              (< (distance_side room_center right ?h) (distance ?h rug))
            )
          )
          (between ?h ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?c2 - building ?ob - (either chair doggie_bed) ?h - dodgeball)
        (then
          (once (< (distance door ?h) 1) )
          (hold (and (in ?h ?h) (not (in_motion ?h) ) (in_motion agent) ) )
          (hold (exists (?o - (either bridge_block game_object cylindrical_block hexagonal_bin)) (agent_holds ?h) ) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?s - hexagonal_bin)
        (at-end
          (on ?s ?s)
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (in_motion ?b) )
          (hold-while (and (not (and (in ?b rug) (game_over ) ) ) (and (and (opposite agent side_table) (touch ?b rug) (not (in_motion ?b) ) ) (and (or (in_motion ?b) (agent_holds ?b) (and (in_motion ?b) (< (distance ?b agent) (distance desk ?b)) ) (agent_holds agent) (in_motion ?b) ) (and (not (and (agent_holds rug) (in_motion ?b) ) ) (game_start ) ) ) (in agent agent) (and (exists (?h - doggie_bed ?o2 - chair) (object_orientation ?o2 diagonal) ) (not (on ?b ?b) ) ) ) ) (and (in_motion ?b) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (= (- 2 )
    (* (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) 20 )
  )
)
(:scoring
  (- (* (* (+ (count-measure ballThrownThroughRampAndBlocksToBin:cube_block) (count otherObjectsOnDeskShelf:yellow) (count-overlapping thrownBallReachesEnd:beachball) )
        (count-once-per-objects thrownBallReachesEnd:basketball)
      )
    )
  )
)
)



(define (game game-id-137) (:domain few-objects-room-v1)
(:setup
  (forall (?p - game_object ?b - block)
    (not
      (exists (?p - pillow ?o4 - game_object)
        (game-conserved
          (and
            (in_motion agent)
            (touch ?o4 ?b)
            (not
              (= (x_position ?b) (distance side_table ?o4))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - (either golfball) ?c6 - building)
        (then
          (once (not (and (not (adjacent room_center ?c6) ) (not (and (not (in_motion ?c6) ) (agent_holds ?c6) ) ) ) ) )
          (once (agent_holds ?c6) )
          (hold (not (and (and (not (between ?c6 ?c6 brown) ) (adjacent_side ?c6 front floor) (on ?c6 agent) ) (not (agent_holds ?c6) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 3 (count agentLeavesDogbedOrNoMoreBalls) )
    (* (count agentLeavesDogbedOrNoMoreBalls:blue_dodgeball:alarm_clock:yellow) (count agentLeavesDogbedOrNoMoreBalls:yellow) )
  )
)
(:scoring
  (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:yellow_cube_block:wall)
)
)



(define (game game-id-138) (:domain medium-objects-room-v1)
(:setup
  (exists (?x ?x0 ?x1 - blue)
    (exists (?x ?x0 - tan ?d2 - block)
      (exists (?d - (either laptop beachball) ?w2 - pillow)
        (and
          (game-conserved
            (not
              (touch ?w2 rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?w1 - (either laptop alarm_clock))
        (then
          (once (and (toggled_on ?w1) (is_setup_object ?w1) ) )
          (once (agent_holds ?w1) )
          (once (in ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) 5 )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBinFromDesk:yellow)
)
)



(define (game game-id-139) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - building)
    (forall (?h - hexagonal_bin ?b2 - red_dodgeball)
      (or
        (exists (?b - hexagonal_bin ?d ?h ?o1 ?r - (either blue_cube_block wall))
          (and
            (game-conserved
              (in_motion ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - (either blue_cube_block cube_block) ?h - hexagonal_bin)
      (and
        (preference beachballOnRug
          (exists (?h - triangular_ramp)
            (then
              (hold (in_motion ?h) )
              (once (in ?h ?h) )
              (once (exists (?b2 - dodgeball) (between ?h ?h ?h) ) )
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?h - teddy_bear)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?h - ball)
        (then
          (once (exists (?c - hexagonal_bin) (on ?h ?c) ) )
          (hold (in ?h ?h) )
          (hold (adjacent_side ?h front ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 15 (count-once beachballOnRug:green) )
    (count blockPlacedInBuilding:purple)
  )
)
(:scoring
  (* (+ (count-once blockPlacedInBuilding:beachball) (+ (* (count beachballOnRug:pink_dodgeball) 10 )
        (count blockFromRugToDesk:basketball)
      )
      (* 2 (count blockPlacedInBuilding:red) 5 )
      (count blockPlacedInBuilding:rug)
      (* (count-once-per-objects beachballOnRug:basketball:purple) (count-once blockPlacedInBuilding:golfball) )
      1
    )
    10
  )
)
)



(define (game game-id-140) (:domain many-objects-room-v1)
(:setup
  (forall (?h - wall)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?g - cube_block)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?b - game_object)
            (then
              (once (not (and (and (in_motion agent) (not (in_motion ?b) ) ) (and (on ?g ?g) (in_motion ?g) ) ) ) )
              (once (and (on ?g ?b) (rug_color_under ?b red) ) )
              (hold (not (in_motion ?b) ) )
            )
          )
        )
        (preference throwAttemptFromDoor
          (then
            (once (and (not (adjacent ?g ?g) ) (and (agent_holds ?g) (in_motion ?g) ) ) )
            (once (and (not (in_motion ?g) ) (and (same_type ?g pillow) (agent_holds ?g) ) ) )
            (once (on ?g ?g) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 4 (* (count woodenBlockMovedFromRugToDesk:tall_cylindrical_block) 1 (count-once-per-objects woodenBlockMovedFromRugToDesk:pink_dodgeball) )
      )
    )
    (>= 15 (count-same-positions woodenBlockMovedFromRugToDesk:green:hexagonal_bin) )
  )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk:red)
)
)



(define (game game-id-141) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-optional
        (not
          (and
            (in_motion rug)
            (and
              (adjacent_side desk front_left_corner ?h)
              (and
                (in_motion ?h)
              )
              (adjacent_side ?h back ?h back)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin)
      (and
        (preference throwBallToDoggieBedOffWall
          (exists (?o - (either book chair))
            (then
              (hold (and (not (adjacent ?o ?w) ) (and (not (adjacent ?o ?w) ) (forall (?b4 - dodgeball ?h - shelf) (and (agent_holds ?o) ) ) ) ) )
              (hold (not (and (<= (distance door ?w) 7) (or (in ?w ?w) (< (x_position agent) (distance ?o ?w)) ) ) ) )
              (once (and (and (not (adjacent_side desk front ?o) ) (in_motion ?o) ) (in_motion ?o) ) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?o1 - (either hexagonal_bin floor) ?d - ball)
            (then
              (once (agent_holds ?d) )
              (hold (in_motion ?d) )
              (hold (above ?d ?w) )
            )
          )
        )
      )
    )
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - building ?b - building ?r - ball ?b - hexagonal_bin)
        (then
          (hold (not (in_motion ?b) ) )
          (once (in ?b ?b) )
          (once (in_motion floor) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (/ (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:book:red) (+ 1 (count thrownBallReachesEnd:golfball) )
      )
      100
    )
    5
  )
)
(:scoring
  (count-once throwBallToDoggieBedOffWall:cube_block)
)
)



(define (game game-id-142) (:domain few-objects-room-v1)
(:setup
  (exists (?r - wall ?d2 - curved_wooden_ramp)
    (forall (?o4 - building)
      (forall (?h ?p1 ?tb - pillow ?z - (either front front back))
        (or
          (game-conserved
            (opposite ?tb ?p1)
          )
          (or
            (forall (?b - game_object ?d - curved_wooden_ramp)
              (and
                (game-conserved
                  (> 10 (distance ?d ?o4))
                )
              )
            )
            (exists (?o - block)
              (game-conserved
                (agent_holds ?h)
              )
            )
            (and
              (exists (?tb - dodgeball)
                (game-conserved
                  (in_motion ?d2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?o - game_object ?d - (either cube_block key_chain))
            (then
              (once (and (rug_color_under ?d purple) (and (not (adjacent desk agent) ) (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?l - cube_block ?g - yellow_cube_block ?d - ball ?z ?z0 ?z1 - (either front_left_corner front right))
        (then
          (hold-while (agent_holds ?d) (< 1 (distance ?d ?d)) )
          (once (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball) )
)
(:scoring
  (count-overlapping dodgeballBouncesOnceToDoggieBed:blue_dodgeball)
)
)



(define (game game-id-143) (:domain many-objects-room-v1)
(:setup
  (exists (?h - building ?c6 - hexagonal_bin)
    (exists (?p - (either book cd) ?b - dodgeball)
      (forall (?b - hexagonal_bin)
        (exists (?o2 - hexagonal_bin)
          (and
            (forall (?w - (either floor blue_cube_block) ?g - (either pyramid_block cylindrical_block))
              (game-conserved
                (touch ?g ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?b - ball)
        (then
          (hold-while (not (adjacent rug ?b) ) (agent_holds ?b) )
          (hold (in_motion ?b) )
          (once (in ?b bed) )
          (once (in_motion agent) )
          (once (and (adjacent ?b ?b) (and (exists (?d - dodgeball ?c - block) (agent_holds ?b) ) (exists (?o - pink_dodgeball) (in_motion ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-score) )
)
(:scoring
  (count-overlapping teddyBearHitsBall:red)
)
)



(define (game game-id-144) (:domain many-objects-room-v1)
(:setup
  (exists (?s - dodgeball)
    (exists (?d - (either dodgeball key_chain) ?l - (either cd basketball))
      (and
        (forall (?d2 - ball ?t ?p ?o1 ?c ?l1 ?l3 - tan_cube_block ?h - hexagonal_bin)
          (and
            (game-conserved
              (and
                (forall (?l1 - drawer ?b - hexagonal_bin)
                  (in_motion ?s)
                )
                (agent_holds ?h)
              )
            )
          )
        )
        (and
          (game-optional
            (in_motion ?l)
          )
          (forall (?x ?x0 - red)
            (and
              (forall (?d - hexagonal_bin)
                (forall (?d2 - wall)
                  (exists (?d - hexagonal_bin ?c5 - hexagonal_bin)
                    (and
                      (or
                        (game-conserved
                          (not
                            (and
                              (and
                                (not
                                  (agent_holds ?d2)
                                )
                                (touch ?l ?s)
                              )
                              (and
                                (agent_holds ?s)
                                (in_motion ?s)
                              )
                            )
                          )
                        )
                        (game-conserved
                          (in ?d ?l)
                        )
                        (game-conserved
                          (and
                            (and
                              (in_motion ?l)
                            )
                            (agent_holds ?c5)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (agent_holds ?s)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?c - ball ?b - ball)
        (then
          (hold-while (and (exists (?o4 - tall_cylindrical_block ?h - dodgeball) (not (exists (?b - building) (agent_holds ?b) ) ) ) ) (not (< (distance ?b ?b) (distance desk agent)) ) )
          (hold-while (in_motion ?b) (not (not (and (not (agent_holds ?b) ) (rug_color_under ?b brown) ) ) ) )
          (once (< (distance door ?b) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-external-objects blockThrowAttempt:dodgeball) )
)
(:scoring
  (count-once-per-objects blockThrowAttempt:blue_cube_block:dodgeball)
)
)



(define (game game-id-145) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - ball)
    (exists (?d - ball)
      (game-optional
        (same_type ?ob pillow)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - red_dodgeball)
      (and
        (preference ballThrowAttempt
          (exists (?b - pillow ?y ?y0 - upside_down)
            (then
              (once (in_motion ?s) )
              (once (adjacent bed ?b) )
              (hold (toggled_on ?s) )
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?d - wall)
            (then
              (once (agent_holds ?d) )
              (hold (and (agent_holds ?s) (on ?d ?d) ) )
              (hold (not (and (not (on ?d ?d) ) (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?b - hexagonal_bin)
        (then
          (once (open top_drawer) )
          (hold (agent_holds ?b) )
          (once (not (and (adjacent ?b ?b) (open ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (total-time) (+ 20 2 )
  )
)
(:scoring
  (* 2 (count-once-per-objects teddyBearLandsInBin:basketball) )
)
)



(define (game game-id-146) (:domain many-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (forall (?p3 - hexagonal_bin)
      (and
        (forall (?b - building)
          (forall (?d - hexagonal_bin ?c2 - (either alarm_clock bridge_block pillow alarm_clock book laptop block) ?r - shelf)
            (and
              (game-optional
                (equal_x_position desk ?r)
              )
            )
          )
        )
        (and
          (game-conserved
            (in_motion ?p3)
          )
          (or
            (and
              (exists (?l ?b - (either dodgeball dodgeball game_object) ?d - (either key_chain laptop) ?c3 - (either block game_object cylindrical_block))
                (game-conserved
                  (on ?r ?c3)
                )
              )
              (forall (?x - gray ?w1 - ball ?r - curved_wooden_ramp ?b - red_dodgeball)
                (game-conserved
                  (not
                    (not
                      (or
                        (not
                          (in ?p3 ?b)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (and
                (not
                  (or
                    (and
                      (and
                        (on ?p3 ?r)
                        (> 4 (distance ?r ?r))
                      )
                      (and
                        (and
                          (and
                            (exists (?d - hexagonal_bin)
                              (same_color agent ?r)
                            )
                            (not
                              (adjacent room_center ?r)
                            )
                            (not
                              (and
                                (in ?r agent)
                                (agent_holds ?r)
                                (not
                                  (game_over )
                                )
                                (in_motion ?r)
                              )
                            )
                          )
                          (agent_holds ?r)
                        )
                        (not
                          (in_motion ?p3)
                        )
                        (in_motion ?r)
                      )
                    )
                    (and
                      (equal_x_position ?p3 agent)
                      (in ?p3 ?p3)
                    )
                  )
                )
                (not
                  (and
                    (and
                      (on ?r ?r)
                      (agent_holds agent)
                    )
                    (not
                      (in_motion side_table)
                    )
                  )
                )
                (on ?r agent)
              )
            )
            (forall (?b ?o - hexagonal_bin)
              (and
                (exists (?g - hexagonal_bin)
                  (forall (?b - hexagonal_bin ?r2 - chair)
                    (forall (?l - cylindrical_block)
                      (game-conserved
                        (agent_holds ?l)
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (not
                      (touch ?r blue)
                    )
                    (= (distance ?r ?b) 6)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b ?t - dodgeball)
        (then
          (hold (touch ?b rug) )
          (once (agent_holds ?b) )
          (hold (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (* 4 100 )
    )
    (<= (count dropAttempt:dodgeball) (count-once-per-external-objects dropAttempt:white) )
    (or
      (>= (total-time) (- (count-unique-positions dropAttempt:triangle_block) )
      )
      (>= (count dropAttempt:dodgeball) 5 )
    )
  )
)
(:scoring
  (* 7 (* (count-once-per-objects dropAttempt:blue_dodgeball) 8 )
    (+ (count dropAttempt:doggie_bed) (* (external-forall-maximize (count-once-per-objects dropAttempt:pink) ) (+ (count dropAttempt:dodgeball) (external-forall-minimize (count-once-per-objects dropAttempt:beachball:golfball:purple) ) )
      )
    )
    (count-once dropAttempt:red_pyramid_block)
    (+ 5 )
    (count-once-per-objects dropAttempt:beachball)
  )
)
)



(define (game game-id-147) (:domain many-objects-room-v1)
(:setup
  (exists (?c - chair)
    (forall (?h - pyramid_block)
      (and
        (forall (?w2 - hexagonal_bin)
          (and
            (and
              (game-optional
                (not
                  (not
                    (agent_holds ?w2)
                  )
                )
              )
              (game-optional
                (exists (?h - blue_cube_block ?f - building ?b3 - doggie_bed)
                  (not
                    (not
                      (< 1 1)
                    )
                  )
                )
              )
              (game-conserved
                (exists (?c3 ?c2 - ball)
                  (in ?c ?c2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - ball)
      (and
        (preference throwToBin
          (exists (?l - (either book))
            (at-end
              (not
                (and
                  (in ?bl ?l)
                  (not
                    (not
                      (in ?bl ?bl)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?b - (either laptop book))
        (then
          (once (not (not (in ?b ?b) ) ) )
          (once (same_color ?b ?b) )
          (once (not (exists (?b9 - (either pen curved_wooden_ramp)) (on ?b9 ?b9) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToBin:pink) (total-score) )
)
(:scoring
  (count-once-per-objects teddyBearHitsBall:beachball)
)
)



(define (game game-id-148) (:domain medium-objects-room-v1)
(:setup
  (exists (?o4 - hexagonal_bin ?c - beachball)
    (game-conserved
      (agent_holds floor)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?d - hexagonal_bin)
        (then
          (hold (in_motion ?d) )
          (once (not (not (agent_holds ?d) ) ) )
          (once (not (< (distance ?d ?d) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects ballThrownIntoTarget:dodgeball)
)
)



(define (game game-id-149) (:domain medium-objects-room-v1)
(:setup
  (exists (?y ?y0 - (either diagonal))
    (exists (?x ?x0 ?x1 - brown ?h - book)
      (and
        (exists (?d - teddy_bear ?o5 - hexagonal_bin)
          (game-optional
            (adjacent room_center ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?c ?d ?w ?f - game_object)
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects laptopAndBookInPlace:book) )
)
(:scoring
  (+ (count laptopAndBookInPlace:doggie_bed:basketball) (count laptopAndBookInPlace:basketball:golfball) )
)
)



(define (game game-id-150) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - (either cube_block pyramid_block wall bridge_block))
      (game-optional
        (on agent ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?c - cylindrical_block)
        (at-end
          (not
            (not
              (on desk ?c)
            )
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?o2 - hexagonal_bin)
        (then
          (once (not (and (in_motion bed) (adjacent room_center ?o2) ) ) )
          (once (in_motion ?o2) )
          (once (and (not (>= 3 1) ) (agent_holds ?o2) (and (agent_holds ?o2) (agent_holds ?o2) ) ) )
        )
      )
    )
    (forall (?b5 - wall)
      (and
        (preference ballToBinFromBed
          (then
            (once (on ?b5 ?b5) )
            (once (adjacent_side ?b5 back ?b5) )
            (once (and (game_over ) (not (on ?b5 ?b5) ) ) )
            (once (in_motion ?b5) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (total-score) )
)
(:scoring
  (* 5 (count ballToBinFromBed:basketball) )
)
)



(define (game game-id-151) (:domain medium-objects-room-v1)
(:setup
  (exists (?b6 - (either dodgeball blue_cube_block) ?b - ball)
    (game-optional
      (and
        (agent_holds ?b)
        (is_setup_object ?b)
        (and
          (adjacent room_center ?b)
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b1 - yellow_cube_block)
        (then
          (hold (and (in_motion ?b1) (not (and (and (in_motion ?b1) (and (touch ?b1 ?b1) (on ?b1 ?b1) ) (agent_holds ?b1) ) (and (not (agent_holds ?b1) ) (in_motion ?b1) ) ) ) ) )
          (once (not (exists (?r - curved_wooden_ramp) (not (forall (?h - (either cube_block yellow_cube_block)) (and (in_motion agent) (and (and (same_type ?b1 bridge_block) (not (and (agent_holds ?b1) (< 0 1) ) ) ) (in_motion ?b1) (and (not (in_motion ?r) ) (on ?b1 ?r) ) ) ) ) ) ) ) )
          (once (not (in_motion ?b1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-time) )
)
(:scoring
  (external-forall-minimize
    (* (* 10 3 )
      3
    )
  )
)
)



(define (game game-id-152) (:domain medium-objects-room-v1)
(:setup
  (exists (?w - curved_wooden_ramp ?r2 - triangular_ramp)
    (and
      (and
        (game-conserved
          (in_motion ?r2)
        )
        (and
          (game-optional
            (in_motion ?r2)
          )
        )
        (game-conserved
          (agent_holds ?r2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - sliding_door)
      (and
        (preference bookOnDeskShelf
          (exists (?g - hexagonal_bin)
            (then
              (hold (rug_color_under ?g brown) )
              (once-measure (not (not (adjacent room_center ?g) ) ) (distance room_center ?g) )
              (once (and (game_start ) (and (on bed ?c) (not (in_motion ?c) ) ) ) )
              (once (agent_holds ?c) )
              (once (not (in_motion ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (* (* (count-once-per-objects bookOnDeskShelf:green) 5 )
    )
  )
)
(:scoring
  (count bookOnDeskShelf:beachball)
)
)



(define (game game-id-153) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin)
      (and
        (and
          (not
            (game-conserved
              (on ?d ?d)
            )
          )
        )
        (forall (?d1 - hexagonal_bin)
          (game-optional
            (adjacent_side ?d back ?d1)
          )
        )
      )
    )
    (game-conserved
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?b ?o1 - curved_wooden_ramp ?c5 - shelf)
        (then
          (once (same_type ?c5 block) )
          (once (or (= (distance_side ?c5 front ?c5) 1) (touch ?c5 bed) ) )
          (once (and (not (in_motion ?c5) ) (agent_holds ?c5) ) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?b1 - ball ?b - teddy_bear)
        (at-end
          (exists (?f - triangular_ramp ?o3 - drawer)
            (not
              (on ?o3 ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (>= 5 (count-once-per-objects tanObjectMovedToRoomCenter:beachball) )
    4
  )
)
(:scoring
  (count-once-per-objects smallItemsInPlace:dodgeball)
)
)



(define (game game-id-154) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (game-optional
        (exists (?l4 - block ?d - game_object)
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?c3 - ball)
            (then
              (hold (not (not (< 1 5) ) ) )
              (once (adjacent_side bed left ?b) )
              (once (and (exists (?r - flat_block) (and (in_motion ?r) ) ) (not (touch ?b ?b) ) ) )
            )
          )
        )
      )
    )
    (forall (?h - game_object ?h - dodgeball ?h - teddy_bear)
      (and
        (preference throwObjectToBin
          (exists (?b3 - dodgeball)
            (then
              (once (and (in_motion ?h) (on ?h ?b3) ) )
              (once (in_motion ?b3) )
              (once (in ?h ?b3) )
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?b5 - (either blue_cube_block hexagonal_bin) ?d - hexagonal_bin)
        (then
          (once-measure (or (opposite ?d ?d) (in_motion ?d) ) (distance ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (< (* (count-same-positions throwObjectToBin:green:dodgeball) 2 )
    (count-once-per-objects throwObjectToBin:beachball)
  )
)
(:scoring
  (* (+ (count-overlapping objectThrownFromRug:doggie_bed) 2 (count objectThrownFromRug:green) )
  )
)
)



(define (game game-id-155) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?db - dodgeball)
        (then
          (once (on ?db ?db) )
          (once (< 1 1) )
          (hold (touch ?db ?db) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (total-time) )
  )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:yellow)
)
)



(define (game game-id-156) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c2 - (either pencil key_chain dodgeball triangle_block))
      (forall (?d2 - chair)
        (and
          (exists (?l2 - dodgeball)
            (game-conserved
              (on ?l2 bed)
            )
          )
          (game-optional
            (agent_holds ?d2)
          )
          (and
            (game-conserved
              (and
                (and
                  (and
                    (not
                      (exists (?w - (either laptop book))
                        (agent_holds ?c2)
                      )
                    )
                    (and
                      (< (distance ?d2 ?d2) (distance desk floor))
                      (agent_holds ?c2)
                    )
                    (not
                      (> 1 (distance desk agent))
                    )
                  )
                  (is_setup_object ?c2)
                )
                (and
                  (in_motion ?c2)
                  (exists (?w - game_object)
                    (equal_x_position desk ?c2)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c4 - cube_block ?d - game_object)
        (at-end
          (not
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (< (* 3 (count-once-per-objects blockInTowerAtEnd:wall) )
    7
  )
)
(:scoring
  (* 5 (+ 2 (= (count blockInTowerAtEnd:purple) (count-once blockInTowerAtEnd:top_drawer:alarm_clock) )
    )
  )
)
)



(define (game game-id-157) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - game_object)
    (forall (?h - desk_shelf)
      (game-optional
        (and
          (on ?t ?t)
          (in ?h ?t)
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - curved_wooden_ramp ?h - (either blue_cube_block book) ?t1 - hexagonal_bin ?c ?o - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?d - triangular_ramp ?d - dodgeball)
            (then
              (once (exists (?c6 - hexagonal_bin) (object_orientation ?c6 diagonal) ) )
              (once (and (agent_holds ?c) (on ?d ?o) ) )
              (once (on ?d ?c) )
            )
          )
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?t - hexagonal_bin)
        (then
          (hold (agent_holds ?t) )
          (once (< 1 1) )
          (once (and (adjacent ?t ?t) (not (and (not (agent_holds ?t) ) ) ) ) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?r - game_object)
        (then
          (once (not (or (and (agent_holds ?r) (not (not (and (on ?r blue) (and (agent_holds desk) (on ?r ?r) ) ) ) ) (and (or (in_motion ?r) (not (not (adjacent ?r ?r) ) ) (adjacent desk ?r) ) (in ?r ?r) ) ) (not (not (and (game_start ) (agent_holds ?r) ) ) ) (and (in pink side_table) ) ) ) )
          (hold (agent_holds agent) )
          (once (not (< (building_size ?r) 3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ 3 (count throwKnocksBlock:yellow) )
  )
)
(:scoring
  (count-once objectOnBed:blue_dodgeball)
)
)



(define (game game-id-158) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (< 6 1)
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?o2 - ball ?r - doggie_bed)
        (then
          (once (on ?r ?r) )
          (once (in_motion ?r) )
          (hold (and (toggled_on agent) (not (not (in_motion ?r) ) ) ) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?tb ?b4 ?w2 ?r ?c ?b2 ?b ?h ?o ?c - block ?y - (either upright))
        (then
          (once (and (= (distance desk ?h) 9) (not (on ?c ?w2) ) ) )
          (once (and (and (not (agent_holds ?c) ) (and (agent_holds ?tb) (in ?b agent) (not (rug_color_under ?tb yellow) ) (in ?b2 ?b4) (in_motion ?b4) (and (in_motion ?b2) (agent_holds ?b2) ) (not (adjacent door ?c) ) (in ?o ?w2) ) ) (toggled_on ?b2) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (forall (?b - block ?l4 ?s ?b ?b4 - tall_cylindrical_block ?b - dodgeball)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?l1 - (either pyramid_block game_object pencil))
            (then
              (hold (and (not (in agent ?b) ) (> 1 (distance ?b bed)) ) )
              (once (in_motion ?b) )
              (hold (in_motion ?b) )
            )
          )
        )
        (preference pinkObjectMovedToRoomCenter
          (exists (?o5 - shelf)
            (then
              (hold (and (same_color ?b ?o5) (equal_z_position bed ?o5) (= (distance room_center agent) 9) ) )
              (once (touch ?o5 ?o5) )
              (once (or (not (and (not (in_motion ?o5) ) (on ?b ?b) ) ) ) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?c2 - (either yellow_cube_block cellphone pillow dodgeball curved_wooden_ramp))
            (then
              (once (in_motion ?b) )
              (once (agent_holds ?b) )
              (once (touch ?b ?c2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once objectThrownFromRug:pink) (count blockPlacedInBuilding:basketball) )
)
(:scoring
  (count objectThrownFromRug:beachball:dodgeball)
)
)



(define (game game-id-159) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - hexagonal_bin)
    (and
      (game-optional
        (same_color ?w1 ?w1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either chair book))
      (and
        (preference throwBallToBin
          (exists (?c1 - cube_block)
            (then
              (hold (in_motion bed) )
              (hold-while (agent_holds ?c1) (not (and (agent_crouches ) (and (not (and (exists (?b ?d1 - building ?b1 - building) (in ?b1 ?b1) ) (on ?c ?c) ) ) (in_motion ?c1) ) ) ) )
              (hold (and (above ?c ?c1) (touch agent ?c1) ) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?h - hexagonal_bin)
            (then
              (once (in ?c ?h) )
              (hold-while (not (> 5 (distance ?h ?h)) ) (or (agent_holds ?c) (in ?h ?h) (and (and (in_motion ?h) ) (game_start ) (forall (?b10 - cube_block ?c2 - cube_block) (above ?c ?c) ) ) ) )
              (once (opposite ?h ?h) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?p - hexagonal_bin ?x - blue)
        (then
          (hold (not (< 0.5 3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (+ (external-forall-maximize (count throwBallToBin:dodgeball) ) (count basketMadeFromRug:golfball) )
  )
)
(:scoring
  (count throwKnocksOverBear:dodgeball)
)
)



(define (game game-id-160) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - (either floor dodgeball))
    (exists (?r2 - (either dodgeball cube_block))
      (exists (?b - dodgeball)
        (forall (?d2 - (either wall desktop bridge_block) ?h - building)
          (and
            (not
              (exists (?c5 - pillow ?b2 - (either book book))
                (exists (?c - (either pyramid_block blue_cube_block))
                  (game-conserved
                    (on ?r2 ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?o - doggie_bed)
        (then
          (once (in_motion bed) )
          (once (and (not (and (agent_holds ?o) (and (not (agent_holds ?o) ) (not (in_motion ?o) ) ) ) ) (in ?o ?o) ) )
          (once (and (not (object_orientation agent upright) ) (not (on bed ?o) ) ) )
        )
      )
    )
    (forall (?o - cylindrical_block)
      (and
        (preference failedThrowAttempt
          (exists (?x - brown ?b - red_pyramid_block)
            (at-end
              (in ?o ?o)
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?b5 ?b - shelf ?h - hexagonal_bin ?h - hexagonal_bin)
            (then
              (once (is_setup_object rug) )
              (once (on ?o ?o) )
              (hold (= 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (count castleBuilt:yellow:dodgeball:beachball) 15 )
  )
)
(:scoring
  (count castleBuilt:golfball)
)
)



(define (game game-id-161) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?d ?o - (either book rug pyramid_block) ?h - building ?p ?db ?g ?f ?b ?s ?p2 ?b ?h ?d2 - ball ?c - hexagonal_bin)
    (exists (?c - (either key_chain tall_cylindrical_block cd))
      (game-conserved
        (not
          (and
            (faces ?c ?c)
            (in_motion ?c)
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?o2 - hexagonal_bin)
        (at-end
          (not
            (in_motion ?o2)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (count-once throwToBinFromDistance:basketball:dodgeball) )
)
(:scoring
  (* (+ 30 (external-forall-maximize (* (count-once throwToBinFromDistance:hexagonal_bin:wall) )
      )
    )
    15
    (count throwToBinFromDistance:book:pink)
  )
)
)



(define (game game-id-162) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - cube_block)
    (exists (?c - (either cube_block laptop))
      (game-conserved
        (agent_holds ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?l - (either book laptop))
        (at-end
          (in_motion ?l)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownFromObjectToBin:red) (count-unique-positions ballThrownFromObjectToBin:blue_dodgeball) )
    20
  )
)
(:scoring
  (count ballThrownFromObjectToBin:pink_dodgeball:pink)
)
)



(define (game game-id-163) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either dodgeball cd))
    (game-conserved
      (and
        (in_motion agent)
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?l - doggie_bed)
        (at-end
          (and
            (agent_holds ?l)
            (and
              (on ?l ?l)
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once-per-objects beachballOnRug:brown) 3 )
    (or
      (or
        (>= (count-once-per-objects beachballOnRug:dodgeball:beachball) (- (count-once-per-objects beachballOnRug:green) )
        )
        (>= (count-increasing-measure beachballOnRug:doggie_bed:side_table) (total-time) )
      )
      (>= (total-time) (* (count-same-positions beachballOnRug:pyramid_block) 3 15 (count beachballOnRug:basketball) )
      )
    )
  )
)
(:scoring
  (count beachballOnRug:pink:dodgeball)
)
)



(define (game game-id-164) (:domain many-objects-room-v1)
(:setup
  (exists (?b5 - hexagonal_bin)
    (game-conserved
      (and
        (on bed bed)
        (in agent ?b5)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?r1 - game_object ?d - ball ?w1 - teddy_bear)
        (then
          (hold (in_motion agent) )
          (hold (agent_holds ?w1) )
          (once (not (not (agent_holds ?w1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count ballThrownIntoTarget:basketball:pink_dodgeball:purple)
)
)



(define (game game-id-165) (:domain many-objects-room-v1)
(:setup
  (exists (?r - teddy_bear)
    (game-conserved
      (not
        (not
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b - pillow ?d - pink_dodgeball)
        (then
          (once (in ?d ?d) )
          (hold (and (or (in pink ?d) (agent_holds ?d) ) (adjacent desk bed) ) )
          (once (and (in_motion ?d) (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count rollBallToBin:beachball) (* (/ (* 5 (count rollBallToBin:golfball) )
        (+ (count rollBallToBin) 4 (* (- (count-once-per-objects rollBallToBin:hexagonal_bin) (count-once-per-objects rollBallToBin:basketball) ) (* (* (>= 300 2 )
              )
              (count rollBallToBin:basketball)
            )
            30
            20
            (* (count-once-per-objects rollBallToBin:basketball:basketball) (* 6 (* (+ (count-once-per-objects rollBallToBin:red) (* (/ (count-once rollBallToBin:pink_dodgeball) (count-once-per-objects rollBallToBin) ) 5 )
                  )
                  (* (* (* (count rollBallToBin:dodgeball:red) (count-once rollBallToBin:tall_cylindrical_block:golfball) )
                      (count rollBallToBin:blue_dodgeball)
                    )
                    (count rollBallToBin:blue_cube_block)
                    8
                  )
                )
              )
            )
            (count-once-per-external-objects rollBallToBin:book:cube_block:red)
          )
          (count-once-per-objects rollBallToBin:beachball)
          (count rollBallToBin:yellow)
          (* (+ (count-once-per-objects rollBallToBin:yellow:orange) (count rollBallToBin:beachball) (count rollBallToBin:dodgeball) )
            2
          )
        )
      )
      (count rollBallToBin:block)
    )
  )
)
(:scoring
  (count-once-per-objects rollBallToBin:blue_dodgeball)
)
)



(define (game game-id-166) (:domain many-objects-room-v1)
(:setup
  (exists (?b - shelf ?h - hexagonal_bin)
    (exists (?l - ball)
      (game-conserved
        (in ?h ?l)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 - chair)
      (and
        (preference ballThrownToWallToAgent
          (exists (?l2 ?t ?b ?b - (either blue_cube_block mug))
            (then
              (once (and (agent_holds ?c4) (same_type agent ?b) ) )
              (once (in ?c4 ?c4) )
              (once (between ?c4 ?b ?l2) )
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?g - hexagonal_bin)
            (then
              (hold (agent_holds ?g) )
              (hold (same_color ?g gray) )
              (hold (in_motion ?c4) )
            )
          )
        )
      )
    )
    (preference dodgeballFromRugToBin
      (exists (?d - cylindrical_block)
        (then
          (hold (touch ?d ?d) )
          (hold (not (in ?d agent) ) )
          (hold (not (>= (distance desk ?d) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count dodgeballFromRugToBin:beachball) (count-once-per-external-objects ballThrownToWallToAgent:basketball:dodgeball) )
    (total-score)
  )
)
(:scoring
  (* (* (count blockFromRugToDesk:dodgeball) (count-once-per-external-objects blockFromRugToDesk:basketball:basketball) 2 (* (< (count dodgeballFromRugToBin:beachball) (count-once-per-external-objects blockFromRugToDesk:red:orange) )
        (count-shortest ballThrownToWallToAgent:golfball:pink)
      )
    )
    (* 5 (count dodgeballFromRugToBin:yellow) )
  )
)
)



(define (game game-id-167) (:domain medium-objects-room-v1)
(:setup
  (forall (?c3 - hexagonal_bin)
    (forall (?b8 - bridge_block)
      (exists (?g - building)
        (game-conserved
          (game_start )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 - hexagonal_bin)
      (and
        (preference ballThrownHitsAgent
          (then
            (hold (in ?c4 ?c4) )
            (once (not (in_motion ?c4) ) )
            (once (agent_holds ?c4) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-longest ballThrownHitsAgent:golfball) (* 3 (* (- (* (* 3 (count-overlapping ballThrownHitsAgent:book) (* 3 (+ 1 2 )
                )
                20
              )
              (* (external-forall-maximize (= 60 2 )
                )
                18
              )
            )
          )
          (* (count ballThrownHitsAgent:yellow) 60 )
        )
        (* (count ballThrownHitsAgent:yellow) (count-once ballThrownHitsAgent:blue:dodgeball) )
        7
        (count-once-per-objects ballThrownHitsAgent:yellow_pyramid_block)
        20
      )
    )
    (total-score)
  )
)
(:scoring
  (* 5 (* 2 (count-once ballThrownHitsAgent:dodgeball) (* 3 )
    )
  )
)
)



(define (game game-id-168) (:domain few-objects-room-v1)
(:setup
  (exists (?x ?x0 - white ?b7 - game_object)
    (exists (?d - dodgeball ?h - hexagonal_bin)
      (game-optional
        (not
          (agent_holds desk)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - ball ?f - red_dodgeball)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?o - desk_shelf)
            (then
              (once (object_orientation ?o diagonal) )
              (once (> (distance desk ?f) 10) )
              (hold-while (= 6 1 1) (in_motion ?o) (not (and (not (not (and (on ?o pink) (and (touch ?o agent) (<= 1 (distance room_center agent)) ) (on desk ?o) ) ) ) (in_motion ?f) ) ) (in_motion pink) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (* (- (count-same-positions cubeBlockThrowAttempt:doggie_bed) )
          3
          (+ (+ 5 3 )
            10
            (external-forall-maximize
              (count cubeBlockThrowAttempt:bed)
            )
          )
        )
        (count cubeBlockThrowAttempt:dodgeball)
      )
    )
    (>= (total-time) 0.7 )
  )
)
(:scoring
  (count-shortest cubeBlockThrowAttempt:green)
)
)



(define (game game-id-169) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball ?x - purple)
    (exists (?d - block)
      (forall (?d1 - game_object ?b3 - ball)
        (game-optional
          (not
            (same_color rug ?b3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - hexagonal_bin)
      (and
        (preference ballThrowAttempt
          (exists (?h - beachball)
            (then
              (hold-while (and (not (not (touch ?b2 ?b2) ) ) (not (and (in_motion ?b2) (agent_holds ?h) ) ) ) (or (or (not (not (and (game_over ) (in_motion floor) (< (distance desk ?h) 1) (and (object_orientation agent upright) (in_motion ?b2) ) ) ) ) (>= 1 (distance ?h ?b2)) (agent_holds ?b2) ) (and (on ?h ?h) (agent_holds ?h) ) ) )
              (once (agent_holds ?h) )
              (once (and (in_motion ?b2) (is_setup_object ?b2) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?l4 - ball ?o4 - hexagonal_bin)
            (then
              (once (agent_holds ?o4) )
              (once (on ?o4 ?o4) )
              (once (not (= 2 (distance ?o4 ?o4)) ) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?b - hexagonal_bin)
            (then
              (once (agent_holds ?b2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (<= (* 2 3 )
        3
      )
      (or
        (or
          (or
            (>= (total-time) (count ballThrowAttempt:yellow) )
            (>= (* (+ 3 (count ballThrowAttempt:pink_dodgeball:red) )
                15
                (* (* (* (- 4 )
                      9
                    )
                    (count-once-per-objects throwAttempt:dodgeball)
                  )
                  6
                )
              )
              (* 3 (* (count throwAttempt:tall_cylindrical_block) (- (count-measure throwAttempt:golfball) )
                )
                (= 3 (count-once-per-objects thrownBallReachesEnd:purple:dodgeball:dodgeball) (count-once-per-objects thrownBallReachesEnd:tan:cube_block) )
                3
                12
              )
            )
          )
          (= 5 3 )
        )
        (>= (external-forall-maximize (external-forall-maximize (* (count throwAttempt:hexagonal_bin) 3 )
            )
          )
          (external-forall-maximize
            (* 7 (* 10 (count-once-per-objects ballThrowAttempt:green) )
            )
          )
        )
        (or
          (>= (count-increasing-measure throwAttempt:dodgeball) 10 )
          (>= (total-score) (* (count thrownBallReachesEnd:alarm_clock) (count thrownBallReachesEnd:pink) )
          )
          (<= (total-time) 2 )
        )
      )
    )
  )
)
(:scoring
  (count ballThrowAttempt:rug)
)
)



(define (game game-id-170) (:domain many-objects-room-v1)
(:setup
  (exists (?t - (either pen alarm_clock))
    (and
      (forall (?s - hexagonal_bin)
        (and
          (game-conserved
            (and
              (in_motion ?t)
              (agent_holds pink)
            )
          )
          (game-optional
            (in ?s ?t)
          )
        )
      )
      (forall (?c - drawer)
        (exists (?b ?p1 - hexagonal_bin)
          (game-conserved
            (= (distance rug ?t) (x_position ?t))
          )
        )
      )
      (game-conserved
        (and
          (in_motion ?t)
          (and
            (agent_holds ?t)
            (not
              (in_motion ?t)
            )
          )
        )
      )
      (game-conserved
        (agent_holds ?t)
      )
      (game-optional
        (agent_holds ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?b - (either desktop book))
            (then
              (once (agent_crouches ) )
              (once (not (not (in_motion ?b) ) ) )
              (once (in_motion agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (= (count-once-per-objects ballThrownThroughRampAndBlocksToBin:pink_dodgeball) )
          (* (count-once-per-objects ballThrownThroughRampAndBlocksToBin:basketball:pink) (count ballThrownThroughRampAndBlocksToBin:golfball:pink_dodgeball) )
        )
        (>= (* (count ballThrownThroughRampAndBlocksToBin:basketball) 1 )
          (total-time)
        )
        (or
          (> (count-once ballThrownThroughRampAndBlocksToBin:dodgeball) (* 10 4 (>= (count ballThrownThroughRampAndBlocksToBin:blue_dodgeball:cube_block) (count ballThrownThroughRampAndBlocksToBin:red) )
            )
          )
          (>= (total-score) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:basketball) )
          (< (count ballThrownThroughRampAndBlocksToBin:brown) (total-score) )
        )
      )
    )
    (<= (count-once ballThrownThroughRampAndBlocksToBin:basketball:beachball) (total-score) )
  )
)
(:scoring
  (= 5 )
)
)



(define (game game-id-171) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - teddy_bear ?o - (either alarm_clock cube_block))
      (and
        (and
          (and
            (in_motion bed)
            (on agent ?o)
          )
          (touch ?o rug)
        )
        (and
          (forall (?x ?x0 ?x1 - green)
            (on ?o bed)
          )
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - hexagonal_bin)
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?ob - hexagonal_bin ?h - cube_block)
            (then
              (once (< (distance ?l1 ?l1) (distance ?h ?l1)) )
              (hold (and (agent_holds ?l1) (exists (?h - hexagonal_bin) (between ?l1 ?l1 ?h) ) ) )
              (once (< (distance east_sliding_door ?l1) (distance desk ?h)) )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?g - ball)
        (at-end
          (agent_holds ?g)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 8 (* (* (+ 1 100 )
          (count-measure baseBlockInTowerAtEnd:doggie_bed)
        )
        1
      )
    )
    (>= 10 (* (* (count-once-per-objects blockKnockedFromBuildingInBin:golfball) (external-forall-minimize (count-once-per-objects blockKnockedFromBuildingInBin:blue_dodgeball:blue_dodgeball) ) )
        30
        (* (* (external-forall-maximize (* (count baseBlockInTowerAtEnd:orange) (count baseBlockInTowerAtEnd:beachball) )
            )
            (count baseBlockInTowerAtEnd:tall_cylindrical_block)
          )
          (count-once-per-objects baseBlockInTowerAtEnd:basketball)
        )
        8
      )
    )
  )
)
(:scoring
  (count baseBlockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-172) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - hexagonal_bin ?r - building)
      (forall (?p - hexagonal_bin ?d ?l4 ?h - drawer)
        (not
          (forall (?h - wall ?r1 - dodgeball ?o2 - dodgeball)
            (game-optional
              (adjacent_side ?d back ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c2 - ball ?l - hexagonal_bin)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?b8 - hexagonal_bin)
            (at-end
              (in ?b8 ?b8)
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?db - game_object)
            (then
              (hold (and (same_object ?l ?l) (opposite ?l ?l) ) )
              (once (not (and (in_motion ?l) (in agent ?l) ) ) )
              (once (adjacent ?db ?l) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?r1 - hexagonal_bin)
            (then
              (once (not (exists (?c2 - (either book cellphone pyramid_block)) (not (in_motion ?r1) ) ) ) )
              (once (= (distance room_center agent) 4) )
              (once (and (agent_holds ?l) (in_motion agent) (not (not (not (and (in_motion ?r1) (not (and (same_type ?r1 pillow) (< (distance ?l ?r1) 3) ) ) ) ) ) ) (or (on agent ?l) (in_motion ?l) ) (and (not (agent_holds ?r1) ) (and (not (agent_holds top_shelf) ) ) (not (in ?l agent) ) ) (< (distance room_center ?r1) 4) (not (same_object ?r1 ?l) ) ) )
            )
          )
        )
      )
    )
    (forall (?s - dodgeball ?b - game_object)
      (and
        (preference throwOverRamp
          (exists (?c - beachball)
            (at-end
              (in_motion ?c)
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?l - cylindrical_block)
            (then
              (once (agent_holds ?l) )
              (once (adjacent ?l ?b) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?s - hexagonal_bin)
        (then
          (once (and (touch ?s ?s) (in_motion ?s) (in_motion ?s) ) )
          (once (touch ?s agent) )
          (hold (between ?s ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (* 10 (+ 6 (* 2 (* (count thrownObjectHitsComputer:green:red) (* 20 5 )
            )
          )
          (count-measure cubeBlockThrownToTopShelf)
          5
        )
      )
      (total-time)
    )
  )
)
(:scoring
  (+ 5 0 )
)
)



(define (game game-id-173) (:domain few-objects-room-v1)
(:setup
  (exists (?y - (either upright diagonal upside_down))
    (forall (?c3 ?b7 ?c - shelf)
      (and
        (exists (?r - hexagonal_bin)
          (not
            (and
              (forall (?c - bridge_block)
                (forall (?c1 ?l4 - chair ?c2 - wall ?c2 - dodgeball ?b - dodgeball ?o - ball)
                  (or
                    (exists (?h - building ?y - (either upside_down upright sideways))
                      (exists (?d - building ?c2 - dodgeball)
                        (forall (?b7 - block)
                          (and
                            (game-conserved
                              (agent_holds agent)
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (rug_color_under ?b7 orange)
                    )
                    (exists (?b6 - teddy_bear)
                      (and
                        (game-conserved
                          (in_motion ?o)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (agent_holds ?c)
              )
            )
          )
        )
        (game-conserved
          (and
            (< 1 1)
            (in_motion ?c3)
          )
        )
        (game-optional
          (not
            (in ?c3 ?c3)
          )
        )
        (and
          (and
            (and
              (exists (?d1 - (either yellow_cube_block rug) ?p1 - dodgeball)
                (forall (?c - wall)
                  (and
                    (game-conserved
                      (agent_holds ?c)
                    )
                  )
                )
              )
              (game-optional
                (and
                  (on ?b7 ?b7)
                  (faces ?c3 ?c)
                  (in_motion floor)
                )
              )
            )
          )
        )
        (and
          (exists (?h - game_object)
            (exists (?d - dodgeball)
              (exists (?h - chair)
                (exists (?d - game_object ?c1 - dodgeball)
                  (exists (?h - red_dodgeball ?o - cube_block)
                    (game-conserved
                      (adjacent_side room_center front_left_corner ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?h - golfball)
      (and
        (preference dropAttempt
          (exists (?l3 - ball)
            (at-end
              (not
                (agent_holds ?h)
              )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?t2 - desk_shelf)
            (then
              (once (agent_holds desk) )
              (hold-while (and (and (and (in ?r ?r) (and (in_motion bed) ) ) (and (not (or (not (adjacent_side ?h left agent) ) (in_motion ?r) ) ) (< (distance_side desk front_left_corner ?r left) 1) ) (agent_holds ?r) ) (in_motion ?t2) ) (in ?h ?h) )
              (once (not (and (or (in ?t2 ?r) (is_setup_object ?r) ) (< 2 1) ) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (then
            (once (on ?r ?r) )
            (once (adjacent ?r ?r) )
            (hold-while (not (in_motion ?h) ) (exists (?db - block) (game_over ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= (* (count-once-per-external-objects beachballBouncedOffRamp:cube_block) (+ (count beachballBouncedOffRamp:basketball) 7 )
        )
        10
      )
    )
    (>= (+ 100 (count-shortest throwFromBehindChairsInBin:pink_dodgeball) )
      (* (count-once throwFromBehindChairsInBin:rug) (count-once-per-objects throwFromBehindChairsInBin:pink:blue_dodgeball) )
    )
  )
)
(:scoring
  (count throwFromBehindChairsInBin:golfball)
)
)



(define (game game-id-174) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o4 - book)
      (forall (?b - golfball ?p - blinds)
        (exists (?l4 - building)
          (exists (?b ?d ?h ?r - ball)
            (game-optional
              (and
                (and
                  (touch ?p ?r)
                  (> (distance ?r ?o4) 1)
                )
                (and
                  (agent_holds ?o4)
                  (equal_x_position door ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?c4 - pillow)
        (then
          (hold (and (agent_holds ?c4) (adjacent ?c4 floor) ) )
          (once (and (equal_z_position desk rug) (same_color ?c4 ?c4) ) )
          (hold (agent_holds ?c4) )
        )
      )
    )
  )
)
(:terminal
  (= 4 (* 3 10 )
  )
)
(:scoring
  (count-once greenObjectMovedToRoomCenter:basketball)
)
)



(define (game game-id-175) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?h - (either yellow_cube_block alarm_clock))
        (at-end
          (exists (?g - hexagonal_bin ?l - (either cellphone blue_cube_block pillow mug pyramid_block dodgeball chair))
            (< 10 (distance ?h ?l))
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure ballKnocksTeddy:dodgeball:pink_dodgeball) 30 )
)
(:scoring
  (external-forall-minimize
    (* (* (+ (count ballKnocksTeddy:doggie_bed:beachball) (count-once-per-objects ballKnocksTeddy:pink) (count-once-per-objects ballKnocksTeddy:yellow:pink) 2 (count ballKnocksTeddy:golfball) 6 )
        (count ballKnocksTeddy:basketball:blue)
      )
      (+ 5 (count ballKnocksTeddy:dodgeball) (+ 10 (count-once-per-external-objects ballKnocksTeddy:side_table) (+ 4 2 )
          (count-measure ballKnocksTeddy:dodgeball)
        )
      )
    )
  )
)
)



(define (game game-id-176) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?r - block ?h - game_object)
      (game-conserved
        (adjacent ?h ?h)
      )
    )
    (exists (?b3 - (either triangle_block cube_block) ?b - ball)
      (game-optional
        (in_motion ?b)
      )
    )
    (game-conserved
      (< 1 1)
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?p - chair)
        (then
          (hold (= 1 2) )
          (once (agent_holds ?p) )
          (hold-while (in_motion ?p) (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 7 )
)
(:scoring
  (* (- 6 )
    1
  )
)
)



(define (game game-id-177) (:domain medium-objects-room-v1)
(:setup
  (exists (?b1 ?h ?d2 ?l ?b ?h - hexagonal_bin)
    (game-optional
      (on agent ?h)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?c - teddy_bear ?db - building)
        (then
          (once (in_motion ?db) )
          (once (in_motion ?db) )
          (once (in_motion ?db) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?l1 - hexagonal_bin)
        (at-end
          (on ?l1 ?l1)
        )
      )
    )
    (preference blockPickedUp
      (exists (?p - building ?r - hexagonal_bin)
        (at-end
          (> (distance room_center ?r) 4)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (+ (* 5 (+ 20 (count-once-per-objects blockPickedUp:green) )
    )
    4
  )
)
)



(define (game game-id-178) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (exists (?d1 - (either cube_block blue_cube_block))
      (exists (?s - block)
        (forall (?d1 - building)
          (game-optional
            (and
              (open south_wall)
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?b - cube_block ?c3 - triangular_ramp)
        (at-end
          (and
            (and
              (not
                (and
                  (not
                    (not
                      (in_motion ?c3)
                    )
                  )
                  (exists (?l - hexagonal_bin ?l4 - building)
                    (not
                      (agent_holds ?l4)
                    )
                  )
                )
              )
            )
            (and
              (not
                (agent_holds ?c3)
              )
              (and
                (equal_x_position room_center ?c3)
                (not
                  (touch ?c3 ?c3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 9 100 )
)
(:scoring
  (+ 3 (external-forall-maximize (count-once-per-objects dodgeballHitsBinBottom:purple:pink) ) )
)
)



(define (game game-id-179) (:domain many-objects-room-v1)
(:setup
  (exists (?b4 - hexagonal_bin ?bl - hexagonal_bin)
    (exists (?l1 - game_object)
      (and
        (forall (?s - pink_dodgeball)
          (game-optional
            (not
              (and
                (in_motion ?s)
                (in_motion ?bl)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?h - desktop)
        (at-end
          (same_color ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects ballThrownToRampToBed:beachball:orange) (* (+ (* (* (count-once-per-objects ballThrownToRampToBed:dodgeball) 10 )
            (count ballThrownToRampToBed:block)
            (+ (count-same-positions ballThrownToRampToBed:dodgeball) 15 )
            (+ (count ballThrownToRampToBed:beachball) 2 )
            2
            (count-once-per-objects ballThrownToRampToBed:book)
            (external-forall-maximize
              (external-forall-maximize
                (count-once ballThrownToRampToBed:dodgeball)
              )
            )
            (- (* (= 50 (count-once-per-external-objects ballThrownToRampToBed:alarm_clock) (count-same-positions ballThrownToRampToBed:pink_dodgeball) )
                (count ballThrownToRampToBed:alarm_clock)
                6
                (> 5 15 )
                (* (count-unique-positions ballThrownToRampToBed:rug) (count ballThrownToRampToBed:beachball) )
              )
            )
            10
          )
          (+ (* (external-forall-maximize (external-forall-maximize (+ (count ballThrownToRampToBed:top_drawer) (count ballThrownToRampToBed:pyramid_block:red) )
                )
              )
              (count ballThrownToRampToBed:side_table)
            )
            (count-once ballThrownToRampToBed:golfball:dodgeball)
            3
          )
          8
        )
        (+ (* (* (external-forall-maximize (count ballThrownToRampToBed:yellow) ) (* 4 30 )
              (count ballThrownToRampToBed:dodgeball)
              (* 8 (count ballThrownToRampToBed) )
            )
            (count-once ballThrownToRampToBed)
          )
          (count ballThrownToRampToBed:pink_dodgeball)
        )
        10
      )
    )
    (total-score)
  )
)
(:scoring
  (external-forall-maximize
    (count ballThrownToRampToBed:golfball)
  )
)
)



(define (game game-id-180) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - teddy_bear)
    (forall (?b ?o2 - wall ?b - (either ball yellow_cube_block))
      (exists (?o ?o1 - triangular_ramp ?y - upright)
        (game-conserved
          (not
            (adjacent_side ?o1 right ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object)
      (and
        (preference thrownBallReachesEnd
          (exists (?t2 - hexagonal_bin)
            (then
              (hold-while (not (agent_holds ?t2) ) (not (and (agent_holds ?t2) (and (not (and (not (exists (?d - cube_block) (not (agent_holds agent) ) ) ) (or (not (agent_holds ?d) ) (and (same_color ?t2 ?t2) (and (agent_holds bed) ) ) ) ) ) (adjacent_side room_center right ?d front) ) ) ) )
              (once (not (in_motion ?t2) ) )
              (once (and (in_motion ?t2) (not (and (agent_holds ?d) (on agent ?d) ) ) (in_motion ?d) ) )
            )
          )
        )
        (preference brownObjectMovedToRoomCenter
          (exists (?w2 - game_object)
            (then
              (hold (agent_holds ?d) )
              (hold (agent_holds ?w2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 (* (* 8 (count-shortest thrownBallReachesEnd:green) 1 (+ 3 (+ (count thrownBallReachesEnd:dodgeball) (* (* 3 10 2 )
                15
                5
              )
            )
          )
          (count brownObjectMovedToRoomCenter:beachball)
          5
        )
        5
      )
    )
    (or
      (>= 5 (count-overlapping brownObjectMovedToRoomCenter) )
      (> (count brownObjectMovedToRoomCenter:yellow_cube_block:alarm_clock) 2 )
      (= (* (- (* (count-once-per-objects thrownBallReachesEnd:red) 3 (count-overlapping thrownBallReachesEnd:dodgeball) )
          )
          (* (< (count-same-positions thrownBallReachesEnd:beachball:golfball) (* (count brownObjectMovedToRoomCenter:golfball:golfball) 8 (+ (- (count thrownBallReachesEnd:green) )
                  (count brownObjectMovedToRoomCenter:golfball)
                )
                (count-once-per-objects brownObjectMovedToRoomCenter)
              )
            )
            (count-once-per-objects brownObjectMovedToRoomCenter:doggie_bed:green)
          )
        )
        (total-score)
      )
      (>= 6 (count-once-per-external-objects thrownBallReachesEnd:tan) )
    )
    (>= (count thrownBallReachesEnd:yellow_pyramid_block) (* 30 (+ (* (count-once-per-objects brownObjectMovedToRoomCenter:golfball) (* 3 50 )
          )
          (count brownObjectMovedToRoomCenter:red)
        )
      )
    )
  )
)
(:scoring
  (< 2 10 )
)
)



(define (game game-id-181) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - ball)
    (game-conserved
      (and
        (not
          (and
            (broken ?c)
            (and
              (agent_holds ?c)
              (and
                (on ?c rug)
                (not
                  (and
                    (agent_holds ?c)
                    (and
                      (and
                        (touch ?c ?c)
                        (not
                          (in_motion ?c)
                        )
                        (touch ?c ?c)
                      )
                      (toggled_on ?c)
                    )
                    (and
                      (exists (?w1 - block)
                        (not
                          (in_motion ?c)
                        )
                      )
                      (agent_holds ?c)
                    )
                    (agent_holds ?c)
                  )
                )
              )
            )
          )
        )
        (and
          (on ?c ?c)
          (adjacent bed ?c)
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - (either laptop golfball cd) ?b1 - desk_shelf ?t1 - dodgeball ?l - triangular_ramp)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?h - game_object)
            (then
              (once (opposite ?l ?l) )
              (once (and (= 1 1 (distance ?h ?h) 1) (in_motion agent) ) )
              (once-measure (and (not (adjacent bed bed) ) (agent_holds ?l) ) (distance_side room_center back ?h front) )
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (exists (?r - curved_wooden_ramp ?b ?h - game_object)
            (then
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
    (forall (?b - (either alarm_clock side_table) ?h - dodgeball ?b - golfball)
      (and
        (preference throwToDrawerOrBin
          (exists (?o2 - (either triangular_ramp mug pencil))
            (then
              (once (agent_holds ?o2) )
              (hold (and (not (agent_holds ?o2) ) (on ?o2 ?b) ) )
            )
          )
        )
        (preference objectsHidden
          (exists (?c - dodgeball ?c - (either cube_block key_chain laptop))
            (then
              (once (= 2 0.5) )
              (once (and (in_motion ?b) (in_motion ?c) ) )
              (hold-while (not (not (in_motion ?b) ) ) (touch ?c ?b) (agent_holds ?b) )
            )
          )
        )
      )
    )
    (forall (?d - hexagonal_bin ?o - wall ?o1 ?p3 ?r ?h ?l ?h - dodgeball)
      (and
        (preference blockToBinFromRug
          (exists (?b ?h - cube_block)
            (then
              (hold (in_motion ?b) )
              (once (agent_holds agent) )
              (once (and (agent_holds ?b) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?g - ball ?o3 - game_object)
            (at-end
              (adjacent room_center ?o1)
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?d - ball)
        (then
          (once (on ?d ?d) )
          (hold (and (not (agent_holds ?d) ) (agent_holds ?d) ) )
          (once (touch ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (< (* (external-forall-maximize (count dodgeballFromBlockToBin:beachball) ) (+ (* (count objectsHidden:basketball) (* (* (* (- (count throwMovesBeachballWithoutKnockingTeddy:doggie_bed) )
                (count-once-per-objects objectWithMatchingColor:basketball:dodgeball)
              )
              5
            )
            (count-unique-positions dodgeballFromBlockToBin:beachball:bed:beachball)
          )
        )
        (count-once-per-external-objects objectWithMatchingColor:yellow_cube_block:dodgeball)
      )
      (* 2 (count dodgeballFromBlockToBin:yellow_pyramid_block:dodgeball) )
    )
    6
  )
)
(:scoring
  (count-once-per-objects dodgeballFromBlockToBin:rug)
)
)



(define (game game-id-182) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - game_object ?b - cylindrical_block)
    (game-conserved
      (and
        (and
          (in green ?b)
          (touch ?b ?b)
        )
        (and
          (and
            (agent_holds ?b)
            (same_type ?b bridge_block)
          )
          (not
            (in_motion ?b)
          )
          (and
            (in_motion ?b)
            (agent_holds blue)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?d - (either cube_block blue_cube_block) ?b - block ?b - ball ?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once-measure (exists (?b3 - building) (and (and (equal_z_position room_center ?b3) (opposite ?b3 ?b) (and (on ?b3 ?b3) (same_type ?b3 drawer) (and (not (adjacent door ?b3) ) (adjacent ?b floor) (faces ?b3 ?b3) (and (agent_holds ?b) (exists (?r - wall ?d2 - (either dodgeball bridge_block dodgeball)) (< (distance ?b3 floor) (x_position ?d2)) ) ) (and (agent_holds ?b3) (not (= (distance door ?b) (distance room_center ?b)) ) ) ) (touch ?b3 ?b3) ) ) (and (not (in_motion ?b3) ) ) ) ) (distance_side desk front ?b back) )
          (once (in ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (< (count smallItemsInPlace:yellow_pyramid_block) (count smallItemsInPlace:dodgeball) )
)
(:scoring
  (count smallItemsInPlace:basketball:blue_dodgeball:beachball)
)
)



(define (game game-id-183) (:domain few-objects-room-v1)
(:setup
  (forall (?tb - hexagonal_bin)
    (and
      (exists (?d1 - (either wall blue_cube_block golfball))
        (forall (?t - hexagonal_bin)
          (forall (?o - dodgeball ?l4 - hexagonal_bin)
            (and
              (game-conserved
                (and
                  (on ?l4 ?l4)
                  (same_color ?t brown)
                )
              )
              (game-conserved
                (same_type ?t block)
              )
              (exists (?o - teddy_bear)
                (forall (?b1 - (either pillow pyramid_block))
                  (exists (?o2 - hexagonal_bin)
                    (or
                      (and
                        (game-conserved
                          (not
                            (<= (distance ?d1 ?b1) 1)
                          )
                        )
                        (or
                          (game-conserved
                            (agent_holds ?d1)
                          )
                          (forall (?ob - hexagonal_bin)
                            (game-optional
                              (< (distance room_center agent) (distance desk ?ob))
                            )
                          )
                        )
                      )
                      (and
                        (game-optional
                          (adjacent ?d1 desk)
                        )
                      )
                      (and
                        (and
                          (game-conserved
                            (in_motion ?o)
                          )
                          (game-conserved
                            (in ?l4 floor)
                          )
                          (and
                            (forall (?d - ball)
                              (forall (?w2 - game_object)
                                (and
                                  (game-optional
                                    (agent_holds ?tb)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (agent_holds ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?h - desk_shelf)
        (at-end
          (same_object ?h ?h)
        )
      )
    )
    (forall (?d - building)
      (and
        (preference objectMoved
          (exists (?o - block ?ob - (either doggie_bed beachball yellow_cube_block laptop cylindrical_block basketball mug))
            (at-end
              (and
                (rug_color_under ?d white)
                (on ?d ?ob)
              )
            )
          )
        )
        (preference throwBallToBin
          (exists (?l - doggie_bed ?d - hexagonal_bin)
            (at-end
              (object_orientation ?d upright)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 0 10 )
    (count-measure throwBallToBin:golfball:blue_dodgeball)
  )
)
(:scoring
  (* 2 (count-once-per-objects objectMoved:cube_block:green) )
)
)



(define (game game-id-184) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?db - shelf)
      (exists (?b - golfball)
        (and
          (forall (?h - dodgeball)
            (game-conserved
              (on ?db ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?s - dodgeball)
        (then
          (once (and (not (and (in_motion ?s) (not (and (and (in agent ?s) (and (= (distance room_center ?s)) (not (< 1 1) ) ) ) (not (and (and (in ?s ?s) (agent_holds agent) ) (and (not (not (in_motion ?s) ) ) (agent_holds ?s) ) ) ) ) ) ) ) (and (in ?s ?s) (on side_table ?s) (and (adjacent east_sliding_door ?s) (agent_holds ?s) (in_motion ?s) ) ) (equal_x_position desk ?s) ) )
          (hold (in agent ?s) )
          (hold-while (on ?s ?s) (in_motion agent) (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (external-forall-minimize (count-shortest failedThrowAttempt:yellow:red) ) (* (count failedThrowAttempt:doggie_bed) (* (= 5 )
          3
        )
      )
    )
    (<= (total-score) (+ (count-once-per-objects failedThrowAttempt:beachball) (count failedThrowAttempt:blue_cube_block:alarm_clock) )
    )
  )
)
(:scoring
  (count failedThrowAttempt:pyramid_block)
)
)



(define (game game-id-185) (:domain many-objects-room-v1)
(:setup
  (exists (?h ?c - block)
    (game-conserved
      (and
        (not
          (and
            (not
              (agent_holds ?h)
            )
            (agent_holds ?h)
          )
        )
        (and
          (and
            (in_motion ?h)
            (adjacent desk ?c)
          )
          (agent_holds ?c)
          (not
            (on agent ?h)
          )
        )
        (and
          (agent_holds bed)
          (not
            (and
              (< (distance ?h ?c) 5)
              (on ?h ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?d1 - hexagonal_bin)
        (then
          (hold (on ?d1 ?d1) )
          (hold-while (touch ?d1 agent) (>= 9 1) )
          (hold (rug_color_under ?d1 white) )
        )
      )
    )
    (forall (?p - green_triangular_ramp)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?l4 - shelf ?t1 - game_object)
            (then
              (once (and (and (forall (?x ?x0 ?x1 - red) (agent_holds ?t1) ) (not (and (not (not (in_motion rug) ) ) (< (distance ?p ?p) (distance desk ?p)) ) ) ) (not (> 1 (distance door ?p)) ) ) )
              (hold-while (not (agent_holds bed) ) (equal_x_position ?p ?p) )
              (once (equal_z_position bed ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-increasing-measure tanObjectMovedToRoomCenter:dodgeball) (+ 7 (count blockIncorrectlyPicked:red:dodgeball:yellow) )
    )
    (* (* 1 (+ 0 (count-overlapping blockIncorrectlyPicked:block:triangle_block) )
      )
      10
    )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:brown:dodgeball)
)
)



(define (game game-id-186) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (and
      (game-conserved
        (is_setup_object ?c)
      )
      (game-optional
        (and
          (in ?c ?c)
          (agent_crouches )
        )
      )
      (exists (?o4 - (either yellow_cube_block cube_block) ?w1 - block)
        (game-conserved
          (not
            (not
              (on ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?l - hexagonal_bin ?b - doggie_bed)
        (then
          (hold (agent_holds ?b) )
          (hold (or (not (and (agent_holds ?b) (not (and (adjacent room_center ?b) (adjacent ?b ?b) ) ) (< 9 5) ) ) (in ?b agent) ) )
          (hold (not (and (not (in agent ?b) ) (not (adjacent desk ?b) ) (agent_holds ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 6 (total-score) )
)
(:scoring
  (count dodgeballAndBasketballInBin:blue_cube_block)
)
)



(define (game game-id-187) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - dodgeball ?z - front)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?p3 - hexagonal_bin)
        (at-end
          (in_motion agent)
        )
      )
    )
    (preference throwBallToBin
      (exists (?h - game_object ?t - block)
        (then
          (hold (and (agent_holds ?t) (and (game_start ) (not (on agent ?t) ) ) ) )
          (once (agent_holds ?t) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects blueObjectMovedToRoomCenter:doggie_bed) (total-score) )
  )
)
(:scoring
  (count-once-per-objects throwBallToBin:dodgeball:green)
)
)



(define (game game-id-188) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (or
      (forall (?s - (either dodgeball basketball bridge_block golfball))
        (game-conserved
          (adjacent desk ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?c - (either bridge_block alarm_clock))
        (then
          (once (in ?c ?c) )
          (hold (and (in_motion ?c) (and (and (and (agent_holds ?c) (and (and (not (not (on ?c ?c) ) ) (not (agent_holds agent) ) ) (and (and (in_motion ?c) (object_orientation ?c upright) ) (in_motion ?c) ) (<= 10 (distance door ?c)) ) ) (agent_holds ?c) ) (> (distance door ?c) 1) ) ) )
          (hold (and (agent_crouches ) (agent_holds ?c) ) )
        )
      )
    )
    (forall (?d - building)
      (and
        (preference smallItemsInPlace
          (then
            (hold (in_motion ?d) )
            (hold (and (not (agent_holds ?d) ) (touch ?d agent) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromBehindChairsInBin:tall_cylindrical_block) (* 5 (count-once-per-objects throwFromBehindChairsInBin:hexagonal_bin:purple) (count-once-per-objects throwFromBehindChairsInBin:dodgeball) (count throwFromBehindChairsInBin:purple) (count-once-per-objects smallItemsInPlace:pink_dodgeball:yellow) (+ 4 (- (count-once-per-objects throwFromBehindChairsInBin:pink:yellow:block) )
        3
      )
      2
      (count-once-per-objects throwFromBehindChairsInBin:pyramid_block:golfball)
      (count-once-per-objects throwFromBehindChairsInBin:hexagonal_bin)
      (* 2 (* (< (count-once-per-objects smallItemsInPlace:basketball:pink) 5 )
          (count throwFromBehindChairsInBin:beachball)
        )
      )
      (count-once-per-objects smallItemsInPlace:red)
      (* (count smallItemsInPlace:dodgeball) (+ 15 5 )
      )
    )
  )
)
(:scoring
  (count smallItemsInPlace:golfball)
)
)



(define (game game-id-189) (:domain few-objects-room-v1)
(:setup
  (exists (?c3 - dodgeball)
    (exists (?r2 - hexagonal_bin)
      (exists (?c - (either key_chain flat_block) ?r - (either wall golfball) ?c - (either ball bridge_block))
        (and
          (and
            (game-optional
              (forall (?l4 - hexagonal_bin)
                (not
                  (or
                    (in ?c3 ?r2)
                    (in_motion ?c)
                  )
                )
              )
            )
          )
          (exists (?b7 - teddy_bear ?h - ball)
            (exists (?b9 - teddy_bear ?h - (either cube_block book))
              (game-optional
                (agent_holds ?c)
              )
            )
          )
          (exists (?b - cylindrical_block)
            (exists (?h - (either golfball pyramid_block dodgeball) ?b - game_object)
              (and
                (or
                  (and
                    (game-conserved
                      (in_motion ?c)
                    )
                    (game-conserved
                      (and
                        (in_motion ?b)
                        (<= 7 (distance agent ?c))
                      )
                    )
                    (or
                      (and
                        (and
                          (game-conserved
                            (on ?c ?b)
                          )
                        )
                      )
                      (exists (?l2 - doggie_bed)
                        (game-conserved
                          (exists (?l3 - dodgeball ?b - teddy_bear ?b - chair)
                            (in_motion ?c3)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (on ?h ?h) )
          (hold-while (in_motion ?h) (not (and (exists (?h - (either cube_block cd doggie_bed) ?x ?x0 ?x1 - color) (same_color ?h ?h) ) (on ?h ?h) (on ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (count-overlapping agentLeavesDogbedOrNoMoreBalls:pink) 5 )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:blue_dodgeball:doggie_bed)
)
)



(define (game game-id-190) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - orange)
    (forall (?b - ball)
      (and
        (game-conserved
          (and
            (in ?b ?b)
            (opposite ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?t2 - dodgeball ?d1 - chair)
        (then
          (once (not (on ?d1 ?d1) ) )
          (once (= (x_position ?d1) (building_size agent) 2) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 2 (* (* 10 9 )
        (count ballThrownToChair:hexagonal_bin)
      )
    )
    (and
      (>= (count ballThrownToChair:book) 2 )
    )
  )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-191) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?o1 - chair)
      (forall (?r2 - hexagonal_bin)
        (game-conserved
          (not
            (in_motion ?r2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?c1 - hexagonal_bin)
        (then
          (once (agent_holds ?c1) )
          (hold (agent_holds agent) )
          (hold-while (agent_holds agent) (not (not (not (touch floor ?c1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects golfballInBinFromPillow:red) )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:rug)
)
)



(define (game game-id-192) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - building ?b1 - dodgeball ?h - dodgeball)
    (game-conserved
      (and
        (adjacent door ?h)
        (not
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?w2 - hexagonal_bin)
        (then
          (hold (in_motion ?w2) )
          (once (in ?w2 south_wall) )
          (once (on ?w2 ?w2) )
        )
      )
    )
    (forall (?c3 - game_object ?b3 - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?l - (either hexagonal_bin triangular_ramp lamp))
            (then
              (once (in_motion ?b3) )
              (hold-while (not (agent_holds ?l) ) (agent_holds agent) )
              (once (not (agent_holds ?b3) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count ballThrowAttempt:golfball)
)
)



(define (game game-id-193) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?l1 - game_object ?p2 - hexagonal_bin ?c6 - hexagonal_bin)
        (forall (?c - ball)
          (game-conserved
            (and
              (agent_holds ?c6)
              (not
                (not
                  (adjacent ?c ?c6)
                )
              )
            )
          )
        )
      )
    )
    (forall (?c2 - teddy_bear ?c - game_object)
      (game-conserved
        (and
          (agent_holds ?c)
          (exists (?bl - hexagonal_bin ?c - block)
            (and
              (in_motion ?c)
              (adjacent desk agent)
              (exists (?o - (either laptop mug))
                (game_over )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?bl - dodgeball)
        (then
          (hold (not (open ?bl) ) )
          (once (not (agent_holds ?bl) ) )
          (once (equal_z_position desk rug) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?o - cube_block)
        (then
          (once (not (not (on ?o top_drawer) ) ) )
          (once (not (in_motion ?o) ) )
          (once (or (on desk ?o) (and (agent_holds ?o) (agent_holds ?o) (in_motion ?o) ) ) )
          (once (in ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-score) )
    (< 2 5 )
    (> (- (* 2 (* (count blockPickedUp:tan) 3 )
        )
      )
      300
    )
  )
)
(:scoring
  (+ 100 50 )
)
)



(define (game game-id-194) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?p - game_object ?c - (either yellow_cube_block cylindrical_block) ?bl - cube_block)
      (exists (?w2 - ball)
        (game-conserved
          (on ?w2 ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?z ?z0 ?z1 - right ?ob - hexagonal_bin)
        (then
          (hold (in_motion ?ob) )
          (once (in_motion ?ob) )
          (once (not (faces ?ob ?ob) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-once-per-objects ballInOrOnBin:dodgeball) )
)
(:scoring
  (count ballInOrOnBin:yellow)
)
)



(define (game game-id-195) (:domain few-objects-room-v1)
(:setup
  (forall (?b - red_dodgeball)
    (game-conserved
      (on ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?tb - (either yellow_cube_block alarm_clock))
        (then
          (once (agent_holds ?tb) )
          (hold (not (not (same_type ?tb block) ) ) )
          (once (on rug ?tb) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (total-time) )
)
(:scoring
  (count-longest greenObjectMovedToRoomCenter:basketball)
)
)



(define (game game-id-196) (:domain few-objects-room-v1)
(:setup
  (forall (?b - (either triangle_block laptop pyramid_block) ?l1 - curved_wooden_ramp)
    (or
      (forall (?o - game_object)
        (or
          (and
            (and
              (game-optional
                (not
                  (and
                    (agent_holds ?l1)
                  )
                )
              )
            )
          )
          (forall (?s - (either pyramid_block desktop tall_cylindrical_block))
            (game-conserved
              (not
                (forall (?d - hexagonal_bin)
                  (and
                    (in_motion ?l1)
                    (agent_holds ?s)
                  )
                )
              )
            )
          )
        )
      )
      (forall (?h - dodgeball)
        (game-optional
          (not
            (in ?h ?l1)
          )
        )
      )
      (game-conserved
        (agent_holds ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?o3 - bridge_block ?d - book)
        (then
          (hold (on ?d ?d) )
          (once (and (and (in ?d ?d) (in_motion ?d) ) (in_motion ?d) ) )
          (once (adjacent ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 2 (total-score) )
    (> (* (count dodgeballsInPlace:basketball) (count-once-per-objects dodgeballsInPlace:brown) )
      3
    )
  )
)
(:scoring
  (count dodgeballsInPlace:green:blue)
)
)



(define (game game-id-197) (:domain medium-objects-room-v1)
(:setup
  (exists (?y ?y0 ?y1 - (either diagonal diagonal))
    (forall (?r ?l2 - wall ?h - block)
      (game-conserved
        (and
          (not
            (and
              (opposite ?h ?h)
              (and
                (agent_holds agent)
                (on bed ?h)
              )
            )
          )
          (on ?h ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - curved_wooden_ramp)
      (and
        (preference dodgeballAndBasketballInBin
          (then
            (hold (agent_holds ?t1) )
            (hold-while (and (object_orientation ?t1 sideways) (adjacent desk rug) ) (not (not (in_motion ?t1) ) ) )
            (once (not (in_motion ?t1) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count dodgeballAndBasketballInBin:block) )
)
(:scoring
  (* (count-once-per-objects dodgeballAndBasketballInBin:brown) 6 )
)
)



(define (game game-id-198) (:domain few-objects-room-v1)
(:setup
  (forall (?b - teddy_bear)
    (and
      (and
        (forall (?tb - curved_wooden_ramp ?b - dodgeball)
          (and
            (and
              (game-optional
                (in_motion ?b)
              )
            )
          )
        )
        (and
          (game-optional
            (not
              (not
                (not
                  (not
                    (in_motion ?b)
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (faces bed ?b)
            )
            (game-optional
              (touch ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?b - pillow)
        (then
          (hold-while (agent_holds ?b) (same_color ?b agent) (in ?b ?b) (not (and (and (and (exists (?p - doggie_bed ?b - building ?h - flat_block ?t1 - hexagonal_bin ?p3 - hexagonal_bin) (in floor ?b) ) (<= (distance desk agent) (distance door ?b)) (on ?b ?b) (and (not (agent_holds bed) ) (same_type ?b block) ) (in_motion ?b) (< (distance ?b ?b) 1) ) (object_orientation ?b sideways) ) ) ) )
          (once (and (and (in_motion ?b) (same_type ?b drawer) ) (in_motion floor) (agent_holds ?b) ) )
          (once (and (not (>= (distance door ?b) (distance desk ?b)) ) (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockKnockedFromBuildingInBin:orange) (* (* (count blockKnockedFromBuildingInBin:yellow) 3 )
      (* (= 3 10 )
        (count blockKnockedFromBuildingInBin:blue_dodgeball:yellow)
      )
    )
  )
)
(:scoring
  (+ (count-once-per-objects blockKnockedFromBuildingInBin) 3 )
)
)



(define (game game-id-199) (:domain few-objects-room-v1)
(:setup
  (exists (?b6 - game_object ?b7 - pillow)
    (game-optional
      (not
        (exists (?c - dodgeball ?w1 - dodgeball ?b - hexagonal_bin)
          (and
            (same_type desk block)
            (not
              (broken ?b7)
            )
            (not
              (not
                (or
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - teddy_bear ?b8 - block ?w2 - building)
        (then
          (once (or (and (agent_holds ?w2) (same_color ?w2 ?w2) ) (adjacent rug ?w2) ) )
          (once (in_motion ?w2) )
          (once (in_motion ?w2) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (count-once-per-objects throwFromEdgeOfRug:beachball) )
)
(:scoring
  (+ 4 (* 5 (- (count-once-per-objects throwFromEdgeOfRug:dodgeball) )
    )
  )
)
)



(define (game game-id-200) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?w1 ?c - block)
      (game-conserved
        (agent_holds blue)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?h ?h - cube_block)
        (then
          (once (and (on ?h ?h) (not (equal_z_position room_center ?h) ) ) )
          (once (and (in_motion ?h) (is_setup_object ?h) ) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?r - doggie_bed)
        (then
          (once (on ?r ?r) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?c - cube_block ?c1 ?f - building)
        (then
          (once (and (in_motion ?c1) (adjacent ?c1 ?c1) ) )
          (hold (on ?f ?c1) )
          (once (not (and (< (distance ?c1 ?f) 1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 10 2 )
)
(:scoring
  (count-once-per-objects throwBallToBin:red)
)
)



(define (game game-id-201) (:domain few-objects-room-v1)
(:setup
  (forall (?b2 - ball)
    (exists (?o - pillow)
      (exists (?b ?o4 - (either pencil hexagonal_bin cellphone) ?c - hexagonal_bin)
        (forall (?h - shelf)
          (forall (?g - wall)
            (game-optional
              (and
                (= (distance_side ?b2 front_left_corner agent back) (distance ?g ?b2) (distance rug ?h))
                (and
                  (touch ?g ?g)
                  (and
                    (in ?c ?g)
                    (and
                      (agent_holds ?c)
                      (and
                        (and
                          (open ?c)
                          (same_color ?o ?h)
                        )
                        (not
                          (agent_holds ?b2)
                        )
                        (and
                          (and
                            (exists (?b5 - dodgeball ?g - dodgeball)
                              (and
                                (agent_holds ?h)
                                (not
                                  (not
                                    (and
                                      (agent_holds ?g)
                                      (and
                                        (not
                                          (and
                                            (not
                                              (not
                                                (adjacent ?b2 agent)
                                              )
                                            )
                                            (and
                                              (on ?c ?o)
                                              (in_motion ?g)
                                            )
                                          )
                                        )
                                        (in_motion bed)
                                        (and
                                          (in_motion ?c)
                                          (and
                                            (opposite ?g ?c)
                                            (< (distance ?g desk) 2)
                                            (in_motion blue)
                                          )
                                          (and
                                            (in_motion ?o)
                                            (on agent agent)
                                            (not
                                              (and
                                                (in_motion ?b2)
                                                (in_motion ?o)
                                              )
                                            )
                                          )
                                          (in ?h ?c)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (in_motion ?c)
                          )
                          (in_motion ?h)
                        )
                        (in_motion agent)
                        (in agent ?b2)
                        (agent_holds ?c)
                        (in_motion blue)
                        (agent_holds ?b2)
                      )
                    )
                    (not
                      (game_over )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?o1 - curved_wooden_ramp)
        (then
          (once (in ?o1 ?o1) )
          (once (and (and (and (adjacent desk agent) (not (agent_holds desk) ) ) (not (and (same_color ?o1 pink) (on agent ?o1) ) ) ) (in agent ?o1) ) )
          (once (and (in_motion ?o1) (on ?o1 ?o1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (and
        (>= (total-time) (total-time) )
      )
    )
    (>= (total-score) (+ (count-total redDodgeballThrownToBinWithoutTouchingFloor:golfball) (+ 6 10 )
      )
    )
    (>= (total-time) 10 )
    (or
      (>= 1 (count redDodgeballThrownToBinWithoutTouchingFloor:red) )
      (> 2 0 )
      (>= (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:pink:alarm_clock) 30 )
    )
  )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:basketball)
)
)



(define (game game-id-202) (:domain few-objects-room-v1)
(:setup
  (exists (?b - block)
    (forall (?d ?b - doggie_bed ?l ?tb - dodgeball)
      (game-conserved
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?h - hexagonal_bin)
        (then
          (hold-while (and (and (in_motion ?h) (and (in_motion agent) (and (agent_holds ?h) (agent_holds ?h) ) ) ) (in_motion ?h) ) (not (and (in ?h ?h) (in ?h ?h) ) ) (on ?h ?h) (and (agent_crouches ) (not (agent_holds ?h) ) ) )
          (once (> 2 (distance door ?h)) )
          (hold-while (not (not (in floor ?h) ) ) (and (agent_holds ?h) (and (in ?h ?h) (agent_holds ?h) ) ) )
          (hold (in ?h ?h) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?d - (either cube_block flat_block pyramid_block) ?b - doggie_bed ?h - (either golfball teddy_bear mug) ?d - ball)
        (then
          (once (agent_holds agent) )
          (once (and (in_motion ?d) (not (and (= 1 (distance room_center ?d)) (in_motion ?d) ) ) ) )
          (once (not (not (agent_holds ?d) ) ) )
        )
      )
    )
    (forall (?o3 - hexagonal_bin)
      (and
        (preference blockIncorrectlyPicked
          (exists (?h - building)
            (at-end
              (in_motion ?o3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockIncorrectlyPicked:dodgeball) 1 )
)
(:scoring
  (count itemsTurnedOff:dodgeball:tall_cylindrical_block:beachball)
)
)



(define (game game-id-203) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h ?p2 - ball)
      (not
        (forall (?c2 - red_dodgeball ?l - hexagonal_bin)
          (and
            (forall (?s ?o4 - (either triangle_block desktop cellphone) ?b - cube_block)
              (exists (?ob - dodgeball ?h - hexagonal_bin)
                (and
                  (exists (?c5 - chair)
                    (game-conserved
                      (not
                        (in_motion ?b)
                      )
                    )
                  )
                  (game-conserved
                    (adjacent ?h ?l)
                  )
                  (game-optional
                    (not
                      (touch ?p2 ?h)
                    )
                  )
                )
              )
            )
            (exists (?t - hexagonal_bin)
              (game-optional
                (rug_color_under desk tan)
              )
            )
          )
        )
      )
    )
    (exists (?d - dodgeball)
      (game-optional
        (agent_holds ?d)
      )
    )
    (forall (?y ?y0 ?y1 - (either upright sideways))
      (exists (?o - game_object ?c - ball)
        (not
          (exists (?bl - ball ?s - hexagonal_bin ?o - cube_block ?b10 - game_object)
            (and
              (forall (?b - hexagonal_bin ?b - chair)
                (forall (?h - (either cylindrical_block mug) ?d - hexagonal_bin ?r - hexagonal_bin)
                  (game-conserved
                    (in ?r ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?r - ball ?l2 - dodgeball)
      (game-optional
        (and
          (and
            (not
              (in_motion ?l2)
            )
          )
          (in_motion ?l2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - (either chair flat_block))
      (and
        (preference gameBlockFound
          (exists (?o2 - hexagonal_bin)
            (then
              (once (and (and (and (not (in_motion ?o2) ) (in_motion ?o2) ) (is_setup_object ?g) ) (and (agent_holds ?o2) (in_motion ?o2) ) (in_motion ?o2) ) )
              (once (on agent ?o2) )
              (hold (in ?g agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count gameBlockFound:pyramid_block) (- (count-once-per-objects gameBlockFound:red:pink) )
        (* 100 1 )
        5
      )
      1
    )
    (or
      (> 2 (count-once-per-objects gameBlockFound:basketball) )
      (>= (external-forall-maximize (count-measure gameBlockFound:pink) ) (total-score) )
    )
    (or
      (not
        (>= (total-score) (count gameBlockFound:red) )
      )
    )
  )
)
(:scoring
  (external-forall-minimize
    (count-once-per-objects gameBlockFound:golfball)
  )
)
)



(define (game game-id-204) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (forall (?l2 - pillow)
      (exists (?b - drawer)
        (exists (?s - doggie_bed)
          (forall (?h - red_dodgeball)
            (or
              (exists (?h - triangular_ramp ?o - ball)
                (forall (?t - bridge_block)
                  (game-optional
                    (not
                      (and
                        (not
                          (agent_holds ?t)
                        )
                        (not
                          (not
                            (touch ?o bed)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (in_motion ?b)
              )
              (game-conserved
                (not
                  (on ?l2 ?l2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - hexagonal_bin ?b - block ?d - game_object)
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?d - hexagonal_bin)
            (then
              (once (not (in_motion desk) ) )
              (once (and (not (and (agent_holds ?d) (adjacent ?d ?d) ) ) (game_start ) (not (agent_holds ?d) ) ) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects ballThrownThroughRampAndBlocksToBin:purple) )
)
(:scoring
  (+ 3 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball) )
)
)



(define (game game-id-205) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?w1 - ball)
      (exists (?r - hexagonal_bin ?l - game_object)
        (forall (?g - hexagonal_bin)
          (not
            (game-conserved
              (< (x_position ?w1) (distance room_center agent))
            )
          )
        )
      )
    )
    (game-conserved
      (< 1 1)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?s - teddy_bear)
        (at-end
          (on ?s ?s)
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference failedThrowAttempt
          (exists (?o2 - curved_wooden_ramp)
            (then
              (once (adjacent green_golfball blue) )
              (once (faces ?o2 bed) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 10 20 )
    (or
      (>= (count ballThrownFromRug:blue_dodgeball) 30 )
      (or
        (not
          (>= (* 3 (* (count failedThrowAttempt:cylindrical_block) 3 )
            )
            (* (count ballThrownFromRug:dodgeball:pink_dodgeball) (count-once ballThrownFromRug:red) )
          )
        )
        (>= (* (* (external-forall-maximize (count-once-per-objects failedThrowAttempt:dodgeball:dodgeball) ) 10 )
            (- (count-once-per-objects ballThrownFromRug:yellow) )
            (* (external-forall-maximize (external-forall-maximize (count-once-per-objects failedThrowAttempt:dodgeball) ) ) (count-longest failedThrowAttempt:dodgeball) )
            3
            (* (count-once-per-objects failedThrowAttempt:pink) 10 )
          )
          (count-once-per-objects ballThrownFromRug:beachball)
        )
        (or
          (or
            (<= (total-time) (total-score) )
            (>= (total-score) 0 )
          )
          (< (count failedThrowAttempt:golfball:hexagonal_bin) (= 5 (count failedThrowAttempt:beachball) )
          )
          (<= (external-forall-maximize (count ballThrownFromRug:yellow:dodgeball) ) (/ (- (> (count failedThrowAttempt:blue_cube_block) (+ (count-once-per-objects ballThrownFromRug:yellow) (count-measure failedThrowAttempt:beachball:yellow) )
                )
              )
              (count failedThrowAttempt:yellow_cube_block:dodgeball)
            )
          )
        )
      )
      (and
        (>= 10 (* (count ballThrownFromRug:golfball) )
        )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (+ (* 20 (+ (- (* (count ballThrownFromRug:dodgeball) (count-once-per-objects ballThrownFromRug:dodgeball:golfball) )
          )
          1
        )
      )
      (count ballThrownFromRug:alarm_clock)
    )
  )
)
)



(define (game game-id-206) (:domain many-objects-room-v1)
(:setup
  (exists (?l4 - game_object ?b3 - building)
    (forall (?c - building ?f - (either bed dodgeball main_light_switch) ?d - wall)
      (game-conserved
        (and
          (and
            (in_motion ?b3)
            (not
              (in_motion agent)
            )
          )
          (on ?d ?d)
          (> (distance ?d ?b3) 7)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?g - hexagonal_bin ?c - doggie_bed)
        (then
          (once (not (agent_holds ?c) ) )
          (hold (touch bed ?c) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?c2 - teddy_bear)
        (then
          (once (or (touch ?c2 ?c2) (not (not (< 3 (distance desk ?c2)) ) ) (in_motion rug) ) )
          (once (not (agent_holds desk) ) )
          (once (on ?c2 ?c2) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-score) )
)
(:scoring
  (+ (* (count-overlapping ballRolledOnRampToRug:green) )
    5
  )
)
)



(define (game game-id-207) (:domain many-objects-room-v1)
(:setup
  (exists (?d ?b - building ?l4 - hexagonal_bin)
    (exists (?h - curved_wooden_ramp)
      (exists (?o - doggie_bed ?l4 - (either cube_block laptop pen))
        (game-conserved
          (agent_holds ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?p - chair ?d - game_object)
        (then
          (once (and (not (< (distance ?d ?d) 2) ) (in_motion ?d) ) )
          (once (and (exists (?w1 - ball) (not (not (not (on ?w1 bed) ) ) ) ) (not (not (in_motion ?d) ) ) (and (game_start ) (in_motion ?d) ) ) )
          (once (between side_table agent ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (> (+ (count-once-per-external-objects binKnockedOver:golfball) 5 )
          (external-forall-maximize
            (* 7 (count binKnockedOver:red) )
          )
        )
        (>= (* (count-once binKnockedOver:basketball) 5 )
          (total-score)
        )
        (and
          (<= (total-time) 0 )
          (or
            (or
              (>= 30 (* (count binKnockedOver:side_table) 2 )
              )
            )
            (or
              (or
                (not
                  (>= (count-once-per-external-objects binKnockedOver:purple) (total-time) )
                )
                (>= (count-once-per-objects binKnockedOver:basketball) (external-forall-minimize (count-once-per-objects binKnockedOver:dodgeball) ) )
              )
              (>= (count-once binKnockedOver:beachball:dodgeball) 5 )
            )
            (and
              (>= (count-once-per-objects binKnockedOver:dodgeball) (total-score) )
              (= (count binKnockedOver:golfball) 9 )
              (>= (count binKnockedOver:golfball) (total-score) )
            )
          )
        )
      )
      (>= 5 (count-unique-positions binKnockedOver:dodgeball) )
    )
  )
)
(:scoring
  (count-same-positions binKnockedOver:yellow_cube_block)
)
)



(define (game game-id-208) (:domain few-objects-room-v1)
(:setup
  (exists (?b9 - wall ?b1 - hexagonal_bin ?x ?x0 ?x1 - color)
    (exists (?t - ball)
      (game-optional
        (in ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?h - curved_wooden_ramp ?c ?d - chair)
        (then
          (once (same_color ?c ?d) )
          (hold (agent_holds ?d) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count blockFromRugToDesk:green) (external-forall-maximize (count blockFromRugToDesk:green) ) )
  )
)
(:scoring
  (count blockFromRugToDesk:pink)
)
)



(define (game game-id-209) (:domain medium-objects-room-v1)
(:setup
  (forall (?c4 - dodgeball)
    (game-conserved
      (not
        (agent_holds ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?y ?y0 ?y1 - (either upright diagonal upside_down) ?o - dodgeball ?d - (either desktop bridge_block))
        (then
          (once (in bed ?d) )
          (once (and (on ?d ?d) (not (and (agent_holds agent) (not (on ?d agent) ) ) ) (in_motion ?d) ) )
          (once (exists (?o3 - (either key_chain dodgeball golfball basketball dodgeball cylindrical_block triangular_ramp)) (not (on bed bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= 6 (external-forall-maximize (count ballThrownOntoTarget:basketball) ) )
      (> 4 (total-score) )
    )
    (>= (count-overlapping ballThrownOntoTarget:alarm_clock) 6 )
  )
)
(:scoring
  (count-once-per-external-objects ballThrownOntoTarget:pink)
)
)



(define (game game-id-210) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - game_object ?b - (either chair pyramid_block) ?h - (either mug) ?b3 - ball)
    (and
      (and
        (exists (?b - wall)
          (game-conserved
            (agent_holds ?b3)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 - game_object)
      (and
        (preference laptopAndBookInPlace
          (exists (?p2 - building)
            (then
              (hold (above ?w2 ?w2) )
              (once (not (or (in_motion ?p2) (agent_holds ?p2) ) ) )
              (hold (in_motion ?p2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) (count laptopAndBookInPlace:book) )
  )
)
(:scoring
  (count laptopAndBookInPlace:green)
)
)



(define (game game-id-211) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin)
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (forall (?h - pyramid_block)
      (and
        (preference ballOnBedAtEnd
          (exists (?o4 - ball ?h - beachball)
            (then
              (hold (agent_holds ?h) )
              (hold-while (and (on desk ?h) (same_object ?h ?h) ) (not (and (not (on rug ?h) ) (agent_holds ?h) ) ) (rug_color_under ?h red) )
              (once (<= 1 9) )
            )
          )
        )
        (preference itemsBroken
          (exists (?c5 - shelf)
            (then
              (hold (not (adjacent_side ?h front bed front) ) )
              (once (<= (distance desk ?h) (distance ?h pink)) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (forall (?w2 - hexagonal_bin)
      (and
        (preference smallObjectThrownToBed
          (exists (?h - flat_block)
            (then
              (once (agent_holds ?h) )
              (hold (touch ?w2 ?h) )
              (once (agent_holds ?h) )
              (once (broken bed) )
            )
          )
        )
      )
    )
    (forall (?w2 - (either cellphone) ?l - ball)
      (and
        (preference golfballLandsInBinThroughRamp
          (then
            (once (not (and (in ?l ?l) (agent_holds ?l) ) ) )
            (once (and (and (and (not (not (agent_holds ?l) ) ) (and (not (is_setup_object ?l) ) ) ) (agent_holds ?l) ) (not (and (in ?l ?l) (in_motion ?l) ) ) ) )
            (once (on ?l ?l) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count ballOnBedAtEnd:yellow:dodgeball) (- 3 )
    )
    (or
      (>= (count-once-per-objects smallObjectThrownToBed:yellow:blue_dodgeball) 3 )
      (>= (count-once-per-objects smallObjectThrownToBed:doggie_bed) (+ (* (* 1 (external-forall-maximize (* (count itemsBroken:wall) (count golfballLandsInBinThroughRamp:dodgeball:book) (+ 5 2 )
                  (count-total ballOnBedAtEnd:blue_cube_block)
                )
              )
            )
            (count-once-per-external-objects itemsBroken:golfball)
          )
          (* 0 (count-shortest smallObjectThrownToBed:pink) )
          8
          (count golfballLandsInBinThroughRamp:dodgeball)
        )
      )
    )
    (or
      (or
        (or
          (>= (total-score) (total-score) )
          (>= (total-time) 7 )
          (or
            (>= (count-once-per-external-objects smallObjectThrownToBed:brown) 5 )
            (or
              (>= (total-score) (* 7 (count smallObjectThrownToBed:yellow) (* 3 5 )
                )
              )
              (> (count golfballLandsInBinThroughRamp:cube_block) 5 )
            )
          )
        )
        (> 4 15 )
      )
      (and
        (>= (count ballOnBedAtEnd:golfball:doggie_bed) (* 4 (count smallObjectThrownToBed:cylindrical_block) )
        )
        (>= 40 (count ballOnBedAtEnd:hexagonal_bin:beachball:alarm_clock) )
        (> 30 60 )
      )
    )
  )
)
(:scoring
  (* (count-once-per-external-objects itemsBroken:basketball:doggie_bed) (* (- 10 )
      1
    )
  )
)
)



(define (game game-id-212) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - (either basketball tall_cylindrical_block) ?b7 - dodgeball)
    (game-conserved
      (= 7 1)
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?d ?w - game_object)
        (then
          (once (in_motion ?d) )
          (once (and (in ?d ?d) ) )
          (hold (and (and (not (same_type ?w ?d) ) (< 1 5) ) (not (adjacent room_center ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowThrownToDoggieBed:dodgeball) 3 )
)
(:scoring
  (* 2 40 )
)
)



(define (game game-id-213) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?w2 - hexagonal_bin)
      (exists (?r - golfball)
        (game-conserved
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference rollBallToBin
          (exists (?g - cube_block ?b4 - building)
            (at-end
              (not
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 10 (count-once rollBallToBin:pink_dodgeball) )
  )
)
(:scoring
  (* (count-longest rollBallToBin:pink) 6 )
)
)



(define (game game-id-214) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?s - hexagonal_bin ?o - doggie_bed ?d - game_object ?o - (either dodgeball cube_block yellow_cube_block yellow_cube_block pillow golfball cellphone))
      (game-conserved
        (between ?o ?o ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - cube_block ?r - ball ?h - hexagonal_bin)
      (and
        (preference throwGolfballToBin
          (exists (?o - hexagonal_bin)
            (then
              (once (not (on rug ?o) ) )
              (once (and (agent_holds ?o) (game_start ) ) )
              (once (not (touch ?h ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 40 3 )
      6
      (+ 10 180 )
    )
    (+ 10 30 )
  )
)
(:scoring
  (<= 3 20 )
)
)



(define (game game-id-215) (:domain many-objects-room-v1)
(:setup
  (or
    (game-conserved
      (agent_holds desk)
    )
    (game-conserved
      (exists (?h - block ?b2 - dodgeball)
        (in_motion ?b2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - ball ?g - ball)
      (and
        (preference objectWithMatchingColor
          (then
            (hold (in_motion ?g) )
            (hold (in_motion ?g) )
            (once (agent_holds ?g) )
            (once (in_motion ?g) )
            (once (and (in_motion ?g) (not (and (not (not (agent_holds ?g) ) ) (in_motion agent) ) ) ) )
          )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?b4 - watch ?b2 - hexagonal_bin)
        (then
          (hold (not (not (> 1 (distance ?b2 ?b2)) ) ) )
          (hold (<= (distance door ?b2) 1) )
          (hold-while (agent_holds ?b2) (and (and (and (not (adjacent door ?b2) ) (and (same_color ?b2 ?b2) (and (agent_holds ?b2) (in ?b2 ?b2) ) ) ) (not (or (in_motion ?b2) (in_motion ?b2) ) ) ) (not (agent_holds ?b2) ) ) )
        )
      )
    )
    (forall (?p1 - (either cube_block triangular_ramp) ?ob - (either cube_block cylindrical_block))
      (and
        (preference itemsTurnedOff
          (exists (?b - beachball)
            (then
              (once (and (in_motion ?ob) (not (agent_holds ?ob) ) ) )
              (hold-while (not (on ?b ?ob) ) (adjacent ?ob ?ob) (in_motion ?ob) )
              (once (in ?ob agent) )
            )
          )
        )
        (preference laptopAndBookInPlace
          (exists (?h - ball ?h - teddy_bear ?d1 - dodgeball)
            (then
              (once (and (broken ?ob) (not (opposite ?d1 ?ob) ) ) )
              (once (exists (?tb - (either dodgeball cd)) (and (and (on blue ?ob) (and (forall (?l4 - bridge_block) (faces ?d1 ?ob) ) (agent_holds ?ob) (forall (?b1 - hexagonal_bin ?b - dodgeball) (not (and (and (agent_crouches ) (on floor ?ob) ) (in_motion ?tb) ) ) ) ) (toggled_on ?ob) ) (not (exists (?h - cube_block ?z ?z0 - front_left_corner) (< 3 (distance_side bed front ?tb back)) ) ) (in_motion ?ob) ) ) )
              (once (= (distance ?d1 ?ob)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (>= 3 (+ 7 (= (* (count-overlapping itemsTurnedOff:pink) (count ballThrownToBin:green) )
          (count objectWithMatchingColor:cube_block:yellow)
        )
      )
    )
    (* (* 10 (count ballThrownToBin:orange:basketball) )
      (count objectWithMatchingColor:pink_dodgeball)
    )
  )
)
(:scoring
  (- 40 )
)
)



(define (game game-id-216) (:domain many-objects-room-v1)
(:setup
  (forall (?l4 - hexagonal_bin)
    (game-optional
      (opposite ?l4 floor)
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?b - building)
            (then
              (once (not (in_motion ?d) ) )
              (hold (in_motion ?b) )
              (hold (in ?d desk) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-external-objects blockInTowerAtEnd:red) (* 5 2 )
      (* (+ (count-once blockInTowerAtEnd:doggie_bed:dodgeball) (count blockInTowerAtEnd:basketball:pink_dodgeball) 9 5 6 1 (count blockInTowerAtEnd:red) )
        (+ (* (* 3 (external-forall-maximize (count blockInTowerAtEnd:alarm_clock:pink_dodgeball) ) 10 )
            (+ 4 3 )
          )
          (count blockInTowerAtEnd:cube_block)
        )
        (- 1 )
      )
    )
    (count-once-per-objects blockInTowerAtEnd:yellow)
  )
)
(:scoring
  (= (count blockInTowerAtEnd:book) 180 )
)
)



(define (game game-id-217) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either golfball cellphone) ?d - ball ?b - beachball ?o - (either laptop))
    (exists (?s ?c1 ?o ?b4 ?b ?c - chair)
      (forall (?b - hexagonal_bin ?d2 - curved_wooden_ramp)
        (game-conserved
          (> 7 (x_position ?d2))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - dodgeball)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?w2 - cube_block)
            (then
              (hold (not (in_motion ?o) ) )
              (once (on ?o ?w2) )
              (hold (broken ?o) )
            )
          )
        )
        (preference ballNeverThrown
          (exists (?x - color)
            (at-end
              (in_motion agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* 10 (count-once brownObjectMovedToRoomCenter:dodgeball:triangle_block) )
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:basketball:pink)
)
)



(define (game game-id-218) (:domain few-objects-room-v1)
(:setup
  (forall (?c ?b ?l1 ?b - wall ?p - ball ?d - triangular_ramp)
    (not
      (game-optional
        (and
          (not
            (in_motion ?d)
          )
          (game_start )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (exists (?d - dodgeball)
        (then
          (hold-while (not (< (distance rug ?d) (distance desk ?d)) ) (and (broken ?d) (not (exists (?c - sliding_door ?b ?o1 ?r - curved_wooden_ramp) (not (not (not (or (in ?d ?b) (and (in_motion ?r) (above ?r ?r) (agent_holds ?r) (on ?b ?r) ) ) ) ) ) ) ) ) )
          (once (rug_color_under floor color) )
          (once (equal_z_position ?d green_golfball) )
        )
      )
    )
    (preference itemsBroken
      (exists (?b - (either hexagonal_bin book hexagonal_bin dodgeball) ?c6 - doggie_bed)
        (then
          (once (and (not (agent_holds ?c6) ) (on ?c6 ?c6) ) )
          (once (in_motion ?c6) )
          (hold (not (agent_holds ?c6) ) )
        )
      )
    )
    (preference castleBuilt
      (exists (?h - doggie_bed ?t - dodgeball)
        (then
          (once (equal_x_position ?t agent) )
          (once (on agent ?t) )
          (hold (in ?t floor) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ (count-once-per-objects beachballOnRug:yellow_cube_block:triangle_block) (count-once beachballOnRug:dodgeball) (+ (count itemsBroken:yellow) )
    )
    (total-time)
  )
)
(:scoring
  (count-once-per-objects itemsBroken:wall:pink_dodgeball)
)
)



(define (game game-id-219) (:domain many-objects-room-v1)
(:setup
  (exists (?c - triangular_ramp)
    (forall (?c2 - dodgeball ?c5 - (either cd chair yellow_cube_block))
      (exists (?d - pink_dodgeball)
        (forall (?b2 - cube_block)
          (game-conserved
            (equal_z_position room_center ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?c - golfball)
        (then
          (once (and (in_motion bed) (touch ?c ?c) ) )
          (hold (or (> 6 (distance desk ?c)) (and (and (or (same_color ?c light_blue) (in ?c ?c) ) (agent_holds ?c) ) (in_motion ?c) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?o - hexagonal_bin ?o ?d ?h - ball)
        (then
          (once (same_object ?h ?d) )
          (hold (exists (?b3 ?w2 - ball ?b - curved_wooden_ramp ?o5 - dodgeball ?h - cube_block) (not (on ?d ?o) ) ) )
          (once-measure (and (agent_holds ?o) (and (and (agent_holds ?d) (not (not (agent_holds ?h) ) ) ) (or (in ?h ?d) (in_motion ?d) ) ) (in ?h ?d) (and (on ?d ?o) (not (in_motion ?h) ) ) (same_object ?h green) (agent_holds ?o) (and (in_motion ?o) (on ?h ?h) ) (and (in ?o ?d) (and (same_type ?d ?h) (and (in_motion top_shelf) (and (not (in_motion ?d) ) (in_motion ?o) ) ) ) ) ) (distance door ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:beachball)
)
)



(define (game game-id-220) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - block)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?r1 - ball ?tb - hexagonal_bin)
        (then
          (hold (and (adjacent desk ?tb) (and (in_motion ?tb) (and (not (opposite ?tb ?tb) ) (not (agent_holds ?tb) ) ) ) ) )
          (hold (adjacent room_center ?tb) )
          (once (in ?tb ?tb) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects watchOnShelf:top_drawer) (count-once-per-objects watchOnShelf:pink:pink) )
)
(:scoring
  (+ (* 6 (* (count watchOnShelf:hexagonal_bin) )
    )
    0
  )
)
)



(define (game game-id-221) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - hexagonal_bin ?c1 - dodgeball ?b - teddy_bear)
    (forall (?t2 - dodgeball ?o4 - hexagonal_bin)
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?c4 - (either chair dodgeball cellphone) ?d ?p2 - (either alarm_clock cube_block cd))
        (then
          (hold (not (touch rug ?p2) ) )
          (once (and (not (same_type rug drawer) ) (agent_holds ?d) ) )
          (hold (on ?p2 ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (* (count-once ballThrownHitsAgent:dodgeball) (count-once-per-objects ballThrownHitsAgent:green) )
        (> (* (= (count-once-per-objects ballThrownHitsAgent:green) 3 )
            5
          )
          50
        )
      )
      -30
    )
    (> 5 (* (* (count ballThrownHitsAgent:yellow) (* (count ballThrownHitsAgent:dodgeball) (count-once-per-external-objects ballThrownHitsAgent:basketball:yellow) )
        )
        9
      )
    )
    (>= 2 2 )
  )
)
(:scoring
  (* (count-once-per-external-objects ballThrownHitsAgent:pink) )
)
)



(define (game game-id-222) (:domain many-objects-room-v1)
(:setup
  (forall (?t - pyramid_block)
    (forall (?r1 - (either alarm_clock cylindrical_block) ?w - game_object)
      (game-conserved
        (and
          (touch ?w ?t)
          (on ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?t2 - hexagonal_bin)
        (then
          (once (agent_holds ?t2) )
          (hold (in ?t2 ?t2) )
          (once (in_motion ?t2) )
        )
      )
    )
  )
)
(:terminal
  (> (count teddyBearHitsBall:beachball) (count-once teddyBearHitsBall:dodgeball) )
)
(:scoring
  (* 5 (* (external-forall-minimize (+ (+ (* 6 5 )
            30
          )
          (count teddyBearHitsBall:basketball)
        )
      )
      (count teddyBearHitsBall:dodgeball:bed)
    )
  )
)
)



(define (game game-id-223) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - (either mug pyramid_block))
    (game-conserved
      (exists (?b - wall ?h - game_object ?g - (either cube_block dodgeball tall_cylindrical_block book desktop blue_cube_block dodgeball))
        (exists (?p - ball ?c6 ?c - curved_wooden_ramp ?c ?h - dodgeball ?h - ball)
          (and
            (above ?g ?ob)
            (agent_holds floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?t - desktop)
        (then
          (once (agent_holds ?t) )
          (once (agent_holds ?t) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?t ?l2 - sliding_door)
        (then
          (once (not (in_motion ?t) ) )
          (once (and (in_motion bed) (and (on ?l2 ?l2) (and (in_motion ?l2) (adjacent ?l2 agent) (exists (?ob - curved_wooden_ramp ?d - dodgeball ?h - hexagonal_bin) (exists (?h - doggie_bed) (on ?h pink) ) ) (touch agent ?t) (not (in_motion desk) ) (in_motion ?l2) (and (not (not (not (not (in_motion ?t) ) ) ) ) (and (in_motion ?t) (agent_holds desk) ) ) (and (not (agent_holds ?l2) ) (and (not (opposite ?l2 ?t) ) (not (in_motion ?t) ) ) ) (on ?t ?l2) (agent_holds ?t) ) ) ) )
          (once (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (< 3 (count-once-per-objects ballRolledOnRampToRug:alarm_clock:hexagonal_bin) )
    )
    (>= (count-once ballRolledOnRampToRug:rug:yellow) 16 )
  )
)
(:scoring
  (count throwMissesBin:basketball)
)
)



(define (game game-id-224) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds desk)
  )
)
(:constraints
  (and
    (forall (?l3 - block ?c1 - pyramid_block)
      (and
        (preference cubeThrownToBin
          (then
            (hold (and (not (not (in_motion ?c1) ) ) (and (same_object ?c1 ?c1) (<= 8 1) ) (object_orientation ?c1 diagonal) ) )
            (once (on ?c1 ?c1) )
            (once (not (and (same_type ?c1 bridge_block) (not (and (in ?c1 ?c1) (agent_holds ?c1) ) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  (* 1 3 )
)
)



(define (game game-id-225) (:domain few-objects-room-v1)
(:setup
  (forall (?b6 - dodgeball)
    (exists (?b1 - hexagonal_bin ?c1 - dodgeball ?d ?b ?ob ?c6 ?d ?b - (either teddy_bear dodgeball))
      (exists (?ob - game_object)
        (game-optional
          (and
            (agent_holds ?b6)
            (exists (?b - building)
              (exists (?b1 - (either dodgeball dodgeball))
                (not
                  (agent_holds ?ob)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c - building)
        (then
          (once (in_motion ?c) )
          (once (and (game_start ) (in_motion ?c) ) )
          (hold (and (on ?c rug) (same_object ?c ?c) ) )
        )
      )
    )
    (forall (?o1 - building ?d - hexagonal_bin ?c - (either dodgeball desktop pencil key_chain golfball))
      (and
        (preference objectToBinOnFirstTry
          (exists (?t - hexagonal_bin)
            (then
              (once (in_motion ?c) )
              (hold (in ?t ?t) )
              (once (in ?c ?t) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?s ?l4 - dodgeball)
            (then
              (hold (in_motion bed) )
              (once (in_motion ?s) )
              (once (< 1 1) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (then
            (hold-while (exists (?l4 - hexagonal_bin ?b - cube_block) (not (in_motion ?b) ) ) (and (not (agent_holds ?c) ) (and (in_motion blue) (agent_holds ?c) (in_motion ?c) ) ) )
            (hold-while (not (agent_holds ?c) ) (and (agent_holds ?c) (in ?c ?c) ) (same_color ?c ?c) (exists (?h - building) (and (in_motion desk) (adjacent room_center ?c) ) ) )
            (once (agent_holds ?c) )
          )
        )
        (preference ballThrownFromObjectToBin
          (exists (?w1 - ball)
            (then
              (once (exists (?c - (either ball)) (exists (?d - curved_wooden_ramp) (not (not (agent_holds ?d) ) ) ) ) )
              (hold (in_motion ?w1) )
              (hold (not (exists (?b3 - dodgeball) (touch ?c ?b3) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 300 (count objectToBinOnFirstTry:blue_cube_block) )
)
(:scoring
  (+ 2 (count-once-per-objects thrownBallHitsBlock:dodgeball) (count-once ballThrownToRampToBed:golfball) (+ 6 (count golfballLandsInBinThroughRamp:orange) )
    (* (* (count ballThrownFromObjectToBin:orange) (count ballThrownToRampToBed:green) 50 (- 7 )
        (* (- 4 4 ) 1 (* 40 2 )
        )
      )
      (external-forall-maximize
        (count ballThrownToRampToBed:hexagonal_bin)
      )
      60
      5
      (* (count-once-per-objects objectToBinOnFirstTry:yellow:golfball) (count-once-per-objects thrownBallHitsBlock:basketball:green) )
      5
      (count-once-per-external-objects ballThrownToRampToBed:golfball)
      3
      20
    )
    18
    (count-overlapping ballThrownToRampToBed:alarm_clock:pink_dodgeball)
  )
)
)



(define (game game-id-226) (:domain many-objects-room-v1)
(:setup
  (forall (?p2 - hexagonal_bin)
    (exists (?o - dodgeball ?c2 - tall_cylindrical_block ?p - shelf)
      (game-conserved
        (>= 7 (distance desk ?p2))
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - hexagonal_bin)
        (then
          (once (in_motion ?o) )
          (once (in ?o desk) )
          (once (and (< 1 (distance bed ?o)) (open ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count pinkObjectMovedToRoomCenter:beachball) (* 2 (count pinkObjectMovedToRoomCenter:dodgeball:cylindrical_block) )
    )
    (or
      (or
        (>= (* 30 4 )
          (external-forall-maximize
            (+ (+ (external-forall-maximize (count pinkObjectMovedToRoomCenter:purple:beachball) ) (- 300 )
              )
              10
            )
          )
        )
        (>= 20 (* 4 (* 9 40 )
          )
        )
        (>= 6 8 )
      )
    )
  )
)
(:scoring
  (* 3 )
)
)



(define (game game-id-227) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c4 - hexagonal_bin)
      (and
        (and
          (and
            (game-conserved
              (same_color rug ?c4)
            )
          )
          (and
            (game-optional
              (and
                (not
                  (adjacent ?c4 ?c4)
                )
                (on bed agent)
              )
            )
          )
          (game-conserved
            (on ?c4 agent)
          )
        )
        (forall (?p1 - drawer)
          (and
            (game-conserved
              (in ?p1 ?p1)
            )
            (and
              (game-conserved
                (on agent ?c4)
              )
            )
            (game-conserved
              (in_motion ?c4)
            )
          )
        )
        (game-optional
          (not
            (object_orientation ?c4 upside_down)
          )
        )
        (forall (?db - golfball ?b - hexagonal_bin)
          (exists (?d ?h - block)
            (forall (?b - yellow_pyramid_block)
              (game-optional
                (not
                  (same_type ?b ?b)
                )
              )
            )
          )
        )
        (forall (?h - beachball)
          (and
            (and
              (and
                (game-optional
                  (agent_holds floor)
                )
              )
              (or
                (and
                  (game-optional
                    (is_setup_object agent)
                  )
                  (game-optional
                    (broken ?c4)
                  )
                  (game-optional
                    (game_start )
                  )
                )
                (game-optional
                  (in_motion ?h)
                )
              )
              (and
                (game-conserved
                  (and
                    (on ?c4 ?c4)
                    (and
                      (not
                        (adjacent bed ?h)
                      )
                    )
                  )
                )
                (exists (?b9 - teddy_bear)
                  (and
                    (exists (?x ?x0 ?x1 - pink ?b - game_object ?b1 - block)
                      (and
                        (and
                          (exists (?b10 - wall ?b - dodgeball)
                            (and
                              (forall (?c - ball ?p - block)
                                (and
                                  (and
                                    (forall (?c - (either cube_block golfball golfball))
                                      (game-optional
                                        (agent_holds floor)
                                      )
                                    )
                                    (game-conserved
                                      (not
                                        (in_motion ?h)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (and
                                  (and
                                    (and
                                      (agent_holds ?b1)
                                      (not
                                        (and
                                          (in ?b ?b1)
                                          (forall (?c4 - wall)
                                            (not
                                              (not
                                                (in_motion ?b9)
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (and
                                        (agent_holds ?b9)
                                        (and
                                          (and
                                            (in_motion ?b)
                                            (in_motion ?b9)
                                          )
                                          (on ?b9 ?b1)
                                          (not
                                            (agent_holds ?c4)
                                          )
                                        )
                                      )
                                      (not
                                        (not
                                          (on agent top_drawer)
                                        )
                                      )
                                    )
                                    (and
                                      (is_setup_object ?b1)
                                      (and
                                        (exists (?h - (either alarm_clock alarm_clock) ?o ?r ?o ?w1 ?r2 ?o1 ?r1 ?t ?b ?b - desktop)
                                          (adjacent ?t ?r2)
                                        )
                                        (equal_x_position room_center ?b9)
                                      )
                                    )
                                  )
                                  (between ?b ?b1 green_golfball)
                                  (in_motion rug)
                                  (on ?b9 ?h)
                                  (agent_holds ?c4)
                                  (adjacent_side ?b9 front_left_corner ?b1)
                                  (not
                                    (and
                                      (rug_color_under ?h green)
                                      (in_motion ?b9)
                                    )
                                  )
                                )
                              )
                              (and
                                (game-conserved
                                  (in_motion ?b)
                                )
                              )
                              (game-conserved
                                (not
                                  (and
                                    (agent_holds ?b1)
                                  )
                                )
                              )
                              (exists (?x - orange)
                                (game-optional
                                  (in ?b1 ?c4)
                                )
                              )
                            )
                          )
                        )
                        (not
                          (forall (?g - cube_block)
                            (exists (?r - (either dodgeball blue_cube_block) ?o1 - hexagonal_bin)
                              (and
                                (and
                                  (forall (?h - curved_wooden_ramp ?r - (either pillow bed))
                                    (or
                                      (and
                                        (and
                                          (game-conserved
                                            (not
                                              (not
                                                (agent_holds ?o1)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (exists (?b2 - shelf ?o - dodgeball ?c4 - dodgeball)
                                    (exists (?h - tall_cylindrical_block ?c - triangular_ramp)
                                      (game-conserved
                                        (not
                                          (in_motion agent)
                                        )
                                      )
                                    )
                                  )
                                  (game-optional
                                    (agent_crouches )
                                  )
                                )
                                (and
                                  (and
                                    (game-optional
                                      (adjacent_side ?o1 left ?b1)
                                    )
                                    (exists (?p2 ?s ?c6 - hexagonal_bin)
                                      (forall (?o5 - block)
                                        (exists (?o - flat_block)
                                          (game-conserved
                                            (agent_holds ?o5)
                                          )
                                        )
                                      )
                                    )
                                    (not
                                      (exists (?o - pyramid_block)
                                        (and
                                          (game-conserved
                                            (exists (?f ?b7 - (either blue_cube_block dodgeball dodgeball))
                                              (on ?g agent)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (and
                                    (game-optional
                                      (and
                                        (agent_holds ?g)
                                        (in ?b1 ?b1)
                                      )
                                    )
                                  )
                                )
                                (and
                                  (and
                                    (exists (?b ?b ?bl - ball)
                                      (and
                                        (exists (?d ?b - dodgeball ?h ?r ?b7 ?h - cube_block)
                                          (exists (?h - sliding_door)
                                            (game-conserved
                                              (not
                                                (and
                                                  (not
                                                    (agent_holds ?b)
                                                  )
                                                  (not
                                                    (and
                                                      (and
                                                        (in_motion ?b1)
                                                        (object_orientation ?h upright)
                                                      )
                                                      (and
                                                        (and
                                                          (touch ?b7 ?g)
                                                          (agent_holds ?b9)
                                                        )
                                                        (in ?c4 ?o1)
                                                      )
                                                      (not
                                                        (or
                                                          (agent_holds pink)
                                                          (not
                                                            (in ?b9 ?h)
                                                          )
                                                        )
                                                      )
                                                      (or
                                                        (not
                                                          (adjacent_side ?b7 front_left_corner ?b7)
                                                        )
                                                        (on ?r ?b7)
                                                        (not
                                                          (between ?b9 ?c4 ?b)
                                                        )
                                                        (in ?r agent)
                                                      )
                                                      (agent_holds ?b7)
                                                      (on ?o1 ?b)
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (game-optional
                            (agent_holds ?b9)
                          )
                        )
                      )
                    )
                    (forall (?c1 - hexagonal_bin)
                      (exists (?l2 - (either game_object desktop cd))
                        (and
                          (exists (?d - game_object)
                            (and
                              (game-optional
                                (in agent ?c4)
                              )
                            )
                          )
                          (game-conserved
                            (not
                              (= (distance bed ?b9) 1)
                            )
                          )
                          (exists (?o4 - game_object)
                            (game-conserved
                              (adjacent door ?h)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference objectLandsInBin
          (exists (?o ?h - chair)
            (then
              (once (exists (?h - game_object ?h - curved_wooden_ramp) (in main_light_switch ?b) ) )
              (hold (< (distance bed ?o) 6) )
              (once (not (agent_holds ?o) ) )
              (once (on ?b ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (total-score) )
    (= 5 (total-score) )
    (> (* (- (* (count-once-per-external-objects objectLandsInBin:golfball) 6 (count-once-per-external-objects objectLandsInBin:yellow_cube_block) (* 5 3 )
            (count-once objectLandsInBin)
            (* (count-once-per-objects objectLandsInBin) (count objectLandsInBin:green) )
          )
        )
        (+ 15 (- (* 4 (count-unique-positions objectLandsInBin:pink_dodgeball) 30 )
          )
        )
      )
      15
    )
    (>= (total-time) (- 6 )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count objectLandsInBin:blue)
  )
)
)



(define (game game-id-228) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?b7 - wall)
        (forall (?h - block)
          (toggled_on ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference baseBlockInTowerAtEnd
          (then
            (once (and (exists (?g - hexagonal_bin ?b - doggie_bed ?b3 - (either dodgeball beachball)) (in ?b3 ?b3) ) (on ?s ?s) ) )
            (once (not (< (distance room_center ?s) 1) ) )
            (hold (and (adjacent desk ?s) (on ?s ?s) ) )
          )
        )
        (preference bookOnDeskShelf
          (exists (?b10 - dodgeball)
            (at-end
              (not
                (in_motion ?s)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects baseBlockInTowerAtEnd:pink) (count baseBlockInTowerAtEnd:basketball:book:tall_cylindrical_block) )
    (+ 1 (count-overlapping baseBlockInTowerAtEnd:yellow) )
  )
)
(:scoring
  (* (count bookOnDeskShelf:red_pyramid_block:orange) (* (external-forall-maximize (count-measure baseBlockInTowerAtEnd:hexagonal_bin) ) 20 )
  )
)
)



(define (game game-id-229) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - (either block dodgeball))
    (and
      (game-optional
        (touch agent ?r1)
      )
      (exists (?b7 - chair ?d - dodgeball)
        (or
          (game-conserved
            (and
              (and
                (on ?d brown)
                (object_orientation ?r1 diagonal)
              )
              (>= 5 (distance ?d ?d))
              (and
                (or
                  (not
                    (in_motion ?d)
                  )
                )
                (not
                  (in_motion ?d)
                )
              )
            )
          )
          (game-conserved
            (not
              (agent_holds ?r1)
            )
          )
        )
      )
      (exists (?h - drawer)
        (and
          (not
            (exists (?o - book ?c1 - triangular_ramp)
              (and
                (forall (?h - block ?r - drawer ?l1 - hexagonal_bin ?c - cube_block)
                  (game-conserved
                    (in_motion agent)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?h - cube_block)
        (then
          (hold-while (in ?h ?h) (in ?h ?h) )
          (once (agent_holds ?h) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (forall (?r - cube_block)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?d - (either key_chain credit_card))
            (then
              (hold (in_motion ?r) )
              (once (and (and (agent_holds ?d) (same_color ?r green) ) (not (in ?d ?d) ) ) )
              (hold (in_motion ?r) )
            )
          )
        )
      )
    )
    (forall (?r1 - (either golfball tall_cylindrical_block hexagonal_bin pillow))
      (and
        (preference dodgeballsInPlace
          (exists (?ob - hexagonal_bin)
            (then
              (hold (agent_holds ?ob) )
              (hold (in_motion ?r1) )
              (once (in ?r1 ?r1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 12 )
)
(:scoring
  (count-once-per-external-objects dodgeballsInPlace:golfball)
)
)



(define (game game-id-230) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?b4 - (either dodgeball flat_block) ?d - triangular_ramp)
      (not
        (and
          (game-optional
            (not
              (not
                (not
                  (on ?d ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?z ?z0 - front ?r - hexagonal_bin ?t2 - building ?c3 - chair)
        (then
          (once (not (not (touch ?c3 ?c3) ) ) )
          (hold-while (and (agent_holds ?c3) (> (distance desk ?c3) 5) ) (exists (?o3 - dodgeball ?b - ball) (in_motion ?c3) ) (not (and (and (not (on ?c3 ?c3) ) (not (and (game_over ) (rug_color_under desk tan) ) ) ) (< (distance ?c3 ?c3) (distance ?c3 ?c3)) ) ) (on ?c3 ?c3) )
          (once (agent_holds desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions ballThrownToBed:dodgeball) 4 )
)
(:scoring
  (= (count ballThrownToBed:dodgeball) 15 )
)
)



(define (game game-id-231) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - building)
    (forall (?l - doggie_bed)
      (game-conserved
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?p3 - shelf)
        (then
          (hold (not (exists (?y ?y0 ?y1 - (either diagonal)) (agent_holds ?p3) ) ) )
          (once (agent_holds ?p3) )
          (hold-while (exists (?h - chair) (is_setup_object ?h) ) (between ?p3 ?p3 ?p3) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count pillowThrownToDoggieBed:book:dodgeball) )
)
(:scoring
  (count pillowThrownToDoggieBed:hexagonal_bin:pink)
)
)



(define (game game-id-232) (:domain few-objects-room-v1)
(:setup
  (forall (?h - shelf)
    (and
      (not
        (or
          (forall (?b9 - game_object ?b5 - desk_shelf)
            (forall (?w2 - ball ?b - hexagonal_bin ?b5 - dodgeball)
              (and
                (forall (?r1 - ball)
                  (game-optional
                    (not
                      (in_motion ?r1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r1 ?h - (either chair blue_cube_block pillow))
      (and
        (preference objectMovedRoomSide
          (exists (?c5 - hexagonal_bin)
            (then
              (once (and (in_motion ?c5) (agent_holds ?r1) ) )
              (hold (not (on ?h floor) ) )
              (hold-while (and (not (not (agent_holds bed) ) ) (on ?h ?r1) (agent_holds ?r1) (and (agent_crouches ) (on agent top_shelf) ) (agent_holds tan) (not (or (exists (?b3 - cube_block) (adjacent ?h ?c5) ) (agent_holds ?h) (on ?c5 ?r1) ) ) ) (not (adjacent west_wall ?h) ) (and (in ?c5 ?h) (and (agent_holds ?c5) (not (in ?c5 ?h) ) ) (agent_holds ?r1) ) )
            )
          )
        )
      )
    )
    (preference ballThrownToChair
      (exists (?l - building)
        (then
          (once (in_motion ?l) )
          (hold (and (agent_holds ?l) (> 1 (distance ?l ?l)) ) )
          (once (not (agent_holds bed) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectMovedRoomSide:doggie_bed:pink_dodgeball) (count objectMovedRoomSide:beachball) )
)
(:scoring
  (* (count-once objectMovedRoomSide:pink_dodgeball) (* 6 (+ 5 3 )
    )
  )
)
)



(define (game game-id-233) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - curved_wooden_ramp)
    (game-optional
      (adjacent_side door back bed right)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?o - (either blue_cube_block laptop ball))
        (then
          (once (not (in_motion ?o) ) )
          (once (in ?o ?o) )
          (once (touch ?o floor) )
        )
      )
    )
    (forall (?h - block ?b - book)
      (and
        (preference throwKnocksBlock
          (exists (?h - (either triangular_ramp flat_block) ?b7 - (either top_drawer laptop laptop))
            (then
              (once (touch ?b ?b7) )
              (once (forall (?b - dodgeball ?h - (either alarm_clock tall_cylindrical_block key_chain beachball dodgeball curved_wooden_ramp chair)) (in_motion ?h) ) )
              (once (on ?b7 ?b7) )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?w2 - (either book dodgeball) ?r1 - triangular_ramp ?b - building)
            (then
              (once (on ?b ?b) )
              (once (and (and (and (in_motion ?b) (in ?b ?b) ) (on ?b ?b) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* (* 2 (count-once-per-objects throwKnocksBlock:beachball) )
        (count-once ballThrownToBin:dodgeball)
        5
        (count throwKnocksBlock:dodgeball:basketball)
      )
      (count throwKnocksBlock:dodgeball)
    )
    (>= (+ (count-once ballToBinFromBed:dodgeball) (count-once-per-objects ballToBinFromBed:golfball:dodgeball) )
      (count ballToBinFromBed:dodgeball)
    )
  )
)
(:scoring
  (count ballThrownToBin:pink)
)
)



(define (game game-id-234) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o4 - hexagonal_bin ?c4 - (either curved_wooden_ramp flat_block golfball) ?d - game_object)
      (forall (?c - (either doggie_bed key_chain dodgeball))
        (game-conserved
          (agent_holds ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball watch alarm_clock book cube_block side_table))
      (and
        (preference beachballOnRug
          (exists (?tb - chair)
            (then
              (once (and (not (in_motion ?tb) ) (exists (?r - (either dodgeball dodgeball tall_cylindrical_block)) (> (x_position ?r) (distance bed agent)) ) ) )
              (hold (and (not (in_motion ?tb) ) (in_motion ?b) ) )
              (once (in ?tb ?b) )
            )
          )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?o ?b - cube_block ?h ?p - (either ball dodgeball ball))
        (then
          (hold (not (not (not (and (not (on ?h ?h) ) (in ?p ?h) ) ) ) ) )
          (once (same_color bed ?h) )
          (once (and (in ?p ?p) (game_over ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 4 (total-time) )
    (and
      (< 10 (total-score) )
      (and
        (<= 10 8 )
        (and
          (or
            (>= (* (+ 5 2 )
                (count otherObjectsOnDeskShelf:doggie_bed)
              )
              15
            )
            (and
              (or
                (and
                  (> (count otherObjectsOnDeskShelf:dodgeball:beachball:blue_dodgeball) 5 )
                  (> (+ (+ (count-once-per-objects otherObjectsOnDeskShelf:beachball:dodgeball) (count-once otherObjectsOnDeskShelf:purple) (- (count beachballOnRug:golfball) )
                      )
                      (* 5 (+ (count-once-per-objects otherObjectsOnDeskShelf:book) 1 )
                        2
                        (* 5 (- 6 )
                        )
                      )
                    )
                    7
                  )
                  (< (count otherObjectsOnDeskShelf:pink) (* (external-forall-maximize (/ (* 1 (* (count-once-per-objects otherObjectsOnDeskShelf:cylindrical_block:blue_cube_block) (count-once-per-objects beachballOnRug:beachball:dodgeball) (count-shortest beachballOnRug:dodgeball:dodgeball) (count-once-per-objects beachballOnRug) (* (+ (count otherObjectsOnDeskShelf:pyramid_block) 0 0 3 (count otherObjectsOnDeskShelf:doggie_bed) )
                                4
                              )
                              (+ (* (* 5 (* (* (count-once-per-objects otherObjectsOnDeskShelf) (count beachballOnRug:pink_dodgeball) )
                                      10
                                    )
                                  )
                                  6
                                )
                                (count beachballOnRug:tall_cylindrical_block)
                                (external-forall-maximize
                                  (count otherObjectsOnDeskShelf:white)
                                )
                                6
                                25
                                (count otherObjectsOnDeskShelf:dodgeball:yellow)
                                (count-once-per-objects beachballOnRug)
                                (count-once-per-external-objects otherObjectsOnDeskShelf:blue_dodgeball)
                                (count beachballOnRug:pink_dodgeball)
                              )
                            )
                            3
                          )
                          (count otherObjectsOnDeskShelf:orange)
                        )
                      )
                      2
                    )
                  )
                )
              )
            )
          )
        )
        (< 3 (* 2 3 )
        )
      )
    )
  )
)
(:scoring
  (= (count-once beachballOnRug:dodgeball:pyramid_block) )
)
)



(define (game game-id-235) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - game_object)
    (game-optional
      (and
        (on rug ?d)
        (not
          (not
            (adjacent ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?h ?o ?r2 - ball ?b1 - cube_block ?o - dodgeball)
        (then
          (once (between ?o ?o rug) )
          (once (agent_holds ?o) )
          (hold (and (and (not (on ?o ?o) ) (not (and (agent_holds floor) (exists (?h - dodgeball) (game_over ) ) ) ) ) (> 1 (distance ?o ?o)) ) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?r - ball ?h - hexagonal_bin)
        (then
          (once (rug_color_under ?h orange) )
          (once (in_motion rug) )
          (hold-while (in ?h ?h) (not (or (not (on ?h ?h) ) (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (not
        (>= (* 4 (* (count ballThrownToBin:pink:doggie_bed:dodgeball) 7 )
            (count-same-positions ballThrownToBin:blue_dodgeball:blue_dodgeball)
          )
          (count-once-per-objects throwMissesBin:dodgeball)
        )
      )
      (or
        (or
          (>= 10 (count-once-per-objects throwMissesBin:pink) )
          (>= (total-score) (count throwMissesBin:golfball) )
          (or
            (< (count-once-per-objects throwMissesBin:blue_pyramid_block) (count throwMissesBin:beachball:basketball) )
            (<= (external-forall-maximize (count ballThrownToBin:basketball) ) 15 )
            (<= 50 1 )
          )
        )
      )
      (>= (total-score) (count-once throwMissesBin:beachball) )
    )
    (or
      (not
        (or
          (and
            (>= (* 15 (count ballThrownToBin) )
              (+ (count ballThrownToBin:alarm_clock) (count throwMissesBin:golfball:dodgeball:dodgeball) )
            )
          )
          (>= (total-time) 10 )
        )
      )
    )
    (and
      (>= 6 (total-score) )
    )
  )
)
(:scoring
  (+ 2 6 )
)
)



(define (game game-id-236) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 - ball ?o4 - hexagonal_bin ?c1 - (either cellphone pyramid_block))
    (exists (?d2 - block)
      (game-optional
        (exists (?x - purple ?c3 - dodgeball)
          (in_motion ?c3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference throwToRampToBin
          (then
            (hold (not (in_motion ?b) ) )
            (once (and (and (not (and (in agent ?b) (toggled_on bed) (in_motion desk) (and (not (agent_holds ?b) ) (agent_holds agent) ) (not (not (and (in ?b ?b) (agent_holds ?b) ) ) ) (in_motion ?b) (and (exists (?d - game_object) (< (distance_side desk front ?b left) 3) ) (not (not (agent_holds ?b) ) ) (toggled_on ?b) ) (and (not (agent_holds ?b) ) (and (not (and (on ?b ?b) (and (not (exists (?r - wall ?p2 - hexagonal_bin ?o - dodgeball) (and (and (in_motion ?b) (not (and (in_motion ?o) (and (agent_holds ?b) ) ) ) (and (and (in ?o ?o) (exists (?b6 - dodgeball ?x ?x0 ?x1 - red) (and (in_motion ?b) (and (in ?b ?o) (and (not (not (not (not (in_motion ?o) ) ) ) ) (same_color ?b6 floor) (agent_holds ?o) ) (not (object_orientation ?b6 sideways) ) ) ) ) ) (and (exists (?o ?o1 - hexagonal_bin) (in ?o1 ?o1) ) (not (and (exists (?b - ball) (forall (?p3 - block) (not (not (not (and (agent_holds ?p3) (in ?p3 ?b) ) ) ) ) ) ) (and (in_motion ?o) (in_motion ?o) ) ) ) ) ) ) (not (not (adjacent_side desk front_left_corner agent) ) ) ) ) ) (adjacent desk ?b) (agent_holds ?b) ) ) ) (in_motion agent) ) ) (and (and (not (in_motion ?b) ) (not (not (and (in_motion ?b) (agent_holds ?b) (agent_holds ?b) ) ) ) ) (or (not (in_motion ?b) ) (not (agent_holds ?b) ) ) (same_object ?b ?b) ) (and (touch agent ?b) (and (in_motion top_shelf) (agent_holds ?b) ) ) ) ) (agent_holds ?b) ) (<= (distance desk ?b) 6) ) )
            (once (in_motion ?b) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwToRampToBin:red) (count-once throwToRampToBin:dodgeball:yellow) )
    (>= (count-shortest throwToRampToBin:cube_block:beachball) 5 )
  )
)
(:scoring
  (count-once-per-external-objects throwToRampToBin:pink)
)
)



(define (game game-id-237) (:domain few-objects-room-v1)
(:setup
  (forall (?l - shelf)
    (game-conserved
      (and
        (agent_holds floor)
        (on ?l agent)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?d - ball)
        (then
          (once (in ?d agent) )
          (once (and (<= 3 (distance bed ?d)) (in_motion ?d) (< (distance door agent) (distance room_center ?d)) (in ?d ?d) ) )
          (once (game_over ) )
        )
      )
    )
    (forall (?c3 - ball ?h - dodgeball)
      (and
        (preference throwKnocksBlock
          (then
            (once (on ?h floor) )
            (hold (in ?h ?h) )
            (once (agent_holds ?h) )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?b - hexagonal_bin)
            (then
              (hold (in ?b ?b) )
              (hold (and (exists (?b - ball) (on ?b ?h) ) (and (not (agent_holds top_drawer) ) (or (between ?b ?b ?h) (not (not (touch ?h ?h) ) ) ) ) ) )
              (hold-while (adjacent desk ?b) (and (and (and (and (agent_holds ?b) (in_motion agent) ) (agent_holds brown) ) (in_motion rug) ) (agent_holds agent) ) )
              (once (and (agent_holds ?b) (and (not (and (and (same_color ?h ?b) (not (in_motion ?h) ) ) (and (not (in_motion ?h) ) (not (not (in ?h ?h) ) ) ) (agent_holds ?b) ) ) (in ?h ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* (count golfballLandsInBinThroughRamp:yellow:yellow) (count-once-per-objects throwKnocksBlock:pink) )
      (count-once-per-objects cubeBlockInBuilding:brown:white)
    )
    (>= 30 (* (count golfballLandsInBinThroughRamp:yellow_cube_block) (- (count-once cubeBlockInBuilding:red) )
      )
    )
  )
)
(:scoring
  (* 10 (- (count throwKnocksBlock:dodgeball) )
  )
)
)



(define (game game-id-238) (:domain few-objects-room-v1)
(:setup
  (exists (?c5 - hexagonal_bin)
    (game-optional
      (in_motion agent)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?y ?y0 - (either upright) ?b - desk_shelf ?b - pillow)
        (then
          (hold (not (or (and (in_motion ?b) (and (and (in_motion ?b) (> 7 (distance desk ?b)) ) (agent_holds ?b) ) (not (agent_holds ?b) ) (and (in ?b ?b) (in_motion ?b) ) ) (in_motion ?b) ) ) )
          (once (agent_holds ?b) )
          (once (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count ballThrowAttempt:beachball) 3 )
    (and
      (= (+ (= 4 (count ballThrowAttempt:pink_dodgeball) )
          2
        )
        5
      )
      (>= (< 2 (* (count ballThrowAttempt:book) (external-forall-maximize (* (count-measure ballThrowAttempt:purple) (* (/ (count ballThrowAttempt:beachball) (* (* 20 (- (* (* (count-once-per-external-objects ballThrowAttempt:hexagonal_bin) (count-once ballThrowAttempt:yellow) )
                            (count-total ballThrowAttempt:blue_cube_block)
                          )
                          (* (< (count-unique-positions ballThrowAttempt:golfball) (count ballThrowAttempt:yellow) )
                            40
                          )
                        )
                      )
                      (count ballThrowAttempt:beachball:beachball)
                    )
                  )
                  (* 10 5 180 (* 2 (* (* (- 10 )
                          (* 5 10 )
                          (count-once ballThrowAttempt:pink_dodgeball)
                        )
                        3
                        (+ (- 2 )
                          (count ballThrowAttempt:golfball:green)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        4
      )
    )
    (>= (* (count-unique-positions ballThrowAttempt:rug) (count-once-per-external-objects ballThrowAttempt:golfball) )
      (* (count-once-per-objects ballThrowAttempt:pink:golfball) 300 )
    )
  )
)
(:scoring
  (* 2 7 )
)
)



(define (game game-id-239) (:domain medium-objects-room-v1)
(:setup
  (exists (?c3 ?c - dodgeball ?w1 - hexagonal_bin ?o2 - (either pen floor))
    (exists (?c5 - curved_wooden_ramp ?b - pillow)
      (game-conserved
        (agent_holds ?o2)
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?l2 - dodgeball)
        (at-end
          (on ?l2 rug)
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    (count bigObjectThrownToBed:green)
  )
)
(:scoring
  (count bigObjectThrownToBed:beachball)
)
)



(define (game game-id-240) (:domain many-objects-room-v1)
(:setup
  (forall (?x - light_blue ?w2 - chair)
    (game-conserved
      (not
        (not
          (agent_holds ?w2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?y ?y0 ?y1 - (either diagonal upright sideways) ?b2 - hexagonal_bin)
        (then
          (hold (agent_holds ?b2) )
          (once (not (agent_holds ?b2) ) )
          (once (not (agent_holds ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) (count dodgeballAndBasketballInBin:orange) )
    )
    (>= (count dodgeballAndBasketballInBin:basketball) 0 )
    (<= (total-score) (* (* (* (* 3 (count-once-per-objects dodgeballAndBasketballInBin:cylindrical_block) )
            -10
            (count-once-per-objects dodgeballAndBasketballInBin:blue_dodgeball)
            6
          )
          (count dodgeballAndBasketballInBin:dodgeball)
        )
        (count-once-per-objects dodgeballAndBasketballInBin:golfball)
      )
    )
  )
)
(:scoring
  (* 2 (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) )
)
)



(define (game game-id-241) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c6 - teddy_bear ?g - (either curved_wooden_ramp desktop bridge_block))
      (and
        (game-optional
          (in ?g agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?l4 - wall)
        (then
          (once (agent_holds ?l4) )
          (once (agent_holds agent) )
          (once-measure (exists (?b ?p2 ?o ?o ?b ?o4 - hexagonal_bin) (in_motion ?o) ) (distance_side desk front agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (* (count-once-per-objects ballThrownToRampToBed:dodgeball) 8 3 0 )
  )
)
(:scoring
  (count ballThrownToRampToBed:golfball:basketball)
)
)



(define (game game-id-242) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b3 - teddy_bear)
      (forall (?o - cube_block)
        (forall (?c - hexagonal_bin)
          (forall (?h - (either blue_cube_block doggie_bed blue_cube_block pyramid_block blue_cube_block))
            (forall (?r - hexagonal_bin ?ob - ball)
              (game-optional
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?o - ball ?g - dodgeball)
        (then
          (once (and (on ?g ?g) ) )
          (hold (not (agent_holds ?g) ) )
          (hold (and (and (not (not (same_type ?g ?g) ) ) (not (touch ?g agent) ) ) (not (in_motion ?g) ) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?b10 - tan_cube_block)
        (then
          (hold (in_motion top_drawer) )
          (hold (and (agent_holds ?b10) (>= (distance desk ?b10) (distance_side ?b10 front_left_corner ?b10)) (and (not (agent_holds ?b10) ) (in_motion ?b10) ) ) )
          (hold (in_motion ?b10) )
        )
      )
    )
  )
)
(:terminal
  (> 12 (* (count blockPickedUp:yellow_cube_block) (- (count objectsHidden:dodgeball:basketball) )
    )
  )
)
(:scoring
  (count-overlapping blockPickedUp:blue_dodgeball:dodgeball)
)
)



(define (game game-id-243) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - building ?d - hexagonal_bin ?c2 - game_object ?o2 ?b7 - ball)
    (exists (?b1 - curved_wooden_ramp)
      (exists (?w2 - cube_block)
        (game-conserved
          (not
            (and
              (in ?w2 agent)
              (and
                (agent_holds ?o2)
                (and
                  (agent_holds ?b7)
                  (between ?w2 brown ?b7)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c6 - curved_wooden_ramp)
        (then
          (once (and (touch ?c6 ?c6) (equal_z_position ?c6 ?c6) (in ?c6 ?c6) ) )
          (once (= (distance door ?c6) 1) )
          (once (and (in_motion ?c6) (adjacent_side desk back ?c6) ) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (* (+ 2 3 )
        1
      )
      3
    )
    4
  )
)
(:scoring
  (count blockInTowerKnocked:basketball)
)
)



(define (game game-id-244) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (exists (?s - dodgeball)
      (and
        (and
          (and
            (game-optional
              (and
                (not
                  (agent_holds agent)
                )
              )
            )
          )
          (game-conserved
            (adjacent desk ?s)
          )
        )
        (forall (?o3 - (either cd flat_block))
          (and
            (game-conserved
              (on ?s agent)
            )
            (and
              (game-optional
                (adjacent_side desk front ?h)
              )
            )
            (forall (?d ?d2 - bridge_block ?g - beachball)
              (exists (?b9 - ball)
                (and
                  (and
                    (exists (?b - curved_wooden_ramp ?d - wall)
                      (exists (?o1 - game_object ?w2 - dodgeball)
                        (game-conserved
                          (and
                            (adjacent_side ?d front ?b9 right)
                            (in_motion ?o3)
                            (agent_holds ?h)
                          )
                        )
                      )
                    )
                    (forall (?d2 - chair)
                      (and
                        (exists (?x - green)
                          (exists (?c - building)
                            (forall (?h - block ?c - chair)
                              (or
                                (and
                                  (and
                                    (and
                                      (and
                                        (game-optional
                                          (adjacent_side desk back ?g)
                                        )
                                        (forall (?x - tan)
                                          (and
                                            (exists (?g - wall ?d - (either bridge_block desktop golfball pillow))
                                              (exists (?b - hexagonal_bin)
                                                (and
                                                  (game-optional
                                                    (not
                                                      (in_motion ?c)
                                                    )
                                                  )
                                                  (game-conserved
                                                    (agent_holds ?s)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (between ?b9 ?c ?h)
                                  )
                                )
                                (game-conserved
                                  (and
                                    (not
                                      (in_motion ?o3)
                                    )
                                    (not
                                      (and
                                        (and
                                          (not
                                            (in_motion ?s)
                                          )
                                          (in_motion ?d2)
                                        )
                                        (and
                                          (not
                                            (not
                                              (agent_holds ?s)
                                            )
                                          )
                                          (< 1 1)
                                        )
                                      )
                                    )
                                    (not
                                      (and
                                        (not
                                          (and
                                            (in_motion ?d2)
                                            (in_motion bed)
                                          )
                                        )
                                        (agent_holds ?o3)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (and
                            (game-conserved
                              (not
                                (in ?s ?d2)
                              )
                            )
                            (exists (?ob - hexagonal_bin)
                              (exists (?h - chair)
                                (and
                                  (game-conserved
                                    (and
                                      (between desk ?ob ?d2)
                                      (not
                                        (adjacent door ?s)
                                      )
                                    )
                                  )
                                  (game-conserved
                                    (in_motion ?ob)
                                  )
                                  (and
                                    (or
                                      (and
                                        (exists (?r - dodgeball)
                                          (exists (?x - orange)
                                            (and
                                              (exists (?r - doggie_bed ?b - ball)
                                                (and
                                                  (forall (?l - dodgeball)
                                                    (game-optional
                                                      (not
                                                        (agent_holds ?r)
                                                      )
                                                    )
                                                  )
                                                  (forall (?l2 - hexagonal_bin)
                                                    (game-optional
                                                      (and
                                                        (in_motion ?b9)
                                                        (on ?o3 ?l2)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                              (exists (?b4 - building)
                                                (game-optional
                                                  (agent_holds ?r)
                                                )
                                              )
                                              (forall (?d - game_object ?h ?b5 ?d - ball)
                                                (and
                                                  (game-optional
                                                    (on ?d2 ?g)
                                                  )
                                                  (game-conserved
                                                    (on agent ?h)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (exists (?r - dodgeball)
                                          (game-conserved
                                            (in_motion ?o3)
                                          )
                                        )
                                      )
                                      (game-optional
                                        (not
                                          (agent_holds agent)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (game-optional
                              (not
                                (in_motion ?b9)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?b - ball ?d - hexagonal_bin)
        (then
          (once-measure (adjacent ?d ?d) (distance_side room_center front_left_corner ?d left) )
          (once (agent_holds ?d) )
          (once (between ?d ?d ?d) )
        )
      )
    )
    (forall (?c2 - (either dodgeball beachball))
      (and
        (preference watchOnShelf
          (exists (?y ?y0 ?y1 - (either sideways diagonal))
            (at-end
              (agent_holds ?c2)
            )
          )
        )
        (preference objectInBuilding
          (exists (?h - hexagonal_bin)
            (at-end
              (object_orientation ?h upright)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 15 )
)
(:scoring
  (count watchOnShelf:brown)
)
)



(define (game game-id-245) (:domain few-objects-room-v1)
(:setup
  (exists (?d - shelf)
    (exists (?p - hexagonal_bin ?p - red_dodgeball)
      (game-optional
        (not
          (and
            (in_motion ?d)
            (on ?d ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l ?o ?d - chair)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?s - hexagonal_bin ?c - dodgeball)
            (then
              (hold (in_motion agent) )
              (once (and (in_motion ?l) (agent_holds bottom_shelf) ) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (count nonBlockPlacedInBuilding:blue_dodgeball:red:book) )
    (count nonBlockPlacedInBuilding:white)
  )
)
(:scoring
  (count nonBlockPlacedInBuilding:yellow)
)
)



(define (game game-id-246) (:domain few-objects-room-v1)
(:setup
  (exists (?b5 - (either cube_block blue_cube_block yellow_cube_block))
    (forall (?b - game_object ?c - hexagonal_bin)
      (game-optional
        (agent_holds ?b5)
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?l - (either cylindrical_block cylindrical_block) ?d - hexagonal_bin)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects smallObjectThrownToBed:green) (count smallObjectThrownToBed:dodgeball) )
)
(:scoring
  (* 3 5 )
)
)



(define (game game-id-247) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b1 - hexagonal_bin)
      (forall (?c - hexagonal_bin)
        (and
          (game-conserved
            (touch ?c ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - hexagonal_bin)
      (and
        (preference ballThrownToBin
          (then
            (hold (not (agent_holds ?p1) ) )
            (once (agent_holds ?p1) )
            (hold (in_motion ?p1) )
          )
        )
      )
    )
  )
)
(:terminal
  (< (+ (count ballThrownToBin:brown:alarm_clock) 8 )
    5
  )
)
(:scoring
  (count ballThrownToBin:basketball)
)
)



(define (game game-id-248) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds rug)
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?s - dodgeball)
        (at-end
          (not
            (not
              (not
                (not
                  (same_type top_shelf ?s)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count-longest ballThrownMissesEverything:cube_block:dodgeball) ) 6 )
)
(:scoring
  (+ (count ballThrownMissesEverything:basketball:dodgeball) (* (count-once ballThrownMissesEverything:basketball) (- 0.5 )
    )
    4
    10
  )
)
)



(define (game game-id-249) (:domain many-objects-room-v1)
(:setup
  (forall (?c - teddy_bear)
    (and
      (game-optional
        (and
          (not
            (in ?c ?c)
          )
          (agent_holds ?c)
        )
      )
      (game-conserved
        (in_motion ?c)
      )
      (and
        (game-conserved
          (not
            (agent_holds ?c)
          )
        )
        (exists (?l1 - block)
          (exists (?l2 - building)
            (game-conserved
              (in ?l2 rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - drawer)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?l3 - cube_block)
            (then
              (hold-while (and (in ?o ?l3) (not (in_motion ?l3) ) (and (adjacent_side ?l3 right rug front) (agent_holds ?o) ) ) (on ?o ?o) )
              (hold-while (equal_z_position side_table ?l3) (and (not (on ?l3 ?l3) ) (and (not (and (adjacent_side rug back desk) (and (agent_holds ?l3) (and (and (in rug ?l3) ) (in ?l3 bed) ) (and (in_motion ?o) (<= (distance ?o ?o) 1) ) (not (on ?o ?l3) ) ) (in_motion ?l3) ) ) ) (< (distance room_center top_drawer) (distance room_center rug)) (equal_z_position ?l3 ?o) ) (adjacent_side desk back agent left) (in_motion ?l3) )
              (once (adjacent_side desk right ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects dodgeballBouncesOnceToDoggieBed:cube_block:hexagonal_bin) (total-score) )
  )
)
(:scoring
  (* 6 (count-once-per-objects dodgeballBouncesOnceToDoggieBed:yellow) )
)
)



(define (game game-id-250) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?p2 - game_object)
          (and
            (and
              (exists (?y - sideways)
                (exists (?bl - ball)
                  (not
                    (game-optional
                      (in_motion ?bl)
                    )
                  )
                )
              )
            )
            (or
              (and
                (game-conserved
                  (agent_holds ?p2)
                )
              )
              (game-optional
                (in_motion ?p2)
              )
              (and
                (game-conserved
                  (agent_holds ?p2)
                )
                (game-conserved
                  (agent_holds ?p2)
                )
                (game-conserved
                  (and
                    (not
                      (in ?p2 ?p2)
                    )
                    (on ?p2 ?p2)
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?p - teddy_bear ?t - cube_block)
        (not
          (and
            (and
              (and
                (exists (?h - doggie_bed)
                  (exists (?r1 - dodgeball ?p1 - game_object)
                    (game-conserved
                      (not
                        (and
                          (not
                            (not
                              (and
                                (in ?h ?p1)
                                (agent_holds ?p1)
                              )
                            )
                          )
                          (on ?p1 ?p1)
                          (not
                            (agent_holds ?t)
                          )
                        )
                      )
                    )
                  )
                )
                (exists (?b - hexagonal_bin)
                  (game-conserved
                    (and
                      (in_motion ?b)
                      (not
                        (forall (?r1 - building ?r - game_object)
                          (> (distance bed ?b) 10)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?r - beachball)
        (then
          (once (in ?r ?r) )
          (once (and (in_motion rug) (not (and (in_motion ?r) (and (in_motion ?r) (and (not (in ?r green_golfball) ) (agent_holds ?r) (adjacent desk agent) ) ) ) ) (on ?r agent) ) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?b8 - cube_block)
        (then
          (once (and (agent_holds ?b8) (agent_holds ?b8) ) )
          (once (agent_holds ?b8) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 2 )
)
(:scoring
  (* 20 (count ballThrownToBin:cylindrical_block) )
)
)



(define (game game-id-251) (:domain many-objects-room-v1)
(:setup
  (exists (?c - drawer)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?t - hexagonal_bin)
        (at-end
          (in_motion ?t)
        )
      )
    )
    (preference throwInBin
      (exists (?h - curved_wooden_ramp)
        (then
          (once (and (in bed ?h) (= (distance desk ?h) (distance ?h desk)) ) )
          (once (in ?h ?h) )
          (once (on ?h ?h) )
          (once (not (> 3 (distance ?h ?h)) ) )
        )
      )
    )
  )
)
(:terminal
  (= (>= 3 10 )
    (* (external-forall-minimize (external-forall-maximize (count-once-per-objects throwInBin:yellow:dodgeball) ) ) (* (count throwInBin:pink:dodgeball) (count-once-per-objects tanObjectMovedToRoomCenter:top_drawer:dodgeball) )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-unique-positions tanObjectMovedToRoomCenter:tan)
  )
)
)



(define (game game-id-252) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?l - hexagonal_bin ?b - (either dodgeball cellphone))
      (and
        (not
          (agent_holds agent)
        )
        (forall (?c5 - (either bed cellphone) ?h - (either golfball))
          (> 1 (distance desk rug))
        )
        (adjacent desk ?b)
        (and
          (touch ?b ?b)
          (agent_holds ?b)
          (not
            (and
              (in rug ?b)
              (in ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?o4 - hexagonal_bin)
        (then
          (hold (and (and (on ?o4 west_wall) (< (distance west_wall ?o4) (distance desk ?o4)) ) (in_motion ?o4) ) )
          (once (in_motion ?o4) )
          (once (adjacent_side ?o4 back ?o4 front_left_corner) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 5 (external-forall-maximize (count-longest teddyBearHitsBall:pyramid_block:golfball:orange) ) (= 3 )
    )
    (count-once-per-objects teddyBearHitsBall:red)
  )
)
(:scoring
  (count teddyBearHitsBall:dodgeball:yellow)
)
)



(define (game game-id-253) (:domain few-objects-room-v1)
(:setup
  (exists (?h - curved_wooden_ramp)
    (forall (?c - hexagonal_bin)
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - drawer ?d - cube_block ?z - (either front_left_corner back))
      (and
        (preference blockThrowAttempt
          (at-end
            (on ?d ?d)
          )
        )
        (preference blockKnockedFromBuildingInBin
          (exists (?o - bridge_block ?b6 - cube_block)
            (at-end
              (on ?b6 ?d)
            )
          )
        )
        (preference ballThrownToBed
          (exists (?d2 - dodgeball)
            (then
              (once (and (agent_holds ?d) (agent_holds ?d2) ) )
              (once (not (faces ?d2 ?d) ) )
              (once (in ?d ?d2) )
            )
          )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?h - (either pyramid_block credit_card))
        (then
          (once (and (and (agent_holds agent) (in_motion ?h) (in_motion ?h) ) (and (< 4 (x_position ?h)) (and (not (in agent ?h) ) (and (agent_holds ?h) (adjacent ?h ?h) ) ) ) ) )
          (hold (in_motion ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 10 (count blockThrowAttempt:dodgeball) )
      (* (count-once-per-objects ballThrownToBed:dodgeball) (count-once-per-objects golfballLandsInBinThroughRamp:tan) )
    )
    7
  )
)
(:scoring
  (* (external-forall-minimize (count golfballLandsInBinThroughRamp:yellow_pyramid_block) ) 3 )
)
)



(define (game game-id-254) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - ball ?o1 - game_object)
    (and
      (game-optional
        (adjacent_side ?o1 right ?o1 front)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - shelf)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?o - hexagonal_bin ?l4 - hexagonal_bin)
            (then
              (once (< 2 8) )
              (hold (and (and (not (agent_holds ?l) ) (forall (?h - dodgeball) (and (in_motion agent) (not (in_motion ?h) ) ) ) ) (and (not (and (not (faces rug ?l4) ) (on ?l ?l4) ) ) (in_motion ?l) ) (on ?l ?l) (adjacent desk ?l) ) )
              (once (same_color ?l4 agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 1 )
)
(:scoring
  (* 40 (* (* 9 10 )
      (+ 2 (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball) )
      3
    )
    2
    (* 10 (count-once-per-objects blockInTowerKnockedByDodgeball:blue_pyramid_block:hexagonal_bin) )
    5
    (* 7 (count-once-per-external-objects blockInTowerKnockedByDodgeball:blue_dodgeball:green) )
  )
)
)



(define (game game-id-255) (:domain few-objects-room-v1)
(:setup
  (forall (?x - white)
    (game-conserved
      (exists (?p - triangular_ramp)
        (not
          (exists (?h - hexagonal_bin)
            (not
              (= (distance ?p ?h))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?bl - pillow ?g - (either dodgeball alarm_clock) ?t1 ?l ?d ?b ?ob - game_object)
        (then
          (once (game_over ) )
          (once (not (agent_holds desk) ) )
          (hold (exists (?g - block) (on ?ob ?b) ) )
          (once (in desk ?d) )
          (hold (and (in_motion ?b) (not (equal_x_position ?ob ?t1) ) ) )
        )
      )
    )
    (forall (?g - hexagonal_bin ?c - hexagonal_bin)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?b - curved_wooden_ramp)
            (then
              (once (adjacent_side ?b back ?b) )
              (once (or (agent_holds ?b) (in_motion ?c) ) )
              (hold (and (not (in_motion ?c) ) (and (and (and (adjacent ?c ?c) (not (or (forall (?b - block) (and (agent_holds ?c) (not (in ?b ?c) ) ) ) (on ?b ?c) ) ) ) (agent_holds ?b) (not (adjacent_side rug front ?c) ) ) (and (touch ?c ?b) (in_motion ?b) (and (touch ?b ?c) (above ?c agent) ) ) ) (agent_holds ?c) ) )
              (once (< (building_size ?c) 1) )
            )
          )
        )
        (preference throwToBin
          (then
            (once (adjacent door ?c) )
            (once (and (and (in ?c ?c) (and (not (not (in_motion ?c) ) ) ) ) ) )
            (once (not (agent_holds ?c) ) )
          )
        )
        (preference throwKnocksOverBear
          (exists (?c - (either game_object pyramid_block hexagonal_bin) ?c2 - game_object ?b4 - hexagonal_bin ?b3 - building ?b - cube_block)
            (then
              (hold (in_motion ?b) )
              (once (and (in_motion ?b) (in_motion ?b) ) )
              (once (and (not (in_motion ?b) ) (not (or (agent_holds desk) (and (adjacent ?b rug) (not (agent_holds ?c) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?ob - block)
        (then
          (once (adjacent room_center ?ob) )
          (once (and (and (in_motion ?ob) (agent_holds ?ob) ) (in_motion ?ob) ) )
          (once (in ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (<= 9 5 )
)
(:scoring
  (* (count-once-per-objects throwToBin:yellow) )
)
)



(define (game game-id-256) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t1 - dodgeball)
      (and
        (game-optional
          (not
            (and
              (> (distance desk ?t1) (distance bed ?t1))
              (adjacent_side bed back ?t1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?db - bridge_block)
        (then
          (once (agent_holds ?db) )
          (hold (in ?db ?db) )
          (once (in_motion ?db) )
        )
      )
    )
  )
)
(:terminal
  (and
    (= (count-once-per-external-objects dodgeballHitsPillowWithoutTouchingBlock:hexagonal_bin) (total-score) )
    (or
      (> (* (external-forall-minimize (* (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock) 4 )
          )
          (+ (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball:basketball) (* (count dodgeballHitsPillowWithoutTouchingBlock:green) 1 )
            )
            3
          )
        )
        (* (external-forall-maximize (>= (count dodgeballHitsPillowWithoutTouchingBlock:pink) 3 )
          )
          5
        )
      )
    )
  )
)
(:scoring
  (/
    10
    1
  )
)
)



(define (game game-id-257) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o - game_object)
      (game-conserved
        (agent_holds ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (at-end
        (in_motion rug)
      )
    )
    (forall (?bl - hexagonal_bin)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?c - building ?f - cube_block)
            (at-end
              (and
                (above floor agent)
                (forall (?c - dodgeball)
                  (on ?f ?c)
                )
              )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?c1 - ball ?c2 - hexagonal_bin)
            (at-end
              (adjacent ?bl ?bl)
            )
          )
        )
      )
    )
    (preference blockPickedUp
      (exists (?t - cube_block)
        (then
          (hold (on ?t ?t) )
          (once (exists (?b1 - hexagonal_bin) (and (exists (?r2 - block) (and (not (opposite ?b1 ?r2) ) (agent_holds ?t) (and (on ?r2 ?t) (in_motion ?t) ) ) ) (and (= (building_size ?b1) (distance room_center ?t)) (not (agent_holds ?t) ) ) ) ) )
          (hold-while (< (distance desk ?t) 1) (same_type agent ?t) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (or
        (> 4 1 )
        (> (< (count-once blockPickedUp:dodgeball:dodgeball) (* 2 (* (* (count blockPickedUp:golfball) (count-once-per-external-objects ballThrownToRampToBed:dodgeball:beachball) )
                2
              )
            )
          )
          (count failedThrowToBin:dodgeball)
        )
      )
      (not
        (>= 2 2 )
      )
    )
  )
)
(:scoring
  (* 5 5 )
)
)



(define (game game-id-258) (:domain many-objects-room-v1)
(:setup
  (or
    (and
      (exists (?b5 - block)
        (and
          (game-conserved
            (and
              (not
                (on ?b5 ?b5)
              )
              (in ?b5 agent)
            )
          )
        )
      )
      (exists (?x - orange ?t - chair)
        (and
          (exists (?z ?z0 - left)
            (game-conserved
              (not
                (and
                  (in_motion blue)
                  (not
                    (in_motion ?t)
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?d - building)
      (exists (?d - hexagonal_bin)
        (and
          (game-optional
            (agent_holds agent)
          )
          (game-conserved
            (in ?d agent)
          )
          (exists (?h - hexagonal_bin ?o1 - dodgeball ?d - hexagonal_bin)
            (forall (?b - hexagonal_bin)
              (game-conserved
                (agent_holds ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?c5 - hexagonal_bin)
        (then
          (once (and (and (touch ?c5 floor) (on ?c5 ?c5) ) (and (on bed ?c5) ) ) )
          (once (in_motion ?c5) )
          (hold (= 6 2) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?o5 - building)
        (then
          (once (and (agent_holds ?o5) (in_motion ?o5) ) )
          (hold (and (agent_holds rug) (not (agent_holds ?o5) ) ) )
          (once (agent_holds ?o5) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockPickedUp:basketball) 300 )
)
(:scoring
  (count blockPickedUp:beachball:golfball)
)
)



(define (game game-id-259) (:domain few-objects-room-v1)
(:setup
  (forall (?h - (either basketball cube_block golfball))
    (game-conserved
      (not
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b10 - ball)
        (then
          (once (and (in floor ?b10) (agent_holds ?b10) ) )
          (hold (and (in_motion ?b10) (agent_holds ?b10) (not (and (and (same_color ?b10 ?b10) (and (in ?b10 agent) (not (adjacent_side room_center front floor right) ) ) (in_motion ?b10) ) (and (agent_holds ?b10) (agent_holds ?b10) ) ) ) (same_type ?b10 block) (not (not (on ?b10 ?b10) ) ) (not (in_motion ?b10) ) (not (agent_holds ?b10) ) (on ?b10 ?b10) (and (broken ?b10) (not (and (not (and (or (agent_holds agent) (and (exists (?b - ball) (adjacent ?b10 blue) ) (and (adjacent ?b10 ?b10) (faces ?b10 ?b10) ) (and (in ?b10 ?b10) (touch ?b10 ?b10) ) (and (adjacent room_center ?b10) (agent_holds floor) ) ) ) (and (and (in ?b10 agent) (not (not (touch ?b10 agent) ) ) ) (agent_holds ?b10) ) ) ) (or (< 1 0.5) ) (in_motion ?b10) (agent_holds ?b10) ) ) ) (in_motion ?b10) ) )
          (once (<= (distance door agent) 1) )
        )
      )
    )
  )
)
(:terminal
  (> 7 (+ (* (count itemsBroken:dodgeball) (+ (* 4 (count-once-per-objects itemsBroken:pink) )
          (count itemsBroken:tall_cylindrical_block)
          (count itemsBroken:tan:golfball)
        )
      )
      5
    )
  )
)
(:scoring
  (+ (- 3 )
    (* 3 (count itemsBroken:basketball) )
    10
    (count-total itemsBroken)
    3
    30
  )
)
)



(define (game game-id-260) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t ?b - chair)
      (game-conserved
        (and
          (touch ?t floor)
          (on ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - dodgeball ?b - doggie_bed ?c3 ?c3 ?h ?c ?d - chair)
        (then
          (hold (game_start ) )
          (once (and (and (not (and (= 1 8) (in_motion ?c) ) ) (on ?c3 ?h) ) (in_motion ?h) ) )
          (once (not (in ?d ?h) ) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (* (count throwBallToBin:dodgeball:basketball) 1 )
    )
    (* 6 (* 1 (* (count-once-per-objects throwBallToBin:dodgeball) 180 )
        15
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwBallToBin:pink:yellow_pyramid_block)
)
)



(define (game game-id-261) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds floor)
  )
)
(:constraints
  (and
    (forall (?d - tall_cylindrical_block ?g - teddy_bear ?b4 - hexagonal_bin ?r - bridge_block)
      (and
        (preference ballThrownFromDoor
          (exists (?c4 - game_object)
            (then
              (once (on ?c4 ?c4) )
              (hold-while (not (or (exists (?h - cylindrical_block) (on agent ?c4) ) (touch top_drawer ?c4) ) ) (in_motion ?r) )
              (once (in_motion bed) )
            )
          )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?b7 - hexagonal_bin ?x ?x0 - orange)
        (then
          (hold (in_motion ?b7) )
          (hold (and (on ?b7 ?b7) (and (not (game_start ) ) (touch ?b7 ?b7) ) (agent_holds ?b7) (not (not (< 1 (distance ?b7 ?b7)) ) ) ) )
          (hold-while (in ?b7 ?b7) (in_motion ?b7) )
        )
      )
    )
  )
)
(:terminal
  (= (count ballThrownFromDoor:red) (* 1 (* 5 (count-once-per-objects ballThrownFromDoor:golfball:dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromDoor:blue_pyramid_block)
)
)



(define (game game-id-262) (:domain medium-objects-room-v1)
(:setup
  (forall (?y ?y0 - sideways)
    (and
      (forall (?b1 - hexagonal_bin)
        (forall (?t2 - game_object)
          (game-optional
            (agent_holds ?t2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c5 - (either game_object pillow))
        (at-end
          (adjacent_side room_center front_left_corner ?c5)
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?b - building)
        (then
          (hold (and (agent_holds agent) (agent_holds ?b) ) )
          (hold (in ?b ?b) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (= 3 (total-time) )
)
(:scoring
  (count brownObjectMovedToRoomCenter:beachball)
)
)



(define (game game-id-263) (:domain many-objects-room-v1)
(:setup
  (exists (?c3 - hexagonal_bin ?b5 - game_object)
    (and
      (game-optional
        (not
          (same_type ?b5 drawer)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - pyramid_block)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?h - curved_wooden_ramp)
            (then
              (once (not (and (in_motion ?h) (equal_x_position ?o2 ?o2) ) ) )
              (once (on ?o2 ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin) 3 )
    (or
      (> (count redDodgeballThrownToBinWithoutTouchingFloor:pink:blue_dodgeball) (* (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:rug:purple) (* 5 (* (count-same-positions redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball:green) )
          )
        )
      )
      (not
        (>= 2 7 )
      )
      (>= (total-score) (total-time) )
    )
  )
)
(:scoring
  (* 10 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) )
)
)



(define (game game-id-264) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - ball)
    (exists (?o - drawer)
      (game-conserved
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?c2 - hexagonal_bin ?p - cube_block)
        (then
          (once (faces agent agent) )
          (once (rug_color_under ?p yellow) )
          (once (and (touch ?p ?p) (not (touch ?p bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= 15 (+ 3 (count smallObjectThrownToBed:blue_dodgeball) (count-increasing-measure smallObjectThrownToBed:blue) )
      )
    )
    (> (count-once smallObjectThrownToBed:beachball) 5 )
    (>= 0.5 (* 3 (* (+ (/ 60 7 ) (count smallObjectThrownToBed:hexagonal_bin) (count-once-per-objects smallObjectThrownToBed:blue:pink) )
          3
        )
      )
    )
  )
)
(:scoring
  (count smallObjectThrownToBed:basketball:purple:book)
)
)



(define (game game-id-265) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - doggie_bed ?g - cube_block ?b - dodgeball)
    (and
      (and
        (game-conserved
          (and
            (and
              (and
                (and
                  (not
                    (in ?b ?b)
                  )
                  (adjacent south_wall ?b)
                )
                (and
                  (game_start )
                  (< 9 1)
                )
                (and
                  (in_motion ?b)
                  (same_color ?b ?b)
                )
              )
              (same_color ?b ?b)
            )
            (in ?b ?b)
            (adjacent green_golfball ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference cubeBlockInBuilding
          (exists (?d - (either pencil dodgeball))
            (then
              (once (on ?d ?b) )
              (once (equal_x_position rug ?d) )
              (hold (agent_holds ?b) )
            )
          )
        )
        (preference ballKnocksTeddy
          (exists (?o - wall)
            (then
              (hold-while (and (agent_holds ?b) (and (on ?o ?o) (in ?b rug) ) ) (adjacent_side ?o front_left_corner agent back) )
              (hold (rug_color_under ?b gray) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count ballKnocksTeddy:dodgeball) )
    (> (external-forall-maximize (count ballKnocksTeddy:blue_cube_block:blue_dodgeball) ) (total-score) )
  )
)
(:scoring
  (count ballKnocksTeddy:pink)
)
)



(define (game game-id-266) (:domain many-objects-room-v1)
(:setup
  (exists (?tb - hexagonal_bin ?t - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?d - wall)
        (at-end
          (in_motion ?d)
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?c - (either dodgeball cube_block pillow))
        (then
          (once (in_motion top_shelf) )
          (hold-while (agent_holds top_shelf) (not (adjacent room_center ?c) ) )
          (once (not (in_motion ?c) ) )
        )
      )
    )
    (preference rollBallToBin
      (exists (?c4 - doggie_bed ?h - building)
        (then
          (hold (or (in ?h ?h) ) )
          (hold (agent_holds ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects rollBallToBin:pink_dodgeball) (count-overlapping objectToBinOnFirstTry:yellow) )
)
(:scoring
  (* (* (* (= (count objectToBinOnFirstTry:pyramid_block) )
        (count rollBallToBin:dodgeball)
        (* 15 (* (* 0 (* (count throwToRampToBin:tan) 2 )
              (count throwToRampToBin:dodgeball)
              (+ 3 (count throwToRampToBin:dodgeball) )
              (* (+ (+ (count objectToBinOnFirstTry:red) (count-once rollBallToBin:beachball:hexagonal_bin) )
                  (count throwToRampToBin:side_table:yellow)
                )
                (* (count-once-per-objects objectToBinOnFirstTry:basketball) (+ (count objectToBinOnFirstTry:golfball) (count objectToBinOnFirstTry:dodgeball) )
                  (* (external-forall-maximize (count-once rollBallToBin:tan) ) (count rollBallToBin:purple) )
                  10
                  (* 10 10 )
                )
              )
              (* (count objectToBinOnFirstTry:purple) 4 )
            )
            18
            (external-forall-maximize
              (* (+ (+ (count throwToRampToBin:triangle_block:alarm_clock) 6 )
                  (count throwToRampToBin:red)
                )
                15
              )
            )
            3
          )
        )
        4
        (count-once-per-external-objects throwToRampToBin:red:dodgeball)
        (* 10 (count-once-per-objects rollBallToBin:alarm_clock) )
      )
      (* (count rollBallToBin:orange) (count objectToBinOnFirstTry:golfball:beachball) )
    )
    10
  )
)
)



(define (game game-id-267) (:domain many-objects-room-v1)
(:setup
  (exists (?c - (either key_chain dodgeball game_object))
    (exists (?g - curved_wooden_ramp)
      (and
        (game-optional
          (adjacent room_center ?g)
        )
        (game-optional
          (agent_holds ?g)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c ?w1 ?d - game_object ?c5 - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?d - (either bridge_block cellphone))
            (then
              (hold (exists (?c5 - curved_wooden_ramp ?h - building) (agent_holds ?d) ) )
              (once (and (< (distance ?c5 ?c5) 1) (agent_holds desk) (above agent ?d) ) )
              (hold (and (on ?d agent) (not (above ?c5 ?d) ) ) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?b - dodgeball)
            (then
              (once (in_motion ?b) )
              (once (not (and (or (and (agent_holds ?b) (and (in_motion ?b) (in ?c5 ?b) (and (in_motion ?b) (on ?c5 ?b) ) ) ) ) (not (and (agent_holds bed) (agent_holds ?c5) ) ) (exists (?d - doggie_bed ?b1 - game_object) (not (agent_holds ?b1) ) ) ) ) )
              (once (touch ?c5 ?b) )
            )
          )
        )
      )
    )
    (forall (?l1 - hexagonal_bin)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?p - (either floor cylindrical_block))
            (then
              (once (not (same_type agent block) ) )
              (hold (and (not (in_motion agent) ) (agent_holds ?p) (in_motion ?l1) ) )
              (once (in_motion ?l1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (* 3 (+ 12 10 )
      )
      (- (external-forall-maximize (* 3 10 )
        )
      )
      (count throwToBinFromOppositeWall:basketball:dodgeball)
    )
    3
  )
)
(:scoring
  (* 2 (* 2 (- (* 1 (+ (* (* (count-once-per-objects dodgeballAndBasketballInBin:yellow) (count throwToBinFromOppositeWall:dodgeball:basketball) )
              (* (count dodgeballAndBasketballInBin:dodgeball) (* (* (* (* 0 (count dodgeballAndBasketballInBin:yellow:orange) (* (count-once dodgeballAndBasketballInBin:green:basketball) (count throwToBinFromOppositeWall:dodgeball:side_table) )
                      )
                      (>= 10 (count dodgeballAndBasketballInBin:blue_cube_block:basketball) )
                      2
                      (count-once objectOnBed:basketball)
                      7
                      (count-once-per-objects dodgeballAndBasketballInBin:pink)
                    )
                    (count throwToBinFromOppositeWall:basketball)
                    (count throwToBinFromOppositeWall:hexagonal_bin)
                  )
                  (count dodgeballAndBasketballInBin:book:beachball)
                )
              )
              3
              (* (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) 9 )
              (count throwToBinFromOppositeWall:beachball:yellow_cube_block)
              2
            )
            (* (* (external-forall-maximize (count-once-per-objects dodgeballAndBasketballInBin:yellow_cube_block:basketball) ) (- (>= 2 (count-measure throwToBinFromOppositeWall:blue_cube_block) )
                )
                1
              )
              (count objectOnBed:purple)
            )
          )
        )
      )
      4
      (* (count dodgeballAndBasketballInBin:cube_block:golfball) 9 2 )
      (count objectOnBed:golfball)
      (* 1 (* (- 10 )
          (count throwToBinFromOppositeWall:dodgeball)
        )
      )
      (external-forall-maximize
        (* 12 (count objectOnBed:golfball) )
      )
    )
    3
  )
)
)



(define (game game-id-268) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - doggie_bed)
    (exists (?p - hexagonal_bin ?b - (either desktop key_chain cellphone) ?b - pillow)
      (game-optional
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?l - pillow)
        (then
          (once (and (agent_holds ?l) (touch ?l ?l) ) )
          (hold (in_motion ?l) )
          (once (in ?l ?l) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - ball)
        (then
          (once (in ?h ?h) )
          (once (adjacent desk ?h) )
          (once (on ?h ?h) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?o - hexagonal_bin)
        (then
          (hold-while (and (exists (?d - hexagonal_bin) (adjacent_side ?o front ?o) ) (and (in ?o ?o) (object_orientation ?o upright) (game_start ) ) ) (and (and (and (in ?o ?o) (on ?o ?o) ) (agent_holds ?o) ) (and (= 4 (building_size ?o)) (equal_z_position desk ?o) ) ) )
          (hold (and (agent_holds ?o) (agent_holds ?o) ) )
          (hold (and (in ?o ?o) (<= 2 (distance bed ?o)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ 2 (* 15 (- (+ (* 2 (count ballThrownHitsAgent:red) )
            (+ 1 (count dodgeballHitsBinBottom:book) )
            (count dodgeballHitsBinBottom:dodgeball:dodgeball)
          )
        )
      )
      (+ (count-total ballThrownHitsAgent:dodgeball) 3 )
      (count-once-per-objects ballThrownHitsAgent:blue_dodgeball:blue)
      5
      5
    )
  )
)
(:scoring
  (count dodgeballHitsBinBottom:dodgeball)
)
)



(define (game game-id-269) (:domain medium-objects-room-v1)
(:setup
  (exists (?o5 ?b - hexagonal_bin)
    (forall (?t - cube_block ?b2 - hexagonal_bin)
      (game-conserved
        (faces ?b2 ?o5)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?b7 - dodgeball)
        (then
          (once (between ?b7 bed ?b7) )
          (once (adjacent ?b7 ?b7) )
          (once (not (and (not (in_motion ?b7) ) (not (rug_color_under ?b7 pink) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count pillowThrownToDoggieBed:golfball:blue_cube_block) ) 4 )
)
(:scoring
  (count-once pillowThrownToDoggieBed:beachball)
)
)



(define (game game-id-270) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (< (distance desk top_shelf) 6)
  )
)
(:constraints
  (and
    (forall (?b - (either cellphone cellphone))
      (and
        (preference castleBuilt
          (exists (?c - dodgeball ?g - hexagonal_bin ?w2 - hexagonal_bin ?b4 - hexagonal_bin)
            (then
              (hold (and (exists (?w - wall) (in ?b ?b) ) (< 1 9) (and (agent_holds ?b4) (and (and (forall (?h - hexagonal_bin) (agent_holds ?h) ) (on agent agent) (and (forall (?b - hexagonal_bin) (on ?b ?b) ) (and (in ?b4 ?b) (touch ?b4 ?b) ) (not (in_motion ?b) ) ) ) (on ?b ?b4) ) (agent_crouches ) ) ) )
              (once (in_motion ?b) )
              (hold (and (adjacent bed ?b) (and (on agent ?b) (agent_holds ?b) ) (on ?b4 ?b) (and (not (in ?b ?b) ) (and (in ?b4 agent) (not (not (in_motion ?b) ) ) (< (distance room_center ?b) 2) (or (agent_holds ?b4) (not (in_motion ?b) ) ) ) (in_motion ?b) (agent_holds ?b4) (in_motion ?b) (agent_holds bed) ) (not (agent_holds bed) ) (not (agent_crouches ) ) (agent_holds ?b) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?w2 ?b7 ?h - game_object)
        (then
          (hold (in_motion ?b7) )
          (once (same_color ?h ?h) )
          (hold (in_motion ?b7) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 8 (count-once-per-objects castleBuilt:pink_dodgeball) )
      (and
        (>= (total-score) 10 )
        (>= (count ballThrownThroughRampToBin:basketball) (- 2 1 ) )
        (>= (count-once-per-objects castleBuilt:golfball) (count-once-per-objects ballThrownThroughRampToBin:pyramid_block) )
      )
    )
    (>= 2 (count-once-per-objects castleBuilt:dodgeball) )
  )
)
(:scoring
  (count-unique-positions castleBuilt:yellow_cube_block)
)
)



(define (game game-id-271) (:domain few-objects-room-v1)
(:setup
  (forall (?c6 - hexagonal_bin)
    (exists (?l1 - game_object)
      (game-optional
        (adjacent ?c6 ?l1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?b - chair ?d - hexagonal_bin ?h - red_dodgeball)
        (at-end
          (and
            (in bed ?h)
            (and
              (agent_holds ?h)
              (in ?h desk)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 9 (* 10 (count-once-per-objects ballThrownToBed:pink_dodgeball:pink_dodgeball) 3 10 )
  )
)
(:scoring
  (count ballThrownToBed)
)
)



(define (game game-id-272) (:domain many-objects-room-v1)
(:setup
  (forall (?b - (either doggie_bed side_table basketball))
    (forall (?l ?o2 - teddy_bear)
      (game-optional
        (or
          (touch ?l ?l)
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?h - hexagonal_bin)
        (at-end
          (not
            (on ?h ?h)
          )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?h - (either dodgeball cd) ?r - (either cube_block mug))
        (then
          (once (not (and (and (and (agent_holds ?r) ) (in_motion ?r) ) (not (not (in ?r ?r) ) ) ) ) )
          (once (in_motion ?r) )
          (once (agent_holds ?r) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count-once-per-objects throwAttemptKnocksBlock:blue_pyramid_block) (* 5 (count throwAttemptKnocksBlock:blue_cube_block:green) )
    )
  )
)
(:scoring
  (count bigObjectThrownToBed:golfball:golfball)
)
)



(define (game game-id-273) (:domain medium-objects-room-v1)
(:setup
  (exists (?t2 ?o1 - doggie_bed)
    (and
      (game-conserved
        (on ?t2 floor)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?t - wall)
        (at-end
          (in ?t ?t)
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToBinOffObject:golfball) (= 3 (count throwBallToBinOffObject:bed) )
  )
)
(:scoring
  (count throwBallToBinOffObject)
)
)



(define (game game-id-274) (:domain medium-objects-room-v1)
(:setup
  (forall (?l4 - (either beachball laptop lamp))
    (exists (?c4 ?c3 - chair)
      (game-conserved
        (on ?c4 ?c4)
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?h - cube_block ?h ?r ?g ?d - hexagonal_bin ?d - (either cube_block dodgeball key_chain dodgeball cd) ?l2 - cube_block)
        (then
          (once (same_object ?l2 ?l2) )
          (once (agent_holds ?l2) )
          (once (and (and (not (on ?l2 ?l2) ) (on ?l2 ?l2) ) (not (= 9 8) ) ) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?b - curved_wooden_ramp ?b4 - block)
        (then
          (once (and (and (not (in_motion ?b4) ) (in_motion ?b4) (forall (?d - dodgeball) (object_orientation ?b4 diagonal) ) ) (and (in_motion ?b4) (in_motion ?b4) ) ) )
          (once (in_motion ?b4) )
          (once (in ?b4 ?b4) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 3 )
    (< 5 (count blockThrowAttempt:basketball) )
  )
)
(:scoring
  (* (count-once-per-objects blockThrowAttempt:doggie_bed) (count-once-per-objects blockThrowAttempt:cube_block) )
)
)



(define (game game-id-275) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - hexagonal_bin ?h - dodgeball)
    (game-optional
      (in ?h bed)
    )
  )
)
(:constraints
  (and
    (forall (?g ?c2 - (either cube_block tall_cylindrical_block chair pyramid_block cellphone alarm_clock basketball) ?t - (either floor blue_cube_block golfball))
      (and
        (preference smallItemsInPlace
          (then
            (once (and (in_motion ?t) (and (not (and (not (not (and (and (on ?t ?t) (agent_holds ?t) (faces ?t ?t) ) (agent_holds ?t) ) ) ) (in ?t agent) (rug_color_under bed blue) ) ) (and (on ?t desk) (touch ?t ?t) ) (same_object ?t ?t) ) (= 6 3) ) )
            (hold (forall (?d2 - hexagonal_bin) (or (on floor ?t) (agent_holds ?d2) ) ) )
            (hold (is_setup_object ?t) )
          )
        )
      )
    )
    (preference golfballInBinFromPillow
      (exists (?h - dodgeball)
        (then
          (once (not (not (on ?h ?h) ) ) )
          (once (and (and (in_motion ?h) ) (not (in_motion ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  (count smallItemsInPlace:beachball)
)
)



(define (game game-id-276) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - ball)
    (game-optional
      (and
        (and
          (not
            (not
              (and
                (equal_z_position ?c2 ?c2)
                (not
                  (and
                    (same_color ?c2 ?c2)
                    (in_motion ?c2)
                  )
                )
                (on agent ?c2)
              )
            )
          )
          (>= 1 1)
        )
        (agent_holds ?c2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?r - wall ?o2 - dodgeball ?d1 - (either desktop desktop doggie_bed))
        (at-end
          (> (distance ?d1 ?d1) 8)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count-same-positions ballThrownOntoTarget:golfball) )
)
(:scoring
  (+ (count-unique-positions ballThrownOntoTarget:dodgeball) (- (count-longest ballThrownOntoTarget:triangle_block) )
  )
)
)



(define (game game-id-277) (:domain many-objects-room-v1)
(:setup
  (exists (?w2 - hexagonal_bin ?b9 - curved_wooden_ramp ?db - hexagonal_bin)
    (exists (?h - (either cube_block laptop) ?b10 - (either chair desktop))
      (exists (?b4 - shelf)
        (and
          (and
            (and
              (forall (?o1 - ball)
                (game-optional
                  (not
                    (not
                      (adjacent_side room_center back ?db)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b6 - hexagonal_bin)
        (then
          (once (not (not (agent_holds ?b6) ) ) )
          (once (agent_holds ?b6) )
          (hold-while (< 2 (distance ?b6 ?b6)) (in_motion ?b6) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b - hexagonal_bin ?l - building)
        (then
          (once (in ?l floor) )
          (hold (in agent ?l) )
          (hold (agent_holds ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (count-same-positions throwObjectToBin:tall_cylindrical_block) ) (count-once throwObjectToBin:doggie_bed) )
)
(:scoring
  (* (count matchingBuildingBuilt:pink_dodgeball) (count throwObjectToBin:dodgeball) )
)
)



(define (game game-id-278) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (forall (?h - doggie_bed)
      (not
        (on ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference objectMoved
      (exists (?g - red_pyramid_block ?b7 - dodgeball)
        (then
          (once (agent_holds ?b7) )
          (once (adjacent ?b7 ?b7) )
          (hold (and (not (agent_holds ?b7) ) (and (in_motion ?b7) (agent_holds ?b7) ) ) )
        )
      )
    )
    (preference golfballLandsInBinThroughRamp
      (exists (?c5 - chair ?b - dodgeball)
        (then
          (once (and (touch ?b floor) (and (agent_holds floor) (not (same_object ?b agent) ) ) ) )
          (once (in_motion ?b) )
          (once (and (agent_holds ?b) (and (in_motion ?b) (forall (?h - triangular_ramp) (< (distance room_center ?h) 0) ) (agent_holds ?b) ) (agent_holds ?b) (agent_holds blue) ) )
        )
      )
    )
    (forall (?b5 - triangular_ramp)
      (and
        (preference ballThrownToBin
          (exists (?d - pyramid_block)
            (then
              (once (agent_holds ?b5) )
              (hold (in_motion ?b5) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?x - blue)
            (then
              (hold (same_color ?b5 ?b5) )
              (hold (adjacent ?b5 ?b5) )
              (once (and (not (not (not (in_motion ?b5) ) ) ) (and (in_motion ?b5) (agent_holds ?b5) (agent_holds agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (total-score) 8 )
      (and
        (>= (count ballThrownToBin:beachball) (count objectMoved:dodgeball:dodgeball) )
      )
    )
    (or
      (or
        (>= (total-time) (count-once-per-objects ballInOrOnBin:dodgeball) )
      )
      (or
        (>= (* 1 (count-once-per-objects objectMoved:blue_cube_block) )
          (total-score)
        )
        (> 10 (* (* 1 (* (count-unique-positions ballInOrOnBin:alarm_clock:basketball) 100 )
            )
            (external-forall-maximize
              (count-once ballInOrOnBin:golfball)
            )
          )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownToBin:dodgeball)
)
)



(define (game game-id-279) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?c1 - hexagonal_bin)
      (and
        (adjacent desk ?c1)
        (in_motion brown)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?ob - ball)
        (then
          (once (exists (?l3 - cube_block ?r - dodgeball) (agent_holds ?ob) ) )
          (once (in_motion ?ob) )
          (once (and (in_motion ?ob) (exists (?b - ball ?s - building ?s - dodgeball) (not (in bed ?s) ) ) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?b8 - curved_wooden_ramp)
        (then
          (hold (and (and (in_motion agent) ) (not (and (in_motion ?b8) (on rug ?b8) ) ) ) )
          (once (same_object ?b8 agent) )
          (once (agent_holds rug) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwBallFromOtherBallToBin:yellow) (* (+ (+ 2 2 )
          (* (count dodgeballAndBasketballInBin:purple:alarm_clock) (count-once-per-objects throwBallFromOtherBallToBin:doggie_bed:pink_dodgeball) 1 60 5 2 )
        )
        6
      )
      (- (* (- (external-forall-minimize (* (count-once-per-objects dodgeballAndBasketballInBin:book) (* (* (count-unique-positions throwBallFromOtherBallToBin:dodgeball) 1 )
                  (count dodgeballAndBasketballInBin:hexagonal_bin)
                )
              )
            )
          )
          (external-forall-maximize
            (count-once-per-objects throwBallFromOtherBallToBin:rug:triangle_block)
          )
        )
      )
    )
    5
  )
)
(:scoring
  (* 5 (count throwBallFromOtherBallToBin:dodgeball) (count throwBallFromOtherBallToBin:cube_block) )
)
)



(define (game game-id-280) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 - ball ?h - red_dodgeball)
    (game-optional
      (broken ?h)
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?p2 - ball)
        (then
          (once (agent_holds ?p2) )
          (once (exists (?x - (either pink green green)) (agent_holds ?p2) ) )
          (once-measure (on ?p2 ?p2) (distance_side ?p2 front floor back) )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemInClosedDrawerAtEnd:blue_dodgeball) (external-forall-maximize (= (count itemInClosedDrawerAtEnd:white) )
    )
  )
)
(:scoring
  (+ 7 (+ 1 (count-once-per-objects itemInClosedDrawerAtEnd:blue_dodgeball) (+ (* 5 (+ (count itemInClosedDrawerAtEnd:red_pyramid_block:beachball) (+ (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) (<= (* (count itemInClosedDrawerAtEnd:cube_block) (* (/ (external-forall-maximize (count-once-per-external-objects itemInClosedDrawerAtEnd:dodgeball) ) (- (* 4 (count-once itemInClosedDrawerAtEnd:hexagonal_bin:red) 6 (count-increasing-measure itemInClosedDrawerAtEnd:basketball) )
                      )
                    )
                    (+ (count-once itemInClosedDrawerAtEnd:golfball) 1 )
                  )
                )
                (* 2 2 )
              )
            )
          )
        )
        (count-same-positions itemInClosedDrawerAtEnd:dodgeball)
      )
    )
  )
)
)



(define (game game-id-281) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?r - book)
      (exists (?b - hexagonal_bin ?c5 - hexagonal_bin)
        (not
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?b10 - hexagonal_bin)
            (then
              (once (<= (distance ?o ?b10) 1) )
              (hold (< (distance rug ?o) (distance bed ?b10)) )
            )
          )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?ob ?b - hexagonal_bin)
        (then
          (once (touch ?ob ?b) )
          (hold (adjacent ?b ?b) )
          (once-measure (in_motion bed) (distance ?ob ?b) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?l - game_object)
        (then
          (hold-while (adjacent ?l ?l) (not (agent_holds ?l) ) (touch ?l ?l) (in_motion ?l) )
          (once (in_motion ?l) )
          (once (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-minimize (>= 4 (count-once-per-objects redDodgeballThrownToBin:dodgeball:book) )
    )
    3
  )
)
(:scoring
  (count-once ballThrownToWallToAgent:pink_dodgeball)
)
)



(define (game game-id-282) (:domain many-objects-room-v1)
(:setup
  (exists (?o ?d - hexagonal_bin)
    (or
      (exists (?b - hexagonal_bin)
        (and
          (and
            (game-conserved
              (agent_holds ?o)
            )
            (not
              (forall (?d - curved_wooden_ramp)
                (game-conserved
                  (< (distance east_sliding_door ?d) (distance ?d ?b))
                )
              )
            )
            (game-optional
              (not
                (not
                  (not
                    (not
                      (agent_holds bed)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b4 - hexagonal_bin ?t - hexagonal_bin)
        (and
          (forall (?b3 - hexagonal_bin ?h - hexagonal_bin)
            (game-conserved
              (and
                (in_motion ?h)
                (not
                  (not
                    (rug_color_under top_drawer color)
                  )
                )
              )
            )
          )
          (game-conserved
            (and
              (not
                (not
                  (not
                    (game_over )
                  )
                )
              )
              (and
                (not
                  (exists (?h ?h ?b ?h ?bl ?h ?g ?o2 ?c3 ?l1 - yellow_pyramid_block)
                    (equal_z_position ?b ?b)
                  )
                )
                (on ?o ?t)
              )
            )
          )
          (forall (?x - pink)
            (game-optional
              (same_object ?d agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?c - dodgeball ?h ?c1 - doggie_bed)
        (then
          (once (and (not (in_motion ?c1) ) (and (in ?h ?h) (not (in ?c1 ?h) ) ) (game_start ) (agent_holds ?c1) ) )
          (once (agent_holds ?c1) )
          (once (in ?h ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects towerFallsWhileBuilding:beachball) (count-once-per-objects towerFallsWhileBuilding:dodgeball) )
)
(:scoring
  (external-forall-maximize
    (* 3 (count-overlapping towerFallsWhileBuilding:pink_dodgeball) (count-once-per-objects towerFallsWhileBuilding:golfball) )
  )
)
)



(define (game game-id-283) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - doggie_bed)
    (exists (?p ?d2 - building ?x - (either red red))
      (game-conserved
        (and
          (not
            (and
              (in ?l ?p)
              (and
                (on ?d2 ?p)
                (open ?d2)
                (in ?p ?l)
              )
            )
          )
          (adjacent bed ?l)
          (agent_holds ?p)
          (same_object ?p ?d2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - ball)
        (at-end
          (and
            (and
              (in_motion ?b)
              (not
                (and
                  (in_motion ?b)
                  (same_type ?b pillow)
                )
              )
            )
            (is_setup_object rug)
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?b4 ?f ?t - game_object)
        (then
          (once (>= 4 (distance ?b4 ?f)) )
          (hold (broken ?f) )
          (once (and (on ?t ?b4) (touch ?b4 ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (or
        (or
          (>= (count-once-per-objects throwKnocksOverBear:blue_pyramid_block) 6 )
          (>= (total-score) 5 )
        )
        (>= (count blockInTowerKnockedByDodgeball:basketball) 5 )
      )
      (or
        (not
          (> (count throwKnocksOverBear:basketball) (count-unique-positions throwKnocksOverBear:dodgeball) )
        )
        (>= 3 (* 4 (count-once blockInTowerKnockedByDodgeball:green) )
        )
      )
      (and
        (or
          (> (+ (count throwKnocksOverBear:yellow_cube_block) (count blockInTowerKnockedByDodgeball:pink_dodgeball) )
            (+ (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball:alarm_clock) )
              (count-once-per-objects blockInTowerKnockedByDodgeball:beachball:basketball)
            )
          )
          (> (count-shortest blockInTowerKnockedByDodgeball:rug) (total-score) )
        )
        (and
          (and
            (>= 4 (- 10 )
            )
          )
        )
      )
    )
    (= (+ (* 8 1 )
        (external-forall-minimize
          (count throwKnocksOverBear:orange)
        )
      )
      (* (count blockInTowerKnockedByDodgeball:pink:pyramid_block) (count blockInTowerKnockedByDodgeball:dodgeball) (count throwKnocksOverBear:pink) )
    )
    (< (total-time) (total-score) )
  )
)
(:scoring
  (count-once-per-objects throwKnocksOverBear:pink_dodgeball)
)
)



(define (game game-id-284) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - wall)
    (game-optional
      (and
        (in_motion ?o)
        (in ?o ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?c1 - hexagonal_bin ?b - game_object)
        (then
          (once (touch ?b ?b) )
          (once (and (in_motion bed) (agent_holds agent) ) )
          (hold (rug_color_under ?b yellow) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count-once-per-objects beachballBouncedOffRamp:blue_dodgeball) (* 2 (count-unique-positions beachballBouncedOffRamp:beachball) )
        (external-forall-minimize
          (* 6 (+ 3 5 )
          )
        )
      )
      (+ (count-once-per-external-objects beachballBouncedOffRamp:beachball:golfball) 1 )
    )
    (total-score)
  )
)
(:scoring
  (* (count-once-per-objects beachballBouncedOffRamp:top_drawer) 3 )
)
)



(define (game game-id-285) (:domain few-objects-room-v1)
(:setup
  (exists (?t - game_object)
    (and
      (and
        (exists (?g - drawer ?b10 - dodgeball)
          (game-conserved
            (not
              (agent_holds agent)
            )
          )
        )
      )
      (game-optional
        (not
          (agent_holds ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?h - hexagonal_bin ?t - block)
        (then
          (once (in_motion ?t) )
          (once (on ?t ?t) )
          (once (not (<= (building_size ?t) 2) ) )
        )
      )
    )
    (forall (?o - chair)
      (and
        (preference throwKnocksBlock
          (exists (?r1 ?h - dodgeball ?db - hexagonal_bin ?d - block ?c - game_object)
            (then
              (hold (agent_holds ?o) )
              (once (adjacent desk ?c) )
              (hold-while (= 2 (distance ?c ?c)) (game_over ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-unique-positions throwKnocksBlock:red:tan) )
)
(:scoring
  (* 10 6 )
)
)



(define (game game-id-286) (:domain many-objects-room-v1)
(:setup
  (forall (?h - pillow)
    (forall (?db - curved_wooden_ramp ?d - chair)
      (game-conserved
        (and
          (not
            (exists (?o - hexagonal_bin)
              (adjacent_side room_center front_left_corner ?o back)
            )
          )
          (= (distance ?h ?d) 7)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?c ?c ?c - curved_wooden_ramp)
        (then
          (once (not (and (on ?c ?c) (and (and (agent_holds ?c) (in_motion agent) ) (and (adjacent desk ?c) (agent_holds ?c) ) ) ) ) )
          (hold-while (agent_holds ?c) (not (touch ?c ?c) ) )
          (once (same_object ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (external-forall-maximize (count throwToBinFromDistance:alarm_clock) ) )
)
(:scoring
  (count-shortest throwToBinFromDistance:book)
)
)



(define (game game-id-287) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (<= 6 1)
  )
)
(:constraints
  (and
    (forall (?d - doggie_bed)
      (and
        (preference objectWithMatchingColor
          (exists (?c - curved_wooden_ramp ?c - building)
            (at-end
              (agent_holds ?c)
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?o - dodgeball)
        (at-end
          (agent_holds ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (count objectWithMatchingColor:alarm_clock) 2 )
)
(:scoring
  (count objectWithMatchingColor:bed)
)
)



(define (game game-id-288) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - teddy_bear)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?o2 - hexagonal_bin)
        (at-end
          (and
            (in ?o2 ?o2)
            (in agent ?o2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 1 (count-once throwToRampToBin:blue_pyramid_block) )
      (count throwToRampToBin:basketball)
      (* (count-once-per-objects throwToRampToBin:white) (count throwToRampToBin:dodgeball:yellow) )
      (* 3 (* (- (count throwToRampToBin:golfball:hexagonal_bin) )
          (count throwToRampToBin:hexagonal_bin)
        )
      )
      (- (count-once-per-external-objects throwToRampToBin:beachball:beachball) )
      (count-once-per-objects throwToRampToBin:pink)
    )
    2
  )
)
(:scoring
  (count throwToRampToBin:blue_dodgeball)
)
)



(define (game game-id-289) (:domain few-objects-room-v1)
(:setup
  (exists (?s - block ?ob - hexagonal_bin)
    (exists (?w2 - hexagonal_bin)
      (exists (?p - dodgeball ?c - block)
        (game-optional
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w2 ?c3 ?c2 ?c2 ?h ?b - shelf ?h - chair ?b1 - chair)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?o5 - hexagonal_bin)
            (then
              (hold (and (agent_holds ?b1) (agent_holds ?o5) (in_motion ?b1) (not (in_motion ?b1) ) (adjacent room_center ?b1) (agent_holds agent) ) )
              (once (not (in_motion ?b1) ) )
              (once (and (in ?o5 ?o5) (not (not (and (in ?o5 ?b1) (in_motion ?b1) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference teddyBearLandsInBin
          (exists (?d - dodgeball ?y ?y0 - (either sideways upside_down sideways))
            (then
              (once (agent_holds ?r) )
              (hold-while (agent_holds ?r) (touch agent ?r) (in_motion agent) )
              (once (and (forall (?c - hexagonal_bin) (on ?r rug) ) (and (not (agent_holds ?r) ) (and (in ?r ?d) (in ?d ?d) ) ) ) )
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (exists (?h - building ?b8 - (either dodgeball desktop))
            (then
              (hold-while (above ?b8 desk) (and (touch ?r ?r) (in ?r ?r) ) )
              (once (same_color agent pink) )
              (once (not (= (distance bed ?b8) 9) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 3 4 )
    (count golfballLandsInBinThroughRamp:red)
  )
)
(:scoring
  (count-shortest golfballLandsInBinThroughRamp:dodgeball:dodgeball)
)
)



(define (game game-id-290) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - block)
    (exists (?o - blue_pyramid_block ?h - pillow)
      (and
        (and
          (forall (?z ?z0 - back)
            (and
              (and
                (forall (?b - hexagonal_bin ?h - cube_block)
                  (forall (?d1 - hexagonal_bin)
                    (exists (?d - hexagonal_bin)
                      (game-conserved
                        (in ?h ?p)
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (exists (?b - building)
                      (agent_holds ?b)
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (touch ?h ?h)
                )
                (exists (?o - doggie_bed ?l - (either cube_block alarm_clock))
                  (game-conserved
                    (not
                      (agent_holds ?h)
                    )
                  )
                )
                (game-conserved
                  (in_motion ?p)
                )
              )
            )
          )
          (game-optional
            (agent_holds agent)
          )
          (game-conserved
            (in_motion ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?o2 - (either laptop floor hexagonal_bin))
        (then
          (once (agent_holds ?o2) )
          (once (in_motion ?o2) )
          (once (in_motion ?o2) )
        )
      )
    )
    (forall (?o2 - game_object)
      (and
        (preference castleBuilt
          (exists (?o3 - tall_cylindrical_block)
            (then
              (once (not (above ?o2 ?o2) ) )
              (hold (agent_holds ?o2) )
              (once (not (or (and (and (not (and (and (on desk ?o2) (and (not (or (and (in_motion ?o2) (and (<= 0.5 (distance rug rug)) (above agent ?o3) (not (same_color ?o2 ?o2) ) ) (agent_holds ?o2) (in_motion ?o3) (in_motion ?o3) (not (agent_holds ?o2) ) ) (agent_holds ?o2) ) ) (agent_holds agent) ) ) (in ?o3 blue) ) ) (and (in_motion rug) (agent_holds ?o3) ) ) (< (distance door ?o2) 2) ) (not (agent_holds ?o2) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-score) )
)
(:scoring
  (count-once-per-objects castleBuilt:basketball)
)
)



(define (game game-id-291) (:domain few-objects-room-v1)
(:setup
  (exists (?t - shelf)
    (exists (?r ?d - (either desktop golfball desktop))
      (game-conserved
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?p - hexagonal_bin)
        (then
          (hold (not (equal_z_position ?p ?p) ) )
          (once (not (agent_holds ?p) ) )
          (once (touch ?p ?p) )
        )
      )
    )
    (forall (?b - dodgeball)
      (and
        (preference ballThrownToWallToAgent
          (exists (?c - dodgeball ?r - (either blue_cube_block doggie_bed dodgeball))
            (then
              (hold (adjacent room_center ?r) )
              (once (agent_holds floor) )
              (once (not (or (and (not (on agent ?b) ) (in_motion ?r) (not (between ?b ?r ?b) ) ) (on ?r ?b) ) ) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?d - chair ?g - pillow)
            (then
              (hold (on ?b ?b) )
              (hold (and (touch ?g ?b) (same_color ?b tan) ) )
              (once (in_motion ?g) )
            )
          )
        )
      )
    )
    (forall (?c - (either hexagonal_bin wall pillow))
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?h - ball)
            (then
              (once (exists (?o - doggie_bed ?b - shelf) (on ?h ?h) ) )
              (once (agent_holds ?h) )
              (once (or (and (agent_holds ?h) (adjacent ?h ?c) (and (in_motion ?h) (in ?h ?h) ) (in ?h top_shelf) ) (exists (?b - triangular_ramp) (or (in_motion ?b) (agent_holds ?b) (same_object ?c bed) ) ) (in ?h ?h) ) )
            )
          )
        )
        (preference tanObjectMovedToRoomCenter
          (exists (?t1 - (either alarm_clock))
            (then
              (hold-while (same_color ?c ?t1) (< 1 (distance desk ?t1)) (and (and (and (agent_holds ?c) (on ?c ?t1) ) (in_motion ?c) ) (and (touch ?c ?c) (on agent ?t1) ) ) )
              (once (not (not (equal_z_position ?c bed) ) ) )
              (once (in ?t1 ?t1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (- 8 )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:hexagonal_bin)
)
)



(define (game game-id-292) (:domain many-objects-room-v1)
(:setup
  (forall (?h - cube_block ?d - wall ?c2 - hexagonal_bin ?h - chair)
    (and
      (exists (?o1 - hexagonal_bin)
        (game-optional
          (game_over )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?y - upside_down ?b - (either dodgeball cd cube_block))
        (at-end
          (agent_holds ?b)
        )
      )
    )
    (forall (?d ?h ?c - wall)
      (and
        (preference ballThrownToBed
          (exists (?b - wall)
            (then
              (once (in_motion agent) )
              (once (and (on ?h ?d) (in_motion rug) ) )
              (hold (and (not (in_motion ?d) ) (in_motion green_golfball) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count ballThrownToBed:purple) (+ (count-increasing-measure blockPlacedInBuilding:beachball) 3 (- 6 )
          (* 5 (count-once-per-objects blockPlacedInBuilding:doggie_bed:hexagonal_bin) )
          2
          (* (* (external-forall-maximize (/ (count blockPlacedInBuilding:basketball:blue) 3 ) ) (* (external-forall-maximize (+ (external-forall-maximize (count ballThrownToBed:tall_cylindrical_block) ) (+ 6 1 (= (count-once blockPlacedInBuilding:doggie_bed) )
                    )
                  )
                )
                (count blockPlacedInBuilding:dodgeball:dodgeball)
              )
            )
            20
          )
        )
      )
      (or
        (>= 5 (total-time) )
        (or
          (or
            (> (+ (* (/ (count-measure ballThrownToBed:pink_dodgeball) (count ballThrownToBed:orange:beachball:yellow) ) (count-once-per-objects blockPlacedInBuilding:rug) )
                100
              )
              (total-score)
            )
          )
          (>= 4 (count-once-per-external-objects ballThrownToBed:hexagonal_bin) )
        )
        (>= (total-time) (count blockPlacedInBuilding) )
      )
      (> (count-once-per-objects ballThrownToBed:blue_dodgeball:golfball) (external-forall-minimize (+ 5 (external-forall-minimize (count-same-positions ballThrownToBed:blue_dodgeball:red_pyramid_block:yellow) ) )
        )
      )
    )
    (not
      (>= 10 (total-score) )
    )
  )
)
(:scoring
  (* (count ballThrownToBed:dodgeball) (count ballThrownToBed:beachball) )
)
)



(define (game game-id-293) (:domain many-objects-room-v1)
(:setup
  (exists (?h - (either cube_block curved_wooden_ramp))
    (and
      (exists (?b - doggie_bed)
        (forall (?d1 - game_object ?b - blinds ?h - (either beachball key_chain))
          (game-optional
            (and
              (not
                (exists (?d2 - hexagonal_bin)
                  (in_motion ?b)
                )
              )
              (not
                (agent_holds ?b)
              )
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?f - hexagonal_bin)
        (then
          (once (touch ?f ?f) )
          (hold (and (in_motion ?f) (in_motion ?f) ) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (count binKnockedOver:purple:alarm_clock) )
)
(:scoring
  (count binKnockedOver:golfball)
)
)



(define (game game-id-294) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either laptop cube_block top_drawer golfball) ?c - ball)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?s - (either pencil laptop blue_cube_block) ?o ?c1 ?t ?b3 ?r - pyramid_block)
            (at-end
              (not
                (adjacent ?r ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects dodgeballFromBlockToBin:dodgeball:top_drawer) 5 )
    (count-once-per-objects dodgeballFromBlockToBin:dodgeball)
  )
)
(:scoring
  (count-once-per-external-objects dodgeballFromBlockToBin)
)
)



(define (game game-id-295) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (game-optional
      (same_color ?d white)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBinBottom
      (exists (?c5 - game_object ?r - (either dodgeball dodgeball))
        (then
          (hold (in_motion ?r) )
          (once (< (distance bed ?r) 4) )
          (once (in_motion ?r) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?o ?c ?d - dodgeball)
        (then
          (once (or (agent_holds agent) (agent_holds ?d) ) )
          (hold-while (on ?o desk) (and (exists (?d - chair ?b ?h - book ?c4 - (either dodgeball tall_cylindrical_block laptop) ?o - (either wall beachball golfball)) (in_motion ?d) ) ) )
          (once (not (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 5 )
    (or
      (>= (total-score) 4 )
      (>= (total-time) (+ (count-once dodgeballHitsBinBottom:basketball) (+ (external-forall-maximize (external-forall-maximize (count objectWithMatchingColor:block) ) ) (* 50 (count-once-per-objects objectWithMatchingColor) 2 (count-once-per-external-objects dodgeballHitsBinBottom:purple:golfball) (* (* 5 10 )
                3
              )
              2
            )
          )
        )
      )
      (>= (+ (count-measure dodgeballHitsBinBottom:hexagonal_bin) 10 (count-once-per-objects dodgeballHitsBinBottom:dodgeball) (count-total objectWithMatchingColor:yellow) 6 (* (external-forall-maximize (count dodgeballHitsBinBottom:doggie_bed) ) 3 3 )
        )
        (total-time)
      )
    )
    (>= (+ (count dodgeballHitsBinBottom:purple) (count objectWithMatchingColor:triangle_block:beachball) )
      (count objectWithMatchingColor:pink)
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballHitsBinBottom:top_drawer)
)
)



(define (game game-id-296) (:domain few-objects-room-v1)
(:setup
  (exists (?c - cube_block)
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?b7 - curved_wooden_ramp ?w2 - game_object ?c - (either key_chain wall dodgeball main_light_switch golfball pyramid_block cd))
        (then
          (once (and (exists (?o - wall) (and (on ?o ?o) (not (<= 1 1) ) ) ) (not (and (not (in_motion ?c) ) ) ) ) )
          (once (in_motion agent) )
          (hold (on ?c top_shelf) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count brownObjectMovedToRoomCenter:blue_cube_block) )
)
(:scoring
  (count-once brownObjectMovedToRoomCenter:beachball)
)
)



(define (game game-id-297) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (forall (?y - (either upside_down) ?c4 - drawer ?o ?c ?p - building)
      (and
        (preference ballKnocksTeddy
          (exists (?c6 - pyramid_block ?c3 ?b1 - game_object)
            (then
              (once (and (not (on ?c ?o) ) (and (not (agent_holds ?o) ) ) ) )
              (once (or (and (= (distance ?o ?o) (distance desk bed)) (and (opposite ?p ?b1) (game_start ) ) (agent_holds ?c3) ) (touch ?c ?c3) ) )
              (once (< 5 0.5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (* 5 6 )
        (count-once-per-objects ballKnocksTeddy)
      )
      (* (count ballKnocksTeddy:brown:golfball) 20 )
    )
  )
)
(:scoring
  (* 300 (count ballKnocksTeddy:golfball) )
)
)



(define (game game-id-298) (:domain many-objects-room-v1)
(:setup
  (and
    (not
      (forall (?g - hexagonal_bin ?b - hexagonal_bin)
        (and
          (game-conserved
            (on ?b ?b)
          )
          (and
            (forall (?p3 - cube_block ?t - desktop ?b - curved_wooden_ramp ?g - (either doggie_bed golfball wall yellow_cube_block alarm_clock book wall))
              (exists (?t2 - hexagonal_bin)
                (forall (?r2 - hexagonal_bin)
                  (and
                    (and
                      (game-conserved
                        (agent_holds ?g)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - (either alarm_clock wall))
        (then
          (hold (and (not (not (< (distance door ?h) 0.5) ) ) (on ?h ?h) ) )
          (once (and (on ?h ?h) (not (and (adjacent desk ?h) (in_motion ?h) (adjacent desk ?h) ) ) (= (distance desk ?h) 4 (distance ?h ?h)) ) )
          (once (and (exists (?l - dodgeball ?d - hexagonal_bin) (and (and (agent_holds ?h) (agent_holds ?d) (and (< (distance desk ?h) (distance ?d rug)) (in_motion floor) ) ) (in_motion ?d) ) ) (not (and (on ?h ?h) (not (not (not (adjacent door agent) ) ) ) (not (agent_holds ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 5 )
)
(:scoring
  (count basketMadeFromRug:top_drawer)
)
)



(define (game game-id-299) (:domain many-objects-room-v1)
(:setup
  (exists (?c - pyramid_block)
    (and
      (and
        (and
          (game-optional
            (equal_z_position ?c ?c)
          )
          (and
            (and
              (game-conserved
                (in ?c ?c)
              )
            )
            (game-conserved
              (agent_holds ?c)
            )
          )
          (game-conserved
            (agent_holds ?c)
          )
        )
        (game-conserved
          (agent_holds ?c)
        )
        (game-conserved
          (and
            (and
              (and
                (and
                  (in_motion ?c)
                  (agent_holds ?c)
                  (not
                    (agent_holds ?c)
                  )
                )
                (and
                  (not
                    (and
                      (in_motion ?c)
                      (in_motion ?c)
                      (and
                        (in_motion ?c)
                        (and
                          (in_motion agent)
                          (and
                            (agent_holds ?c)
                            (and
                              (in_motion ?c)
                              (agent_holds ?c)
                            )
                          )
                        )
                      )
                    )
                  )
                  (adjacent ?c ?c)
                )
              )
              (not
                (on ?c ?c)
              )
            )
            (< (distance ?c ?c) 3)
          )
        )
      )
      (exists (?w2 - hexagonal_bin)
        (game-conserved
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - (either pen golfball) ?o - (either pyramid_block dodgeball))
        (at-end
          (not
            (in ?o ?o)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (/ (* 1 )
      (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:blue_dodgeball:dodgeball)
    )
    (count-once dodgeballHitsPillowWithoutTouchingBlock:red)
  )
)
(:scoring
  (+ 10 (count dodgeballHitsPillowWithoutTouchingBlock:dodgeball) )
)
)



(define (game game-id-300) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - (either book))
    (game-optional
      (and
        (and
          (in_motion ?w1)
          (is_setup_object floor)
          (exists (?b10 - hexagonal_bin ?b - curved_wooden_ramp)
            (agent_holds ?b)
          )
          (or
            (not
              (object_orientation ?w1 upright)
            )
            (agent_holds ?w1)
          )
        )
        (> (distance ?w1 ?w1) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?h - hexagonal_bin ?d2 - dodgeball)
        (then
          (once (and (and (in_motion ?d2) ) (< (distance bed ?d2) (distance ?d2 ?d2)) (broken ?d2) (and (not (in ?d2 agent) ) (not (in_motion ?d2) ) ) ) )
          (hold (and (and (<= (distance_side desk right ?d2) (distance bed top_shelf)) (agent_holds ?d2) (adjacent_side ?d2 right ?d2) ) (on ?d2 ?d2) (is_setup_object ?d2) (and (in ?d2 ?d2) (same_color ?d2 ?d2) (equal_x_position ?d2 ?d2) ) ) )
          (once (exists (?b - cylindrical_block ?c5 - hexagonal_bin) (adjacent ?d2 ?d2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  (count gameBlockFound:basketball)
)
)



(define (game game-id-301) (:domain medium-objects-room-v1)
(:setup
  (forall (?l3 - tan_cube_block)
    (and
      (forall (?o5 - chair)
        (and
          (game-conserved
            (adjacent desk ?l3)
          )
        )
      )
      (and
        (and
          (and
            (and
              (or
                (forall (?o1 - hexagonal_bin ?l2 - dodgeball)
                  (and
                    (forall (?c - hexagonal_bin)
                      (game-conserved
                        (and
                          (not
                            (forall (?r - ball ?d1 - hexagonal_bin)
                              (and
                                (exists (?b3 ?h - building)
                                  (exists (?d - hexagonal_bin)
                                    (adjacent ?h ?d)
                                  )
                                )
                                (in_motion ?d1)
                                (not
                                  (and
                                    (agent_holds ?c)
                                    (in_motion agent)
                                  )
                                )
                                (and
                                  (in_motion ?l2)
                                  (agent_holds ?c)
                                )
                                (not
                                  (exists (?o2 ?g - beachball ?b - (either doggie_bed))
                                    (not
                                      (in ?b ?l2)
                                    )
                                  )
                                )
                                (agent_holds ?d1)
                              )
                            )
                          )
                          (not
                            (open ?l3)
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (exists (?l3 - pillow ?g - hexagonal_bin)
                    (game-conserved
                      (not
                        (or
                          (not
                            (not
                              (is_setup_object top_shelf)
                            )
                          )
                          (and
                            (not
                              (not
                                (and
                                  (in_motion ?g)
                                  (in_motion ?l3)
                                )
                              )
                            )
                            (not
                              (adjacent desk ?g)
                            )
                          )
                          (in ?g ?g)
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?l3)
                )
              )
            )
            (game-conserved
              (not
                (and
                  (not
                    (exists (?h - drawer ?c1 - block ?o - (either cube_block teddy_bear) ?g - chair ?f - hexagonal_bin)
                      (agent_holds ?f)
                    )
                  )
                  (and
                    (not
                      (in_motion ?l3)
                    )
                    (in_motion ?l3)
                  )
                  (not
                    (in_motion ?l3)
                  )
                  (agent_holds ?l3)
                )
              )
            )
          )
        )
        (exists (?d ?c - dodgeball)
          (exists (?l1 - hexagonal_bin)
            (game-optional
              (in_motion ?l1)
            )
          )
        )
        (and
          (forall (?x ?x0 ?x1 - color ?w2 - shelf ?t1 - dodgeball)
            (game-conserved
              (and
                (and
                  (agent_holds ?l3)
                  (in_motion ?t1)
                  (agent_holds ?t1)
                  (and
                    (above ?t1 ?t1)
                  )
                )
                (faces ?t1 ?l3)
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (and
            (not
              (in_motion ?l3)
            )
          )
          (in_motion ?l3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?b - (either cube_block mug dodgeball))
        (then
          (once (exists (?o5 ?l1 - curved_wooden_ramp ?p - game_object) (in ?p ?p) ) )
          (hold (touch ?b ?b) )
          (once (not (not (< 10 (distance desk ?b)) ) ) )
        )
      )
    )
    (forall (?d - cube_block ?o4 - shelf ?d - watch ?d - blue_cube_block)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?h - dodgeball)
            (then
              (hold (agent_holds ?d) )
              (hold (not (or (< (distance ?h agent) 2) ) ) )
              (hold (in_motion ?d) )
            )
          )
        )
        (preference matchingBuildingBuilt
          (exists (?g - hexagonal_bin ?b - wall)
            (then
              (hold (rug_color_under ?d green) )
              (once (in ?b rug) )
              (once (not (not (exists (?s - game_object ?p1 - teddy_bear) (on ?d agent) ) ) ) )
            )
          )
        )
        (preference blockKnockedFromBuildingInBin
          (then
            (once (not (not (and (rug_color_under ?d yellow) (not (agent_holds ?d) ) ) ) ) )
            (once (on ?d ?d) )
            (hold-while (not (= (distance ?d ?d) 1) ) (in_motion ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 15 (total-score) )
  )
)
(:scoring
  (= 30 2 6 )
)
)



(define (game game-id-302) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - bridge_block ?o5 - dodgeball ?y - (either upright))
    (game-optional
      (and
        (not
          (faces main_light_switch ?o5)
        )
        (agent_holds ?o5)
        (same_type ?o5 block)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball ?w - hexagonal_bin)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?b8 - building)
            (then
              (once (not (not (in_motion ?w) ) ) )
              (once (not (and (and (< 8 6) (opposite ?b8 ?b8) (in ?w ?b8) ) (exists (?s - hexagonal_bin ?b ?h - (either alarm_clock dodgeball)) (agent_holds ?b8) ) ) ) )
              (hold (same_object ?b8 ?w) )
              (once (agent_holds ?b8) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 (total-score) )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:basketball)
)
)



(define (game game-id-303) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (agent_holds bed)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b) )
          (once (exists (?l ?ob - (either curved_wooden_ramp key_chain cd blue_cube_block chair bridge_block flat_block) ?w2 - block) (adjacent room_center agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballThrownMissesEverything:doggie_bed:top_drawer) )
)
(:scoring
  (* (- (external-forall-maximize (count-once-per-objects ballThrownMissesEverything:hexagonal_bin:basketball) ) 30 ) (* 4 (- (count-once-per-objects ballThrownMissesEverything:beachball) 3 ) (count ballThrownMissesEverything:top_drawer) )
  )
)
)



(define (game game-id-304) (:domain few-objects-room-v1)
(:setup
  (forall (?b - ball)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?d ?r2 - game_object ?l - doggie_bed)
      (and
        (preference itemsBroken
          (exists (?c - chair ?x ?x0 - brown)
            (at-end
              (exists (?b - wall)
                (in_motion ?l)
              )
            )
          )
        )
        (preference ballThrownOntoTarget
          (exists (?h - ball ?t - pink_dodgeball)
            (at-end
              (< (distance ?l ?l) 1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemsBroken:pink) (count itemsBroken:pink_dodgeball) )
)
(:scoring
  (count itemsBroken:golfball:green)
)
)



(define (game game-id-305) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - dodgeball ?o - hexagonal_bin ?b - (either pillow dodgeball) ?d - hexagonal_bin)
    (game-conserved
      (not
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?l3 - wall)
        (then
          (once (agent_holds ?l3) )
          (once (in agent ?l3) )
          (hold (adjacent desk ?l3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwGolfballToBin) (* 10 (count-once throwGolfballToBin:beachball:dodgeball) )
    )
    (>= 2 40 )
  )
)
(:scoring
  (* 8 1 )
)
)



(define (game game-id-306) (:domain many-objects-room-v1)
(:setup
  (exists (?l - (either lamp pencil blue_cube_block) ?d - (either lamp ball))
    (and
      (and
        (exists (?c - pink_dodgeball ?d - (either cube_block book) ?r - teddy_bear)
          (game-optional
            (and
              (agent_holds ?r)
              (and
                (in ?d ?d)
                (not
                  (in_motion ?d)
                )
                (in_motion ?r)
                (or
                  (in_motion ?d)
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - hexagonal_bin ?d - teddy_bear)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 180 (total-time) )
  )
)
(:scoring
  (* 2 (count-overlapping ballKnocksBlockFromRug:yellow) )
)
)



(define (game game-id-307) (:domain many-objects-room-v1)
(:setup
  (exists (?d - triangular_ramp)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?g - drawer)
      (and
        (preference throwToDrawerOrBin
          (exists (?o - wall)
            (then
              (once (not (not (in ?o ?o) ) ) )
              (once (agent_holds ?g) )
              (hold-while (in_motion ?g) (on ?g ?o) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?h - hexagonal_bin)
            (then
              (hold (in ?h ?g) )
              (once (not (in ?h ?h) ) )
              (hold (or (open west_wall) ) )
            )
          )
        )
        (preference blocksInPlace
          (exists (?d1 - dodgeball)
            (then
              (hold (and (and (and (and (adjacent_side room_center front_left_corner ?g) (= 1 0.5) (same_color ?g orange) (and (agent_holds ?g) (not (agent_holds agent) ) ) ) (or (not (agent_holds ?g) ) (< 1 (distance door rug)) ) ) (adjacent ?d1 ?g) ) (in ?g ?d1) (not (< (distance desk ?d1) (distance_side bed back ?d1 left)) ) ) )
              (once (not (not (agent_holds ?g) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects blocksInPlace:pink_dodgeball:beachball) (count-once thrownBallHitsBlock:dodgeball) )
)
(:scoring
  (- 20 )
)
)



(define (game game-id-308) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?t - (either cellphone basketball) ?b - teddy_bear)
      (forall (?y ?y0 - (either diagonal upright upright))
        (exists (?h - game_object)
          (exists (?o - pillow ?o - (either hexagonal_bin pyramid_block doggie_bed))
            (game-conserved
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?b - (either dodgeball dodgeball) ?b - hexagonal_bin ?s - doggie_bed)
        (then
          (hold (not (not (not (on ?s agent) ) ) ) )
          (once (not (and (agent_holds desk) (on ?s ?s) ) ) )
          (once (same_color blue ?s) )
        )
      )
    )
    (forall (?g - (either book yellow_cube_block lamp) ?h ?t - doggie_bed ?h - hexagonal_bin ?g - drawer ?b - (either flat_block triangular_ramp yellow_cube_block cube_block wall))
      (and
        (preference blockThrowAttempt
          (exists (?t - hexagonal_bin)
            (then
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?t - red_dodgeball ?b10 - curved_wooden_ramp)
        (then
          (hold (< (distance desk ?b10) (building_size ?b10)) )
          (once (not (on agent ?b10) ) )
          (hold (in_motion ?b10) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 1 (+ (count objectMovedRoomSide:wall) 5 1 )
      (* (count-once-per-objects objectMovedRoomSide:dodgeball) 2 )
      (+ (count blockThrowAttempt:dodgeball) (count-overlapping throwFromBehindChairsInBin:blue_pyramid_block:blue_dodgeball:basketball) )
      (count-measure throwFromBehindChairsInBin:hexagonal_bin)
      10
    )
    (+ (count-once-per-objects blockThrowAttempt:beachball) (count objectMovedRoomSide:basketball:beachball) )
  )
)
(:scoring
  (external-forall-maximize
    (- 10 )
  )
)
)



(define (game game-id-309) (:domain many-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin)
    (forall (?c3 - ball)
      (game-conserved
        (rug_color_under bed yellow)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c3 - dodgeball)
      (and
        (preference matchingBuildingBuilt
          (exists (?w2 ?b - tall_cylindrical_block)
            (then
              (once (and (toggled_on ?w2) (and (in_motion ?c3) (in_motion ?b) ) (on ?c3 desk) (and (in_motion ?c3) (in_motion ?b) (agent_holds ?w2) (and (forall (?b - game_object) (in_motion ?b) ) (agent_holds ?c3) (in_motion ?c3) (in_motion ?c3) (not (not (not (on ?b ?w2) ) ) ) (agent_holds ?w2) (exists (?w - game_object ?d - triangular_ramp) (not (in_motion ?w2) ) ) (= 6 6) (not (adjacent bed ?c3) ) (and (in agent ?b) (on ?c3 ?c3) ) ) ) ) )
              (once (<= 3 (distance ?c3 ?c3)) )
              (once (on ?w2 ?w2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count matchingBuildingBuilt:dodgeball) )
)
(:scoring
  (count-once-per-objects matchingBuildingBuilt:pink)
)
)



(define (game game-id-310) (:domain many-objects-room-v1)
(:setup
  (forall (?c - building ?d - ball)
    (or
      (exists (?c5 - game_object)
        (game-conserved
          (in agent ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?w1 - hexagonal_bin)
        (then
          (once (and (agent_holds ?w1) (agent_holds ?w1) ) )
          (once (< (distance bed ?w1) 1) )
          (once (or (adjacent_side desk right ?w1 front_left_corner) (agent_holds ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count-once-per-objects throwToBinFromDistance:blue_dodgeball:dodgeball) (+ (/ (* 3 5 )
            (count throwToBinFromDistance:golfball)
          )
          (external-forall-maximize
            (count throwToBinFromDistance:beachball:beachball)
          )
          300
          (count throwToBinFromDistance:dodgeball)
        )
      )
    )
  )
)
(:scoring
  (count throwToBinFromDistance:dodgeball)
)
)



(define (game game-id-311) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b3 - curved_wooden_ramp)
      (exists (?p1 - game_object ?r - hexagonal_bin)
        (game-conserved
          (and
            (in ?r ?r)
            (and
              (same_type ?b3 drawer)
              (on ?r ?r)
              (on ?b3 ?b3)
            )
            (in_motion ?b3)
            (agent_holds ?b3)
            (on ?b3 ?r)
            (not
              (and
                (not
                  (not
                    (and
                      (not
                        (not
                          (not
                            (not
                              (and
                                (and
                                  (touch ?b3 ?b3)
                                  (on desk ?b3)
                                  (agent_holds floor)
                                  (touch ?b3 ?b3)
                                  (same_object ?b3 ?b3)
                                  (not
                                    (in_motion ?r)
                                  )
                                  (faces ?r ?b3)
                                  (agent_holds ?r)
                                )
                                (agent_holds ?b3)
                              )
                            )
                          )
                        )
                      )
                      (adjacent ?r ?r)
                      (in ?r ?b3)
                    )
                  )
                )
                (and
                  (and
                    (object_orientation ?r upright)
                    (agent_holds ?r)
                  )
                  (in_motion ?b3)
                )
              )
            )
            (and
              (not
                (agent_crouches )
              )
              (on ?b3 ?b3)
              (not
                (touch ?b3 ?r)
              )
              (equal_z_position desk ?r)
            )
          )
        )
      )
    )
    (exists (?o ?g - teddy_bear)
      (forall (?p3 - (either book game_object))
        (and
          (game-optional
            (not
              (not
                (agent_holds ?p3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o4 - pillow)
      (and
        (preference blockToBinFromRug
          (exists (?c2 - hexagonal_bin ?c1 - curved_wooden_ramp)
            (then
              (hold-while (not (< 1 1) ) (agent_holds ?o4) (in_motion ?c1) )
            )
          )
        )
        (preference ballThrownToRampToBed
          (exists (?ob - hexagonal_bin ?b9 - game_object)
            (then
              (once (agent_holds ?o4) )
              (hold-while (on ?b9 ?o4) (object_orientation ?b9 sideways) )
              (once (equal_z_position ?b9 ?o4) )
            )
          )
        )
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?c - dodgeball)
            (then
              (once (not (adjacent ?c ?o4) ) )
              (hold-while (and (on ?c north_wall) (not (adjacent ?o4 agent) ) ) (agent_holds ?c) (in_motion blue) )
              (once (agent_holds ?o4) )
            )
          )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?w - curved_wooden_ramp ?o3 - hexagonal_bin)
            (at-end
              (and
                (agent_holds ?h)
                (and
                  (not
                    (not
                      (in_motion ?h)
                    )
                  )
                  (and
                    (not
                      (agent_crouches )
                    )
                    (in ?h ?o3)
                    (adjacent ?h ?h)
                    (not
                      (in ?h ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?l2 - dodgeball)
      (and
        (preference dodgeballsInPlace
          (exists (?b - red_dodgeball)
            (then
              (hold (and (opposite ?l2 ?l2) (adjacent room_center ?b) (agent_holds floor) ) )
              (once (and (on ?b ?b) (and (equal_x_position desk ?b) (not (on ?b ?b) ) (adjacent bed ?b) ) ) )
              (once (exists (?b - triangular_ramp) (touch ?b ?l2) ) )
            )
          )
        )
        (preference basketMadeFromRug
          (exists (?f - hexagonal_bin ?w2 ?t1 - pillow)
            (then
              (once (in_motion ?t1) )
              (hold (same_object ?l2 ?l2) )
              (once (and (in_motion ?w2) (in_motion ?w2) (in_motion ?l2) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count basketMadeFromRug:dodgeball) (* (count ballThrownToRampToBed:blue_dodgeball) (count-unique-positions pyramidBlockAtopTowerAtEnd:dodgeball) )
  )
)
(:scoring
  (<= (* 1 (+ (count-total ballThrownToRampToBed:yellow) 8 )
    )
    2
  )
)
)



(define (game game-id-312) (:domain many-objects-room-v1)
(:setup
  (forall (?h - curved_wooden_ramp ?r - dodgeball ?w - sliding_door)
    (forall (?w2 - block)
      (game-optional
        (on floor ?w2)
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?t2 - hexagonal_bin)
        (at-end
          (not
            (exists (?h - cylindrical_block)
              (and
                (touch pink agent)
                (in_motion desk)
              )
            )
          )
        )
      )
    )
    (forall (?b - curved_wooden_ramp)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?d - shelf)
            (at-end
              (not
                (and
                  (in_motion pink)
                  (not
                    (in_motion agent)
                  )
                )
              )
            )
          )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?ob - wall)
        (then
          (once (agent_holds ?ob) )
          (hold (exists (?d - hexagonal_bin ?h ?h ?o1 - ball) (not (agent_holds ?ob) ) ) )
          (hold (in ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) (* 3 (* (+ (count ballThrownToWallToAgent:basketball) (count cubeBlockFromBedToShelf:cube_block:dodgeball) )
            (count ballThrownToWallToAgent:doggie_bed:pink_dodgeball)
          )
        )
      )
      (not
        (< (count blockToBinFromRug:yellow_cube_block:tall_cylindrical_block) (+ (/ 5 (- 10 )
            )
            3
            (count-measure blockToBinFromRug:blue_pyramid_block)
            (* (* (* (* 15 (* (count blockToBinFromRug:blue_cube_block) 10 )
                  )
                  (* 10 (count-longest blockToBinFromRug:beachball) )
                  (count ballThrownToWallToAgent:basketball:hexagonal_bin)
                  (+ 10 3 )
                )
                2
              )
              (count-once-per-objects blockToBinFromRug:hexagonal_bin)
              (* (* (count-once-per-objects cubeBlockFromBedToShelf:dodgeball) (>= (- 50 )
                    4
                  )
                )
                (* 5 30 )
              )
            )
            40
            (+ (+ (count-once-per-objects blockToBinFromRug:blue_pyramid_block) (count ballThrownToWallToAgent:tan) (external-forall-maximize (count cubeBlockFromBedToShelf:yellow) ) )
              3
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (* (count blockToBinFromRug:dodgeball:yellow) 8 )
    (count blockToBinFromRug:dodgeball)
  )
)
)



(define (game game-id-313) (:domain few-objects-room-v1)
(:setup
  (forall (?h - shelf ?x - light_blue)
    (exists (?h - bridge_block ?o - shelf)
      (forall (?c1 - ball)
        (forall (?h - (either dodgeball blue_cube_block))
          (game-conserved
            (< 9 (distance room_center ?o))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?w2 - hexagonal_bin)
        (then
          (once (agent_holds ?w2) )
          (hold (forall (?g - hexagonal_bin ?z ?z0 - (either front_left_corner back back)) (in_motion ?g) ) )
          (hold (agent_holds ?w2) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?c - hexagonal_bin)
        (then
          (once (touch ?c ?c) )
          (once (not (on agent ?c) ) )
          (once (not (on floor ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (* (* 2 40 )
          (count throwTeddyOntoPillow:dodgeball)
        )
      )
      (total-score)
    )
    (or
      (< (count-once-per-objects throwTeddyOntoPillow:pink:red) 5 )
      (>= 5 20 )
    )
  )
)
(:scoring
  (count-longest throwBallToBin:rug:wall)
)
)



(define (game game-id-314) (:domain medium-objects-room-v1)
(:setup
  (exists (?x - purple ?c1 ?d ?l3 - dodgeball)
    (or
      (forall (?b - bridge_block ?o3 - beachball ?d - game_object ?o4 - ball)
        (and
          (exists (?o3 - building)
            (and
              (exists (?x ?x0 ?x1 - pink)
                (exists (?w1 - (either golfball) ?c3 - game_object)
                  (game-conserved
                    (and
                      (agent_holds ?c1)
                      (> (distance ?c3 desk) 1)
                      (agent_holds ?o4)
                      (agent_holds agent)
                      (not
                        (and
                          (touch floor brown)
                          (on ?d ?o3)
                        )
                      )
                      (touch ?o4 ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (adjacent_side ?l3 front_left_corner ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?t2 - wall ?b ?c - dodgeball ?b - game_object)
        (then
          (once (not (not (and (agent_holds agent) (agent_holds ?b) ) ) ) )
          (hold (not (or (exists (?r - building) (agent_holds ?r) ) (exists (?z ?z0 ?z1 - (either right front right)) (in ?b ?b) ) ) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-same-positions ballThrownToRug:basketball) (count ballThrownToRug:golfball) )
  )
)
(:scoring
  (count-once ballThrownToRug:dodgeball)
)
)



(define (game game-id-315) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - (either yellow_cube_block ball))
    (exists (?c - (either yellow_cube_block game_object pyramid_block cylindrical_block yellow_cube_block mug chair) ?h - bridge_block)
      (game-optional
        (on ?h ?db)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - hexagonal_bin ?h - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?h - pyramid_block)
            (at-end
              (in_motion ?h)
            )
          )
        )
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?s ?c - flat_block)
            (then
              (hold-while (not (agent_holds ?s) ) (in_motion ?h) )
              (once (and (touch ?h ?h) (exists (?b ?o3 - building) (<= 1 (distance desk agent)) ) ) )
              (once (adjacent desk ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count golfballUnderBridgeWithoutTouchingBlock:beachball) (total-score) )
)
(:scoring
  (count-once-per-objects objectOnBed:beachball:white)
)
)



(define (game game-id-316) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (forall (?t - hexagonal_bin ?d - ball ?p - pyramid_block)
      (same_object ?p ?p)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?b - red_dodgeball)
        (then
          (once (agent_holds ?b) )
          (once (not (in_motion ?b) ) )
          (hold-while (in_motion ?b) (toggled_on floor) (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (count throwObjectToBin:golfball) )
)
(:scoring
  (count throwObjectToBin:triangle_block)
)
)



(define (game game-id-317) (:domain medium-objects-room-v1)
(:setup
  (forall (?b ?d - (either hexagonal_bin golfball) ?r1 - chair ?t2 - game_object ?r - dodgeball)
    (exists (?y ?y0 - (either diagonal diagonal))
      (game-optional
        (agent_holds ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?d - hexagonal_bin)
            (then
              (once (agent_holds ?d) )
              (hold (equal_z_position ?d ?d) )
              (hold (in floor ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 2 )
)
(:scoring
  (* 8 (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball) (count cubeBlockThrownToTopShelf:red) 1 (count cubeBlockThrownToTopShelf:side_table) )
)
)



(define (game game-id-318) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (or
        (exists (?h - wall)
          (forall (?b - (either bridge_block yellow_cube_block laptop mug cylindrical_block))
            (and
              (game-conserved
                (agent_holds ?h)
              )
              (or
                (and
                  (game-conserved
                    (on agent blue)
                  )
                  (and
                    (and
                      (game-conserved
                        (not
                          (agent_holds ?h)
                        )
                      )
                      (forall (?t1 - (either cd cylindrical_block))
                        (game-conserved
                          (and
                            (agent_holds ?t1)
                          )
                        )
                      )
                    )
                  )
                  (exists (?b - shelf ?o2 - doggie_bed ?b - hexagonal_bin ?y - diagonal)
                    (and
                      (not
                        (exists (?r - hexagonal_bin)
                          (and
                            (game-conserved
                              (adjacent ?b ?b)
                            )
                          )
                        )
                      )
                      (game-optional
                        (not
                          (in_motion ?b)
                        )
                      )
                      (game-conserved
                        (touch ?h ?h)
                      )
                    )
                  )
                )
                (game-conserved
                  (agent_holds ?h)
                )
              )
              (forall (?d - tan_cube_block)
                (forall (?d - game_object ?y - (either diagonal upright) ?c - hexagonal_bin)
                  (and
                    (game-conserved
                      (same_color ?c ?c)
                    )
                    (game-optional
                      (on bed ?b)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (in_motion agent)
        )
      )
    )
    (exists (?o4 - bridge_block)
      (and
        (not
          (and
            (and
              (forall (?o - hexagonal_bin ?h - hexagonal_bin)
                (game-conserved
                  (and
                    (in_motion ?o4)
                    (in ?h ?h)
                    (adjacent ?o4 ?h)
                  )
                )
              )
              (game-conserved
                (adjacent_side room_center back ?o4)
              )
            )
          )
        )
      )
    )
    (forall (?c4 - ball ?f - hexagonal_bin)
      (and
        (game-conserved
          (adjacent door ?f)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?o - cube_block)
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (+ (+ (count-once-per-objects ballThrownToBin:red:beachball) (count ballThrownToBin:pink_dodgeball) )
      (+ (count ballThrownToBin:golfball:blue_dodgeball) (+ (+ (+ 10 5 )
            (* 4 (count ballThrownToBin:basketball:beachball:doggie_bed) )
          )
          2
        )
      )
    )
  )
)
(:scoring
  (* 5 3 )
)
)



(define (game game-id-319) (:domain many-objects-room-v1)
(:setup
  (forall (?d - (either golfball blue_cube_block))
    (game-optional
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?p3 - wall ?c - cylindrical_block)
        (then
          (hold (< (distance_side ?c right ?c) 1) )
          (once (agent_holds ?c) )
          (once (on ?c ?c) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?h - dodgeball ?b3 - dodgeball)
        (then
          (once (not (agent_holds ?b3) ) )
          (once (and (agent_holds ?b3) (and (or (in ?b3 ?b3) (exists (?b3 - (either pillow pyramid_block) ?t - hexagonal_bin ?c3 - tall_cylindrical_block ?b ?c - hexagonal_bin) (on ?c ?c) ) ) (agent_holds ?b3) ) (< (distance ?b3 ?b3) 8) ) )
          (once (and (and (not (on ?b3 ?b3) ) (not (on ?b3 ?b3) ) ) (not (in ?b3 ?b3) ) (adjacent ?b3 bed) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (= (count-once beachballBouncedOffRamp:dodgeball:basketball) (count-same-positions ballNeverThrown:red:blue_dodgeball) )
    )
  )
)
(:scoring
  (* 100 (- (* (external-forall-maximize (+ (count-shortest beachballBouncedOffRamp:book) (* 6 (- (count ballNeverThrown:beachball:dodgeball) )
            )
            (count beachballBouncedOffRamp:beachball:yellow)
          )
        )
        2
      )
    )
  )
)
)



(define (game game-id-320) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c4 - (either lamp) ?b2 ?c1 ?c ?b6 ?c ?d1 - (either pyramid_block pyramid_block))
      (game-conserved
        (agent_holds ?c1)
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - chair)
        (at-end
          (not
            (not
              (not
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectThrownFromRug:red) 3 )
)
(:scoring
  (count-once-per-objects objectThrownFromRug:white:blue_dodgeball:tall_cylindrical_block)
)
)



(define (game game-id-321) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?l4 - curved_wooden_ramp)
        (then
          (once (in_motion ?l4) )
          (once-measure (on agent ?l4) (distance desk ?l4) )
          (hold (on ?l4 ?l4) )
        )
      )
    )
    (forall (?b - block ?b1 - dodgeball)
      (and
        (preference ballThrownToChair
          (exists (?h - triangular_ramp ?o - bridge_block)
            (at-end
              (in_motion ?o)
            )
          )
        )
        (preference cubeBlockFromBedToShelf
          (then
            (once (and (not (exists (?c2 - doggie_bed) (in_motion ?b1) ) ) (and (agent_holds ?b1) (on ?b1 ?b1) (not (agent_holds ?b1) ) (and (not (agent_holds ?b1) ) (exists (?b - hexagonal_bin) (agent_holds ?b) ) ) ) (same_color ?b1 floor) ) )
            (once (touch ?b1 ?b1) )
            (once (exists (?l1 - pillow) (broken ?l1) ) )
          )
        )
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?l - cube_block)
            (then
              (once-measure (and (agent_holds ?l) (and (and (and (= (building_size ?l) 4) (and (not (agent_holds ?l) ) (on ?l bed) ) (on agent ?b1) ) (not (in_motion ?b1) ) ) (not (on ?l ?l) ) ) ) (distance ?b1 ?l) )
              (hold-while (on ?b1 ?b1) (and (not (in ?l ?b1) ) (in ?l ?b1) ) )
              (once (agent_holds ?b1) )
            )
          )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?b2 - block)
        (then
          (once (on ?b2 ?b2) )
          (hold-while (agent_holds ?b2) (not (on ?b2 ?b2) ) )
          (once (agent_holds ?b2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 20 )
    (> (total-score) (total-time) )
  )
)
(:scoring
  (count ballThrownToChair:doggie_bed)
)
)



(define (game game-id-322) (:domain medium-objects-room-v1)
(:setup
  (or
    (and
      (exists (?d - hexagonal_bin)
        (game-conserved
          (in rug ?d)
        )
      )
    )
    (forall (?f ?h - (either laptop dodgeball) ?b - hexagonal_bin)
      (and
        (game-optional
          (in_motion agent)
        )
        (and
          (game-optional
            (in ?b ?b)
          )
        )
        (exists (?o - hexagonal_bin ?t - wall)
          (and
            (and
              (and
                (exists (?b - hexagonal_bin)
                  (exists (?x ?x0 - green)
                    (exists (?b1 - (either ball laptop pyramid_block))
                      (or
                        (game-conserved
                          (in_motion ?b1)
                        )
                        (game-optional
                          (in_motion ?b1)
                        )
                      )
                    )
                  )
                )
                (exists (?c - book)
                  (exists (?h - game_object)
                    (and
                      (game-conserved
                        (not
                          (not
                            (not
                              (< 1 (distance ?b ?t))
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (= (distance desk ?b) (distance desk ?t) 0.5)
                )
              )
            )
            (forall (?r1 - dodgeball ?d - (either hexagonal_bin))
              (game-conserved
                (< 1 1)
              )
            )
          )
        )
      )
    )
    (game-conserved
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?h - ball)
        (at-end
          (not
            (in_motion ?h)
          )
        )
      )
    )
    (forall (?l - (either desktop blue_cube_block))
      (and
        (preference bounceBallToBin
          (at-end
            (in_motion ?l)
          )
        )
        (preference ballNeverThrown
          (exists (?c6 - bridge_block)
            (then
              (once (not (not (agent_holds ?l) ) ) )
              (once (exists (?d - hexagonal_bin ?d - yellow_pyramid_block) (on ?l ?c6) ) )
              (hold-while (not (adjacent_side rug left rug) ) (and (= (x_position ?l) 1) (in_motion ?l) (> (distance desk ?l) (distance ?l ?l)) ) )
            )
          )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?r - hexagonal_bin ?w - hexagonal_bin)
        (then
          (hold (and (in_motion ?w) (adjacent east_sliding_door rug) ) )
          (once (and (on agent ?w) (in_motion ?w) ) )
          (once (and (agent_holds ?w) (on ?w ?w) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-same-positions bounceBallToBin:beachball:rug) (- 3 )
  )
)
(:scoring
  (+ 60 5 )
)
)



(define (game game-id-323) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - ball)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?s - hexagonal_bin ?b - hexagonal_bin)
        (then
          (once (not (agent_holds ?b) ) )
          (once (in_motion ?b) )
          (once (and (and (agent_holds ?b) (game_start ) ) (not (on ?b floor) ) ) )
        )
      )
    )
    (forall (?l2 - curved_wooden_ramp ?b6 - hexagonal_bin)
      (and
        (preference dodgeballHitsBin
          (exists (?c - wall)
            (then
              (once (in ?b6 ?b6) )
              (once (and (< 1 1) (in ?c ?c) (not (agent_holds ?b6) ) ) )
              (hold (agent_holds ?b6) )
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?h - dodgeball ?d - chair ?h - hexagonal_bin)
            (then
              (hold (agent_holds bed) )
              (hold (in_motion ?b6) )
              (hold (not (and (and (and (game_start ) (touch rug ?b6) (adjacent_side door back ?h) ) (agent_holds ?b6) ) (same_type agent ball) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (= 1 (total-score) )
    )
    (>= (* (+ 1 (count-once-per-objects throwToBin:basketball) )
        15
      )
      (* 1 (count throwGolfballToBin:yellow) )
    )
  )
)
(:scoring
  (+ (count throwToBin:orange:golfball) (count throwToBin:basketball) )
)
)



(define (game game-id-324) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - (either game_object cylindrical_block))
      (and
        (exists (?w2 - tall_cylindrical_block)
          (game-conserved
            (and
              (in_motion desk)
              (not
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
    (forall (?o - shelf ?w1 - game_object)
      (game-optional
        (adjacent_side ?w1 back ?w1 front_left_corner)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference blockToBinFromRug
          (exists (?r1 - curved_wooden_ramp ?x ?x0 - color)
            (then
              (once (not (agent_holds ?r1) ) )
              (once (forall (?c6 - hexagonal_bin ?r - red_dodgeball) (same_type top_shelf pillow) ) )
              (once (rug_color_under ?c white) )
            )
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?ob - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (and (exists (?d - hexagonal_bin) (touch ?h ?h) ) (not (on ?h ?h) ) ) )
          (hold (and (< 2 1) (and (in ?h ?h) (and (and (agent_holds ?h) (adjacent bed ?h) ) (forall (?b5 - hexagonal_bin ?b - hexagonal_bin ?o1 - game_object) (open ?o1) ) ) (and (game_start ) (is_setup_object ?h) ) ) ) )
          (once (is_setup_object ?h) )
        )
      )
    )
    (preference ballThrownFromObjectToBin
      (exists (?o4 - building ?b - hexagonal_bin ?b - curved_wooden_ramp)
        (then
          (hold-while (in ?b ?b) (in_motion ?b) )
          (once (< (x_position ?b) 1) )
          (hold-while (and (not (not (on ?b ?b) ) ) (in_motion ?b) ) (= (distance room_center ?b)) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?r - building ?b3 - (either bridge_block pyramid_block))
        (at-end
          (not
            (not
              (and
                (and
                  (in_motion ?b3)
                  (< 4 2)
                )
                (in_motion ?b3)
              )
            )
          )
        )
      )
    )
    (forall (?b1 - hexagonal_bin ?db ?d ?o3 - game_object)
      (and
        (preference objectLandsInBin
          (exists (?w2 - blue_cube_block)
            (at-end
              (in_motion ?w2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once blockToBinFromRug:beachball) (count objectLandsInBin:dodgeball) )
    (>= (count objectOnBed:hexagonal_bin) 15 )
    (>= (* 20 (+ 180 (* (+ 30 (count-once-per-objects ballThrownFromObjectToBin:dodgeball) (count objectLandsInBin:basketball) )
            2
          )
        )
      )
      2
    )
  )
)
(:scoring
  (count-once-per-objects objectOnBed:cube_block)
)
)



(define (game game-id-325) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball ?t1 - golfball)
    (and
      (game-optional
        (rug_color_under agent yellow)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?b7 - beachball)
        (at-end
          (and
            (adjacent desk ?b7)
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?c2 - hexagonal_bin ?p2 - building ?b2 - ball)
        (then
          (once (and (and (not (in_motion ?b2) ) (in agent ?b2) (agent_holds ?b2) ) (on ?b2 ?b2) (and (touch ?b2 ?b2) (agent_holds ?b2) (not (in ?b2 ?b2) ) (not (not (on ?b2 ?b2) ) ) (agent_holds agent) (in_motion floor) (not (on ?b2 ?b2) ) (in_motion ?b2) (< (distance room_center ?b2) (distance desk ?b2)) (and (and (not (= (distance ?b2 ?b2) 9 (distance room_center ?b2)) ) (> (distance bed ?b2) (distance_side ?b2 left desk)) ) (faces ?b2 ?b2) ) ) ) )
          (once (on ?b2 ?b2) )
          (once (not (> (distance door ?b2) 1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count laptopAndBookInPlace:basketball) 40 )
)
(:scoring
  (count-same-positions agentLeavesDogbedOrNoMoreBalls:rug)
)
)



(define (game game-id-326) (:domain few-objects-room-v1)
(:setup
  (forall (?p3 - block)
    (and
      (game-conserved
        (not
          (faces ?p3 ?p3)
        )
      )
      (game-conserved
        (same_color ?p3 ?p3)
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?h - shelf)
        (then
          (once (agent_holds ?h) )
          (once (exists (?c4 - building) (exists (?b5 - game_object ?b4 - building) (and (same_color ?b4 purple) (on ?c4 ?b4) ) ) ) )
          (hold-while (or (adjacent side_table ?h) ) (not (not (agent_holds top_drawer) ) ) (faces ?h agent) (on ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (* (* (count-once-per-objects throwTeddyOntoPillow:golfball) 3 (count throwTeddyOntoPillow:beachball) (count-once-per-objects throwTeddyOntoPillow:hexagonal_bin) (count throwTeddyOntoPillow:golfball:golfball) )
          (>= (+ 1 4 )
            5
          )
        )
        (count-once-per-external-objects throwTeddyOntoPillow:dodgeball:beachball:hexagonal_bin)
      )
      5
    )
    (* (count-same-positions throwTeddyOntoPillow:pink_dodgeball) (* (count throwTeddyOntoPillow:yellow_cube_block:orange) (count throwTeddyOntoPillow:green) 3 (* 3 6 )
        5
      )
    )
  )
)
(:scoring
  (* 0.5 (count throwTeddyOntoPillow:red:basketball) 15 (count throwTeddyOntoPillow:hexagonal_bin) 3 1 )
)
)



(define (game game-id-327) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - doggie_bed)
    (and
      (and
        (game-conserved
          (not
            (and
              (and
                (adjacent_side ?p2 back ?p2)
                (in_motion ?p2)
              )
              (or
                (in bed ?p2)
                (on ?p2 ?p2)
              )
              (agent_holds ?p2)
            )
          )
        )
        (game-optional
          (and
            (in_motion ?p2)
            (in_motion ?p2)
          )
        )
      )
      (exists (?tb - block)
        (and
          (and
            (forall (?b1 - cube_block ?s - hexagonal_bin)
              (forall (?d2 - cube_block)
                (game-conserved
                  (agent_holds ?d2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - ball ?b2 - building ?d - dodgeball)
      (and
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?d - dodgeball ?h - blinds)
            (then
              (hold (not (in ?d ?h) ) )
              (once (and (equal_x_position desk ?h) (object_orientation ?d upside_down) ) )
              (once (on ?d ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count pyramidBlockAtopTowerAtEnd:pink_dodgeball) )
)
(:scoring
  (+ (* 10 2 )
    (* 3 10 )
  )
)
)



(define (game game-id-328) (:domain few-objects-room-v1)
(:setup
  (exists (?b - ball)
    (forall (?h - (either cube_block main_light_switch triangle_block cd dodgeball))
      (game-optional
        (not
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?b4 - ball)
        (then
          (once (agent_holds ?b4) )
          (once (and (on ?b4 ?b4) (agent_holds ?b4) ) )
          (once (agent_holds ?b4) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 2 (+ 15 9 )
    )
  )
)
(:scoring
  (* (* (count dodgeballThrownToBinFromDesk:pink_dodgeball) (+ (external-forall-maximize (* 10 5 )
        )
        7
      )
    )
    4
  )
)
)



(define (game game-id-329) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_holds rug)
    )
    (and
      (forall (?h - block ?o ?o ?b ?p1 ?h - (either dodgeball dodgeball cube_block))
        (exists (?d2 - hexagonal_bin)
          (exists (?db - hexagonal_bin)
            (forall (?r - cube_block ?x - light_blue ?h - game_object)
              (exists (?b - hexagonal_bin ?r1 - (either dodgeball golfball dodgeball))
                (game-conserved
                  (not
                    (in_motion ?h)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - desk_shelf ?x ?x0 - (either light_blue blue white))
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?d ?w1 ?c - pillow)
            (then
              (hold (agent_holds ?c) )
              (hold (not (agent_crouches ) ) )
              (hold (on ?c bed) )
              (hold (in ?d ?c) )
              (once (touch ?c ?d) )
              (hold (and (and (and (in_motion ?w1) (same_type ?d block) (above ?d ?c) ) (in_motion ?w1) ) (and (exists (?h ?tb - triangular_ramp ?l4 - dodgeball) (exists (?r1 - hexagonal_bin) (on agent blue) ) ) (and (agent_holds ?c) (and (not (not (and (and (and (not (rug_color_under top_drawer light_blue) ) (agent_holds ?c) (in ?d ?c) ) (adjacent bed ?c) ) (exists (?c6 - cube_block) (adjacent ?c ?c) ) ) ) ) (agent_holds ?d) ) ) ) (not (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count-same-positions nonBlockPlacedInBuilding:triangle_block)
)
)



(define (game game-id-330) (:domain many-objects-room-v1)
(:setup
  (exists (?p ?c - dodgeball)
    (forall (?d1 - ball ?b4 - (either alarm_clock cellphone))
      (game-conserved
        (or
          (not
            (in_motion agent)
          )
          (and
            (and
              (and
                (and
                  (in_motion ?c)
                  (opposite ?c ?p)
                  (in ?c ?p)
                )
                (not
                  (agent_holds ?b4)
                )
              )
              (and
                (not
                  (agent_holds ?c)
                )
                (agent_holds ?p)
                (and
                  (not
                    (not
                      (in ?p ?p)
                    )
                  )
                  (forall (?s - hexagonal_bin)
                    (not
                      (and
                        (agent_holds ?c)
                        (on ?b4 ?p)
                      )
                    )
                  )
                  (touch desk ?c)
                  (agent_holds ?b4)
                  (not
                    (in_motion ?b4)
                  )
                  (in ?b4 ?b4)
                  (not
                    (not
                      (in_motion ?c)
                    )
                  )
                  (in_motion ?p)
                )
              )
              (agent_holds ?p)
              (agent_holds agent)
            )
            (not
              (and
                (not
                  (exists (?g - hexagonal_bin)
                    (and
                      (not
                        (agent_holds ?b4)
                      )
                      (= (x_position ?p) (distance ?c ?p))
                    )
                  )
                )
                (and
                  (not
                    (and
                      (same_color ?c ?p)
                    )
                  )
                  (in_motion north_wall)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - pyramid_block ?b - chair)
      (and
        (preference throwAttempt
          (exists (?s - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (hold (and (in_motion ?b) (in_motion desk) (in_motion ?b) ) )
              (once (not (not (not (game_start ) ) ) ) )
            )
          )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?c3 - pyramid_block ?z ?z0 - (either front_left_corner back front))
        (then
          (once (not (agent_holds ?c3) ) )
          (once (in ?c3 ?c3) )
          (once (not (agent_holds ?c3) ) )
        )
      )
    )
    (forall (?db - (either dodgeball golfball))
      (and
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?l4 - hexagonal_bin ?c - (either dodgeball key_chain))
            (then
              (hold (not (adjacent bed ?c) ) )
              (once (exists (?s - (either cube_block blue_cube_block)) (not (in_motion agent) ) ) )
              (hold (same_color ?c ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 2 )
    (or
      (>= (+ (count-once-per-objects beachballBouncedOffRamp:dodgeball) 3 )
        3
      )
      (>= 3 (+ (count throwAttempt:dodgeball) (count beachballBouncedOffRamp:basketball) )
      )
    )
  )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin:red)
)
)



(define (game game-id-331) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b5 - curved_wooden_ramp ?t ?d - cube_block)
      (and
        (and
          (game-optional
            (exists (?h - ball)
              (not
                (not
                  (opposite ?d ?t)
                )
              )
            )
          )
          (game-conserved
            (equal_z_position room_center ?t)
          )
        )
      )
    )
    (not
      (forall (?c5 - building)
        (and
          (forall (?d - curved_wooden_ramp)
            (forall (?d ?o4 - cube_block ?d - hexagonal_bin)
              (game-conserved
                (agent_holds ?c5)
              )
            )
          )
          (exists (?r - cylindrical_block)
            (and
              (and
                (exists (?r - ball)
                  (exists (?d - hexagonal_bin)
                    (and
                      (forall (?c3 - hexagonal_bin)
                        (game-optional
                          (faces ?r ?c3)
                        )
                      )
                      (forall (?b - game_object ?d - (either wall laptop lamp) ?b ?o - cube_block)
                        (and
                          (and
                            (exists (?b2 - doggie_bed ?b - sliding_door ?x ?x0 ?x1 - light_blue)
                              (and
                                (forall (?o4 - ball)
                                  (game-optional
                                    (not
                                      (and
                                        (and
                                          (agent_holds ?b)
                                          (and
                                            (not
                                              (touch ?o ?o4)
                                            )
                                            (in_motion rug)
                                          )
                                        )
                                        (same_type ?o ball)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (forall (?l1 - block ?b - golfball)
                              (and
                                (exists (?g - dodgeball)
                                  (and
                                    (exists (?c - hexagonal_bin ?l - ball)
                                      (game-conserved
                                        (agent_holds ?l)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (forall (?b - cube_block)
                                (exists (?o - block)
                                  (game-conserved
                                    (or
                                      (and
                                        (on ?c5 ?r)
                                        (and
                                          (and
                                            (in_motion ?c5)
                                            (not
                                              (and
                                                (in_motion ?o)
                                                (in_motion ?d)
                                              )
                                            )
                                          )
                                          (in_motion ?d)
                                          (in ?d ?b)
                                        )
                                      )
                                      (not
                                        (agent_holds ?d)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (forall (?h - game_object)
                  (exists (?b7 - dodgeball ?d - ball)
                    (game-conserved
                      (not
                        (and
                          (object_orientation ?h upright)
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (agent_holds ?c5)
              )
              (game-conserved
                (not
                  (exists (?b - hexagonal_bin ?r - dodgeball)
                    (and
                      (is_setup_object ?r)
                      (on ?c5 ?c5)
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (in rug ?c5)
          )
          (game-optional
            (not
              (faces ?c5 ?c5)
            )
          )
          (game-conserved
            (broken ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d ?bl - dodgeball)
        (then
          (hold (forall (?o - game_object ?b - building) (in ?bl ?d) ) )
          (hold (on ?bl ?bl) )
          (hold (not (adjacent desk ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (* (count dodgeballThrownToBinFromDesk:green) (* (count-once-per-external-objects dodgeballThrownToBinFromDesk:pink:yellow) (* (count-overlapping dodgeballThrownToBinFromDesk:beachball) 0 10 (count-once-per-objects dodgeballThrownToBinFromDesk:doggie_bed) 2 (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) (external-forall-maximize (external-forall-maximize (* (count-measure dodgeballThrownToBinFromDesk:beachball) (+ 5 (* (* (count-once-per-objects dodgeballThrownToBinFromDesk:beachball) (external-forall-maximize (* (* 5 1 )
                              (count-total dodgeballThrownToBinFromDesk:yellow:basketball)
                            )
                          )
                        )
                        (+ 10 (* (> (count dodgeballThrownToBinFromDesk:purple) (count-once-per-objects dodgeballThrownToBinFromDesk:hexagonal_bin) )
                            (count-once-per-objects dodgeballThrownToBinFromDesk:beachball)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (* 2 10 (* (count-once dodgeballThrownToBinFromDesk:dodgeball) (count-once-per-objects dodgeballThrownToBinFromDesk:yellow) )
                (* (+ 3 (* (count-once dodgeballThrownToBinFromDesk:white) 9 )
                  )
                  10
                )
              )
              50
              (* 1 (count-once-per-objects dodgeballThrownToBinFromDesk:yellow) )
              1
              (count dodgeballThrownToBinFromDesk:dodgeball)
            )
          )
        )
        (> 1 2 )
      )
    )
    (count dodgeballThrownToBinFromDesk:golfball)
  )
)
(:scoring
  (* (* 8 8 (count-longest dodgeballThrownToBinFromDesk:dodgeball:beachball) )
    (count-same-positions dodgeballThrownToBinFromDesk:dodgeball)
  )
)
)



(define (game game-id-332) (:domain many-objects-room-v1)
(:setup
  (forall (?d - (either golfball teddy_bear))
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (forall (?p - hexagonal_bin ?b - doggie_bed)
      (and
        (preference throwAttempt
          (exists (?t2 - (either floor cd))
            (then
              (once (agent_holds ?b) )
              (hold (and (and (in ?b ?b) (and (< (x_position ?t2) (x_position bed)) (not (> 1 1) ) ) ) (on ?b ?t2) ) )
              (once (and (not (on ?b ?b) ) (on ?b ?t2) (not (and (same_color ?b ?b) (in_motion ?b) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:beachball) (count throwAttempt:brown:dodgeball) )
)
(:scoring
  (count throwAttempt:hexagonal_bin)
)
)



(define (game game-id-333) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r2 ?b ?d2 ?d - triangular_ramp)
      (and
        (game-optional
          (on ?d2 ?d2)
        )
      )
    )
    (exists (?w - block)
      (game-conserved
        (and
          (not
            (in_motion ?w)
          )
          (not
            (and
              (agent_holds ?w)
              (on ?w ?w)
              (touch ?w ?w)
            )
          )
        )
      )
    )
    (forall (?db - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (exists (?o3 - ball)
          (and
            (not
              (game-conserved
                (opposite ?h ?o3)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?r2 - beachball ?g - pyramid_block)
        (then
          (hold (agent_holds agent) )
          (hold-while (in_motion ?g) (< 10 6) (broken ?g) (agent_holds ?g) )
          (hold (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (* (* (count-once dodgeballHitsBin:golfball) (* (* (count-once-per-objects dodgeballHitsBin:pink:purple) (count dodgeballHitsBin:basketball) (count-once dodgeballHitsBin:pink) )
          (count-once-per-objects dodgeballHitsBin:dodgeball)
        )
      )
      (= (* (count-once dodgeballHitsBin:golfball) 9 )
        (* 2 2 (count dodgeballHitsBin:beachball) )
      )
    )
  )
)
(:scoring
  (* (count dodgeballHitsBin:green:pink) -30 )
)
)



(define (game game-id-334) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin ?d - dodgeball)
    (game-conserved
      (not
        (opposite ?d ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?b ?c - dodgeball)
        (then
          (once (in_motion ?c) )
          (hold (exists (?d - drawer) (not (agent_holds ?d) ) ) )
          (once (not (not (and (not (not (agent_holds ?c) ) ) (not (in_motion ?c) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count thrownObjectHitsComputer:red:yellow_cube_block) (count-shortest thrownObjectHitsComputer:alarm_clock:pink_dodgeball) )
      (>= 10 (count thrownObjectHitsComputer:beachball) )
    )
  )
)
(:scoring
  (* 20 (- (* (count-once-per-objects thrownObjectHitsComputer:red:dodgeball) 2 )
      (count-once-per-objects thrownObjectHitsComputer:hexagonal_bin:blue_pyramid_block)
    )
  )
)
)



(define (game game-id-335) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (forall (?w1 - hexagonal_bin)
      (and
        (preference cubeThrownToBin
          (exists (?b - chair ?h - shelf ?o2 - dodgeball)
            (then
              (once (same_color ?o2 desk) )
              (once (not (not (not (agent_holds ?o2) ) ) ) )
              (hold (exists (?w1 - (either yellow_cube_block desktop) ?p3 - game_object ?d - dodgeball ?t - hexagonal_bin) (and (in_motion ?w1) (in_motion agent) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count cubeThrownToBin:dodgeball) )
)
(:scoring
  (* (count-once-per-objects cubeThrownToBin:beachball:red_pyramid_block) 9 )
)
)



(define (game game-id-336) (:domain many-objects-room-v1)
(:setup
  (forall (?b3 - (either pen laptop))
    (game-conserved
      (on ?b3 ?b3)
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?b4 - game_object ?o4 - hexagonal_bin ?o - (either pyramid_block teddy_bear))
        (then
          (hold-while (< 1 1) (exists (?h - hexagonal_bin) (< 1 3) ) )
          (hold (agent_holds ?o) )
          (hold-while (not (agent_holds ?o) ) (same_type ?o blinds) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 6 (external-forall-minimize (count-once-per-objects throwInBin:basketball) ) (count-once-per-objects throwInBin:dodgeball) )
    (* (count-once-per-objects throwInBin:doggie_bed) (+ 100 (count-once-per-objects throwInBin:doggie_bed) )
      2
      5
      5
      (* 5 2 )
    )
  )
)
(:scoring
  (count throwInBin:basketball)
)
)



(define (game game-id-337) (:domain many-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin ?b2 - doggie_bed)
    (and
      (game-optional
        (faces ?b2 ?b2)
      )
      (game-conserved
        (not
          (in_motion ?b2)
        )
      )
      (forall (?c - building)
        (game-optional
          (exists (?b2 - building)
            (not
              (> 1 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?o - ball ?s ?b6 - (either floor top_drawer) ?w - book ?t - (either cellphone cube_block))
        (then
          (once (and (agent_holds ?t) (same_color ?t ?t) ) )
          (once (not (in_motion ?t) ) )
          (once (in ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (> (count gameObjectToBin:dodgeball) (* (count gameObjectToBin:yellow_cube_block) (count-once gameObjectToBin:dodgeball) )
  )
)
(:scoring
  (* 15 (count gameObjectToBin:blue_cube_block) )
)
)



(define (game game-id-338) (:domain many-objects-room-v1)
(:setup
  (exists (?x - blue)
    (exists (?h - teddy_bear)
      (game-optional
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - doggie_bed ?p - (either tall_cylindrical_block))
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?l - curved_wooden_ramp ?s - dodgeball)
            (then
              (once (exists (?b1 - hexagonal_bin) (agent_holds ?s) ) )
              (once (not (not (and (and (and (not (adjacent desk pink) ) (in ?s agent) ) (same_type ?p blinds) ) (in_motion ?p) (equal_z_position ?s rug) (in_motion ?s) (touch ?s ?s) (= 1 (distance ?s ?s)) (and (and (not (not (and (in_motion ?s) (in ?s desk) ) ) ) (in_motion ?s) ) (and (agent_holds ?p) (and (in_motion ?s) (adjacent ?s agent) ) ) ) ) ) ) )
              (once (not (agent_holds ?s) ) )
            )
          )
        )
        (preference objectOnBed
          (exists (?t - wall ?b7 - ball)
            (then
              (once (on ?p ?p) )
              (once (object_orientation ?p upright) )
              (hold (not (equal_z_position room_center ?p) ) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - doggie_bed)
        (then
          (once (same_color ?h ?h) )
          (once (is_setup_object ?h) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b - game_object ?c6 - pillow)
        (at-end
          (forall (?h - red_pyramid_block ?o1 - hexagonal_bin ?b3 - dodgeball ?g - cube_block)
            (in_motion ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count objectOnBed:dodgeball) 5 )
    15
  )
)
(:scoring
  (count-once-per-objects throwAttempt:beachball:beachball:blue_dodgeball)
)
)



(define (game game-id-339) (:domain medium-objects-room-v1)
(:setup
  (exists (?z ?z0 ?z1 - (either front_left_corner front) ?t - cylindrical_block)
    (game-optional
      (agent_holds ?t)
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?bl - dodgeball)
        (then
          (once (in_motion ?bl) )
          (hold (in_motion ?bl) )
          (once (not (in_motion ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-total teddyBearLandsInBin:dodgeball:dodgeball) (count-once-per-objects teddyBearLandsInBin:purple) )
    3
  )
)
(:scoring
  (* (count teddyBearLandsInBin:purple) (count-once-per-objects teddyBearLandsInBin:side_table) )
)
)



(define (game game-id-340) (:domain many-objects-room-v1)
(:setup
  (forall (?b - wall)
    (game-conserved
      (opposite ?b agent)
    )
  )
)
(:constraints
  (and
    (forall (?l2 - (either golfball bridge_block cd) ?o2 - game_object ?b - ball)
      (and
        (preference objectThrownFromRug
          (exists (?h - doggie_bed ?r - game_object ?b - dodgeball)
            (then
              (once (in_motion ?b) )
            )
          )
        )
        (preference itemInClosedDrawerAtEnd
          (exists (?o5 - chair ?o - hexagonal_bin)
            (at-end
              (and
                (or
                  (or
                    (adjacent ?o ?b)
                    (< (distance ?b ?b) (distance ?o north_wall))
                  )
                )
                (> 8 (distance ?o ?o))
              )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?d - (either pillow book dodgeball bed))
            (then
              (once (in_motion ?d) )
              (once (not (equal_x_position door ?d) ) )
              (once (on ?b ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= (total-score) 8 )
      (>= 2 (count nonBlockPlacedInBuilding:basketball) )
    )
  )
)
(:scoring
  (count objectThrownFromRug:golfball:pyramid_block)
)
)



(define (game game-id-341) (:domain few-objects-room-v1)
(:setup
  (forall (?r - triangular_ramp)
    (exists (?s - dodgeball ?h - cube_block ?b - hexagonal_bin)
      (and
        (game-conserved
          (and
            (not
              (faces ?r ?b)
            )
            (in_motion ?r)
          )
        )
        (game-conserved
          (is_setup_object ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?b1 - chair)
        (then
          (once (in_motion ?b1) )
          (once (agent_holds ?b1) )
          (hold-while (agent_holds ?b1) (agent_holds ?b1) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?p3 - building)
        (then
          (once (same_color ?p3 ?p3) )
          (once (adjacent ?p3 ?p3) )
          (once (not (in_motion ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once teddyBearLandsInBin) 3 )
)
(:scoring
  (count-once teddyBearLandsInBin:yellow_cube_block)
)
)



(define (game game-id-342) (:domain many-objects-room-v1)
(:setup
  (not
    (forall (?h - curved_wooden_ramp)
      (game-optional
        (object_orientation ?h upside_down)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?p - dodgeball)
        (then
          (hold (and (touch ?p ?p) (in_motion top_shelf) (agent_holds ?p) ) )
          (once (same_type ?p bridge_block) )
          (hold (agent_holds rug) )
        )
      )
    )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - (either dodgeball mug) ?w - triangular_ramp)
        (then
          (hold (= (distance ?w bed) 3) )
          (hold (on rug ?w) )
          (hold-while (agent_holds ?w) (in_motion ?w) (not (not (agent_holds ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (external-forall-maximize (count itemsHidingScreens:red_pyramid_block) ) 5 )
    (>= (* (+ (* (* (count-once-per-external-objects itemsHidingScreens:doggie_bed) (count-once-per-objects blueObjectMovedToRoomCenter:doggie_bed) )
            (* 2 -10 10 )
            10
            (count blueObjectMovedToRoomCenter:golfball:red)
          )
          (count-unique-positions itemsHidingScreens:rug:book)
        )
        7
      )
      (count-once-per-objects itemsHidingScreens:basketball)
    )
  )
)
(:scoring
  (external-forall-minimize
    (* 2 0 )
  )
)
)



(define (game game-id-343) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (and
        (forall (?o4 - shelf ?b - hexagonal_bin)
          (game-optional
            (and
              (and
                (in agent ?b)
                (not
                  (above ?b ?b)
                )
                (and
                  (not
                    (in ?b ?b)
                  )
                  (agent_holds rug)
                )
                (not
                  (or
                    (rug_color_under ?b pink)
                    (not
                      (and
                        (not
                          (< (distance desk ?b) 1)
                        )
                      )
                    )
                  )
                )
                (agent_holds ?b)
                (not
                  (in_motion ?b)
                )
                (agent_holds agent)
              )
              (adjacent ?b ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s ?l1 - (either cellphone golfball dodgeball))
      (and
        (preference smallItemsInPlace
          (exists (?d - dodgeball)
            (then
              (once (rug_color_under ?l1 color) )
              (once (and (same_type ?l1 ball) (not (same_color agent green) ) ) )
              (once (opposite ?s ?s) )
            )
          )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?r - pink_dodgeball ?s - triangular_ramp)
        (then
          (once (agent_holds ?s) )
          (hold-while (in_motion ?s) (exists (?d - game_object) (in ?d agent) ) )
          (once (and (and (= 4) (on ?s ?s) (in_motion ?s) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (> (count-once-per-objects smallItemsInPlace:dodgeball) (- 5 )
      )
    )
    (>= (count throwBallToBinOffObject:basketball) 3 )
  )
)
(:scoring
  (- (count smallItemsInPlace:yellow_pyramid_block) )
)
)



(define (game game-id-344) (:domain medium-objects-room-v1)
(:setup
  (forall (?f - building)
    (exists (?c1 ?h - (either hexagonal_bin beachball dodgeball))
      (and
        (and
          (game-conserved
            (in ?h ?f)
          )
          (game-conserved
            (or
              (agent_holds ?h)
            )
          )
          (forall (?c3 - pillow)
            (game-optional
              (adjacent room_center ?f)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?h - dodgeball ?o - building ?h - hexagonal_bin)
        (at-end
          (and
            (not
              (equal_x_position desk ?h)
            )
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (* (count throwAttemptFromDoor:dodgeball:blue_dodgeball) (- (count-once-per-objects throwAttemptFromDoor:yellow:beachball) )
          (count throwAttemptFromDoor:beachball:dodgeball)
          2
          30
          (count throwAttemptFromDoor:pink)
          (* 6 4 25 )
        )
        18
      )
      (total-time)
    )
    (or
      (<= (total-time) (total-time) )
    )
  )
)
(:scoring
  (* (* 3 2 )
    (+ 1 (count-once-per-objects throwAttemptFromDoor:top_drawer) )
  )
)
)



(define (game game-id-345) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin)
    (exists (?d - sliding_door)
      (game-optional
        (between ?d agent agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object ?h - hexagonal_bin)
      (and
        (preference blocksInPlace
          (exists (?f - hexagonal_bin)
            (then
              (once (not (on ?h ?h) ) )
              (once (touch ?h ?f) )
              (once (on ?f ?f) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (exists (?bl - (either cube_block blue_cube_block pillow))
            (at-end
              (broken ?bl)
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?d2 - hexagonal_bin)
            (then
              (hold (on pink ?d2) )
              (once (in ?d2 ?d2) )
              (hold (< (x_position agent) 1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (* 2 (>= (count blockIncorrectlyPicked:dodgeball) 4 )
      )
    )
    (<= (external-forall-maximize (count-once-per-objects blockIncorrectlyPicked:blue_pyramid_block) ) (count blockIncorrectlyPicked:basketball) )
  )
)
(:scoring
  (+ (* 3 (count-once-per-external-objects thrownObjectHitsComputer:doggie_bed) )
    (- 10 )
    (* (+ (count-once thrownObjectHitsComputer:pyramid_block:red:yellow) (count blocksInPlace:pink) )
      (- (* 1 (count-overlapping thrownObjectHitsComputer:doggie_bed) )
      )
      (* (count-once-per-objects blocksInPlace:beachball) (count-once blockIncorrectlyPicked:cube_block:green) )
      3
      (* 0 10 )
    )
  )
)
)



(define (game game-id-346) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (> 10 3)
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?h - building)
        (then
          (once (game_over ) )
          (hold (= 2 (distance_side door front ?h) (distance agent agent)) )
          (once (and (not (not (< (distance ?h ?h) 9) ) ) (adjacent ?h ?h) ) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?h - building)
        (then
          (once (not (in ?h ?h) ) )
          (once (not (and (and (not (not (agent_holds ?h) ) ) (agent_holds ?h) (and (< (distance door ?h) (distance ?h ?h)) (and (agent_holds ?h) (not (on ?h ?h) ) ) ) ) (and (not (adjacent bed ?h) ) (in_motion ?h) ) ) ) )
          (once (= 9 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 6 (count-once-per-objects throwAttemptFromDoor:dodgeball) )
    (>= 18 10 )
  )
)
(:scoring
  (count throwAttemptFromDoor:orange)
)
)



(define (game game-id-347) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - dodgeball)
    (game-conserved
      (not
        (in_motion ?db)
      )
    )
  )
)
(:constraints
  (and
    (preference failedThrowAttempt
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h) )
          (once (on agent ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?w - hexagonal_bin)
        (then
          (once (and (in_motion ?w) (in_motion ?w) ) )
          (once (agent_holds ?w) )
          (once (and (in_motion ?w) (in_motion ?w) ) )
        )
      )
    )
    (forall (?p2 - (either cylindrical_block book alarm_clock bridge_block pyramid_block))
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?y - upside_down)
            (then
              (hold (in ?p2 ?p2) )
              (once (rug_color_under south_wall red) )
              (once (and (on ?p2 ?p2) (and (faces ?p2 ?p2) (agent_holds ?p2) ) (and (exists (?l - green_triangular_ramp) (in ?l ?p2) ) (adjacent ?p2 ?p2) (and (not (agent_holds ?p2) ) (in_motion ?p2) ) ) (same_type ?p2 bridge_block) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (not
          (>= 1 (external-forall-maximize (count-longest throwToRampToBin:blue_pyramid_block) ) )
        )
        (<= 3 8 )
      )
      (not
        (= (count failedThrowAttempt:dodgeball:beachball) (count golfballLandsInBinThroughRamp:dodgeball:pink) )
      )
    )
  )
)
(:scoring
  (* (* (* 5 10 )
      2
      (count-overlapping throwToRampToBin:red:dodgeball)
    )
    (count-once-per-objects failedThrowAttempt:yellow)
  )
)
)



(define (game game-id-348) (:domain few-objects-room-v1)
(:setup
  (forall (?d1 - building)
    (game-conserved
      (and
        (adjacent ?d1 ?d1)
        (not
          (in_motion ?d1)
        )
        (adjacent_side desk front ?d1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p - dodgeball)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?c - building)
            (then
              (once (forall (?o - chair ?b - block ?x - color) (or (in_motion ?p) (agent_holds bed) (and (or (agent_holds ?p) (on ?b ?p) ) (in_motion ?p) ) ) ) )
              (once (exists (?r - dodgeball ?w2 ?d - block ?d2 - drawer) (in_motion ?c) ) )
              (once (in_motion floor) )
            )
          )
        )
        (preference throwFromDoorToBin
          (exists (?x - white)
            (at-end
              (and
                (not
                  (on ?p ?p)
                )
                (agent_holds ?p)
              )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?o - drawer)
            (then
              (once (on ?o ?o) )
              (hold (in_motion ?p) )
              (once (not (agent_holds ?p) ) )
            )
          )
        )
      )
    )
    (forall (?bl - ball)
      (and
        (preference towerFallsWhileBuilding
          (exists (?r - hexagonal_bin)
            (then
              (once (< 1 (distance_side desk front ?bl)) )
              (hold (on ?r ?bl) )
              (once (and (not (not (and (on ?r ?r) (< (distance rug ?bl) 7) ) ) ) (on ?bl ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-once-per-objects smallItemsInPlace:beachball) (count-once-per-objects smallItemsInPlace:dodgeball) )
  )
)
(:scoring
  (* (count throwFromBehindChairsInBin:dodgeball:beachball) 25 )
)
)



(define (game game-id-349) (:domain few-objects-room-v1)
(:setup
  (forall (?h - doggie_bed ?l ?l - game_object)
    (game-optional
      (and
        (agent_holds agent)
        (not
          (in_motion ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?o4 - beachball ?d - cylindrical_block ?o1 - dodgeball)
        (then
          (once (not (and (and (in_motion ?o1) (in_motion ?o1) ) (on bed ?o1) ) ) )
          (hold-while (exists (?c3 - (either dodgeball cube_block golfball)) (not (faces ?c3 ?c3) ) ) (and (and (in_motion ?o1) (agent_holds ?o1) ) (same_type desk ?o1) (and (exists (?h - cube_block) (on ?o1 ?h) ) (not (and (in_motion ?o1) (agent_holds ?o1) ) ) ) (not (adjacent ?o1 agent) ) (and (not (above ?o1 ?o1) ) ) (and (and (in_motion desk) (in agent agent) (and (on floor ?o1) (touch ?o1 ?o1) ) ) (agent_holds ?o1) ) (on ?o1 ?o1) (adjacent ?o1 agent) (in_motion floor) (agent_holds ?o1) ) (adjacent bed agent) )
          (hold-while (not (>= 8 (distance room_center ?o1)) ) (in ?o1 ?o1) (touch ?o1 agent) (and (forall (?o5 - golfball) (agent_holds ?o5) ) (and (adjacent desk ?o1) (> 1 2) ) ) )
        )
      )
    )
    (forall (?b6 - ball ?h - hexagonal_bin)
      (and
        (preference bigObjectThrownToBed
          (exists (?w2 ?ob - dodgeball)
            (then
              (once (on ?h ?h) )
              (hold (and (not (on ?ob top_shelf) ) (agent_holds agent) ) )
              (once (not (not (between ?h ?ob ?w2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count bigObjectThrownToBed:green)
)
)



(define (game game-id-350) (:domain many-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (and
      (and
        (game-optional
          (in ?d ?d)
        )
        (exists (?d ?t2 ?b4 - hexagonal_bin)
          (game-optional
            (agent_holds agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o1 - pink_dodgeball ?ob - flat_block)
        (then
          (hold (agent_holds ?ob) )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference watchOnShelf
          (exists (?b7 ?d ?c3 ?b5 ?b1 ?d - chair ?d - golfball)
            (then
              (once (agent_holds agent) )
              (once (agent_holds ?d) )
            )
          )
        )
        (preference smallItemsInPlace
          (exists (?c4 - game_object ?h - hexagonal_bin ?b3 - wall)
            (at-end
              (on ?b3 ?b3)
            )
          )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?b4 - curved_wooden_ramp)
        (at-end
          (agent_holds ?b4)
        )
      )
    )
  )
)
(:terminal
  (>= (count smallItemsInPlace) (count cubeBlockThrownToTopShelf:basketball:dodgeball) )
)
(:scoring
  (count smallItemsInPlace:pink_dodgeball)
)
)



(define (game game-id-351) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?db - dodgeball)
      (and
        (exists (?b - curved_wooden_ramp ?b6 - hexagonal_bin)
          (game-conserved
            (< (distance desk ?db) (distance desk ?b6))
          )
        )
        (game-conserved
          (or
            (in ?db ?db)
          )
        )
        (and
          (game-conserved
            (or
              (agent_holds blue)
              (and
                (in_motion ?db)
                (exists (?d - hexagonal_bin)
                  (not
                    (agent_holds ?d)
                  )
                )
                (adjacent ?db ?db)
                (in_motion ?db)
                (in_motion ?db)
                (< 2 1)
                (not
                  (in ?db ?db)
                )
                (agent_holds ?db)
              )
            )
          )
        )
      )
    )
    (forall (?b ?b8 - ball)
      (forall (?p2 - cylindrical_block)
        (and
          (game-conserved
            (not
              (same_type bed block)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?d - game_object ?b ?c1 - drawer)
        (then
          (once (= 3 (distance ?b ?c1) (distance desk ?b)) )
          (once (agent_holds ?c1) )
          (once (and (agent_holds ?b) (same_color ?b pink) ) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?b6 - game_object)
        (then
          (once (touch ?b6 ?b6) )
          (once (adjacent ?b6 ?b6) )
          (once (agent_holds ?b6) )
          (once (is_setup_object ?b6) )
        )
      )
    )
    (preference throwBallToDoggieBed
      (exists (?z ?z0 - (either left right) ?r1 - (either hexagonal_bin wall tall_cylindrical_block))
        (then
          (once (in_motion ?r1) )
          (once (not (rug_color_under ?r1 blue) ) )
          (once (agent_holds bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToDoggieBed:green) (count throwBallToDoggieBed:blue_dodgeball:hexagonal_bin) )
)
(:scoring
  (count beachballBouncedOffRamp:triangle_block)
)
)



(define (game game-id-352) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball)
    (and
      (exists (?w1 - curved_wooden_ramp)
        (game-optional
          (in_motion ?c)
        )
      )
      (forall (?db - doggie_bed)
        (exists (?y ?y0 ?y1 - (either upside_down))
          (and
            (forall (?b7 - game_object)
              (game-conserved
                (and
                  (adjacent desk ?b7)
                  (same_type ?b7 bridge_block)
                )
              )
            )
            (and
              (game-conserved
                (and
                  (game_over )
                  (in_motion ?db)
                )
              )
            )
          )
        )
      )
      (and
        (game-conserved
          (in ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - chair ?o3 ?f - hexagonal_bin ?c1 - dodgeball)
      (and
        (preference blocksInPlace
          (exists (?o2 - pillow)
            (then
              (once (touch agent ?o2) )
              (once (agent_holds agent) )
              (hold (not (agent_holds ?c1) ) )
            )
          )
        )
      )
    )
    (forall (?b7 - hexagonal_bin ?w2 - hexagonal_bin)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?c5 - shelf)
            (then
              (once (in_motion ?w2) )
              (hold (adjacent ?c5 ?w2) )
              (once (adjacent ?w2 ?c5) )
            )
          )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?o - hexagonal_bin ?ob - hexagonal_bin ?d - dodgeball)
        (then
          (hold-while (in ?d ?d) (adjacent_side desk front_left_corner ?d) (on ?d ?d) (agent_holds ?d) )
          (once (on ?d ?d) )
          (once (not (adjacent ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count nonBlockPlacedInBuilding:golfball) (count-once-per-objects blocksInPlace:dodgeball) )
    (>= (count-once-per-objects nonBlockPlacedInBuilding:dodgeball:pink) 2 )
    (>= (* (+ (count-once nonBlockPlacedInBuilding:red) 5 )
        3
      )
      5
    )
  )
)
(:scoring
  (count objectLandsInBin:hexagonal_bin)
)
)



(define (game game-id-353) (:domain many-objects-room-v1)
(:setup
  (forall (?h - block)
    (game-optional
      (not
        (and
          (in_motion ?h)
          (and
            (on green ?h)
            (same_type ?h blinds)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?h - hexagonal_bin ?o - dodgeball)
        (then
          (hold-while (in_motion ?o) (agent_holds ?o) )
          (once (and (exists (?x ?x0 ?x1 - yellow ?h - block) (on south_wall ?o) ) (and (agent_holds ?o) (faces ?o ?o) ) (agent_holds ?o) (in ?o ?o) ) )
          (hold (not (on ?o ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (total-time) (count-once-per-objects ballKnocksBlockFromRug:blue_dodgeball) )
    )
  )
)
(:scoring
  (count-once ballKnocksBlockFromRug:pink_dodgeball:dodgeball:blue_dodgeball)
)
)



(define (game game-id-354) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - (either lamp cellphone blue_cube_block golfball))
      (game-optional
        (and
          (agent_holds agent)
          (and
            (not
              (adjacent ?h ?h)
            )
            (not
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (and (not (not (agent_holds ?b) ) ) (and (and (not (not (agent_holds agent) ) ) ) (not (and (game_over ) (< 1 1) (or (agent_holds ?b) (in_motion agent) ) ) ) ) (on ?b ?b) ) )
          (once (agent_holds agent) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 7 )
)
(:scoring
  (count-once-per-objects throwBallToBin:blue_dodgeball)
)
)



(define (game game-id-355) (:domain few-objects-room-v1)
(:setup
  (exists (?b9 - ball ?d - drawer)
    (game-conserved
      (not
        (or
          (agent_holds ?d)
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?d - ball ?c5 - curved_wooden_ramp ?h - curved_wooden_ramp)
            (then
              (once (not (and (agent_holds ?h) (on ?d ?d) ) ) )
              (hold (and (not (not (>= (distance ?d desk) 1) ) ) (and (on ?h ?h) (not (in_motion ?h) ) ) ) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference objectToBinOnFirstTry
          (exists (?b2 - dodgeball)
            (then
              (once (and (in_motion bed) (exists (?c4 - hexagonal_bin) (same_type ?c4 ?c4) ) ) )
              (once-measure (adjacent bed ?b2) (distance ?d agent) )
              (once (in_motion ?d) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?r1 - hexagonal_bin)
        (then
          (once (and (in_motion ?r1) (agent_holds pink) (not (and (in_motion ?r1) (and (agent_holds ?r1) (open ?r1) ) ) ) (in_motion ?r1) ) )
          (once (in_motion ?r1) )
          (once (agent_holds ?r1) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference watchOnShelf
          (exists (?h - (either triangular_ramp doggie_bed desktop alarm_clock blue_cube_block))
            (at-end
              (not
                (exists (?s - ball ?b - hexagonal_bin ?b - pink_dodgeball)
                  (agent_holds ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 8 9 )
    (* 1 (count-once-per-objects golfballLandsInBinThroughRamp:pyramid_block) )
  )
)
(:scoring
  (count-once objectToBinOnFirstTry:golfball)
)
)



(define (game game-id-356) (:domain few-objects-room-v1)
(:setup
  (forall (?c - ball)
    (exists (?t1 - hexagonal_bin)
      (and
        (game-optional
          (agent_holds ?t1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference basketMadeFromRug
      (exists (?h - curved_wooden_ramp ?r1 - dodgeball ?d - hexagonal_bin)
        (then
          (once (< 6 (distance ?d ?d)) )
          (hold-while (same_object ?d ?d) (and (exists (?d - dodgeball) (< (distance_side ?d left ?d back) 8) ) (agent_holds ?d) ) (rug_color_under pink yellow) (in_motion ?d) )
          (once (game_start ) )
        )
      )
    )
    (forall (?h ?h - pyramid_block)
      (and
        (preference ballInOrOnBin
          (then
            (once (in ?h ?h) )
            (hold-while (agent_holds ?h) (and (agent_holds bed) (and (and (agent_holds floor) (in ?h ?h) ) (agent_holds brown) ) ) (on ?h desk) (and (opposite ?h ?h) (agent_holds ?h) ) )
            (once (and (adjacent desk bed) (and (in ?h ?h) (agent_holds ?h) ) (not (touch ?h ?h) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (and
        (>= (count basketMadeFromRug:dodgeball) (total-score) )
        (>= 5 4 )
      )
    )
  )
)
(:scoring
  (count basketMadeFromRug:basketball:beachball)
)
)



(define (game game-id-357) (:domain few-objects-room-v1)
(:setup
  (exists (?c - chair ?f - red_dodgeball)
    (game-conserved
      (in_motion ?f)
    )
  )
)
(:constraints
  (and
    (forall (?s - game_object ?s - (either lamp side_table))
      (and
        (preference ballThrowAttempt
          (exists (?f - hexagonal_bin)
            (then
              (hold (on ?s ?f) )
              (once (on ?s ?f) )
              (once (toggled_on ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count ballThrowAttempt:hexagonal_bin) )
)
(:scoring
  (< (count ballThrowAttempt:basketball) 6 )
)
)



(define (game game-id-358) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds rug)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?db - doggie_bed)
        (then
          (once (agent_holds ?db) )
          (hold (not (adjacent desk ?db) ) )
          (once (agent_holds ?db) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-unique-positions throwAttempt:pink_dodgeball:purple) )
)
(:scoring
  (count throwAttempt:green:blue_pyramid_block)
)
)



(define (game game-id-359) (:domain medium-objects-room-v1)
(:setup
  (exists (?tb - (either cube_block blue_cube_block))
    (forall (?h - shelf ?h - hexagonal_bin)
      (game-optional
        (not
          (agent_holds agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?c - teddy_bear)
        (then
          (once (exists (?o3 - hexagonal_bin) (in_motion ?c) ) )
          (hold-while (on ?c ?c) (agent_holds ?c) )
          (once (agent_holds agent) )
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
          (hold (on ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (> (count-once ballThrownToRug:pyramid_block:basketball) 0.5 )
)
(:scoring
  (/
    3
    (- (count ballThrownToRug:golfball) )
  )
)
)



(define (game game-id-360) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?tb - hexagonal_bin ?b4 - hexagonal_bin ?c - triangular_ramp)
        (at-end
          (object_orientation ?c upright)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:dodgeball)
)
)



(define (game game-id-361) (:domain many-objects-room-v1)
(:setup
  (forall (?l3 - blue_pyramid_block)
    (game-conserved
      (and
        (in_motion ?l3)
        (is_setup_object bed)
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?r - teddy_bear)
        (then
          (once (and (not (in ?r pink) ) (equal_x_position ?r ?r) (in_motion ?r) ) )
          (once (or (and (not (and (in_motion ?r) (same_color ?r ?r) (in ?r ?r) ) ) (on ?r ?r) ) (opposite agent top_shelf) (not (same_type ?r ?r) ) (and (on ?r ?r) (in_motion west_wall) ) (> 1 (distance ?r ?r)) ) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (+ (count-same-positions agentLeavesDogbedOrNoMoreBalls:hexagonal_bin) 4 )
      (* 3 (count agentLeavesDogbedOrNoMoreBalls:orange) )
    )
    (>= (count agentLeavesDogbedOrNoMoreBalls:doggie_bed:hexagonal_bin) 5 )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:dodgeball)
)
)



(define (game game-id-362) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (and
        (not
          (in_motion ?b)
        )
        (adjacent_side bed front ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?r2 - game_object ?d - yellow_pyramid_block)
        (at-end
          (in_motion ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (total-score) )
  )
)
(:scoring
  (+ (* 3 (- (* (* (count throwObjectToBin:golfball) 300 )
          8
        )
      )
    )
    (count-once throwObjectToBin:triangle_block)
  )
)
)



(define (game game-id-363) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - (either yellow_cube_block game_object))
    (game-conserved
      (equal_x_position desk ?p)
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h - hexagonal_bin)
        (at-end
          (game_over )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?c1 - wall ?t - green_triangular_ramp)
        (then
          (once (or (and (and (in ?t ?t) (is_setup_object ?t) ) (and (agent_holds ?t) (not (agent_holds ?t) ) (on rug ?t) ) ) (in_motion ?t) ) )
          (hold-while (and (not (in_motion ?t) ) (and (>= 1 1) (> 4 (distance bed ?t)) ) (faces ?t ?t) (and (and (on ?t ?t) (agent_holds ?t) ) (and (= (x_position ?t) (distance room_center ?t)) (exists (?w1 - golfball) (on ?t bed) ) ) (toggled_on ?t) ) ) (and (agent_holds ?t) (not (agent_holds ?t) ) ) (and (agent_holds ?t) (and (not (in_motion ?t) ) (and (touch ?t agent) (same_color ?t ?t) ) ) ) (agent_holds ?t) )
          (hold (and (agent_holds west_wall) (and (on ?t ?t) (< (distance_side side_table front ?t front) 1) ) ) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?d - doggie_bed)
        (at-end
          (agent_holds ?d)
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?c4 - pink_dodgeball)
        (then
          (once (on ?c4 ?c4) )
          (once (on rug ?c4) )
          (hold-while (game_start ) (adjacent door brown) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?b - hexagonal_bin)
        (then
          (once (object_orientation ?b diagonal) )
          (once (touch ?b ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?o3 - blue_pyramid_block)
        (then
          (once (not (agent_holds ?o3) ) )
          (once (agent_holds ?o3) )
          (once (agent_crouches ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 6 )
)
(:scoring
  (count-shortest objectOnBed:dodgeball:blue_pyramid_block)
)
)



(define (game game-id-364) (:domain medium-objects-room-v1)
(:setup
  (forall (?r2 - cube_block ?h - wall)
    (exists (?z ?z0 ?z1 - (either right front_left_corner) ?d - block ?h - (either blue_cube_block tall_cylindrical_block))
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?b - building)
        (at-end
          (adjacent_side desk front_left_corner agent front)
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (total-score) )
)
(:scoring
  (count-same-positions throwAttemptKnocksBlock:green:dodgeball)
)
)



(define (game game-id-365) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - dodgeball ?b - building ?t2 - hexagonal_bin)
      (exists (?b - block)
        (game-conserved
          (and
            (and
              (and
                (agent_holds blue)
                (not
                  (agent_holds ?b)
                )
              )
              (= 2 1)
              (> 1 (distance ?b agent))
            )
            (not
              (in_motion ?b)
            )
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (and
          (game-optional
            (and
              (and
                (adjacent room_center ?h)
                (in_motion ?h)
              )
              (and
                (on agent ?h)
                (and
                  (in_motion bed)
                  (adjacent_side desk front_left_corner ?h right)
                )
                (not
                  (adjacent desk ?h)
                )
              )
            )
          )
          (game-conserved
            (in ?h ?h)
          )
          (and
            (and
              (exists (?w1 - block)
                (exists (?w - hexagonal_bin)
                  (forall (?w - hexagonal_bin ?p1 - dodgeball)
                    (and
                      (forall (?db - game_object ?b - game_object)
                        (game-conserved
                          (adjacent ?w1 ?w)
                        )
                      )
                    )
                  )
                )
              )
              (forall (?b - game_object ?p3 - triangular_ramp)
                (game-conserved
                  (in_motion ?p3)
                )
              )
            )
          )
        )
        (and
          (exists (?b4 - hexagonal_bin)
            (exists (?h - hexagonal_bin ?b2 - hexagonal_bin)
              (exists (?h ?h - dodgeball ?h - block ?z ?z0 - back)
                (forall (?o1 ?b - pink_dodgeball ?c - dodgeball)
                  (exists (?d - building)
                    (game-conserved
                      (not
                        (not
                          (adjacent door ?b2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?g - dodgeball)
            (and
              (and
                (game-conserved
                  (in ?h ?g)
                )
                (forall (?b3 - (either bridge_block alarm_clock))
                  (game-optional
                    (and
                      (exists (?o1 - cube_block ?l4 - hexagonal_bin)
                        (touch ?l4 rug)
                      )
                      (and
                        (on ?b3 ?g)
                        (in_motion ?b3)
                      )
                    )
                  )
                )
                (forall (?o - hexagonal_bin)
                  (and
                    (game-conserved
                      (not
                        (in_motion ?h)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (and
              (in_motion ?h)
              (not
                (agent_holds desk)
              )
            )
          )
        )
        (forall (?b - game_object)
          (and
            (and
              (forall (?p2 - ball)
                (exists (?c - hexagonal_bin)
                  (exists (?h - chair ?b ?d - dodgeball)
                    (exists (?db - triangular_ramp ?tb - ball)
                      (exists (?c2 - game_object)
                        (and
                          (and
                            (forall (?b - teddy_bear)
                              (exists (?b - curved_wooden_ramp)
                                (and
                                  (and
                                    (exists (?db - (either pencil dodgeball dodgeball) ?f - pillow ?p1 - drawer)
                                      (game-conserved
                                        (not
                                          (in_motion ?d)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?b - triangular_ramp)
                              (exists (?l - wall ?d - hexagonal_bin)
                                (exists (?w2 - game_object)
                                  (exists (?r - book)
                                    (game-conserved
                                      (agent_holds ?b)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c - dodgeball)
        (then
          (hold (in_motion agent) )
          (once (not (agent_holds ?c) ) )
          (hold (adjacent ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownMissesEverything:tall_cylindrical_block:golfball) (+ 10 (count ballThrownMissesEverything:basketball) )
  )
)
(:scoring
  (* (count-increasing-measure ballThrownMissesEverything:yellow) (+ (count-once ballThrownMissesEverything:blue_dodgeball:basketball) (* (count ballThrownMissesEverything:beachball:dodgeball) (count ballThrownMissesEverything:purple:yellow:yellow_cube_block) )
    )
  )
)
)



(define (game game-id-366) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?r - hexagonal_bin ?y - (either upside_down upside_down) ?bl - ball)
      (agent_holds ?bl)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?c1 - curved_wooden_ramp ?b7 - cube_block)
        (then
          (once (on ?b7 ?b7) )
          (hold (agent_holds ?b7) )
          (hold (not (adjacent room_center ?b7) ) )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?d - (either laptop rug cd pen))
        (then
          (once (agent_holds ?d) )
          (once (toggled_on ?d) )
          (once (and (game_over ) (on ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (total-time) )
)
(:scoring
  (* 5 (count-once-per-objects ballToBinFromBed:dodgeball:red) )
)
)



(define (game game-id-367) (:domain many-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin ?c3 - hexagonal_bin)
    (game-conserved
      (and
        (adjacent ?c3 agent)
        (in_motion ?c3)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (at-end
        (agent_holds rug)
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?c - hexagonal_bin)
        (then
          (once (in_motion bed) )
          (hold (and (not (in_motion ?c) ) (and (in_motion ?c) (not (not (in_motion ?c) ) ) ) (on ?c ?c) (is_setup_object ?c) (on ?c ?c) (exists (?b - drawer) (not (equal_z_position ?b ?b) ) ) ) )
          (once (agent_holds ?c) )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?r2 - hexagonal_bin ?b - flat_block)
        (then
          (once (adjacent desk ?b) )
          (hold (not (and (adjacent room_center ?b) (agent_holds ?b) ) ) )
          (once (not (and (and (and (adjacent_side ?b left agent) (in_motion agent) ) (exists (?w2 - game_object) (not (agent_holds ?b) ) ) ) (agent_holds ?b) ) ) )
          (hold (< (distance_side ?b front ?b) (distance room_center ?b)) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?o - ball)
        (then
          (once (in_motion rug) )
          (once (not (in_motion ?o) ) )
          (hold (exists (?r1 - (either cellphone beachball game_object)) (agent_holds ?r1) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= (count-once ballInOrOnBin:book:hexagonal_bin) (count-unique-positions throwToBinFromDistance:book) )
      (and
        (>= (total-time) (* (+ (count-once-per-objects blockKnockedFromBuildingInBin:blue) (count blockKnockedFromBuildingInBin:basketball:pyramid_block) )
            (* (* 1 (count-once-per-objects throwToBinFromDistance) (count-once-per-external-objects blockKnockedFromBuildingInBin:pink:red_pyramid_block) )
              40
            )
          )
        )
        (>= (+ 2 (* (* (count ballInOrOnBin:beachball) 3 )
              (count pillowThrownToDoggieBed:dodgeball:basketball)
            )
            (count throwToBinFromDistance:dodgeball:purple:beachball)
            (count-once-per-objects throwToBinFromDistance:dodgeball)
            5
          )
          (count throwToBinFromDistance:blue_pyramid_block)
        )
      )
    )
    (or
      (or
        (= (* (<= 6 (* 3 (count blockKnockedFromBuildingInBin:orange) )
            )
            1
          )
          (count-once-per-objects ballInOrOnBin:basketball)
        )
        (>= 10 2 )
        (and
          (< (count pillowThrownToDoggieBed:tan) 2 )
          (>= 5 (total-time) )
        )
        (>= (count blockKnockedFromBuildingInBin:pink) (count-overlapping blockKnockedFromBuildingInBin:blue_dodgeball) )
      )
      (or
        (>= (total-time) (total-score) )
        (<= (total-score) 9 )
        (> (count-once-per-objects blockKnockedFromBuildingInBin:brown) (count-once blockKnockedFromBuildingInBin:golfball:dodgeball) )
      )
    )
    (= 15 (count-overlapping pillowThrownToDoggieBed:dodgeball) )
  )
)
(:scoring
  (count-unique-positions ballInOrOnBin:beachball)
)
)



(define (game game-id-368) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (forall (?b5 - ball ?l1 - (either laptop yellow_cube_block) ?c ?w2 ?h - cube_block ?l - chair)
      (forall (?d - doggie_bed)
        (forall (?b1 - (either mug pyramid_block blue_cube_block dodgeball))
          (and
            (game-optional
              (not
                (and
                  (in_motion ?h)
                  (not
                    (not
                      (< (distance bed rug) 1)
                    )
                  )
                )
              )
            )
            (game-optional
              (same_type ?l block)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?l - wall)
        (then
          (once (and (touch ?l desk) (not (and (and (not (adjacent_side room_center left ?l) ) (in_motion agent) (exists (?o ?l ?d2 - (either basketball game_object)) (in ?d2 ?o) ) ) (< (distance ?l ?l) 1) (agent_holds agent) ) ) (and (in_motion ?l) (not (not (adjacent door ?l) ) ) (in_motion ?l) ) (and (not (and (and (in_motion ?l) (and (and (= (building_size agent) (distance bed ?l) 1) (in ?l ?l) ) (and (on ?l ?l) (agent_holds ?l) ) (not (not (in_motion ?l) ) ) ) ) (adjacent bed ?l) (agent_holds ?l) ) ) (open ?l) ) (in ?l ?l) (touch ?l ?l) (and (and (agent_holds floor) (not (adjacent door desk) ) ) (and (agent_holds ?l) (adjacent bed ?l) (agent_holds agent) ) ) (and (and (and (on rug ?l) (in main_light_switch ?l) ) (between ?l agent ?l) ) (on ?l ?l) (agent_holds ?l) (agent_holds ?l) ) (not (in_motion rug) ) (same_object ?l ?l) ) )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?d1 - hexagonal_bin)
        (then
          (once (not (in_motion ?d1) ) )
          (hold (and (not (in_motion ?d1) ) (and (and (and (in_motion ?d1) (touch ?d1 ?d1) ) (and (adjacent ?d1 ?d1) (in_motion ?d1) (in_motion ?d1) ) (and (in top_shelf ?d1) (agent_holds ?d1) ) ) ) ) )
          (hold (not (not (in_motion ?d1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count objectThrownFromRug:beachball) (* (count brownObjectMovedToRoomCenter:dodgeball:beachball) (* 5 3 )
      )
    )
  )
)
(:scoring
  (count objectThrownFromRug:pink)
)
)



(define (game game-id-369) (:domain few-objects-room-v1)
(:setup
  (or
    (exists (?h - building ?c2 - (either cd triangular_ramp))
      (forall (?l4 - ball)
        (exists (?h - hexagonal_bin)
          (game-conserved
            (not
              (and
                (agent_holds ?h)
                (and
                  (same_color desk ?h)
                  (not
                    (on ?c2 bed)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x ?x0 - purple ?h - (either pencil))
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?o1 ?w2 - dodgeball)
            (then
              (once (not (agent_holds ?h) ) )
              (once (and (and (in_motion ?w2) (agent_holds ?h) ) ) )
              (once (< 5 (x_position ?h)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:cylindrical_block:dodgeball)
)
)



(define (game game-id-370) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - block)
      (exists (?o - ball ?b2 - wall)
        (and
          (game-conserved
            (in_motion ?d)
          )
          (and
            (game-conserved
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?b - curved_wooden_ramp ?b - game_object)
        (then
          (once (in ?b rug) )
          (once (<= 5 1) )
          (hold (in_motion ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    (total-score)
  )
)
(:scoring
  (count blockFromRugToDesk:green:dodgeball)
)
)



(define (game game-id-371) (:domain few-objects-room-v1)
(:setup
  (exists (?d - beachball)
    (forall (?b - cube_block)
      (forall (?p - doggie_bed ?c - game_object ?h - pyramid_block)
        (game-optional
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?c4 - game_object)
        (then
          (hold (in_motion ?c4) )
          (once (and (not (adjacent ?c4 ?c4) ) (not (not (agent_holds agent) ) ) (on ?c4 ?c4) ) )
          (once (and (not (in_motion ?c4) ) (agent_holds ?c4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballBouncesOnceToDoggieBed:yellow) (* (= 18 (* (* (count-once-per-objects dodgeballBouncesOnceToDoggieBed:blue_dodgeball:green) (* (count dodgeballBouncesOnceToDoggieBed:yellow) (count dodgeballBouncesOnceToDoggieBed:basketball:basketball) )
          )
          2
        )
      )
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:dodgeball)
)
)



(define (game game-id-372) (:domain few-objects-room-v1)
(:setup
  (exists (?o2 - game_object)
    (game-conserved
      (on ?o2 ?o2)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?l - block)
        (then
          (hold (in_motion ?l) )
          (once (not (agent_holds ?l) ) )
          (hold (same_object ?l ?l) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownThroughRampToBin:dodgeball) (external-forall-minimize (* (count ballThrownThroughRampToBin:red:dodgeball:doggie_bed) (* (count-once-per-objects ballThrownThroughRampToBin:beachball) (* (count ballThrownThroughRampToBin:dodgeball:rug) (count-longest ballThrownThroughRampToBin:dodgeball) )
        )
      )
    )
  )
)
(:scoring
  (count ballThrownThroughRampToBin:beachball)
)
)



(define (game game-id-373) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - curved_wooden_ramp)
      (game-conserved
        (in_motion ?b)
      )
    )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (and
            (not
              (not
                (and
                  (same_color agent ?h)
                  (in ?h ?h)
                )
              )
            )
          )
          (< (distance ?h ?h) (distance_side ?h right ?h front))
        )
      )
    )
    (exists (?o5 - hexagonal_bin)
      (game-optional
        (in_motion ?o5)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?r - hexagonal_bin)
        (then
          (hold (not (and (game_over ) (in_motion ?r) ) ) )
          (once (not (not (not (and (rug_color_under agent purple) (forall (?c - hexagonal_bin) (adjacent ?c ?r) ) ) ) ) ) )
        )
      )
    )
    (forall (?s - hexagonal_bin ?o - game_object)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?o - block)
            (then
              (once (not (between ?o ?o bottom_shelf) ) )
              (hold (and (not (and (and (not (and (adjacent_side ?o front ?o) (in_motion ?o) ) ) (exists (?h - hexagonal_bin ?o2 - (either dodgeball pen teddy_bear) ?o1 - dodgeball ?b - pink_dodgeball ?r - hexagonal_bin) (not (and (same_color ?r purple) (on floor ?r) ) ) ) ) (not (faces ?o ?o) ) (agent_holds top_shelf) ) ) (and (adjacent ?o ?o) (adjacent ?o ?o) (not (and (opposite floor ?o) (on ?o ?o) (not (adjacent ?o ?o) ) ) ) ) ) )
              (once (agent_holds ?o) )
            )
          )
        )
      )
    )
    (preference throwBallToBin
      (exists (?b2 - (either dodgeball blue_cube_block) ?x - light_blue)
        (at-end
          (and
            (and
              (not
                (and
                  (agent_holds ?b2)
                  (on ?b2 ?b2)
                  (not
                    (agent_holds ?b2)
                  )
                  (agent_holds ?b2)
                )
              )
              (agent_holds ?b2)
            )
            (on ?b2 ?b2)
            (equal_z_position ?b2 ?b2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-shortest ballThrownHitsAgent:brown:doggie_bed:hexagonal_bin) (count cubeBlockThrownToTopShelf:basketball) )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-374) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 - hexagonal_bin)
    (game-conserved
      (in_motion ?o2)
    )
  )
)
(:constraints
  (and
    (forall (?w2 - hexagonal_bin ?c2 - blue_cube_block)
      (and
        (preference pillowMovedToRoomCenter
          (exists (?g - (either key_chain beachball teddy_bear))
            (then
              (once (in ?g ?c2) )
              (once (equal_x_position bed ?g) )
              (hold-while (adjacent room_center ?c2) (not (in_motion ?c2) ) (adjacent_side room_center left ?c2 right) )
            )
          )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?h - ball ?s - flat_block)
        (then
          (once (game_over ) )
          (hold (in_motion floor) )
          (hold (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (- (* (count-once-per-objects pillowMovedToRoomCenter:dodgeball) (count pillowMovedToRoomCenter:yellow_pyramid_block) )
      )
      5
    )
    (count-same-positions pillowMovedToRoomCenter:pink)
  )
)
(:scoring
  (* 5 2 )
)
)



(define (game game-id-375) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (forall (?l - cube_block)
      (exists (?p - pyramid_block ?r1 - dodgeball)
        (forall (?c1 - game_object)
          (game-conserved
            (agent_holds top_shelf)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?c - hexagonal_bin)
        (at-end
          (and
            (on ?c ?c)
            (agent_holds top_drawer)
            (not
              (exists (?s - hexagonal_bin ?t - game_object)
                (game_start )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count baseBlockInTowerAtEnd:dodgeball) (count baseBlockInTowerAtEnd:red) )
)
(:scoring
  (external-forall-maximize
    (- (* (* 5 (count-shortest baseBlockInTowerAtEnd:hexagonal_bin:pink) )
        5
        (count-once-per-objects baseBlockInTowerAtEnd:yellow:golfball)
      )
    )
  )
)
)



(define (game game-id-376) (:domain many-objects-room-v1)
(:setup
  (forall (?w - cube_block)
    (exists (?l - building)
      (exists (?h - ball)
        (game-optional
          (not
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?b - cylindrical_block)
        (then
          (once (not (not (<= 8 (distance room_center ?b)) ) ) )
          (once (and (touch ?b ?b) (agent_holds ?b) (not (exists (?g - pillow) (in_motion ?g) ) ) ) )
          (once (and (not (agent_holds agent) ) (in_motion ?b) ) )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?g - game_object ?l - building)
        (at-end
          (not
            (and
              (in_motion ?l)
              (adjacent ?l ?l)
              (agent_holds ?l)
              (in ?l ?l)
              (not
                (agent_holds ?l)
              )
              (in_motion ?l)
              (object_orientation ?l upright)
              (= 1)
              (not
                (in_motion ?l)
              )
              (not
                (in_motion ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-same-positions dodgeballHitsPillowWithoutTouchingBlock:yellow) 4 )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball:yellow_cube_block)
)
)



(define (game game-id-377) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - teddy_bear)
    (game-conserved
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d2 - green_triangular_ramp)
        (then
          (once (not (not (in ?d2 rug) ) ) )
          (once (in ?d2 ?d2) )
          (hold (not (faces ?d2 ?d2) ) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - doggie_bed)
        (at-end
          (or
            (exists (?d - book ?p2 - shelf)
              (on ?p2 ?h)
            )
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (<= 9 (* (+ (count-once woodenBlockMovedFromRugToDesk:orange:block) 5 (* (count ballThrownThroughRampToBin:purple) (count-once-per-objects woodenBlockMovedFromRugToDesk:dodgeball) )
        3
        10
        10
        (count-total ballThrownThroughRampToBin:pink)
        (* 5 1 )
        6
      )
      (count ballThrownThroughRampToBin:blue_dodgeball)
      (count woodenBlockMovedFromRugToDesk:yellow)
    )
  )
)
(:scoring
  (* 3 (external-forall-maximize (* 3 10 )
    )
    (count-measure woodenBlockMovedFromRugToDesk:basketball:green:beachball)
  )
)
)



(define (game game-id-378) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - chair)
    (game-conserved
      (agent_holds ?c4)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?h - game_object ?c - tall_cylindrical_block ?h - game_object)
        (then
          (once (or (and (< 2 2) ) (on top_shelf ?h) ) )
          (once (adjacent_side ?h left agent) )
          (hold (faces agent ?h) )
        )
      )
    )
  )
)
(:terminal
  (< 3 (count objectThrownFromRug:red) )
)
(:scoring
  (* 5 (* (* (count objectThrownFromRug:basketball:yellow) (* 10 2 )
      )
      (count objectThrownFromRug:pink_dodgeball)
      (= (count-once-per-objects objectThrownFromRug:yellow) (* (count-longest objectThrownFromRug:red) 5 (* (count objectThrownFromRug:dodgeball:dodgeball) (* 6 (external-forall-minimize (count objectThrownFromRug:golfball:blue_cube_block) ) )
          )
          (* (count-once-per-objects objectThrownFromRug:purple) 15 )
          (* 1 (count objectThrownFromRug:dodgeball) )
        )
      )
    )
    (count-longest objectThrownFromRug:doggie_bed)
  )
)
)



(define (game game-id-379) (:domain few-objects-room-v1)
(:setup
  (exists (?h ?t - game_object)
    (forall (?o - dodgeball ?d - cube_block ?c - hexagonal_bin)
      (and
        (and
          (game-conserved
            (not
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?b - block)
        (then
          (once (exists (?c - (either tall_cylindrical_block main_light_switch dodgeball) ?b - dodgeball) (exists (?c - cube_block) (opposite ?b ?c) ) ) )
          (hold (not (adjacent desk ?b) ) )
          (once (touch floor ?b) )
          (once (and (in_motion ?b) (or (in_motion ?b) (and (in ?b ?b) (on ?b ?b) ) ) (and (agent_holds ?b) (< 2 (distance room_center ?b)) ) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?p - hexagonal_bin)
        (then
          (hold (in_motion ?p) )
          (once (touch ?p ?p) )
          (once (< (distance ?p ?p) 4) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (total-score) )
)
(:scoring
  (* (count-same-positions ballThrownMissesEverything:dodgeball:beachball) (* (+ 5 4 )
      0
    )
  )
)
)



(define (game game-id-380) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (not
      (and
        (forall (?c1 - game_object)
          (or
            (exists (?o1 - pillow)
              (forall (?w - flat_block)
                (and
                  (not
                    (and
                      (exists (?b - hexagonal_bin)
                        (game-optional
                          (not
                            (not
                              (on ?b ?b)
                            )
                          )
                        )
                      )
                      (game-optional
                        (and
                          (same_type ?w ?c1)
                          (agent_holds ?o1)
                        )
                      )
                      (exists (?b - hexagonal_bin)
                        (game-optional
                          (agent_holds ?o1)
                        )
                      )
                    )
                  )
                  (game-optional
                    (equal_z_position ?o1 ?o1)
                  )
                )
              )
            )
            (not
              (and
                (game-optional
                  (agent_holds ?c1)
                )
                (exists (?d - (either pyramid_block alarm_clock))
                  (exists (?c4 - block)
                    (exists (?b ?o ?h ?d ?w1 ?b5 - cube_block)
                      (exists (?d1 - (either game_object cd blue_cube_block bridge_block))
                        (game-optional
                          (and
                            (not
                              (agent_holds ?b5)
                            )
                            (and
                              (exists (?c4 - dodgeball ?d ?b ?b - pillow)
                                (agent_holds ?o)
                              )
                              (> (x_position ?c1) 1)
                            )
                            (and
                              (agent_holds ?b5)
                              (agent_holds ?h)
                              (<= (distance ?b5 ?h) (distance ?c1 ?d))
                              (touch ?o ?b5)
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (and
                  (game-optional
                    (and
                      (same_color agent ?c1)
                      (touch ?c1 ?b)
                    )
                  )
                  (and
                    (game-conserved
                      (agent_holds agent)
                    )
                    (not
                      (exists (?c - wall ?f - (either golfball basketball laptop))
                        (and
                          (exists (?g - pillow)
                            (game-conserved
                              (in_motion ?g)
                            )
                          )
                          (forall (?c - game_object ?t - teddy_bear)
                            (game-conserved
                              (is_setup_object ?f)
                            )
                          )
                          (game-optional
                            (agent_holds ?f)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (and
              (forall (?o3 - hexagonal_bin)
                (and
                  (exists (?d - hexagonal_bin ?c ?t - building)
                    (forall (?h - block ?h - ball)
                      (and
                        (exists (?ob - shelf)
                          (forall (?b4 ?b1 - ball)
                            (forall (?h - dodgeball ?o4 - game_object)
                              (and
                                (and
                                  (and
                                    (and
                                      (exists (?d - chair)
                                        (exists (?h - (either lamp key_chain) ?o ?t1 - building ?l1 - block)
                                          (forall (?o - (either chair triangle_block) ?d - (either pen hexagonal_bin))
                                            (and
                                              (game-optional
                                                (adjacent ?l1 ?ob)
                                              )
                                              (game-optional
                                                (and
                                                  (agent_holds ?b)
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                    (exists (?d - hexagonal_bin)
                                      (forall (?d - cube_block ?b1 - wall)
                                        (game-conserved
                                          (= 1 (distance room_center ?ob))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (not
                              (equal_x_position ?t rug)
                            )
                          )
                        )
                        (game-conserved
                          (and
                            (< 3 1)
                            (agent_holds ?h)
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (same_color ?c1 ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?g - dodgeball)
        (then
          (once (in_motion ?g) )
          (hold (on ?g ?g) )
          (once (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 6 (count-once-per-external-objects throwAttempt:blue_dodgeball) (count throwAttempt:pink) (* (count throwAttempt:blue_pyramid_block:dodgeball) 1 )
      )
      (- (+ (external-forall-minimize (< (external-forall-maximize (* (+ 20 3 )
                  50
                )
              )
              (count throwAttempt:pyramid_block)
            )
          )
          (* 1 10 )
          (* (< 10 (count throwAttempt:beachball:golfball) )
            (count throwAttempt:yellow_pyramid_block)
          )
        )
      )
    )
    (or
      (> 6 (count-once-per-objects throwAttempt:blue_pyramid_block:golfball) )
    )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:golfball)
)
)



(define (game game-id-381) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - game_object)
    (forall (?h ?b2 - hexagonal_bin)
      (and
        (exists (?s ?b - (either wall dodgeball) ?b - ball)
          (exists (?x - brown ?p - (either lamp pen alarm_clock))
            (forall (?h - (either curved_wooden_ramp alarm_clock) ?h - (either book alarm_clock laptop cellphone))
              (game-conserved
                (and
                  (adjacent desk ?p)
                  (< (distance desk ?h) 1)
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - hexagonal_bin)
        (then
          (hold (not (agent_holds agent) ) )
          (once (> 6 (distance ?h ?h)) )
          (once (forall (?bl - (either key_chain bridge_block main_light_switch)) (and (>= (distance ?bl ?h) (distance ?bl agent)) (not (in_motion ?bl) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (> (external-forall-maximize (count-once-per-objects throwAttempt:blue_cube_block) ) (count-once-per-external-objects throwAttempt:red) )
    )
  )
)
(:scoring
  (- (count-total throwAttempt:hexagonal_bin) )
)
)



(define (game game-id-382) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< 3 1)
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?t ?c - shelf)
        (then
          (once (on ?t ?c) )
          (once (in_motion ?t) )
          (hold (in ?t agent) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (not
        (< (external-forall-maximize (count redDodgeballThrownToBin:yellow) ) (< 4 (count-once redDodgeballThrownToBin:golfball) )
        )
      )
      (>= (total-time) (total-score) )
    )
  )
)
(:scoring
  (count-once-per-objects redDodgeballThrownToBin:golfball)
)
)



(define (game game-id-383) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?d1 - building)
      (and
        (and
          (not
            (not
              (open south_wall)
            )
          )
          (in rug ?d1)
          (< (distance ?d1 ?d1) 1)
        )
        (and
          (is_setup_object ?d1)
        )
        (not
          (in ?d1 ?d1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?p - dodgeball ?b2 - (either dodgeball beachball) ?l1 - dodgeball ?t - building)
        (then
          (hold-while (not (touch ?t ?t) ) (in_motion ?t) )
          (hold (< (distance desk ?t) 1) )
          (once (in ?t ?t) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?b - (either bridge_block) ?x - brown)
        (then
          (once (not (or (agent_holds ?b) (and (in_motion ?b) (adjacent ?b ?b) ) (agent_holds ?b) ) ) )
          (once (not (agent_holds ?b) ) )
          (once (< 1 (distance bed ?b)) )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?h - dodgeball)
        (at-end
          (on ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (>= 2 2 )
)
(:scoring
  (external-forall-maximize
    (count itemsTurnedOff:brown:red)
  )
)
)



(define (game game-id-384) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g ?l4 ?b10 ?r ?h - wall)
      (game-conserved
        (in ?h ?b10)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?ob - cube_block ?c2 - hexagonal_bin)
        (at-end
          (not
            (not
              (and
                (not
                  (and
                    (exists (?d - block)
                      (and
                        (and
                          (touch ?d ?d)
                          (in_motion ?d)
                          (not
                            (in_motion ?c2)
                          )
                        )
                        (agent_holds ?d)
                      )
                    )
                    (and
                      (exists (?p - hexagonal_bin)
                        (agent_holds ?c2)
                      )
                      (not
                        (agent_holds ?c2)
                      )
                    )
                  )
                )
                (agent_holds ?c2)
              )
            )
          )
        )
      )
    )
    (forall (?r - sliding_door)
      (and
        (preference throwFromEdgeOfRug
          (exists (?r - ball)
            (then
              (hold-while (adjacent bed agent) (and (in ?r ?r) (and (and (opposite bed ?r) (on ?r ?r) (or (in_motion ?r) (on ?r ?r) ) ) (not (on ?r ?r) ) ) ) (same_type ?r ?r) (not (in_motion ?r) ) )
              (once (and (not (and (adjacent rug agent) (and (in_motion agent) (in_motion ?r) ) ) ) (not (opposite ?r ?r) ) ) )
              (once (in_motion ?r) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?r ?b5 ?s ?d ?t ?b - cube_block)
            (then
              (hold (exists (?c6 - (either dodgeball pyramid_block)) (and (not (in_motion agent) ) (= (distance_side room_center front_left_corner ?b5) 5) ) ) )
              (once (not (in_motion ?s) ) )
              (hold (and (in_motion ?r) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 3 )
)
(:scoring
  (count-once-per-objects throwFromEdgeOfRug:red:beachball)
)
)



(define (game game-id-385) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< 7 1)
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?c - golfball)
        (then
          (once (on ?c ?c) )
          (hold (not (on ?c ?c) ) )
          (hold (not (> 3 (distance ?c ?c)) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?l2 ?l - (either doggie_bed dodgeball main_light_switch))
        (then
          (once (agent_holds ?l) )
          (hold (and (in ?l2 ?l) (in_motion ?l) ) )
          (hold (and (adjacent room_center ?l) (in ?l ?l) (not (not (agent_holds ?l) ) ) (adjacent_side door back ?l2) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count-shortest ballKnocksTeddy:blue) )
)
(:scoring
  (count-once-per-objects objectInBuilding:red:hexagonal_bin)
)
)



(define (game game-id-386) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - hexagonal_bin ?t - ball)
    (game-optional
      (on ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?p - ball)
        (then
          (once (exists (?c6 ?d - (either bridge_block cube_block pencil cube_block blue_cube_block book cube_block)) (and (< 1 8) (not (not (agent_holds ?d) ) ) ) ) )
          (once (and (and (on rug ?p) (agent_holds ?p) ) (faces ?p ?p) (and (is_setup_object ?p) (agent_holds ?p) (same_color ?p ?p) (agent_holds ?p) ) ) )
          (once (on agent ?p) )
        )
      )
    )
  )
)
(:terminal
  (= (count itemsTurnedOff:rug) (external-forall-maximize (count itemsTurnedOff:blue_dodgeball:blue:green) ) )
)
(:scoring
  (count-once itemsTurnedOff:dodgeball)
)
)



(define (game game-id-387) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - curved_wooden_ramp ?y ?y0 - upright)
    (game-conserved
      (adjacent bed ?p2)
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?b ?f - building)
        (at-end
          (and
            (in ?f ?b)
            (not
              (not
                (on ?f ?f)
              )
            )
            (not
              (not
                (not
                  (in_motion ?b)
                )
              )
            )
          )
        )
      )
    )
    (preference blockThrowAttempt
      (exists (?h - hexagonal_bin ?t - doggie_bed)
        (then
          (once (adjacent desk ?t) )
          (once (agent_holds ?t) )
          (once (not (not (on ?t ?t) ) ) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?l1 - game_object ?o2 - triangular_ramp ?c2 - ball ?h - chair)
        (then
          (hold-while (not (not (in_motion ?h) ) ) (>= 1 1) (in_motion floor) )
          (hold-while (on ?h ?h) (on ?h ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 20 (count ballThrownFromDoor:basketball:dodgeball) )
    (>= (total-score) 7 )
  )
)
(:scoring
  (external-forall-minimize
    (count-once objectsHidden:cube_block:hexagonal_bin:basketball)
  )
)
)



(define (game game-id-388) (:domain many-objects-room-v1)
(:setup
  (exists (?b - building)
    (forall (?b - hexagonal_bin)
      (and
        (exists (?ob - ball)
          (forall (?x - green)
            (game-optional
              (and
                (agent_holds ?ob)
                (not
                  (not
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?p2 - hexagonal_bin ?h - ball)
        (then
          (once (agent_holds ?h) )
          (hold (and (game_over ) (on ?h ?h) ) )
          (once (and (agent_holds ?h) (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 3 5 )
    (or
      (or
        (or
          (>= (total-score) (count blockInTowerKnocked:wall) )
          (>= (= 3 (* (count blockInTowerKnocked:basketball) (* 10 (count-unique-positions blockInTowerKnocked:dodgeball) )
              )
              3
            )
            (total-time)
          )
          (>= (count-increasing-measure blockInTowerKnocked:orange) (+ (count blockInTowerKnocked:purple) 10 )
          )
        )
        (> (+ (count blockInTowerKnocked:red) (* 15 (count blockInTowerKnocked:dodgeball:basketball) )
            5
          )
          (+ 6 (* (/ (count-once-per-objects blockInTowerKnocked:red:beachball) (* (count blockInTowerKnocked:dodgeball) (count blockInTowerKnocked:beachball) 20 (count-once-per-objects blockInTowerKnocked:basketball) )
              )
              (* (count blockInTowerKnocked:red) 40 )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (* (* (> (external-forall-minimize (- 3 (* (count-total blockInTowerKnocked:triangle_block) 10 (count blockInTowerKnocked:pink:golfball) (* (* 15 (+ 2 (count blockInTowerKnocked:dodgeball) )
                )
                (count blockInTowerKnocked:yellow_cube_block)
              )
              (* (* 8 (* (- 2 )
                  )
                )
                1
              )
            )
          )
        )
        4
      )
      10
      3
      (count blockInTowerKnocked:blue_dodgeball:orange)
    )
    (* (- 10 )
      (count-increasing-measure blockInTowerKnocked:red)
      (external-forall-maximize
        (* (* (- 7 50 ) (count-once blockInTowerKnocked:cube_block) )
          (* 50 (count blockInTowerKnocked:pink_dodgeball) )
          3
        )
      )
    )
  )
)
)



(define (game game-id-389) (:domain many-objects-room-v1)
(:setup
  (forall (?b1 - curved_wooden_ramp ?w1 - hexagonal_bin ?h - wall)
    (game-optional
      (adjacent_side room_center front ?h right)
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?c - golfball)
        (then
          (once (agent_holds ?c) )
          (once (and (on ?c ?c) (exists (?h - hexagonal_bin ?b - hexagonal_bin) (not (not (not (agent_holds ?b) ) ) ) ) ) )
          (once (and (agent_holds ?c) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 20 )
)
(:scoring
  (count itemsBroken:dodgeball:dodgeball)
)
)



(define (game game-id-390) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (game_start )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?w1 - dodgeball)
        (at-end
          (or
            (not
              (on ?w1 ?w1)
            )
            (< (distance_side ?w1 right ?w1) 1)
          )
        )
      )
    )
    (preference blockInTowerAtEnd
      (exists (?r - hexagonal_bin ?b - ball)
        (then
          (once (exists (?w1 - hexagonal_bin) (not (in_motion ?w1) ) ) )
          (hold (not (agent_holds ?b) ) )
          (once (on agent ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once throwToBinFromOppositeWall:purple) (total-score) )
)
(:scoring
  (* 3 5 )
)
)



(define (game game-id-391) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (adjacent desk agent)
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h - (either chair tall_cylindrical_block))
        (then
          (once (not (agent_holds ?h) ) )
          (hold (and (agent_holds ?h) (between ?h ?h ?h) (not (< 0 1) ) ) )
          (once (in_motion agent) )
        )
      )
    )
    (forall (?g - teddy_bear)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?h - building)
            (then
              (hold (agent_holds ?g) )
              (once (agent_holds ?g) )
              (hold (on ?h ?h) )
            )
          )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?o4 - chair)
        (then
          (once (in_motion ?o4) )
          (hold (and (not (or (and (in ?o4 ?o4) (on ?o4 bed) ) (on ?o4 agent) ) ) (agent_holds ?o4) ) )
          (hold (in ?o4 ?o4) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 9 )
)
(:scoring
  (count-once-per-objects golfballInBinFromPillow:beachball:basketball)
)
)



(define (game game-id-392) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (game_over )
  )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference blockPlacedInBuilding
          (exists (?d - hexagonal_bin)
            (at-end
              (and
                (and
                  (not
                    (adjacent ?d bed)
                  )
                  (not
                    (and
                      (not
                        (on ?b agent)
                      )
                      (agent_holds ?d)
                    )
                  )
                )
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (* (count blockPlacedInBuilding:beachball) 4 )
  )
)
(:scoring
  (* 5 (/ (* (count blockPlacedInBuilding:dodgeball) 10 )
      (count-once-per-objects blockPlacedInBuilding:orange)
    )
  )
)
)



(define (game game-id-393) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - hexagonal_bin)
    (game-conserved
      (on ?ob ?ob)
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?r - bridge_block)
        (at-end
          (in_motion ?r)
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?h - cube_block ?b - blue_cube_block)
        (then
          (hold (in ?b floor) )
          (hold (between rug ?b ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (count-once-per-objects blockKnockedFromBuildingInBin:dodgeball) ) (* 25 (- 15 )
    )
  )
)
(:scoring
  (* (count-once-per-objects objectLandsInBin:basketball:basketball) 2 )
)
)



(define (game game-id-394) (:domain medium-objects-room-v1)
(:setup
  (exists (?r2 - cube_block)
    (exists (?w2 - teddy_bear ?b - (either mug mug mug))
      (and
        (and
          (game-conserved
            (agent_holds ?r2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b10 - hexagonal_bin)
        (then
          (once (exists (?d - (either dodgeball basketball)) (in_motion ?d) ) )
          (once (between ?b10 ?b10 ?b10) )
          (hold (touch ?b10 ?b10) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?t - dodgeball)
        (then
          (once (on ?t agent) )
          (once (not (not (on ?t ?t) ) ) )
          (once (in ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 0 2 )
    15
  )
)
(:scoring
  (count-longest throwMovesBeachballWithoutKnockingTeddy:dodgeball)
)
)



(define (game game-id-395) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - triangular_ramp ?w - sliding_door)
      (exists (?o5 - wall ?o5 - shelf)
        (game-optional
          (in ?o5 ?o5)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?c3 - drawer)
        (then
          (hold (in ?c3 ?c3) )
          (once (on ?c3 ?c3) )
          (once (in_motion floor) )
        )
      )
    )
  )
)
(:terminal
  (> (count ballThrownIntoTarget:pink) 180 )
)
(:scoring
  (count ballThrownIntoTarget:doggie_bed)
)
)



(define (game game-id-396) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - curved_wooden_ramp)
    (forall (?b6 - game_object ?h - hexagonal_bin)
      (and
        (exists (?h ?d - cube_block)
          (forall (?h - (either key_chain cellphone) ?b1 - dodgeball)
            (and
              (game-optional
                (in ?d ?c)
              )
            )
          )
        )
        (exists (?o - hexagonal_bin)
          (forall (?d - chair)
            (game-conserved
              (and
                (in_motion ?d)
                (and
                  (and
                    (agent_holds ?h)
                    (not
                      (adjacent door ?c)
                    )
                  )
                  (not
                    (exists (?d - doggie_bed)
                      (and
                        (not
                          (and
                            (<= (distance bed agent) 3)
                            (not
                              (not
                                (and
                                  (touch ?c ?d)
                                  (or
                                    (in_motion ?h)
                                    (and
                                      (< 3 7)
                                      (not
                                        (and
                                          (agent_holds ?c)
                                          (not
                                            (on agent ?o)
                                          )
                                        )
                                      )
                                      (adjacent desk ?c)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (and
                            (agent_holds ?h)
                            (not
                              (touch ?d rug)
                            )
                          )
                          (and
                            (agent_holds ?h)
                            (and
                              (in_motion ?h)
                              (and
                                (in_motion agent)
                                (on ?c ?o)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?o5 - hexagonal_bin ?p1 - hexagonal_bin)
          (exists (?c - bridge_block ?p1 - (either basketball cube_block) ?s - chair)
            (forall (?o2 - cube_block)
              (exists (?d - (either cube_block pyramid_block))
                (and
                  (and
                    (exists (?z ?z0 ?z1 - front ?h - (either ball desktop))
                      (game-optional
                        (< 6 4)
                      )
                    )
                  )
                  (forall (?s - game_object)
                    (forall (?w - dodgeball)
                      (game-conserved
                        (in_motion ?o2)
                      )
                    )
                  )
                  (exists (?b3 - (either chair book))
                    (game-optional
                      (< (distance desk bed) 3)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?o - (either cylindrical_block mug))
        (then
          (hold (and (not (or (agent_holds green_golfball) (> 4 1) ) ) (in_motion ?o) (agent_holds ?o) (agent_holds ?o) ) )
          (once (agent_holds ?o) )
          (once (same_type ?o pillow) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects throwKnocksBlock:dodgeball) (total-time) )
  )
)
(:scoring
  (count-once-per-objects throwKnocksBlock:rug)
)
)



(define (game game-id-397) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - (either desktop alarm_clock))
    (game-conserved
      (< 0.5 (distance room_center ?w))
    )
  )
)
(:constraints
  (and
    (forall (?c3 - hexagonal_bin)
      (and
        (preference dodgeballFromRugToBin
          (exists (?ob - hexagonal_bin ?d - hexagonal_bin)
            (then
              (hold (in_motion ?c3) )
              (hold (and (in ?d ?d) (same_object ?d ?d) (not (faces ?c3 ?d) ) (and (adjacent door ?d) (< (distance bed agent) (distance_side ?d front ?d back)) (on ?c3 ?c3) ) ) )
              (hold-while (in_motion ?c3) (not (adjacent ?c3 ?d) ) (in ?d ?c3) (exists (?h - hexagonal_bin) (on desk ?d) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (at-end
              (not
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 4 2 )
  )
)
(:scoring
  (>= (count throwFromBehindChairsInBin:beachball) (+ (count-once dodgeballFromRugToBin:dodgeball) 3 )
  )
)
)



(define (game game-id-398) (:domain many-objects-room-v1)
(:setup
  (exists (?g - teddy_bear)
    (forall (?b - red_pyramid_block ?w2 - teddy_bear ?b - chair)
      (or
        (and
          (not
            (game-conserved
              (not
                (and
                  (between ?g ?g ?b)
                  (agent_holds ?b)
                )
              )
            )
          )
          (and
            (exists (?b - block)
              (game-conserved
                (exists (?c - (either mug yellow_cube_block))
                  (in_motion ?b)
                )
              )
            )
          )
          (exists (?d - cylindrical_block)
            (exists (?c - dodgeball ?b - hexagonal_bin)
              (game-conserved
                (not
                  (on ?b ?g)
                )
              )
            )
          )
        )
        (and
          (game-optional
            (equal_x_position ?g ?g)
          )
          (forall (?o - (either cd dodgeball laptop) ?l1 - building ?h - building)
            (and
              (forall (?b - cube_block)
                (exists (?b - hexagonal_bin)
                  (forall (?r - hexagonal_bin)
                    (exists (?b - dodgeball ?b1 - cube_block)
                      (and
                        (exists (?y - sideways)
                          (and
                            (game-optional
                              (in_motion ?g)
                            )
                          )
                        )
                        (forall (?b7 - hexagonal_bin)
                          (and
                            (and
                              (game-conserved
                                (adjacent door ?r)
                              )
                            )
                            (and
                              (or
                                (game-conserved
                                  (not
                                    (in rug ?b7)
                                  )
                                )
                                (exists (?h - hexagonal_bin)
                                  (forall (?w1 - wall)
                                    (game-conserved
                                      (not
                                        (faces ?g ?h)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (not
                                    (open ?b)
                                  )
                                )
                              )
                              (game-conserved
                                (adjacent door ?b)
                              )
                            )
                          )
                        )
                        (game-conserved
                          (agent_holds ?r)
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (game_start )
              )
            )
          )
          (game-conserved
            (agent_holds ?g)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?h - hexagonal_bin)
        (then
          (hold-while (< 10 (distance room_center desk)) (touch ?h ?h) )
          (once (in_motion ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (forall (?o2 - hexagonal_bin)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?c - hexagonal_bin)
            (then
              (once (and (agent_holds ?o2) ) )
              (once (and (in_motion ?c) (in_motion ?o2) ) )
              (hold (in_motion ?o2) )
            )
          )
        )
        (preference blockInTowerKnocked
          (at-end
            (= (distance ?o2 ?o2) (distance bed ?o2))
          )
        )
      )
    )
    (preference throwToBinFromOppositeWall
      (exists (?h - teddy_bear)
        (then
          (hold (agent_holds ?h) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count blockToBinFromRug:yellow) )
)
(:scoring
  (count-once-per-objects nonBlockPlacedInBuilding:yellow)
)
)



(define (game game-id-399) (:domain few-objects-room-v1)
(:setup
  (exists (?r - beachball ?o2 ?b5 - pyramid_block)
    (exists (?w2 - hexagonal_bin)
      (game-optional
        (on ?b5 ?o2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - curved_wooden_ramp ?b5 - triangular_ramp)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?g - game_object ?o2 - hexagonal_bin)
            (then
              (hold (agent_holds ?b5) )
              (once (< 1 (distance ?o2 ?o2)) )
              (once (adjacent_side room_center front_left_corner agent right) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 3 (= (* (/ (* (external-forall-minimize (count throwBallFromOtherBallToBin:dodgeball) ) 3 )
            5
          )
          10
        )
        10
      )
    )
  )
)
(:scoring
  (< 8 4 )
)
)



(define (game game-id-400) (:domain few-objects-room-v1)
(:setup
  (exists (?c - ball ?w1 - wall)
    (and
      (forall (?h - (either yellow_cube_block lamp))
        (and
          (game-optional
            (in_motion ?h)
          )
          (exists (?d - ball)
            (and
              (forall (?c6 - hexagonal_bin ?b - hexagonal_bin)
                (game-optional
                  (on rug ?b)
                )
              )
              (or
                (game-conserved
                  (in_motion ?h)
                )
                (and
                  (forall (?o - hexagonal_bin)
                    (exists (?l2 ?w - (either pyramid_block beachball pyramid_block))
                      (and
                        (and
                          (exists (?o - curved_wooden_ramp)
                            (and
                              (game-conserved
                                (> 1 (distance ?o ?d))
                              )
                              (game-optional
                                (equal_x_position bed ?w1)
                              )
                              (and
                                (or
                                  (exists (?l1 - building)
                                    (exists (?bl - cube_block)
                                      (game-optional
                                        (in ?l2 ?l2)
                                      )
                                    )
                                  )
                                  (game-optional
                                    (agent_holds ?w1)
                                  )
                                  (game-optional
                                    (not
                                      (not
                                        (agent_holds ?w1)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (not
                  (forall (?x - green)
                    (game-conserved
                      (in_motion ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-optional
        (in_motion ?w1)
      )
      (and
        (game-conserved
          (adjacent_side ?w1 back ?w1)
        )
        (game-optional
          (in_motion ?w1)
        )
        (forall (?t2 - hexagonal_bin)
          (exists (?t - hexagonal_bin)
            (exists (?c - (either ball cd))
              (and
                (exists (?c2 - shelf)
                  (exists (?ob - (either dodgeball triangle_block) ?b5 - hexagonal_bin)
                    (and
                      (game-conserved
                        (agent_holds ?c)
                      )
                      (exists (?x - blue ?c1 - cube_block)
                        (game-conserved
                          (and
                            (same_type ?c1 ?t2)
                            (agent_crouches )
                          )
                        )
                      )
                      (forall (?o1 - ball)
                        (exists (?t - (either pillow hexagonal_bin cylindrical_block))
                          (game-conserved
                            (same_type ?b5 bridge_block)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?o2 ?d - teddy_bear)
        (then
          (once (in_motion ?d) )
          (once (or (<= (distance desk bed) 0.5) ) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 1 )
      (total-score)
    )
    (>= (+ (count-once-per-objects watchOnShelf:beachball) (* (- (count watchOnShelf:basketball) )
          3
        )
        (count-once watchOnShelf:dodgeball)
      )
      (total-time)
    )
    (>= (* 3 2 )
      (* 3 (count-shortest watchOnShelf:blue_dodgeball) )
    )
  )
)
(:scoring
  (count-once watchOnShelf:dodgeball:dodgeball)
)
)



(define (game game-id-401) (:domain medium-objects-room-v1)
(:setup
  (exists (?g - cube_block)
    (exists (?l2 - flat_block)
      (and
        (and
          (game-conserved
            (in_motion ?l2)
          )
          (game-conserved
            (in_motion ?l2)
          )
        )
        (exists (?b3 - building)
          (game-conserved
            (and
              (in_motion ?l2)
              (in ?g ?l2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?c - ball ?f ?o1 - shelf)
        (at-end
          (in_motion ?f)
        )
      )
    )
    (forall (?d - game_object ?d - hexagonal_bin)
      (and
        (preference throwToBinFromDistance
          (exists (?d - hexagonal_bin)
            (then
              (once (not (on ?d ?d) ) )
              (once (not (adjacent desk ?d) ) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?b7 - hexagonal_bin)
            (then
              (once (and (agent_holds ?b7) (exists (?h - beachball) (agent_holds agent) ) ) )
              (hold (and (agent_holds ?b7) (adjacent_side bed front_left_corner ?b7) (not (< 2 7) ) ) )
              (once (and (< (distance desk ?d) (distance desk ?d)) (< (distance_side door back ?b7) (distance ?d agent)) (not (exists (?r ?h ?f ?r - beachball) (not (above ?r ?f) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 100 (count-once throwAttemptKnocksBlock:dodgeball) )
)
(:scoring
  (* 5 (count throwToBinFromDistance:beachball) (count throwAttemptKnocksBlock:yellow) )
)
)



(define (game game-id-402) (:domain many-objects-room-v1)
(:setup
  (and
    (game-optional
      (on agent agent)
    )
  )
)
(:constraints
  (and
    (forall (?bl - game_object)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?h - bridge_block ?p - doggie_bed ?x ?x0 - blue)
            (at-end
              (adjacent ?bl ?bl)
            )
          )
        )
      )
    )
    (forall (?o3 - beachball ?h ?g - pillow)
      (and
        (preference throwFromDoorToBin
          (exists (?z - front ?h - hexagonal_bin ?o - doggie_bed)
            (then
              (once (adjacent ?h ?h) )
              (once (and (in_motion agent) (and (and (and (not (agent_holds ?g) ) (in_motion ?g) ) (and (exists (?d1 - game_object) (exists (?r - ball) (not (agent_holds ?r) ) ) ) (exists (?l1 ?r ?h ?d ?b9 ?r - (either cube_block key_chain)) (agent_holds ?h) ) ) ) (in_motion ?g) ) ) )
              (hold (agent_holds ?g) )
            )
          )
        )
        (preference nonBlockPlacedInBuilding
          (exists (?d2 - dodgeball)
            (at-end
              (on bed ?g)
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?d1 - chair ?h - doggie_bed)
        (then
          (once (< 1 (distance desk agent)) )
          (once (agent_holds ?h) )
          (hold (and (not (in_motion ?h) ) (agent_holds ?h) (forall (?h - pillow ?d - game_object ?s - chair ?l - hexagonal_bin) (not (agent_holds ?h) ) ) (not (not (not (in ?h ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (< 180 (count dropAttempt:tall_cylindrical_block) )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:beachball)
)
)



(define (game game-id-403) (:domain few-objects-room-v1)
(:setup
  (forall (?d - beachball)
    (forall (?w1 - hexagonal_bin)
      (game-conserved
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b8 - cylindrical_block ?l2 - hexagonal_bin ?d - dodgeball ?g - (either alarm_clock rug))
      (and
        (preference blocksInPlace
          (then
            (hold (agent_holds ?g) )
            (hold-while (not (touch ?g ?g) ) (and (not (not (not (and (not (not (agent_holds ?g) ) ) (in_motion ?g) (agent_holds ?g) (and (in_motion agent) (equal_x_position ?g ?g) (not (on agent ?g) ) ) (in_motion ?g) ) ) ) ) (in ?g ?g) ) (in_motion ?g) )
            (once (not (on ?g agent) ) )
          )
        )
      )
    )
    (forall (?o - (either tall_cylindrical_block yellow_cube_block))
      (and
        (preference blockKnockedFromBuildingInBin
          (exists (?r - curved_wooden_ramp ?l3 - hexagonal_bin)
            (then
              (hold (not (agent_holds ?o) ) )
              (hold (and (adjacent room_center rug) (and (and (or (and (game_start ) (and (and (in_motion ?o) (not (agent_holds ?l3) ) (not (not (agent_holds ?l3) ) ) ) (adjacent room_center ?l3) ) ) (in_motion ?l3) ) (exists (?s - ball) (rug_color_under ?s light_blue) ) ) ) (in ?o ?o) (agent_holds ?o) ) )
              (once (object_orientation ?o upright) )
            )
          )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?o2 - (either cellphone basketball) ?h - cylindrical_block)
        (then
          (once (not (and (not (agent_holds ?h) ) (and (and (not (game_over ) ) (and (not (agent_holds ?h) ) (in_motion ?h) ) (agent_holds ?h) ) (not (agent_holds ?h) ) ) ) ) )
          (once (agent_holds ?h) )
          (once (not (and (and (and (on ?h ?h) (adjacent ?h ?h) ) (not (and (touch agent ?h) (on ?h ?h) (is_setup_object ?h) ) ) ) (not (and (in rug ?h) (agent_holds ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockKnockedFromBuildingInBin:basketball) (count blockKnockedFromBuildingInBin:dodgeball:basketball) )
)
(:scoring
  (* (- (* (- (count blockKnockedFromBuildingInBin:beachball) 8 ) (count-once-per-objects blockKnockedFromBuildingInBin:beachball) )
    )
    (- (* (count blocksInPlace:basketball:bed) (count blockKnockedFromBuildingInBin:top_drawer) )
    )
  )
)
)



(define (game game-id-404) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?r - hexagonal_bin)
        (then
          (once (not (adjacent ?r ?r) ) )
          (once (and (= (distance room_center desk) 1) (not (in_motion ?r) ) (in_motion ?r) ) )
          (once (and (not (and (same_object ?r ?r) (and (not (in_motion ?r) ) (agent_holds ?r) (in floor ?r) ) ) ) (in_motion ?r) (agent_holds ?r) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?o - hexagonal_bin ?b - hexagonal_bin ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds bed) )
          (hold (not (exists (?l2 - (either pyramid_block alarm_clock pyramid_block) ?g - ball) (agent_holds ?h) ) ) )
          (hold (not (on ?h ?h) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin ?z - front_left_corner)
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (not (agent_holds ?h) ) (on ?h ?h) ) )
            (hold-while (in ?h ?h) (same_type ?h ?h) )
            (hold (agent_holds ?h) )
          )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?d - dodgeball)
        (then
          (hold (in_motion bed) )
          (once (not (in_motion ?d) ) )
          (hold (not (and (< 1 (distance room_center floor)) (and (agent_holds ?d) (agent_holds ?d) (on ?d ?d) (on desk ?d) (same_color ?d agent) (not (or (>= 1 1) (< 1 (distance desk ?d)) ) ) (adjacent room_center ?d) (and (touch ?d agent) (and (and (in_motion ?d) (adjacent ?d ?d) ) (not (not (faces ?d ?d) ) ) ) (and (in_motion ?d) (or (in_motion ?d) (not (not (on ?d ?d) ) ) ) ) ) ) ) ) )
        )
      )
    )
    (forall (?x - brown ?g - hexagonal_bin ?b - block)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - cube_block)
            (then
              (once (opposite agent ?b) )
              (once (and (on ?b ?b) (not (not (agent_crouches ) ) ) ) )
              (once (same_type ?d bridge_block) )
            )
          )
        )
        (preference castleBuilt
          (exists (?db - shelf)
            (then
              (once-measure (exists (?c4 - doggie_bed ?c5 - dodgeball) (< (distance_side ?c5 front_left_corner ?b) (distance room_center ?b)) ) (distance_side door right ?db) )
              (once (and (not (and (in ?b ?b) (not (touch ?b ?db) ) (in_motion ?b) ) ) (not (and (agent_holds ?db) (in_motion ?b) ) ) ) )
              (once (not (in_motion bed) ) )
              (hold (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (count-once-per-objects castleBuilt:yellow) )
    (> (count castleBuilt:green) 15 )
  )
)
(:scoring
  (count throwToDrawerOrBin:doggie_bed:golfball)
)
)



(define (game game-id-405) (:domain many-objects-room-v1)
(:setup
  (forall (?w1 - (either cube_block alarm_clock dodgeball))
    (game-conserved
      (not
        (agent_holds ?w1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d2 - (either pencil wall))
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?d - shelf)
            (then
              (once (in_motion ?d) )
              (hold (game_start ) )
              (once (in ?d2 ?d2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count dodgeballBouncesOnceToDoggieBed:beachball) (count dodgeballBouncesOnceToDoggieBed) )
    4
  )
)
(:scoring
  (+ 10 4 10 )
)
)



(define (game game-id-406) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h ?h ?b5 - (either golfball dodgeball cube_block dodgeball block) ?t2 - pillow)
      (game-conserved
        (and
          (in_motion ?t2)
          (not
            (not
              (and
                (on agent ?t2)
                (not
                  (and
                    (not
                      (agent_holds ?t2)
                    )
                    (and
                      (in_motion ?t2)
                      (in_motion ?t2)
                    )
                    (= 1 2 (distance ?t2 ?t2))
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?b1 - hexagonal_bin ?s - pyramid_block)
      (and
        (and
          (game-conserved
            (or
              (agent_crouches )
              (in_motion ?s)
            )
          )
        )
      )
    )
    (and
      (exists (?bl - (either desktop beachball alarm_clock) ?p - building)
        (game-optional
          (in_motion ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - triangular_ramp)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?t ?c3 ?w ?b5 - dodgeball)
            (then
              (hold (>= (distance ?c3 ?t) 1) )
              (hold (in_motion ?b5) )
              (hold (in_motion ?w) )
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?w1 ?h - teddy_bear)
        (then
          (hold (on ?w1 ?w1) )
          (hold (agent_holds ?w1) )
          (hold (not (not (agent_holds ?h) ) ) )
          (once (in_motion ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* (+ (count objectThrownFromRug:basketball) 9 )
          (+ (count-longest pinkObjectMovedToRoomCenter:beachball) (+ (count objectThrownFromRug:blue:pink_dodgeball) (count-once-per-objects objectThrownFromRug:basketball) )
          )
        )
        2
      )
      (count pinkObjectMovedToRoomCenter:blue_pyramid_block)
      4
      20
    )
    (total-score)
  )
)
(:scoring
  (count objectThrownFromRug:top_drawer)
)
)



(define (game game-id-407) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c2 - dodgeball ?o2 - hexagonal_bin)
      (game-conserved
        (or
          (not
            (not
              (in_motion ?o2)
            )
          )
          (agent_holds ?o2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - dodgeball ?c4 - hexagonal_bin)
        (at-end
          (exists (?d - hexagonal_bin)
            (and
              (agent_holds ?c4)
              (and
                (agent_holds ?d)
                (in_motion ?d)
              )
              (and
                (not
                  (agent_holds ?c4)
                )
                (not
                  (< (distance_side ?c4 front ?d) 1)
                )
              )
            )
          )
        )
      )
    )
    (forall (?h - pillow ?o - hexagonal_bin)
      (and
        (preference ballInOrOnBin
          (exists (?d - hexagonal_bin)
            (then
              (once (not (in_motion ?d) ) )
              (once (same_color ?o red) )
              (once (on ?o ?d) )
            )
          )
        )
        (preference throwTeddyOntoPillow
          (then
            (once (and (not (and (between ?o ?o ?o) (same_type ?o drawer) ) ) (< 1 (building_size ?o)) ) )
            (once (and (in_motion ?o) (not (not (same_color ?o rug) ) ) ) )
            (hold (not (in_motion ?o) ) )
          )
        )
        (preference castleBuilt
          (exists (?g - (either golfball basketball))
            (at-end
              (not
                (not
                  (not
                    (and
                      (agent_crouches )
                      (in_motion ?o)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 3 (count throwTeddyOntoPillow:hexagonal_bin) )
)
(:scoring
  (count castleBuilt:side_table)
)
)



(define (game game-id-408) (:domain many-objects-room-v1)
(:setup
  (exists (?r2 - chair)
    (exists (?w1 - desk_shelf)
      (and
        (game-optional
          (on ?r2 ?r2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - block ?d - (either dodgeball bridge_block))
        (then
          (once (adjacent desk ?d) )
          (once (agent_holds agent) )
          (once (not (adjacent side_table ?d) ) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?h - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (not (and (not (or (and (not (on ?h ?h) ) (and (on ?h ?h) (adjacent_side desk right ?h) ) (on agent ?h) ) (and (rug_color_under ?h light_blue) (opposite ?h ?h) ) ) ) (agent_holds ?h) (and (agent_holds desk) (not (not (and (and (and (in_motion ?h) (and (on ?h ?h) (in_motion ?h) (agent_holds bed) ) ) ) (not (touch ?h ?h) ) ) ) ) (in desk ?h) ) ) ) )
          (once (faces ?h ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?p - cube_block ?p - dodgeball)
        (then
          (once (and (agent_holds ?p) (in_motion ?p) ) )
          (hold (object_orientation ?p upside_down) )
          (hold-while (and (and (agent_holds rug) (is_setup_object ?p) ) (agent_holds ?p) ) (on ?p ?p) (agent_holds ?p) )
        )
      )
    )
    (forall (?h - game_object)
      (and
        (preference throwMissesBin
          (exists (?h ?b9 - ball)
            (then
              (once (agent_crouches ) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?h - hexagonal_bin)
            (then
              (hold (not (not (agent_holds ?h) ) ) )
              (hold (adjacent desk ?h) )
              (hold (touch ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count throwToBinFromDistance:doggie_bed) (count-total throwToBinFromDistance:dodgeball) )
  )
)
(:scoring
  (count throwAttemptFromDoor:pink_dodgeball)
)
)



(define (game game-id-409) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (exists (?h - block ?d1 - building ?r - block ?h - building)
      (game-conserved
        (and
          (touch ?h ?h)
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - beachball)
      (and
        (preference bookOnDeskShelf
          (exists (?d - flat_block ?o - game_object)
            (then
              (once (and (between ?o5 ?o ?o) (on ?o5 ?o5) ) )
              (once (in_motion ?o5) )
              (once (and (and (agent_holds ?o5) (exists (?d - game_object ?ob - dodgeball ?w2 - block) (and (in_motion ?o) (in_motion ?w2) (is_setup_object green) ) ) (agent_holds ?o5) ) (agent_holds ?o) ) )
              (hold (and (agent_holds ?o) (in_motion ?o5) (in_motion ?o) (and (game_over ) (is_setup_object ?o) ) ) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?c - ball)
            (then
              (once (agent_holds ?o5) )
              (once (= (distance east_sliding_door ?o5) (distance bed ?o5)) )
            )
          )
        )
        (preference objectOnBed
          (exists (?o3 ?c - hexagonal_bin ?l3 - game_object)
            (then
              (once (= 0.5 (distance bed floor)) )
              (hold (not (exists (?h - wall) (not (not (object_orientation agent upright) ) ) ) ) )
              (once (and (agent_holds ?l3) (and (game_over ) (and (and (not (in_motion ?l3) ) (not (and (on ?o5 ?l3) (on north_wall ?o5) ) ) ) (and (agent_holds ?l3) (and (in_motion agent) (and (on ?o5 ?l3) (agent_holds ?o5) ) ) ) (in_motion ?o5) (in_motion desk) ) ) ) )
              (hold (not (broken ?o5) ) )
            )
          )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?b - building ?p2 - cube_block ?w - desktop ?d - block)
        (then
          (hold (in_motion ?d) )
          (hold (and (agent_holds ?d) (agent_holds ?d) ) )
          (hold (not (not (not (not (in_motion ?d) ) ) ) ) )
        )
      )
    )
    (preference blockOnBlockInTowerAtEnd
      (exists (?h - (either wall floor) ?o2 - dodgeball)
        (at-end
          (and
            (not
              (exists (?b ?w - shelf ?o - hexagonal_bin)
                (or
                  (toggled_on ?o2)
                  (adjacent ?o rug)
                )
              )
            )
            (agent_holds ?o2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count objectOnBed:bed) 5 )
    (>= 6 (count-once-per-objects bigObjectThrownToBed:basketball) )
  )
)
(:scoring
  (count bookOnDeskShelf:dodgeball)
)
)



(define (game game-id-410) (:domain many-objects-room-v1)
(:setup
  (forall (?b - (either blue_cube_block bridge_block))
    (game-optional
      (adjacent_side desk right top_shelf)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b10 - doggie_bed)
        (then
          (once (not (and (not (not (> (distance desk ?b10) (distance ?b10 ?b10)) ) ) (and (not (or (agent_holds ?b10) (is_setup_object ?b10) ) ) (not (in ?b10 ?b10) ) (agent_holds ?b10) ) ) ) )
          (once (and (and (agent_crouches ) (agent_holds ?b10) ) (rug_color_under ?b10 purple) (not (in ?b10 ?b10) ) (and (agent_holds ?b10) (and (in_motion ?b10) (on ?b10 ?b10) ) ) ) )
          (hold (touch ?b10 ?b10) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count cubeBlockThrownToTopShelf:book) )
)
(:scoring
  (* (* 2 (- (* 2 (count cubeBlockThrownToTopShelf:golfball) (* (count-once cubeBlockThrownToTopShelf:dodgeball:yellow) (count cubeBlockThrownToTopShelf:dodgeball) )
          (count-once-per-external-objects cubeBlockThrownToTopShelf:yellow)
        )
        3
      )
    )
    0.7
  )
)
)



(define (game game-id-411) (:domain few-objects-room-v1)
(:setup
  (forall (?o3 - (either alarm_clock game_object))
    (forall (?h - game_object)
      (exists (?b5 - hexagonal_bin)
        (game-optional
          (or
            (not
              (adjacent door ?o3)
            )
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (once (not (on top_drawer ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 6 )
    (<= 10 3 )
  )
)
(:scoring
  (+ 4 (count-total towerFallsWhileBuilding:blue_dodgeball:dodgeball) )
)
)



(define (game game-id-412) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - wall)
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (forall (?h - pillow ?l4 - (either triangular_ramp book cellphone))
      (and
        (preference ballRolledOnRampToRug
          (exists (?s - ball)
            (then
              (once (equal_z_position bed ?s) )
              (hold (and (equal_x_position desk rug) (and (and (and (on ?s ?l4) (agent_crouches ) ) (not (object_orientation ?s upright) ) ) (not (adjacent room_center ?l4) ) ) ) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (external-forall-maximize (count ballRolledOnRampToRug:red:hexagonal_bin) ) 2 )
    1
  )
)
(:scoring
  (* (count ballRolledOnRampToRug:dodgeball:green:pink) (count-overlapping ballRolledOnRampToRug:pink) )
)
)



(define (game game-id-413) (:domain few-objects-room-v1)
(:setup
  (forall (?p1 - hexagonal_bin ?w - pillow)
    (exists (?r - (either cylindrical_block))
      (and
        (forall (?o3 - block ?w1 - curved_wooden_ramp)
          (forall (?d - bridge_block ?b - teddy_bear)
            (game-conserved
              (not
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block ?b - curved_wooden_ramp)
      (and
        (preference teddyBearHitsBall
          (exists (?p3 - teddy_bear)
            (then
              (hold (in_motion ?p3) )
              (once (on ?p3 ?b) )
              (once-measure (not (and (in_motion ?p3) (not (not (not (in_motion ?b) ) ) ) ) ) (distance bed ?b) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (then
            (once (on ?b ?b) )
            (once (on ?b ?b) )
            (once (agent_holds ?b) )
          )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?tb - dodgeball)
        (then
          (hold (agent_holds ?tb) )
          (once (< 1 (distance door ?tb)) )
          (hold (< (x_position ?tb) 1) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 6 (total-score) )
  )
)
(:scoring
  (count teddyBearHitsBall:dodgeball)
)
)



(define (game game-id-414) (:domain medium-objects-room-v1)
(:setup
  (forall (?p1 - dodgeball ?c - building)
    (game-conserved
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?t - hexagonal_bin)
        (then
          (hold-while (not (on ?t ?t) ) (not (or (not (and (agent_holds ?t) (and (not (in ?t ?t) ) (in_motion ?t) ) ) ) (in_motion ?t) (in ?t ?t) ) ) )
          (hold (adjacent bed ?t) )
          (hold (agent_holds ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 9 )
)
(:scoring
  (count dropAttempt:hexagonal_bin)
)
)



(define (game game-id-415) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - hexagonal_bin)
    (game-conserved
      (adjacent ?ob ?ob)
    )
  )
)
(:constraints
  (and
    (forall (?s - dodgeball)
      (and
        (preference golfballInBinFromPillow
          (exists (?o - flat_block ?bl - ball ?l - (either key_chain golfball main_light_switch) ?h - hexagonal_bin)
            (then
              (hold (and (on ?s ?h) (not (not (not (in_motion ?s) ) ) ) (agent_holds ?h) ) )
              (once (or (in_motion agent) (agent_holds ?h) ) )
              (hold (same_color ?s ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects golfballInBinFromPillow:pink:doggie_bed:blue_cube_block) 5 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-external-objects golfballInBinFromPillow:yellow)
  )
)
)



(define (game game-id-416) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - (either blue_cube_block alarm_clock tall_cylindrical_block))
    (and
      (and
        (game-conserved
          (< 9 (distance ?p ?p))
        )
        (game-conserved
          (in ?p agent)
        )
        (exists (?x - color ?p3 - building)
          (and
            (and
              (and
                (game-conserved
                  (in ?p agent)
                )
              )
              (forall (?t1 - cube_block)
                (and
                  (and
                    (exists (?d - cylindrical_block)
                      (game-conserved
                        (open ?p3)
                      )
                    )
                  )
                  (game-optional
                    (touch ?t1 ?p3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?c - shelf)
        (then
          (once (agent_holds bed) )
          (once (in_motion ?c) )
          (hold-while (equal_z_position ?c ?c) (in_motion ?c) )
        )
      )
    )
    (preference throwAttempt
      (exists (?g - doggie_bed ?d - flat_block)
        (at-end
          (and
            (faces ?d ?d)
            (between ?d ?d bed)
          )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?tb - game_object)
        (then
          (once (exists (?h - teddy_bear ?b - cube_block) (between ?b ?tb ?b) ) )
          (once (and (in ?tb ?tb) (and (agent_holds ?tb) (not (same_type ?tb ?tb) ) ) ) )
          (hold (touch ?tb ?tb) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-shortest throwBallToBinOffObject) )
    (and
      (< (total-time) 20 )
    )
  )
)
(:scoring
  (* (count throwAttempt:beachball) (* 15 )
  )
)
)



(define (game game-id-417) (:domain many-objects-room-v1)
(:setup
  (forall (?b ?h - block)
    (exists (?c - cube_block)
      (and
        (forall (?ob - cube_block)
          (exists (?b - hexagonal_bin)
            (forall (?h ?l1 ?h - hexagonal_bin ?b4 - dodgeball)
              (and
                (forall (?c - game_object ?o - (either desktop tall_cylindrical_block))
                  (forall (?t - dodgeball)
                    (exists (?w2 - dodgeball)
                      (and
                        (exists (?b - wall)
                          (game-optional
                            (or
                              (not
                                (and
                                  (not
                                    (and
                                      (rug_color_under ?ob pink)
                                      (not
                                        (agent_crouches )
                                      )
                                    )
                                  )
                                  (and
                                    (and
                                      (not
                                        (and
                                          (in_motion ?w2)
                                          (not
                                            (and
                                              (on ?t agent)
                                              (adjacent ?t ?c)
                                              (> (distance ?o ?h) (distance desk agent))
                                            )
                                          )
                                        )
                                      )
                                      (touch ?ob ?b)
                                    )
                                    (on ?b ?c)
                                    (in_motion ?b4)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?o - dodgeball)
        (then
          (once (not (and (not (in_motion ?o) ) (not (or (touch ?o ?o) ) ) ) ) )
          (once (= 1 (distance desk floor)) )
          (hold (touch ?o ?o) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?h - ball)
        (then
          (once (not (agent_holds ?h) ) )
          (once (or (in_motion ?h) (and (rug_color_under ?h pink) (agent_holds ?h) ) ) )
          (once (touch ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  (* (- (count dodgeballAndBasketballInBin:top_drawer) )
    (count-unique-positions dodgeballAndBasketballInBin:yellow)
  )
)
)



(define (game game-id-418) (:domain many-objects-room-v1)
(:setup
  (forall (?l1 - teddy_bear ?o - doggie_bed)
    (exists (?l4 - hexagonal_bin ?h - (either dodgeball golfball) ?db ?c4 ?h ?c3 - curved_wooden_ramp)
      (and
        (and
          (game-conserved
            (in ?h ?db)
          )
          (forall (?o3 - curved_wooden_ramp ?d - hexagonal_bin)
            (exists (?s - (either pyramid_block game_object))
              (game-conserved
                (not
                  (exists (?b5 - curved_wooden_ramp)
                    (and
                      (in ?o ?h)
                      (not
                        (in ?b5 bed)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?b9 - dodgeball)
          (exists (?p2 - game_object ?b - hexagonal_bin)
            (forall (?d - hexagonal_bin)
              (forall (?d - ball)
                (and
                  (exists (?g - hexagonal_bin ?w - game_object ?t - game_object)
                    (game-conserved
                      (and
                        (is_setup_object ?db)
                        (open ?o)
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds agent)
                  )
                  (forall (?p3 - green_triangular_ramp)
                    (game-conserved
                      (in ?d ?b9)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?o)
        )
        (exists (?h - hexagonal_bin)
          (forall (?r - dodgeball ?o4 ?o - blue_cube_block)
            (game-conserved
              (in_motion ?h)
            )
          )
        )
        (and
          (exists (?b - building ?b - bridge_block ?d - hexagonal_bin)
            (game-conserved
              (not
                (on ?c4 ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?b1 - dodgeball)
        (then
          (once (not (and (not (and (touch ?b1 ?b1) (not (same_color ?b1 ?b1) ) ) ) (between ?b1 ?b1 ?b1) (and (touch ?b1 ?b1) (adjacent desk ?b1) ) ) ) )
          (once (adjacent_side ?b1 right ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 5 )
)
(:scoring
  (count-measure tanObjectMovedToRoomCenter:purple)
)
)



(define (game game-id-419) (:domain few-objects-room-v1)
(:setup
  (exists (?p - block)
    (or
      (exists (?w1 ?w2 - yellow_cube_block ?h - ball)
        (exists (?b10 - chair)
          (and
            (and
              (and
                (and
                  (and
                    (and
                      (and
                        (forall (?o - block)
                          (game-optional
                            (not
                              (and
                                (= (building_size ?b10) (distance room_center ?o))
                                (agent_holds ?p)
                                (in_motion ?b10)
                              )
                            )
                          )
                        )
                      )
                      (exists (?db - dodgeball)
                        (exists (?c3 - hexagonal_bin)
                          (exists (?h - hexagonal_bin)
                            (and
                              (and
                                (exists (?c6 - dodgeball ?h - hexagonal_bin ?y ?y0 ?y1 - upside_down)
                                  (game-optional
                                    (< 1 (distance room_center agent))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (is_setup_object side_table)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (in_motion ?p)
          )
          (and
            (forall (?b1 - hexagonal_bin)
              (forall (?c - golfball)
                (and
                  (and
                    (forall (?p1 - dodgeball)
                      (exists (?r2 - curved_wooden_ramp)
                        (game-conserved
                          (broken ?p1)
                        )
                      )
                    )
                  )
                )
              )
            )
            (or
              (forall (?o3 - block)
                (game-optional
                  (not
                    (on ?p floor)
                  )
                )
              )
              (game-conserved
                (in_motion ?p)
              )
            )
            (game-conserved
              (and
                (exists (?b10 - wall)
                  (equal_x_position ?p ?p)
                )
                (not
                  (and
                    (on ?p ?p)
                    (not
                      (adjacent_side ?p front_left_corner green_golfball)
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?p)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b - hexagonal_bin)
        (at-end
          (exists (?b1 - hexagonal_bin)
            (agent_holds ?b1)
          )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?f - pillow)
        (then
          (once (or (and (on ?f ?f) (in_motion ?f) (same_color bed ?f) (not (or (agent_holds ?f) ) ) ) (on ?f ?f) ) )
          (once (not (game_over ) ) )
          (once (and (agent_holds ?f) (equal_z_position desk ?f) (in_motion ?f) (= 1 0 (distance west_wall ?f)) (on ?f ?f) (in_motion ?f) ) )
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?b6 - dodgeball)
        (then
          (once (and (in_motion ?b6) (in_motion ?b6) ) )
          (once (and (and (and (exists (?h - dodgeball) (agent_holds bed) ) (game_start ) ) (same_color ?b6 blue) ) (game_start ) ) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?b ?c2 - bridge_block ?w - chair ?d - cube_block)
        (then
          (hold (in_motion ?d) )
          (once (in_motion ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?p1 - game_object ?p - curved_wooden_ramp)
        (at-end
          (in ?p ?p)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (> (count golfballInBinFromPillow:blue_dodgeball) (count-total blockIncorrectlyPicked:red) )
        (total-score)
      )
    )
    (>= (* (count-once-per-objects golfballInBinFromPillow:hexagonal_bin) (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:red) )
      0
    )
  )
)
(:scoring
  (count blockIncorrectlyPicked:dodgeball)
)
)



(define (game game-id-420) (:domain many-objects-room-v1)
(:setup
  (exists (?z ?z0 - front_left_corner)
    (exists (?c4 - cube_block ?y ?y0 - sideways)
      (game-optional
        (not
          (in_motion ?c4)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?x ?x0 - brown ?o - block)
        (then
          (once (in_motion ?o) )
          (once (< (distance room_center ?o) (distance_side desk front ?o)) )
          (once (on agent ?o) )
        )
      )
    )
    (preference throwAttempt
      (exists (?w1 - building)
        (then
          (hold (exists (?c2 - hexagonal_bin) (same_object ?c2 ?w1) ) )
          (once (on ?w1 ?w1) )
          (once (on ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (/ 2 2 ) (count throwAttempt:pink_dodgeball) )
    (or
      (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:hexagonal_bin) (count throwAttempt:beachball) )
      (>= (> (count pyramidBlockAtopTowerAtEnd:block) (count-once-per-objects pyramidBlockAtopTowerAtEnd:purple) )
        (count-once pyramidBlockAtopTowerAtEnd:green)
      )
    )
    (<= 2 (total-score) )
  )
)
(:scoring
  (* 6 (count-same-positions pyramidBlockAtopTowerAtEnd:brown) )
)
)



(define (game game-id-421) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin)
    (game-optional
      (agent_holds ?o1)
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?l1 - golfball)
        (then
          (once (rug_color_under ?l1 purple) )
          (once (and (< 6 (x_position ?l1)) (and (not (not (in ?l1 ?l1) ) ) (forall (?g - sliding_door ?x ?x0 ?x1 - brown) (agent_holds ?l1) ) (and (on ?l1 floor) (in_motion ?l1) ) (not (and (agent_holds ?l1) (not (and (and (not (< (distance ?l1 bed) 0) ) (in_motion ?l1) ) (not (exists (?b8 - golfball ?d - shelf) (in ?l1 ?l1) ) ) ) ) ) ) ) ) )
          (once (in_motion ?l1) )
        )
      )
    )
    (preference brownObjectMovedToRoomCenter
      (exists (?d - block)
        (then
          (hold (not (and (in_motion ?d) (in ?d ?d) ) ) )
          (hold (< (distance_side ?d back ?d) (distance_side desk back ?d)) )
          (once (not (toggled_on ?d) ) )
        )
      )
    )
    (forall (?c3 - (either chair blue_cube_block dodgeball bridge_block bridge_block dodgeball book))
      (and
        (preference ballThrownIntoTarget
          (exists (?b8 - hexagonal_bin)
            (at-end
              (in_motion ?b8)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count brownObjectMovedToRoomCenter) 10 )
)
(:scoring
  (- 4 )
)
)



(define (game game-id-422) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - ball ?d ?d2 ?l4 - hexagonal_bin)
    (exists (?g - chair ?b - wall ?r - drawer ?c4 - (either blue_cube_block cellphone))
      (and
        (or
          (and
            (game-optional
              (not
                (agent_holds ?d)
              )
            )
          )
          (and
            (game-conserved
              (in_motion agent)
            )
          )
          (and
            (exists (?h - dodgeball)
              (exists (?l2 - dodgeball)
                (and
                  (and
                    (exists (?b9 - dodgeball ?b2 - wall)
                      (exists (?b8 - pillow ?d - building)
                        (exists (?c - game_object ?p - wall)
                          (game-conserved
                            (and
                              (in ?l4 ?d)
                              (in agent ?l2)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?p1 - cube_block ?b - cube_block)
      (and
        (preference ballThrownMissesEverything
          (exists (?p1 - hexagonal_bin ?g - cube_block)
            (then
              (hold (and (agent_holds ?b) (on ?b ?b) ) )
              (hold (between ?b ?b ?g) )
              (hold-while (<= 2 8) (and (and (and (in_motion ?b) (not (and (and (agent_holds ?b) (not (and (on ?b ?g) (equal_z_position ?b ?b) ) ) ) (equal_x_position bed ?g) (not (and (touch ?g ?g) (agent_holds ?b) ) ) ) ) ) (and (not (on ?b ?g) ) (not (< (distance green_golfball ?g) 1) ) ) ) (and (agent_holds ?g) (in_motion ?g) ) ) (in ?g ?g) (agent_holds ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-same-positions ballThrownMissesEverything:orange) (external-forall-maximize (count ballThrownMissesEverything:basketball:beachball) ) )
    (>= (total-time) (total-time) )
  )
)
(:scoring
  (* 1 )
)
)



(define (game game-id-423) (:domain few-objects-room-v1)
(:setup
  (forall (?o1 ?d - (either dodgeball tall_cylindrical_block) ?s - chair)
    (game-conserved
      (in_motion ?s)
    )
  )
)
(:constraints
  (and
    (forall (?p - ball)
      (and
        (preference watchOnShelf
          (exists (?r1 - ball)
            (at-end
              (agent_holds ?r1)
            )
          )
        )
      )
    )
    (forall (?h - ball ?h - triangular_ramp)
      (and
        (preference throwInBin
          (exists (?x - white)
            (then
              (hold-while (agent_holds top_drawer) (< 1 (distance desk ?h)) (adjacent desk ?h) )
              (once (not (game_start ) ) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (- (* (count watchOnShelf:book) 10 )
        )
        4
        (count-once-per-external-objects throwInBin:side_table:pyramid_block)
      )
      6
    )
    10
  )
)
(:scoring
  (count watchOnShelf:yellow)
)
)



(define (game game-id-424) (:domain many-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (exists (?p2 - cube_block)
      (and
        (and
          (and
            (game-optional
              (< (distance room_center ?h) 1)
            )
            (game-optional
              (on ?h bed)
            )
            (game-conserved
              (not
                (game_start )
              )
            )
          )
        )
        (game-conserved
          (object_orientation ?p2 upright)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?c3 - hexagonal_bin ?l ?ob ?b ?c ?g ?b - hexagonal_bin)
        (then
          (once (not (on ?ob rug) ) )
          (hold (and (agent_holds ?ob) (not (forall (?t - dodgeball ?c ?d - desktop) (adjacent ?g ?b) ) ) ) )
          (once (in_motion ?g) )
          (hold-while (agent_holds ?b) (and (adjacent ?b rug) (in_motion ?g) (in ?l ?c) ) (and (not (and (in ?b ?ob) (not (agent_holds ?ob) ) ) ) ) (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* 3 (count-longest ballThrownToBed:doggie_bed) )
      (count-once-per-objects ballThrownToBed:basketball)
    )
    8
  )
)
(:scoring
  (- (count-once-per-objects ballThrownToBed:hexagonal_bin) )
)
)



(define (game game-id-425) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_crouches )
  )
)
(:constraints
  (and
    (forall (?p1 - dodgeball)
      (and
        (preference ballThrownFromRug
          (exists (?w2 - hexagonal_bin)
            (then
              (hold (not (in_motion ?w2) ) )
              (once (on agent agent) )
              (once (exists (?d - dodgeball) (in_motion ?w2) ) )
            )
          )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?h - dodgeball ?x - purple)
        (then
          (hold-while (in_motion floor) (and (exists (?b - doggie_bed) (on ?b floor) ) (in_motion ?h) ) (and (on ?h ?h) (not (in_motion rug) ) ) )
          (hold-while (= 1 (distance desk ?h)) (agent_holds ?h) )
          (once (same_color ?h agent) )
        )
      )
    )
  )
)
(:terminal
  (> 3 (+ 2 2 )
  )
)
(:scoring
  (+ (count throwKnocksOverBear:blue_dodgeball) (count ballThrownFromRug:beachball) )
)
)



(define (game game-id-426) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - building)
    (and
      (forall (?l - curved_wooden_ramp ?h - curved_wooden_ramp)
        (game-conserved
          (and
            (> 1 2)
            (and
              (agent_holds ?h)
              (toggled_on ?h)
            )
          )
        )
      )
      (game-optional
        (agent_holds ?o2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?b10 - hexagonal_bin ?o - block)
        (then
          (once (in_motion ?o) )
          (once (in ?o ?o) )
          (once (and (in_motion ?o) (in_motion ?o) ) )
          (once (not (and (not (and (not (and (< (distance desk ?o) 10) (in_motion ?o) ) ) (not (exists (?t - golfball) (agent_crouches ) ) ) ) ) (agent_holds ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 5 )
)
(:scoring
  (>= (external-forall-maximize (count throwOverRamp:green) ) 8 )
)
)



(define (game game-id-427) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?y ?y0 - (either upside_down) ?c1 - hexagonal_bin)
      (game-conserved
        (and
          (in_motion ?c1)
          (agent_holds ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b10 - hexagonal_bin)
        (then
          (hold-while (on ?b10 ?b10) (not (agent_holds agent) ) )
          (once (game_over ) )
          (hold (and (not (and (not (agent_holds ?b10) ) (touch ?b10 agent) ) ) (and (opposite ?b10 ?b10) (on ?b10 ?b10) ) (< (distance ?b10 ?b10) 8) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 5 )
)
(:scoring
  (count bookOnDeskShelf:hexagonal_bin)
)
)



(define (game game-id-428) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?b - pillow ?r2 - cube_block ?h - dodgeball)
      (and
        (and
          (agent_holds agent)
          (not
            (not
              (on ?h ?h)
            )
          )
        )
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?p - hexagonal_bin ?d - (either tall_cylindrical_block wall) ?w2 - dodgeball)
        (then
          (hold-while (in_motion ?w2) (and (on ?w2 ?w2) (and (adjacent ?w2 ?w2) (< (distance desk ?w2) 1) (and (in_motion ?w2) ) (or (and (and (and (in_motion ?w2) (on ?w2 ?w2) ) (in ?w2 ?w2) ) (on ?w2 rug) ) (game_over ) (not (not (and (on ?w2 ?w2) (and (and (adjacent_side ?w2 left floor) (in_motion ?w2) ) (in_motion ?w2) ) (on ?w2 ?w2) (in ?w2 agent) (and (and (agent_holds ?w2) (in_motion ?w2) ) (touch ?w2 ?w2) ) (agent_holds ?w2) (not (same_object ?w2 ?w2) ) ) ) ) (and (and (and (not (in_motion bed) ) (not (in_motion ?w2) ) ) (not (in_motion ?w2) ) ) (on ?w2 ?w2) (not (above ?w2 ?w2) ) ) (agent_holds desk) ) ) ) )
          (hold (adjacent room_center ?w2) )
          (once (agent_holds ?w2) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - chair ?h - building ?b5 - pyramid_block ?h - block)
        (then
          (once (rug_color_under ?h red) )
          (hold (and (not (not (adjacent_side desk right ?h back) ) ) (and (not (< 2 (distance ?h ?h)) ) (agent_holds brown) ) ) )
          (once (in ?h ?h) )
        )
      )
    )
    (forall (?s - hexagonal_bin)
      (and
        (preference objectLandsInBin
          (exists (?d - ball ?b - tall_cylindrical_block)
            (then
              (once (not (in_motion ?b) ) )
              (once (toggled_on ?b) )
              (once (not (and (agent_holds floor) (not (on ?b ?s) ) (in ?b ?s) ) ) )
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?h - cube_block)
            (then
              (once (not (agent_holds ?s) ) )
              (once (agent_holds agent) )
              (once (and (in_motion agent) (and (agent_holds agent) (touch rug ?h) (and (exists (?h ?b ?o - (either cylindrical_block triangle_block)) (and (and (and (game_over ) (and (exists (?t - wall ?c5 - (either cube_block pillow)) (agent_holds ?h) ) ) (not (and (on ?s agent) (in_motion ?h) ) ) ) (agent_holds agent) ) (and (not (game_over ) ) (and (and (and (forall (?h ?b1 - chair) (exists (?o - cylindrical_block) (on ?b ?o) ) ) (in ?o ?b) (not (not (not (agent_holds floor) ) ) ) (in_motion rug) ) (in_motion agent) ) (and (in_motion ?h) (on ?o ?o) (agent_holds ?s) (and (equal_x_position bed ?b) (and (not (agent_holds agent) ) (and (and (not (not (in_motion ?s) ) ) (is_setup_object ?h) ) (agent_holds ?b) ) ) ) ) ) ) ) ) (in_motion ?s) (and (and (and (in_motion ?h) (in_motion agent) ) (not (or (same_type ?h ?h) (in_motion ?s) (exists (?o - building ?c - hexagonal_bin) (agent_holds ?h) ) ) ) ) (agent_holds ?s) ) ) ) (agent_holds rug) (agent_holds ?s) (faces ?h ?s) (agent_holds ?h) (and (adjacent bed ?s) (not (agent_holds ?s) ) ) (not (adjacent_side desk front ?s front) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- 7 7 ) 3 )
)
(:scoring
  (count-once-per-objects objectLandsInBin:red:blue)
)
)



(define (game game-id-429) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (same_type desk block)
  )
)
(:constraints
  (and
    (forall (?l - (either wall game_object) ?c - hexagonal_bin ?x ?x0 - color)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?h - (either book))
            (then
              (once (in_motion ?c) )
              (hold (agent_holds ?h) )
              (once (in ?c ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-objects brownObjectMovedToRoomCenter:book) )
    10
  )
)
(:scoring
  (count brownObjectMovedToRoomCenter:green)
)
)



(define (game game-id-430) (:domain many-objects-room-v1)
(:setup
  (exists (?h - cube_block)
    (game-conserved
      (and
        (in_motion agent)
        (adjacent_side desk back ?h)
        (and
          (adjacent desk ?h)
          (on ?h ?h)
        )
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - game_object ?b - blue_pyramid_block)
      (and
        (preference blocksInPlace
          (exists (?w - dodgeball)
            (then
              (once (not (in_motion ?w) ) )
              (hold (not (> (distance door ?b) 7) ) )
              (hold-while (toggled_on bed) (not (agent_holds ?w) ) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?c - curved_wooden_ramp)
            (then
              (once (in_motion ?b) )
              (hold (on ?c ?b) )
              (once (on ?b ?b) )
              (hold (agent_holds ?c) )
            )
          )
        )
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?g - ball ?b1 - teddy_bear)
            (at-end
              (and
                (and
                  (forall (?p1 - (either block cellphone ball))
                    (toggled_on ?b)
                  )
                  (same_object desk ?b)
                )
                (adjacent bed desk)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (count agentLeavesDogbedOrNoMoreBalls:hexagonal_bin) )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:dodgeball)
)
)



(define (game game-id-431) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?bl - dodgeball)
      (not
        (and
          (same_color bed pink)
          (not
            (on ?bl ?bl)
          )
          (agent_holds ?bl)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?b4 - (either cd dodgeball))
        (then
          (hold (agent_holds ?b4) )
          (once (not (and (= (distance room_center ?b4) 2 1) (in_motion desk) ) ) )
          (once (exists (?o2 ?w ?s - ball) (in_motion ?w) ) )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?c4 - doggie_bed ?b - triangular_ramp ?o - hexagonal_bin ?b10 - building)
        (then
          (hold (and (agent_holds ?b10) (equal_z_position room_center floor) ) )
          (once (not (agent_holds ?b10) ) )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?h - hexagonal_bin)
        (at-end
          (and
            (or
              (agent_holds ?h)
              (on ?h ?h)
            )
            (adjacent ?h ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 10 )
)
(:scoring
  (* (- 6 )
    (* (* (count-unique-positions blockPlacedInBuilding:golfball:cylindrical_block) (count-once-per-objects blockFromRugToDesk:yellow:orange) (count blockFromRugToDesk:dodgeball) )
      (* (count-measure towerFallsWhileBuilding:hexagonal_bin) (count blockPlacedInBuilding:beachball) )
    )
  )
)
)



(define (game game-id-432) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - (either light_blue))
    (forall (?b3 - (either alarm_clock dodgeball) ?b - hexagonal_bin ?h - ball)
      (forall (?p2 - hexagonal_bin)
        (game-conserved
          (not
            (in_motion ?p2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?db - pink_dodgeball)
        (then
          (once (not (in_motion bed) ) )
          (hold (not (opposite ?db ?db) ) )
          (once (is_setup_object ?db) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (and
        (>= (* 5 50 )
          (count matchingBuildingBuilt:yellow)
        )
        (>= (* (count-once-per-external-objects matchingBuildingBuilt:blue_cube_block) (count matchingBuildingBuilt:basketball) )
          8
        )
      )
      (<= (total-score) (count matchingBuildingBuilt:yellow) )
    )
    (> (count-once matchingBuildingBuilt:blue_dodgeball:yellow_pyramid_block) (count matchingBuildingBuilt) )
    (or
      (>= (* 2 (count matchingBuildingBuilt:hexagonal_bin) )
        (= (* (count-once-per-objects matchingBuildingBuilt:beachball) (count-measure matchingBuildingBuilt:dodgeball) )
          (count-once matchingBuildingBuilt:basketball)
        )
      )
    )
  )
)
(:scoring
  (+ (count matchingBuildingBuilt:pink) 3 )
)
)



(define (game game-id-433) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c3 - hexagonal_bin ?h - dodgeball ?l2 - dodgeball)
      (game-optional
        (same_type ?l2 ?l2)
      )
    )
    (exists (?b - ball ?c - block)
      (and
        (and
          (and
            (exists (?l - ball ?d1 - wall)
              (exists (?z ?z0 ?z1 - front_left_corner)
                (forall (?w1 - bridge_block ?d - (either dodgeball bridge_block))
                  (forall (?o - book)
                    (game-conserved
                      (and
                        (in ?o agent)
                        (and
                          (< (distance desk ?o) 1)
                          (on ?d1 ?d1)
                          (agent_holds ?d1)
                          (on ?c ?c)
                        )
                        (agent_holds ?d1)
                        (not
                          (same_object ?d1 ?d1)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?o - wall ?r - dodgeball)
          (exists (?l2 - doggie_bed)
            (forall (?w2 - flat_block)
              (and
                (exists (?o - drawer ?b - chair ?r - (either main_light_switch))
                  (forall (?t - hexagonal_bin)
                    (game-optional
                      (above ?w2 ?r)
                    )
                  )
                )
                (and
                  (exists (?c3 - block ?o5 ?t2 - cube_block)
                    (game-conserved
                      (adjacent ?w2 ?l2)
                    )
                  )
                )
                (forall (?t - chair ?z - (either left back right))
                  (or
                    (game-conserved
                      (and
                        (not
                          (> (distance_side rug front_left_corner ?r) 1)
                        )
                        (on bed ?t)
                        (not
                          (faces agent ?l2)
                        )
                        (in desk ?c)
                        (not
                          (touch ?r west_wall)
                        )
                        (in_motion ?l2)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?h - hexagonal_bin ?h - doggie_bed)
        (then
          (hold-while (object_orientation ?h upside_down) (not (in_motion ?h) ) )
          (once (agent_holds ?h) )
          (hold (in ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (/ 10 5 ) 10 )
      (total-time)
    )
    (>= 2 3 )
  )
)
(:scoring
  (* (+ (* 5 2 )
      5
    )
    (* 1 (+ (* 10 3 )
        1
      )
    )
  )
)
)



(define (game game-id-434) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?s - ball ?b5 - ball)
      (or
        (and
          (forall (?t - wall)
            (and
              (and
                (exists (?l - beachball)
                  (exists (?p1 - cube_block ?c1 - hexagonal_bin ?t - ball)
                    (game-conserved
                      (in ?l ?b5)
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?o ?o5 - pillow)
            (forall (?w1 - (either basketball dodgeball))
              (game-conserved
                (not
                  (not
                    (and
                      (not
                        (and
                          (not
                            (and
                              (not
                                (agent_holds ?b5)
                              )
                              (and
                                (agent_holds ?w1)
                                (not
                                  (adjacent ?o5 ?w1)
                                )
                              )
                            )
                          )
                          (not
                            (in_motion ?o5)
                          )
                          (agent_holds ?o5)
                          (agent_holds ?o)
                          (or
                            (in_motion agent)
                            (and
                              (agent_holds ?o5)
                            )
                          )
                          (same_color ?o5 ?b5)
                        )
                      )
                      (and
                        (in_motion ?o5)
                        (not
                          (>= (distance desk floor) (distance ?b5 ?o5))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 ?h ?h - ball ?c1 - doggie_bed)
      (and
        (preference beachballOnRug
          (exists (?l - hexagonal_bin ?y - (either sideways))
            (then
              (once (equal_x_position ?c1 ?l) )
              (hold (agent_holds ?l) )
              (once (agent_holds ?c1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (+ 5 )
      (* (count beachballOnRug:golfball) (- 5 )
        (>= 5 (count-measure beachballOnRug:green:pink) )
        (count beachballOnRug:pink_dodgeball)
        2
        (* 2 5 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects beachballOnRug:blue:blue_cube_block)
)
)



(define (game game-id-435) (:domain many-objects-room-v1)
(:setup
  (forall (?y ?y0 ?y1 - diagonal)
    (exists (?t - beachball ?d ?b3 ?b4 ?h - shelf)
      (game-conserved
        (on ?b4 ?b4)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o5 - (either pillow alarm_clock))
      (and
        (preference blockInTowerKnocked
          (exists (?b - cube_block)
            (at-end
              (and
                (on ?b ?o5)
                (in_motion ?b)
              )
            )
          )
        )
        (preference blockPickedUp
          (exists (?b4 - (either cellphone pencil))
            (then
              (once (in_motion ?b4) )
              (once (not (on ?b4 ?o5) ) )
              (hold-while (in_motion ?o5) (in_motion ?o5) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 5 8 )
)
(:scoring
  (* (* (external-forall-minimize (count blockInTowerKnocked:block) ) (* 2 )
    )
    (external-forall-maximize
      (* 3 (* 0 5 (count-once-per-objects blockInTowerKnocked:dodgeball) 8 (* (count blockPickedUp:beachball) 3 )
          8
          (count-once blockPickedUp:pink)
          (count blockPickedUp:wall:beachball:pink)
          (- (* (count-longest blockPickedUp:dodgeball) (* 10 (count-once-per-objects blockInTowerKnocked:dodgeball) )
              7
              4
              (+ (+ 1 (count-once blockPickedUp:dodgeball) )
                (count-once-per-objects blockPickedUp:hexagonal_bin)
                (count blockInTowerKnocked:brown)
              )
              10
            )
          )
        )
      )
    )
    1
  )
)
)



(define (game game-id-436) (:domain many-objects-room-v1)
(:setup
  (exists (?c - block ?o - pillow)
    (forall (?r - hexagonal_bin)
      (forall (?h - dodgeball)
        (game-conserved
          (and
            (on ?o ?o)
            (on ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?y - upside_down ?o - cube_block)
        (then
          (once (same_color ?o blue) )
          (once (on ?o ?o) )
          (once (= 1 (distance room_center ?o)) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?b6 - dodgeball)
        (then
          (once (not (< 1 (building_size ?b6)) ) )
          (once (and (not (in_motion ?b6) ) (same_type ?b6 block) (and (in_motion ?b6) (and (not (agent_holds ?b6) ) ) ) ) )
          (hold (agent_holds agent) )
        )
      )
    )
    (preference throwToBin
      (exists (?c2 - cube_block)
        (at-end
          (not
            (and
              (touch ?c2 ?c2)
              (and
                (not
                  (agent_holds rug)
                )
                (and
                  (rug_color_under ?c2 purple)
                  (and
                    (or
                      (< (distance room_center agent) (distance ?c2 ?c2))
                      (< (distance ?c2 ?c2) (distance desk ?c2))
                    )
                    (toggled_on ?c2)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count cubeBlockInBuilding:basketball:triangle_block) )
)
(:scoring
  (+ (* (* (count-once throwToBin:hexagonal_bin) 5 )
      (count cubeBlockInBuilding:tan:alarm_clock)
    )
    (* (>= (count throwToBin:book:yellow) 10 )
      9
    )
  )
)
)



(define (game game-id-437) (:domain many-objects-room-v1)
(:setup
  (forall (?t - dodgeball)
    (not
      (forall (?b4 ?d - (either pillow laptop basketball key_chain))
        (game-optional
          (in_motion ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b5 - curved_wooden_ramp)
      (and
        (preference ballThrownHitsAgent
          (exists (?c2 - wall)
            (then
              (hold-while (and (agent_holds north_wall) (agent_holds ?b5) ) (and (and (adjacent ?b5 main_light_switch) (not (equal_z_position ?b5 ?c2) ) (agent_holds top_shelf) ) (not (not (and (not (and (not (in_motion ?b5) ) (and (in_motion ?b5) (and (and (and (not (exists (?s - game_object) (on rug ?c2) ) ) (touch ?b5 blue) (in_motion ?b5) ) (exists (?b - beachball) (in_motion bed) ) ) (and (in_motion ?c2) (adjacent ?c2 ?b5) ) ) ) ) ) (not (in_motion ?c2) ) (in_motion ?b5) ) ) ) ) )
              (hold (on ?b5 ?c2) )
            )
          )
        )
        (preference throwToBinFromOppositeWall
          (exists (?h - hexagonal_bin)
            (then
              (once (on ?h ?h) )
              (once (and (and (in_motion ?b5) (not (and (adjacent ?b5 ?h) (agent_holds agent) ) ) (same_type agent bridge_block) (agent_holds agent) ) (faces ?h ?h) ) )
              (once (and (on ?h ?b5) (adjacent desk ?b5) ) )
            )
          )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?b - dodgeball)
        (then
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 100 10 )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall:pink_dodgeball)
)
)



(define (game game-id-438) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?g ?d - doggie_bed ?p - block ?b7 - ball ?tb - ball)
      (game-conserved
        (in ?tb ?tb)
      )
    )
    (and
      (game-conserved
        (exists (?b - dodgeball)
          (agent_holds ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - curved_wooden_ramp)
      (and
        (preference redDodgeballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once-measure (adjacent east_sliding_door ?b2) (distance ?b2 ?b2) )
              (hold (agent_holds ?b2) )
              (once (agent_holds ?h) )
              (once (object_orientation ?h diagonal) )
            )
          )
        )
        (preference ballThrownHitsAgent
          (exists (?l1 ?l - hexagonal_bin)
            (then
              (once (< 3 (distance desk agent)) )
              (hold (and (touch ?b2 ?l1) (= (distance desk ?l1) 3) ) )
              (once (agent_holds ?l) )
            )
          )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?r2 - hexagonal_bin ?c5 - dodgeball)
        (at-end
          (agent_holds ?c5)
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?l - cube_block)
        (then
          (hold (and (not (in ?l ?l) ) (in_motion ?l) ) )
          (once (touch ?l ?l) )
          (once (or (in_motion agent) (and (exists (?b6 - hexagonal_bin ?b7 - golfball) (in_motion ?l) ) (not (and (or (on ?l ?l) (or (< 1 (distance ?l agent)) (same_type ?l pillow) ) ) (< (distance desk blue) 8) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count redDodgeballThrownToBin:dodgeball:dodgeball:pink) (count-total throwBallFromOtherBallToBin:dodgeball) )
)
(:scoring
  (count-once-per-objects ballThrownHitsAgent:dodgeball:red_pyramid_block)
)
)



(define (game game-id-439) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - ball ?g - hexagonal_bin)
    (forall (?h - building)
      (and
        (and
          (and
            (game-conserved
              (in_motion ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?o2 ?d1 ?c ?c ?l ?o2 - (either floor basketball))
        (at-end
          (agent_holds ?d1)
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (count matchingBuildingBuilt:yellow) ) 5 )
    (count matchingBuildingBuilt:book)
  )
)
(:scoring
  (+ (count matchingBuildingBuilt:tan) 5 )
)
)



(define (game game-id-440) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - hexagonal_bin ?c - game_object)
    (and
      (game-conserved
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?c3 - triangular_ramp ?p - (either triangle_block laptop))
        (then
          (hold (in ?p ?p) )
          (once (adjacent_side ?p front ?p) )
          (once (and (or (and (or (in_motion ?p) (agent_holds agent) ) (and (and (in_motion ?p) (not (and (on ?p ?p) (agent_holds ?p) ) ) ) (or (agent_holds ?p) (on ?p ?p) ) ) ) (in_motion ?p) ) (adjacent bed ?p) ) )
          (once (agent_holds floor) )
        )
      )
    )
    (forall (?h ?ob - hexagonal_bin ?d - triangular_ramp)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (then
            (hold (in ?d ?d) )
            (once (on ?d ?d) )
            (hold (not (and (agent_holds ?d) (not (between ?d ?d ?d) ) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count-longest blockInTowerKnockedByDodgeball:green:dodgeball) (* (+ 100 8 )
      (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball)
    )
  )
)
(:scoring
  (count blockInTowerKnockedByDodgeball:blue_dodgeball)
)
)



(define (game game-id-441) (:domain medium-objects-room-v1)
(:setup
  (exists (?o1 - building)
    (exists (?h - cylindrical_block ?b8 - chair)
      (and
        (forall (?b - shelf ?c1 - game_object ?d2 - teddy_bear ?h - (either dodgeball pyramid_block))
          (exists (?r - (either laptop pen cube_block))
            (game-conserved
              (in_motion ?b8)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?l - game_object)
        (then
          (hold (not (adjacent ?l ?l) ) )
          (once (agent_holds ?l) )
          (once (and (in_motion ?l) (< 4 9) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count throwToBinFromOppositeWall:golfball:dodgeball) (total-score) )
)
(:scoring
  (* 1 (count throwToBinFromOppositeWall:orange) -10 )
)
)



(define (game game-id-442) (:domain few-objects-room-v1)
(:setup
  (forall (?h - chair)
    (exists (?w2 - blinds)
      (forall (?b4 - (either wall golfball))
        (exists (?b2 - (either yellow_cube_block wall cd))
          (game-conserved
            (and
              (above ?h ?b2)
              (or
                (adjacent ?b2 ?h)
                (exists (?b - ball ?b6 - sliding_door)
                  (and
                    (in_motion ?w2)
                    (agent_holds ?b2)
                    (agent_holds ?b6)
                  )
                )
              )
              (not
                (between ?b2 bed ?h)
              )
              (not
                (exists (?t2 - dodgeball)
                  (in_motion ?b2)
                )
              )
              (not
                (on ?b4 ?h)
              )
              (agent_holds ?w2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?l2 - game_object)
        (at-end
          (on ?l2 ?l2)
        )
      )
    )
    (preference blockCorrectlyPicked
      (exists (?h - ball)
        (then
          (hold (not (in ?h ?h) ) )
          (hold (not (and (not (on ?h ?h) ) (< 2 1) ) ) )
          (once (and (or (and (on ?h ?h) (adjacent ?h ?h) ) (not (adjacent_side desk back ?h) ) (in ?h ?h) ) (faces ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-shortest blockCorrectlyPicked:dodgeball) )
)
(:scoring
  (* (* (* 5 (count throwAttempt:beachball:side_table) )
      (> (count blockCorrectlyPicked:golfball:hexagonal_bin:dodgeball) 10 )
    )
    2
  )
)
)



(define (game game-id-443) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?r2 - shelf)
    (exists (?t - building)
      (and
        (game-optional
          (exists (?r - ball)
            (and
              (in ?t ?t)
              (agent_holds ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - doggie_bed)
      (and
        (preference teddyBearHitsBall
          (exists (?o - (either cellphone doggie_bed))
            (then
              (once (on ?o ?o) )
              (once (in_motion ?o) )
              (hold (in_motion green_golfball) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (count-total teddyBearHitsBall:golfball) )
    (>= 20 3 )
    (> (total-time) (+ (count-once-per-objects teddyBearHitsBall:beachball) 3 )
    )
  )
)
(:scoring
  (count teddyBearHitsBall:blue_cube_block)
)
)



(define (game game-id-444) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o2 - (either wall teddy_bear) ?b6 - (either cube_block blue_cube_block bridge_block))
      (game-optional
        (adjacent room_center ?b6)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?p3 - (either main_light_switch yellow_cube_block))
        (then
          (hold-while (adjacent_side desk right ?p3) (in_motion ?p3) )
          (once (and (same_color ?p3 ?p3) (touch ?p3 ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 30 (count-once-per-external-objects dodgeballThrownToBin:pink) )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBin:doggie_bed)
)
)



(define (game game-id-445) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c1 - cube_block)
      (and
        (game-conserved
          (and
            (agent_holds ?c1)
            (in_motion ?c1)
          )
        )
        (forall (?w2 - game_object)
          (and
            (exists (?o - cube_block)
              (exists (?r - cube_block ?t - hexagonal_bin ?o2 - dodgeball)
                (game-conserved
                  (forall (?o - (either golfball pencil))
                    (and
                      (agent_holds ?c1)
                      (rug_color_under ?c1 brown)
                      (in_motion ?w2)
                      (same_color ?c1 ?o)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (and
      (exists (?b4 - (either golfball beachball) ?c - wall)
        (and
          (game-conserved
            (on ?c ?c)
          )
          (game-conserved
            (and
              (agent_holds ?c)
              (on ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - hexagonal_bin)
      (and
        (preference nonBlockPlacedInBuilding
          (exists (?b - curved_wooden_ramp)
            (then
              (hold (agent_holds ?b) )
              (once (and (agent_holds agent) (touch ?b ?b) ) )
              (hold (in agent ?b) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?b4 - building)
            (then
              (once (agent_holds ?o) )
              (once (and (on bed ?b4) (not (in_motion ?b4) ) (agent_holds ?o) ) )
              (hold-while (and (exists (?h - teddy_bear ?t2 - building) (and (in bed ?o) (not (not (or (and (in_motion bed) (not (adjacent ?b4 floor) ) ) (and (and (and (not (same_type ?o ?t2) ) (equal_z_position ?b4 ?o) ) (in_motion ?b4) ) (not (and (on ?o ?t2) ) ) ) ) ) ) ) ) (< 4 4) (in ?o ?o) (in_motion ?b4) ) (not (not (or (not (in ?o ?b4) ) (in_motion ?b4) ) ) ) (not (in_motion ?b4) ) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?c3 - game_object)
        (then
          (once (in ?c3 ?c3) )
          (once (in ?c3 ?c3) )
          (once (agent_holds ?c3) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (count nonBlockPlacedInBuilding:red) )
    (>= (+ (count-measure nonBlockPlacedInBuilding:basketball) (count basketMadeFromRug:yellow) )
      3
    )
    (>= (count nonBlockPlacedInBuilding:beachball) (count-once-per-objects ballThrownToWallToAgent:yellow) )
  )
)
(:scoring
  (count ballThrownToWallToAgent:white)
)
)



(define (game game-id-446) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - game_object)
      (game-optional
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - building ?c2 - hexagonal_bin)
      (and
        (preference blockFromRugToDesk
          (exists (?h - hexagonal_bin ?s - hexagonal_bin)
            (then
              (once (and (in_motion ?s) (and (on ?c2 ?c2) (and (agent_holds ?s) (and (not (in bed agent) ) (on ?c2 ?s) (and (in_motion ?c2) (in_motion ?s) (agent_holds ?s) ) ) ) ) ) )
              (hold (and (agent_holds ?s) (on ?s ?c2) ) )
              (once (in_motion ?c2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once blockFromRugToDesk:triangle_block) (* 9 (* 6 (count blockFromRugToDesk:orange) )
    )
  )
)
(:scoring
  (* (* 4 (count blockFromRugToDesk:tall_cylindrical_block) (external-forall-maximize (+ 50 (+ (+ (count-shortest blockFromRugToDesk:dodgeball:book:beachball) 10 6 )
            15
          )
        )
      )
    )
    (* (count blockFromRugToDesk:basketball:book) (+ 30 (+ 10 (= 10 (* (* 2 8 20 )
              3
            )
          )
          3
        )
      )
    )
    30
  )
)
)



(define (game game-id-447) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - game_object)
      (and
        (exists (?b - hexagonal_bin)
          (game-optional
            (adjacent_side ?t front ?b front)
          )
        )
        (or
          (game-optional
            (not
              (in_motion ?t)
            )
          )
          (not
            (and
              (game-conserved
                (and
                  (on agent ?t)
                  (agent_holds ?t)
                )
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?d1 - (either dodgeball alarm_clock) ?b4 - pink_dodgeball)
        (then
          (once (in ?b4 ?b4) )
          (once (and (agent_holds ?b4) (agent_holds ?b4) (and (not (not (or (and (in_motion ?b4) (and (agent_holds ?b4) (not (and (in ?b4 ?b4) (on agent ?b4) (not (not (agent_holds ?b4) ) ) (agent_holds ?b4) ) ) ) ) (in ?b4 top_drawer) ) ) ) (and (agent_holds ?b4) (in_motion ?b4) ) ) ) )
          (hold (agent_crouches ) )
        )
      )
    )
  )
)
(:terminal
  (< 2 (total-score) )
)
(:scoring
  (count-once-per-objects objectLandsInBin:brown)
)
)



(define (game game-id-448) (:domain many-objects-room-v1)
(:setup
  (forall (?g - ball ?d - hexagonal_bin ?h - dodgeball)
    (game-optional
      (and
        (agent_holds ?h)
        (and
          (adjacent bed agent)
          (= 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference golfballInBinFromPillow
          (exists (?d - hexagonal_bin)
            (then
              (hold (same_color ?b ?b) )
              (hold (adjacent desk ?b) )
              (once (equal_x_position ?b ?d) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?p3 - doggie_bed)
        (then
          (hold-while (in_motion ?p3) (and (forall (?o5 - hexagonal_bin ?l4 - ball) (in_motion ?p3) ) ) )
          (hold (not (agent_holds ?p3) ) )
          (once (agent_holds ?p3) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?c2 - hexagonal_bin)
        (then
          (hold (not (agent_holds ?c2) ) )
          (once (same_color ?c2 purple) )
          (once (object_orientation ?c2 upright) )
        )
      )
    )
    (forall (?b - game_object)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?d - dodgeball ?r - game_object ?o2 - (either beachball dodgeball))
            (at-end
              (equal_z_position desk ?b)
            )
          )
        )
      )
    )
    (forall (?b - cube_block)
      (and
        (preference objectInBuilding
          (exists (?c5 - ball)
            (then
              (once (in ?b ?b) )
              (hold (on ?b ?c5) )
              (hold-while (and (agent_holds ?b) (not (same_object ?c5 ?c5) ) ) (< (distance room_center agent) 1) )
            )
          )
        )
        (preference watchOnShelf
          (exists (?r ?tb - ball ?h - hexagonal_bin ?t - hexagonal_bin)
            (then
              (hold-while (in ?t ?b) (and (in_motion ?b) (and (agent_crouches ) (in_motion ?t) ) (not (exists (?h - chair ?t - curved_wooden_ramp) (not (not (in ?t ?t) ) ) ) ) ) )
              (hold (= (x_position agent) (distance desk ?b)) )
              (hold (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count objectInBuilding:pink_dodgeball:green) (count-once watchOnShelf:rug:cylindrical_block) )
    (- (* (count-increasing-measure watchOnShelf:beachball) 6 )
    )
  )
)
(:scoring
  (count-once golfballInBinFromPillow:pink)
)
)



(define (game game-id-449) (:domain many-objects-room-v1)
(:setup
  (exists (?p1 - building)
    (game-optional
      (not
        (in_motion ?p1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b6 - hexagonal_bin ?o3 ?b8 - (either cylindrical_block hexagonal_bin cube_block dodgeball rug floor alarm_clock))
      (and
        (preference ballThrownHitsAgent
          (exists (?r - doggie_bed)
            (then
              (once (or (is_setup_object agent) (agent_holds ?b8) (not (adjacent_side ?b8 back ?o3) ) ) )
              (once (>= (x_position ?o3) 0.5) )
              (once (adjacent rug ?b8) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?b7 - hexagonal_bin)
            (then
              (once (not (exists (?t2 - cube_block) (agent_holds ?b8) ) ) )
              (hold-while (and (touch ?b7 agent) (agent_holds ?b7) ) (and (and (agent_holds agent) (in_motion ?o3) ) (on ?b7 ?b8) ) (not (opposite ?b7 ?b8) ) (adjacent ?b8 ?b8) )
              (once (not (faces ?b8 ?b7) ) )
            )
          )
        )
        (preference ballThrownFromDoor
          (exists (?l1 - cube_block)
            (then
              (hold-while (equal_x_position desk ?l1) (agent_holds ?b8) )
              (once (and (< 8 (distance_side ?l1 front_left_corner ?o3 left)) (adjacent_side door front ?o3) ) )
              (hold (not (and (not (and (and (agent_holds ?o3) (not (exists (?db - pillow) (on ?o3 ?b8) ) ) ) (forall (?b3 ?h - (either alarm_clock dodgeball)) (not (adjacent_side ?o3 back ?o3) ) ) ) ) (< (distance ?b8 ?o3) 2) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 3 (total-score) )
)
(:scoring
  (= 2 )
)
)



(define (game game-id-450) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t2 ?h - red_dodgeball)
      (game-conserved
        (agent_holds ?t2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - dodgeball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?x - light_blue ?c1 - hexagonal_bin ?c - hexagonal_bin)
            (then
              (hold (same_color ?c ?b2) )
              (once (< (distance_side ?c right bed) (distance ?c floor)) )
            )
          )
        )
      )
    )
    (forall (?b1 - hexagonal_bin)
      (and
        (preference itemsHidingScreens
          (then
            (hold (< 0.5 1) )
            (once (in_motion ?b1) )
            (once (touch pink rug) )
          )
        )
        (preference objectInBuilding
          (exists (?b - hexagonal_bin)
            (then
              (once (in ?b1 ?b1) )
              (once (not (adjacent_side desk front agent front) ) )
              (once (toggled_on west_wall) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 6 )
)
(:scoring
  (count-once-per-objects itemsHidingScreens:hexagonal_bin)
)
)



(define (game game-id-451) (:domain few-objects-room-v1)
(:setup
  (forall (?r - hexagonal_bin ?t - hexagonal_bin)
    (and
      (and
        (game-conserved
          (in ?t top_shelf)
        )
      )
      (and
        (exists (?c - dodgeball)
          (game-conserved
            (not
              (and
                (in_motion ?t)
                (adjacent_side room_center back ?t)
              )
            )
          )
        )
        (game-optional
          (not
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?r - golfball)
        (then
          (once-measure (in_motion ?r) (building_size ?r) )
          (once (in_motion ?r) )
          (once (toggled_on ?r) )
          (hold-while (in_motion ?r) (and (and (not (agent_holds rug) ) (on agent ?r) ) (in_motion ?r) ) (in_motion ?r) )
        )
      )
    )
    (forall (?o - blue_cube_block ?c ?b - game_object)
      (and
        (preference laptopAndBookInPlace
          (exists (?c ?b10 - (either hexagonal_bin alarm_clock))
            (then
              (hold (agent_holds ?b) )
              (once (exists (?o - hexagonal_bin ?h ?l - dodgeball) (and (not (adjacent_side ?c right ?b back) ) (not (agent_holds ?b) ) ) ) )
              (once (agent_holds ?b) )
              (once (touch ?c ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 15 6 (count-once ballKnocksBlockFromRug:yellow:yellow) )
    (count-increasing-measure laptopAndBookInPlace:pink_dodgeball)
  )
)
(:scoring
  (* (* 8 7 )
    1
    4
    4
  )
)
)



(define (game game-id-452) (:domain many-objects-room-v1)
(:setup
  (forall (?h ?l - building ?l2 - hexagonal_bin ?r - hexagonal_bin)
    (exists (?b7 - triangular_ramp ?s - hexagonal_bin)
      (and
        (game-conserved
          (forall (?c - dodgeball)
            (agent_holds ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?t - red_dodgeball)
        (then
          (once (not (not (in_motion ?t) ) ) )
          (once (broken ?t) )
          (once (and (on ?t ?t) (equal_z_position ?t ?t) (agent_holds ?t) ) )
        )
      )
    )
    (preference ballOnBedAtEnd
      (exists (?o - building)
        (then
          (once (adjacent_side door left ?o) )
          (hold (in_motion green_golfball) )
          (hold (not (not (= 1 1) ) ) )
        )
      )
    )
    (preference throwAttempt
      (exists (?c2 - hexagonal_bin ?b - (either key_chain alarm_clock))
        (then
          (once (on ?b ?b) )
          (once (not (in floor ?b) ) )
          (hold (same_object desk ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects throwAttempt:doggie_bed) 3 )
    (count-once-per-objects bigObjectThrownToBed:pink)
  )
)
(:scoring
  (count-once-per-objects throwAttempt:alarm_clock:dodgeball:brown)
)
)



(define (game game-id-453) (:domain many-objects-room-v1)
(:setup
  (exists (?t - dodgeball)
    (game-conserved
      (in ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?l2 - (either cellphone blue_cube_block) ?w1 - (either top_drawer dodgeball))
        (at-end
          (= (distance ?w1 ?w1) (distance ?w1 bed))
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (count ballThrownFromObjectToBin:basketball) 3 )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromObjectToBin:red)
)
)



(define (game game-id-454) (:domain many-objects-room-v1)
(:setup
  (exists (?z - (either left front right))
    (forall (?s - hexagonal_bin)
      (forall (?b4 ?l ?o4 - game_object)
        (forall (?z - left)
          (forall (?b - teddy_bear ?b - teddy_bear)
            (exists (?h - (either key_chain wall bridge_block))
              (game-conserved
                (and
                  (not
                    (not
                      (agent_holds agent)
                    )
                  )
                  (and
                    (and
                      (in ?o4 ?h)
                      (and
                        (opposite agent ?l)
                        (in_motion agent)
                      )
                      (agent_holds ?b)
                    )
                    (agent_holds ?s)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?o3 - desktop)
        (then
          (hold (not (or (not (in_motion ?o3) ) ) ) )
          (once (opposite ?o3 ?o3) )
          (hold-while (in ?o3 ?o3) (forall (?d - game_object) (not (not (and (and (agent_holds ?d) (not (not (in_motion ?d) ) ) ) (on ?o3 ?o3) ) ) ) ) (same_color ?o3 ?o3) )
        )
      )
    )
    (forall (?o - pyramid_block ?s - sliding_door)
      (and
        (preference itemsBroken
          (exists (?h - (either cylindrical_block ball credit_card book))
            (at-end
              (faces ?h ?h)
            )
          )
        )
        (preference throwGolfballToBin
          (exists (?b - dodgeball ?h - tan_cube_block)
            (then
              (hold (not (adjacent room_center agent) ) )
              (once (not (broken ?s) ) )
              (hold (< (distance bed bed) 5) )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?b - dodgeball)
            (at-end
              (and
                (adjacent desk ?s)
                (and
                  (and
                    (in_motion ?b)
                    (not
                      (agent_holds brown)
                    )
                  )
                  (in_motion ?s)
                )
              )
            )
          )
        )
      )
    )
    (preference blockPickedUp
      (exists (?l3 - (either book golfball))
        (at-end
          (< 6 (distance desk ?l3))
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (count-once-per-objects dodgeballHitsBinBottom:yellow) )
      (total-score)
    )
  )
)
(:scoring
  (count itemsBroken:hexagonal_bin:pink_dodgeball)
)
)



(define (game game-id-455) (:domain medium-objects-room-v1)
(:setup
  (forall (?d2 - golfball)
    (forall (?h - hexagonal_bin)
      (forall (?d - hexagonal_bin)
        (and
          (forall (?o3 - (either key_chain teddy_bear alarm_clock))
            (and
              (forall (?c1 - hexagonal_bin ?l2 - cube_block)
                (exists (?b - ball ?s - building)
                  (and
                    (forall (?b3 - building)
                      (game-optional
                        (and
                          (and
                            (agent_holds ?d2)
                            (agent_holds ?b3)
                          )
                          (= (distance ?h ?l2))
                          (or
                            (agent_holds ?d)
                            (in_motion ?b3)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (not
                  (touch ?h ?h)
                )
              )
              (game-conserved
                (not
                  (and
                    (not
                      (and
                        (in_motion ?h)
                        (between floor ?d2 agent)
                        (not
                          (and
                            (forall (?b - ball ?b4 - game_object ?h - doggie_bed ?o - building)
                              (agent_holds ?d)
                            )
                            (not
                              (in_motion ?d)
                            )
                            (in ?h ?d)
                          )
                        )
                      )
                    )
                    (touch ?h ?d2)
                  )
                )
              )
            )
          )
          (exists (?w1 - pillow ?c6 - dodgeball)
            (forall (?p3 - cube_block ?d - desk_shelf ?h ?d - cube_block ?p2 - hexagonal_bin)
              (and
                (game-conserved
                  (in_motion ?h)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball ?t ?b1 ?h - pillow)
      (and
        (preference watchOnShelf
          (exists (?z - left ?b5 - cube_block)
            (then
              (hold (agent_holds ?b1) )
              (once (not (not (not (agent_holds ?h) ) ) ) )
              (once (object_orientation ?b1 upside_down) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 2 )
)
(:scoring
  (= (+ 2 5 )
    (* (count-once watchOnShelf:yellow) 10 )
  )
)
)



(define (game game-id-456) (:domain many-objects-room-v1)
(:setup
  (exists (?h - curved_wooden_ramp)
    (forall (?b - bridge_block)
      (forall (?g - ball ?r - chair)
        (game-optional
          (not
            (and
              (agent_holds ?b)
              (same_type ?r ball)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?d - (either blue_cube_block teddy_bear book))
        (then
          (once (agent_holds ?d) )
          (once (in_motion agent) )
          (hold (adjacent_side room_center front_left_corner ?d front_left_corner) )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?c1 - teddy_bear)
        (then
          (once (in ?c1 floor) )
          (hold (above ?c1 ?c1) )
          (once (not (is_setup_object ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockInTowerKnocked:golfball:yellow:dodgeball) 3 )
)
(:scoring
  (- (external-forall-maximize (- 10 )
    )
  )
)
)



(define (game game-id-457) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?p3 - wall)
      (in ?p3 ?p3)
    )
  )
)
(:constraints
  (and
    (forall (?f - game_object)
      (and
        (preference cubeBlockInBuilding
          (exists (?h - hexagonal_bin ?w1 ?b ?o - dodgeball ?b9 - game_object ?w1 - doggie_bed)
            (then
              (hold-while (and (not (or (agent_holds agent) (not (object_orientation ?w1 upright) ) ) ) (and (in_motion ?f) (not (equal_z_position green_golfball ?w1) ) (object_orientation ?f diagonal) ) ) (< 5 5) (not (agent_holds ?w1) ) )
              (once-measure (agent_holds ?f) (distance_side ?f front ?w1) )
              (hold (agent_holds ?w1) )
            )
          )
        )
        (preference otherObjectsOnDeskShelf
          (exists (?w2 - game_object ?d - dodgeball ?o4 - hexagonal_bin ?g - game_object)
            (at-end
              (< 2 10)
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?d - (either desktop dodgeball pyramid_block))
            (then
              (once (in_motion agent) )
              (hold (and (and (same_color ?f ?f) (broken ?f) (game_over ) ) (not (on ?f ?d) ) ) )
              (once (in_motion ?f) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (total-score) (count otherObjectsOnDeskShelf:dodgeball:pink) )
      (>= (total-time) 1 )
    )
  )
)
(:scoring
  (* 7 (count throwAttemptKnocksBlock:basketball:basketball) (+ (+ (count-overlapping cubeBlockInBuilding:pink) 20 )
      3
    )
    (count-once-per-external-objects cubeBlockInBuilding:yellow_cube_block)
    (+ 3 (* 2 (/ 5 1 ) )
    )
    0
    (count-once otherObjectsOnDeskShelf:beachball:red)
    (= 5 (count throwAttemptKnocksBlock:red:basketball) )
    4
    (count otherObjectsOnDeskShelf:dodgeball:dodgeball)
    (external-forall-minimize
      (count throwAttemptKnocksBlock:yellow)
    )
    (count otherObjectsOnDeskShelf:hexagonal_bin:blue_dodgeball)
  )
)
)



(define (game game-id-458) (:domain few-objects-room-v1)
(:setup
  (forall (?b ?d1 ?d ?c - ball ?w1 - (either top_drawer dodgeball))
    (game-conserved
      (agent_holds ?w1)
    )
  )
)
(:constraints
  (and
    (forall (?w1 - dodgeball ?d - curved_wooden_ramp)
      (and
        (preference blueObjectMovedToRoomCenter
          (then
            (hold (and (on agent ?d) (and (exists (?d - sliding_door) (not (in_motion ?d) ) ) ) ) )
            (hold (and (adjacent desk ?d) (and (adjacent room_center agent) (on ?d ?d) (agent_holds ?d) ) (not (toggled_on ?d) ) (in_motion ?d) ) )
            (once (in_motion ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (count blueObjectMovedToRoomCenter:golfball:pink) (total-score) )
    )
    (>= (total-score) (* 5 )
    )
    (or
      (not
        (<= (count blueObjectMovedToRoomCenter:book:red) 10 )
      )
      (or
        (or
          (and
            (>= (total-score) (count blueObjectMovedToRoomCenter:dodgeball:basketball) )
            (>= 15 (total-score) )
            (or
              (or
                (> (total-score) (total-time) )
              )
              (or
                (>= (total-time) 6 )
              )
            )
          )
          (not
            (>= (count-once-per-objects blueObjectMovedToRoomCenter:pink) 300 )
          )
        )
        (>= (count-same-positions blueObjectMovedToRoomCenter:golfball) (count-shortest blueObjectMovedToRoomCenter:pink:beachball) )
        (>= 2 (* 3 (* 2 (* (* (count-once-per-external-objects blueObjectMovedToRoomCenter:beachball) (/ (* (<= (count-once-per-objects blueObjectMovedToRoomCenter:pink) (count-once blueObjectMovedToRoomCenter:red:hexagonal_bin:golfball) )
                      3
                    )
                    (count blueObjectMovedToRoomCenter:beachball:green)
                  )
                )
                5
              )
            )
            3
            15
          )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball)
)
)



(define (game game-id-459) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - game_object ?h - dodgeball)
    (and
      (or
        (game-optional
          (in_motion ?h)
        )
        (game-conserved
          (exists (?p2 - blue_pyramid_block)
            (and
              (agent_holds ?p2)
            )
          )
        )
        (exists (?h - chair)
          (exists (?y - upside_down)
            (and
              (game-conserved
                (agent_holds ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference bigObjectThrownToBed
          (exists (?d - ball ?p ?p - chair)
            (then
              (once (not (in_motion ?p) ) )
              (hold-while (and (not (and (in_motion ?p) (not (not (exists (?c - (either cube_block top_drawer)) (touch ?c ?c) ) ) ) ) ) (not (or (in_motion ?p) (in_motion ?p) ) ) ) (not (adjacent room_center agent) ) (on ?p ?p) )
              (once (not (adjacent door ?p) ) )
              (hold-while (and (or (and (rug_color_under bed yellow) (in_motion ?p) (not (game_over ) ) ) ) (broken agent) ) (and (not (exists (?x - (either gray)) (not (adjacent ?p bed) ) ) ) (not (and (not (not (in ?p ?p) ) ) (< 0.5 (distance ?p ?p)) ) ) ) )
              (once (and (adjacent desk ?p) (in_motion ?p) ) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?c - pillow)
            (then
              (once (forall (?b - block) (and (not (same_color ?b ?c) ) (in_motion floor) (broken ?c) ) ) )
              (hold (in_motion ?c) )
              (once (touch ?c ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-objects thrownBallReachesEnd:yellow) (+ (count-once bigObjectThrownToBed:yellow_pyramid_block) 2 2 (- 3 (count thrownBallReachesEnd:blue_dodgeball) ) 50 10 )
    )
    5
  )
)
(:scoring
  (+ 2 (* (count thrownBallReachesEnd:side_table) (count thrownBallReachesEnd:golfball:green) )
  )
)
)



(define (game game-id-460) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - red_dodgeball ?o1 - curved_wooden_ramp)
    (and
      (game-conserved
        (or
          (between ?o1 ?o1 ?o1)
          (in_motion ?o1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?t - shelf)
      (and
        (preference ballThrownFromRug
          (exists (?r1 - golfball ?c - hexagonal_bin ?b4 - building)
            (then
              (hold (not (not (agent_holds ?b) ) ) )
              (hold (agent_holds ?t) )
              (hold (and (agent_holds ?b4) (in ?t ?t) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (+ (+ 30 5 )
        (count-once-per-objects ballThrownFromRug:dodgeball)
        (count-overlapping ballThrownFromRug:dodgeball)
        (* (* 5 (count ballThrownFromRug:pink) )
          (-
            (count-once-per-objects ballThrownFromRug:dodgeball)
            (count ballThrownFromRug:basketball)
          )
        )
        (count ballThrownFromRug:yellow_cube_block)
        9
      )
      (count ballThrownFromRug:dodgeball:rug)
    )
    2
  )
)
(:scoring
  (count ballThrownFromRug:beachball)
)
)



(define (game game-id-461) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?bl - dodgeball ?r1 - flat_block ?w1 - tall_cylindrical_block ?l2 - ball)
      (exists (?b - hexagonal_bin ?b3 - ball)
        (game-optional
          (in ?b3 ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?t - ball)
        (then
          (hold (not (and (equal_z_position bed ?t) (rug_color_under ?t purple) ) ) )
          (hold (not (or (and (not (on agent ?t) ) (in_motion ?t) ) (and (in_motion ?t) (forall (?c6 - (either desktop teddy_bear) ?o - (either desktop doggie_bed) ?d - (either laptop floor) ?d - teddy_bear ?h - ball) (agent_holds ?h) ) ) (and (is_setup_object blue) (rug_color_under ?t purple) (adjacent_side desk left ?t) (agent_holds ?t) ) ) ) )
          (once (equal_z_position ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (= (* (count blockOnBlockInTowerAtEnd:beachball:pink_dodgeball) )
        (count-once-per-objects blockOnBlockInTowerAtEnd:blue_pyramid_block)
      )
    )
  )
)
(:scoring
  (* (count blockOnBlockInTowerAtEnd:blue_cube_block) 3 30 )
)
)



(define (game game-id-462) (:domain medium-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (exists (?x ?x0 - yellow)
      (game-optional
        (adjacent door agent)
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?s - block)
        (then
          (once (not (<= (distance door ?s) (distance_side desk front_left_corner ?s)) ) )
          (hold (not (adjacent room_center ?s) ) )
          (once (agent_holds agent) )
          (once (in_motion ?s) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?o - curved_wooden_ramp)
        (then
          (once (in ?o agent) )
          (once (in_motion ?o) )
          (hold (not (and (not (or (in ?o ?o) (not (agent_holds ?o) ) ) ) (and (in_motion ?o) (in ?o ?o) ) ) ) )
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?c - wall ?b - pillow)
        (then
          (once (not (adjacent bed agent) ) )
          (hold (touch ?b ?b) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b - dodgeball)
        (at-end
          (not
            (or
              (not
                (not
                  (and
                    (adjacent ?b ?b)
                    (agent_holds ?b)
                    (agent_holds ?b)
                  )
                )
              )
              (and
                (and
                  (in_motion ?b)
                  (agent_crouches )
                )
                (in_motion ?b)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (total-score) (* (count binKnockedOver) 4 )
      )
      (< (count bookOnDeskShelf:yellow) (count otherObjectsOnDeskShelf:book:dodgeball) )
      (>= (count-once-per-objects throwToRampToBin:hexagonal_bin) (total-score) )
    )
    (>= 3 (count-once-per-objects binKnockedOver:yellow:blue_dodgeball) )
  )
)
(:scoring
  (- (count binKnockedOver:dodgeball) )
)
)



(define (game game-id-463) (:domain few-objects-room-v1)
(:setup
  (exists (?h - triangular_ramp)
    (game-conserved
      (in ?h ?h)
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?o - tall_cylindrical_block ?h - golfball)
        (then
          (hold (not (agent_holds ?h) ) )
          (once (object_orientation ?h upright) )
          (once-measure (or (on ?h ?h) (and (forall (?y ?y0 - (either diagonal) ?p1 - block) (agent_holds ?p1) ) (same_type ?h block) ) (and (agent_holds ?h) (and (not (and (on agent green_golfball) (in_motion ?h) ) ) (in_motion ?h) (on ?h ?h) (open ?h) (in ?h agent) (not (or (on north_wall ?h) (and (adjacent_side ?h front ?h) (on ?h ?h) ) ) ) ) (on agent ?h) ) (agent_holds rug) ) (distance desk ?h) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects towerFallsWhileBuilding:golfball) (count towerFallsWhileBuilding:dodgeball) )
  )
)
(:scoring
  (- (>= 1 8 )
  )
)
)



(define (game game-id-464) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - wall)
      (exists (?b2 - (either yellow_cube_block curved_wooden_ramp chair))
        (not
          (forall (?h - doggie_bed ?h - shelf)
            (game-conserved
              (on ?b2 ?b2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?o - golfball)
        (at-end
          (touch rug ?o)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* 1 (* (* (+ (- (count blocksInPlace:cube_block:blue_dodgeball) )
              (+ 30 (+ (count blocksInPlace:yellow_pyramid_block:golfball) (count-once-per-objects blocksInPlace:beachball) )
              )
            )
            (* (count-once-per-objects blocksInPlace:triangle_block) (count blocksInPlace:green) )
          )
          7
          (count blocksInPlace)
        )
      )
      (count blocksInPlace:pink_dodgeball)
    )
    (or
      (not
        (>= 3 20 )
      )
    )
    (>= (= (external-forall-minimize (count blocksInPlace:yellow_cube_block) ) (* (count blocksInPlace:blue_pyramid_block) (count blocksInPlace:dodgeball) )
      )
      2
    )
  )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-465) (:domain many-objects-room-v1)
(:setup
  (forall (?d - curved_wooden_ramp)
    (game-optional
      (on ?d desk)
    )
  )
)
(:constraints
  (and
    (forall (?c2 - hexagonal_bin ?h - flat_block)
      (and
        (preference dodgeballFromBlockToBin
          (then
            (once (in_motion top_drawer) )
            (once (in_motion ?h) )
            (hold (in_motion ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 8 )
    (>= 6 (count dodgeballFromBlockToBin:yellow) )
  )
)
(:scoring
  (+ (count dodgeballFromBlockToBin:blue_cube_block) 0 )
)
)



(define (game game-id-466) (:domain few-objects-room-v1)
(:setup
  (exists (?y ?y0 - (either upside_down diagonal) ?b - dodgeball)
    (exists (?l1 - teddy_bear ?t - game_object)
      (and
        (game-conserved
          (not
            (not
              (on ?b desk)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - game_object)
        (then
          (once (adjacent_side desk right desk) )
          (once (and (in ?c ?c) (agent_holds ?c) ) )
          (once (not (rug_color_under ?c yellow) ) )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference laptopAndBookInPlace
          (exists (?h ?h - doggie_bed)
            (then
              (hold (adjacent room_center ?h) )
              (hold-while (in_motion ?h) (and (not (and (and (faces ?h ?h) (equal_x_position desk ?h) (not (in_motion rug) ) (not (agent_holds ?h) ) ) (in ?h ?h) (exists (?g - (either curved_wooden_ramp dodgeball)) (in_motion ?g) ) ) ) (not (= (distance desk agent) (distance room_center ?h)) ) ) (and (and (adjacent room_center brown) (not (and (not (agent_holds ?h) ) ) ) ) (adjacent_side bed right ?h) ) (and (in_motion ?h) (not (not (agent_holds ?h) ) ) ) )
              (hold (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects laptopAndBookInPlace:beachball) (* 6 5 )
    )
    (>= (total-score) (count throwAttempt:blue_pyramid_block) )
  )
)
(:scoring
  (count-once-per-objects laptopAndBookInPlace:doggie_bed)
)
)



(define (game game-id-467) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (exists (?t2 - ball)
      (exists (?c - hexagonal_bin)
        (game-conserved
          (and
            (and
              (and
                (agent_holds bed)
                (agent_holds top_drawer)
              )
              (and
                (faces ?c ?t2)
                (agent_holds ?t2)
                (in_motion agent)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?c - (either desktop cube_block))
        (then
          (once (or (in_motion ?c) (in_motion ?c) ) )
          (once (adjacent desk ?c) )
          (once (exists (?d - (either ball pyramid_block)) (adjacent ?d ?d) ) )
          (once (not (in_motion ?c) ) )
          (hold (not (= (x_position ?c) (distance ?c ?c)) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (= 4 (total-time) )
  )
)
(:scoring
  (<= (count-once-per-objects blockInTowerKnocked:wall) (+ 4 (count blockInTowerKnocked) )
  )
)
)



(define (game game-id-468) (:domain few-objects-room-v1)
(:setup
  (forall (?w1 - (either cellphone cellphone))
    (exists (?c3 - doggie_bed ?d - cylindrical_block)
      (game-conserved
        (and
          (not
            (on ?d ?d)
          )
          (and
            (not
              (not
                (and
                  (touch ?w1 ?w1)
                  (agent_holds ?w1)
                )
              )
            )
            (and
              (in_motion ?w1)
              (not
                (agent_holds ?d)
              )
            )
          )
          (not
            (agent_holds floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - game_object)
        (then
          (hold (on ?b ?b) )
          (once (on ?b ?b) )
          (hold (and (in_motion ?b) (and (agent_holds ?b) (not (and (in_motion ?b) (not (in_motion agent) ) ) ) (adjacent ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure throwAttempt:red) (total-time) )
)
(:scoring
  (count-once-per-objects throwAttempt:green:purple)
)
)



(define (game game-id-469) (:domain many-objects-room-v1)
(:setup
  (exists (?b - (either cylindrical_block golfball))
    (game-conserved
      (on ?b agent)
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?w2 - game_object ?c - hexagonal_bin)
        (then
          (once (and (adjacent_side ?c right ?c) (< (distance room_center agent) (distance room_center bed)) ) )
          (hold-while (not (agent_holds floor) ) (and (and (and (agent_holds ?c) (exists (?l3 - desk_shelf ?bl - cube_block) (> (distance door ?bl) 0) ) (or (and (agent_holds ?c) (< 1 1) ) (game_over ) ) ) (same_object ?c ?c) ) (and (and (not (and (in_motion ?c) (on ?c ?c) ) ) (>= (distance desk ?c) (distance room_center rug)) ) (adjacent room_center ?c) ) ) )
          (once (agent_crouches ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?p3 - curved_wooden_ramp)
        (then
          (once (broken ?p3) )
          (once (in_motion ?p3) )
          (hold (forall (?b - hexagonal_bin) (above ?p3 ?p3) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 3 )
)
(:scoring
  (count-overlapping throwFromBehindChairsInBin:golfball)
)
)



(define (game game-id-470) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?d - block)
        (and
          (and
            (exists (?d - teddy_bear)
              (exists (?z ?z0 - (either right front))
                (and
                  (exists (?t - hexagonal_bin)
                    (game-optional
                      (is_setup_object ?t)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (and
                (in_motion ?d)
                (in ?d agent)
                (on ?d ?d)
                (exists (?h - hexagonal_bin ?t - (either bridge_block triangular_ramp) ?d - curved_wooden_ramp)
                  (in ?d ?d)
                )
              )
            )
          )
        )
      )
    )
    (forall (?s - ball)
      (forall (?h - (either credit_card pyramid_block) ?h - building ?b5 - block)
        (exists (?c3 - hexagonal_bin)
          (and
            (forall (?o1 - hexagonal_bin ?l3 - drawer ?t - hexagonal_bin)
              (game-conserved
                (forall (?z ?z0 - front_left_corner)
                  (in_motion ?s)
                )
              )
            )
            (forall (?z ?z0 - front_left_corner ?w - red_dodgeball)
              (and
                (and
                  (or
                    (not
                      (forall (?c2 - (either cylindrical_block yellow_cube_block) ?r2 - hexagonal_bin)
                        (and
                          (exists (?l - beachball)
                            (game-conserved
                              (not
                                (or
                                  (and
                                    (in_motion ?c3)
                                    (in_motion ?r2)
                                  )
                                  (touch agent ?w)
                                  (above ?s ?r2)
                                )
                              )
                            )
                          )
                          (forall (?d2 - shelf ?o - dodgeball ?l - curved_wooden_ramp)
                            (exists (?h - hexagonal_bin)
                              (and
                                (exists (?w2 - hexagonal_bin)
                                  (exists (?d - hexagonal_bin)
                                    (and
                                      (and
                                        (and
                                          (game-conserved
                                            (not
                                              (and
                                                (and
                                                  (agent_holds ?w2)
                                                  (adjacent bed ?s)
                                                  (agent_holds ?l)
                                                )
                                                (in_motion ?w)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (and
                      (game-conserved
                        (on ?s desktop)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?c - ball)
      (or
        (exists (?c ?b - shelf)
          (exists (?d - building)
            (and
              (exists (?h - block ?c3 ?c6 - hexagonal_bin)
                (exists (?b4 - cylindrical_block)
                  (exists (?b6 - doggie_bed)
                    (game-conserved
                      (rug_color_under agent gray)
                    )
                  )
                )
              )
              (forall (?d ?b3 ?h ?o2 - game_object)
                (game-optional
                  (not
                    (and
                      (agent_holds ?b)
                      (agent_crouches )
                    )
                  )
                )
              )
              (forall (?o - building ?z - front_left_corner ?t2 - (either triangle_block game_object))
                (exists (?o1 - wall ?b1 - dodgeball)
                  (or
                    (game-conserved
                      (in ?b1 ?b)
                    )
                    (exists (?c - block ?b - hexagonal_bin)
                      (exists (?w1 - building ?s - hexagonal_bin)
                        (forall (?t - cylindrical_block)
                          (forall (?l3 - wall)
                            (exists (?c1 - (either alarm_clock book desktop dodgeball))
                              (game-conserved
                                (rug_color_under ?l3 purple)
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (not
                        (not
                          (in ?t2 ?t2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (or
          (game-conserved
            (between ?c ?c ?c)
          )
          (and
            (and
              (and
                (and
                  (game-conserved
                    (in_motion ?c)
                  )
                  (and
                    (forall (?h - block)
                      (and
                        (forall (?c ?d - doggie_bed ?bl - shelf ?d - (either basketball cd cube_block lamp cd alarm_clock mug) ?r1 - triangular_ramp)
                          (forall (?h - hexagonal_bin ?b10 - dodgeball)
                            (game-conserved
                              (agent_holds ?h)
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (in ?c ?c)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?d - dodgeball ?h - chair ?b ?r1 - drawer)
        (then
          (once (in_motion ?b) )
          (once (and (agent_holds agent) (> 6 2) ) )
          (hold (exists (?o5 - chair) (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once ballThrownOntoTarget:yellow) (total-score) )
)
(:scoring
  (count ballThrownOntoTarget:blue_dodgeball)
)
)



(define (game game-id-471) (:domain medium-objects-room-v1)
(:setup
  (forall (?d1 - teddy_bear)
    (game-optional
      (equal_x_position ?d1 ?d1)
    )
  )
)
(:constraints
  (and
    (preference failedThrowToBin
      (exists (?d ?g - (either tall_cylindrical_block pyramid_block) ?b1 - block ?b2 - doggie_bed)
        (then
          (once (on ?b2 ?b2) )
          (hold (and (in ?b2 ?b2) (not (same_type ?b2 block) ) ) )
          (once (not (in_motion ?b2) ) )
        )
      )
    )
  )
)
(:terminal
  (> (>= (- (count failedThrowToBin:pink_dodgeball) )
      (- 3 )
    )
    (count failedThrowToBin:blue_dodgeball)
  )
)
(:scoring
  (count failedThrowToBin:hexagonal_bin)
)
)



(define (game game-id-472) (:domain many-objects-room-v1)
(:setup
  (exists (?d - building)
    (game-conserved
      (and
        (touch ?d ?d)
        (adjacent_side door back ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?h - (either alarm_clock bridge_block) ?db - pyramid_block)
        (then
          (hold (agent_holds ?db) )
          (once (and (not (is_setup_object ?db) ) (not (on ?db ?db) ) ) )
          (hold (and (and (and (agent_holds ?db) (on ?db ?db) ) (in ?db ?db) (in ?db ?db) ) (and (< 7 (distance desk agent)) (in_motion ?db) (agent_holds ?db) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count blindsOpened:yellow_cube_block) 3 )
    (> (external-forall-maximize (count blindsOpened:beachball:red) ) 5 )
  )
)
(:scoring
  (- 2 )
)
)



(define (game game-id-473) (:domain many-objects-room-v1)
(:setup
  (forall (?c1 - hexagonal_bin)
    (or
      (and
        (and
          (and
            (exists (?c - (either alarm_clock wall cube_block game_object) ?o - doggie_bed)
              (exists (?o - hexagonal_bin)
                (exists (?d - beachball)
                  (game-conserved
                    (in ?d ?d)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b9 - doggie_bed ?h - doggie_bed)
      (and
        (preference redDodgeballThrownToBin
          (exists (?b - cube_block)
            (at-end
              (not
                (game_start )
              )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?b - curved_wooden_ramp ?c4 - ball)
            (then
              (hold (not (not (and (agent_holds ?c4) (on ?h ?c4) ) ) ) )
            )
          )
        )
        (preference dodgeballThrownToBin
          (exists (?c2 - game_object)
            (then
              (hold (and (same_object ?c2 ?c2) (in ?h top_shelf) ) )
              (once (and (agent_holds ?h) (agent_holds ?h) ) )
              (once (not (in_motion ?c2) ) )
              (hold (and (and (and (exists (?b1 - cube_block) (and (on ?b1 ?c2) (in_motion desk) ) ) (adjacent_side desk back ?h front) ) (and (agent_holds ?c2) (< 1 (distance desk desk)) ) (in_motion ?c2) (and (opposite ?h bed) (and (agent_holds ?c2) (< (distance desk ?c2) 1) ) ) (not (agent_holds ?h) ) (not (in_motion rug) ) ) (and (and (in_motion ?h) (rug_color_under ?h gray) ) (agent_holds ?c2) ) (in_motion ?c2) (in_motion ?h) (touch ?c2 ?h) (same_color ?h ?h) (adjacent desk ?h) (in_motion ?h) (and (in_motion ?c2) (in agent ?c2) ) (not (same_type ?h ?c2) ) ) )
            )
          )
        )
      )
    )
    (preference dropAttempt
      (exists (?l2 - ball)
        (then
          (hold-while (agent_holds ?l2) (agent_holds ?l2) (< (distance side_table main_light_switch) (distance ?l2 ?l2)) )
          (once (and (agent_holds ?l2) (on ?l2 ?l2) ) )
          (once (on ?l2 ?l2) )
        )
      )
    )
  )
)
(:terminal
  (> (external-forall-maximize (* (external-forall-maximize (count dodgeballThrownToBin:red:hexagonal_bin) ) 5 )
    )
    (count throwKnocksOverBear:blue_dodgeball)
  )
)
(:scoring
  (* (count-same-positions dodgeballThrownToBin:side_table) (count throwKnocksOverBear:dodgeball:pink_dodgeball) )
)
)



(define (game game-id-474) (:domain medium-objects-room-v1)
(:setup
  (exists (?c6 - (either cylindrical_block beachball main_light_switch cube_block))
    (game-optional
      (on ?c6 ?c6)
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b ?h - ball ?b - (either key_chain floor) ?x - gray)
        (then
          (hold (>= 2 6) )
          (hold (not (and (agent_holds ?b) (and (not (and (touch ?b ?b) (on ?b ?b) ) ) (in_motion ?b) (and (agent_holds ?b) (in ?b ?b) ) ) ) ) )
          (once (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-time) )
)
(:scoring
  (* (count-once-per-objects blockPickedUp:yellow) (count blockPickedUp:green) )
)
)



(define (game game-id-475) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?t - dodgeball)
      (game-optional
        (not
          (not
            (touch ?t ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - hexagonal_bin)
        (at-end
          (and
            (exists (?r1 - hexagonal_bin ?l1 - hexagonal_bin)
              (in rug agent)
            )
            (not
              (in_motion ?b)
            )
          )
        )
      )
    )
    (preference throwMissesBin
      (exists (?ob - (either desktop cd))
        (then
          (once (and (agent_holds ?ob) (and (and (and (not (agent_holds pink) ) (and (in_motion ?ob) (exists (?b - (either wall flat_block floor)) (not (not (<= (distance ?ob ?ob) (distance ?b brown)) ) ) ) ) ) (rug_color_under ?ob green) ) (between ?ob ?ob ?ob) ) ) )
          (hold (and (not (in_motion ?ob) ) (in ?ob ?ob) (or (or (on ?ob ?ob) (equal_x_position bed ?ob) ) (in_motion agent) ) (agent_holds ?ob) (game_over ) (not (between ?ob ?ob ?ob) ) (and (and (adjacent ?ob ?ob) (agent_holds ?ob) ) (not (in_motion desk) ) ) (not (and (and (in ?ob agent) (on ?ob west_wall) ) (not (not (and (agent_holds ?ob) (and (or (adjacent desk ?ob) (agent_holds ?ob) ) (agent_holds ?ob) ) (adjacent_side bed back ?ob) ) ) ) ) ) (adjacent ?ob ?ob) (in agent ?ob) ) )
          (once (or (and (not (in agent ?ob) ) (not (in ?ob ?ob) ) ) (agent_holds ?ob) ) )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?c2 - ball)
        (then
          (once (not (not (in_motion ?c2) ) ) )
          (hold (touch ?c2 agent) )
          (hold (and (and (and (game_over ) (and (= (distance_side ?c2 front_left_corner ?c2) (distance door ?c2)) (agent_holds ?c2) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (count ballThrowAttempt:golfball) )
    (or
      (or
        (>= (* (count ballThrowAttempt:pink) (* 3 (* 20 10 )
            )
          )
          18
        )
        (or
          (> (count ballThrowAttempt:basketball) (* 10 3 )
          )
          (>= (* -30 10 )
            (* 3 (* 3 15 )
            )
          )
        )
      )
      (<= 10 (/ (* (count-once-per-objects ballThrownToWallToAgent:pink) (count-shortest ballThrownToWallToAgent:dodgeball) )
          1
        )
      )
    )
  )
)
(:scoring
  (count ballThrowAttempt:pink:blue_dodgeball)
)
)



(define (game game-id-476) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l4 - (either dodgeball blue_cube_block dodgeball) ?h - curved_wooden_ramp)
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - ball ?b - hexagonal_bin)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?b9 - teddy_bear ?b - hexagonal_bin)
            (at-end
              (and
                (on ?b ?b)
                (and
                  (or
                    (< (distance ?b ?b) 9)
                    (in ?b ?b)
                  )
                  (in_motion ?b)
                )
                (in_motion rug)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 4 (total-score) )
)
(:scoring
  (* (count-once-per-objects throwFromBehindChairsInBin:alarm_clock) (- (count-once throwFromBehindChairsInBin) )
    3
    (external-forall-maximize
      (count throwFromBehindChairsInBin:basketball)
    )
    (count-once throwFromBehindChairsInBin:golfball)
    4
    (* 3 1 6 )
  )
)
)



(define (game game-id-477) (:domain few-objects-room-v1)
(:setup
  (forall (?d - teddy_bear ?t2 - hexagonal_bin)
    (exists (?l3 - cube_block ?h - bridge_block)
      (exists (?x ?x0 ?x1 - brown)
        (game-conserved
          (in_motion ?t2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?h - hexagonal_bin)
        (at-end
          (or
            (in_motion ?h)
            (and
              (in_motion ?h)
              (touch ?h ?h)
            )
          )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?w2 - (either key_chain laptop main_light_switch alarm_clock) ?b - beachball ?o - wall)
        (then
          (hold (not (not (not (or (in ?o ?o) (and (not (adjacent room_center ?o) ) (agent_holds ?o) ) ) ) ) ) )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?c6 - (either side_table doggie_bed cd) ?o5 - ball)
        (then
          (once (and (on ?o5 ?o5) (not (or (< (distance ?o5 ?o5) (distance ?o5 ?o5)) (< (distance_side bed right ?o5) (distance ?o5 ?o5)) ) ) ) )
          (once (adjacent room_center ?o5) )
          (once (equal_z_position ?o5 ?o5) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< 10 (external-forall-maximize (count ballKnocksTeddy:beachball) ) )
  )
)
(:scoring
  (+ 30 (external-forall-maximize (* (* (count ballDroppedInBin:dodgeball) (count-once-per-objects ballDroppedInBin:pink_dodgeball) )
        (count throwGolfballToBin:hexagonal_bin:golfball:pink)
        (count-once-per-objects throwGolfballToBin:basketball)
      )
    )
  )
)
)



(define (game game-id-478) (:domain many-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (forall (?b1 - (either bridge_block dodgeball golfball))
      (forall (?d - (either basketball pencil hexagonal_bin))
        (exists (?l - ball)
          (game-optional
            (toggled_on ?b1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?p - (either dodgeball bridge_block))
        (then
          (hold-while (touch ?p ?p) (agent_holds ?p) (exists (?d - (either dodgeball tall_cylindrical_block)) (agent_holds ?d) ) )
          (once (in_motion ?p) )
          (once (in_motion ?p) )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?o4 - game_object)
        (then
          (once (is_setup_object ?o4) )
          (once (and (in ?o4 ?o4) (in_motion ?o4) ) )
          (once (and (agent_holds agent) (agent_holds ?o4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- 100 )
  )
)
(:scoring
  (* 4 (+ (* (+ (count towerFallsWhileBuilding:yellow) 3 )
        10
      )
      (* (+ (* (* 2 6 )
            (count-once-per-objects towerFallsWhileBuilding:basketball)
          )
          40
          (* 6 (count-once-per-objects towerFallsWhileBuilding:green:yellow) )
        )
        (count towerFallsWhileBuilding:cube_block)
        50
        (count towerFallsWhileBuilding:pink)
        (* (count towerFallsWhileBuilding:dodgeball) (count throwFromEdgeOfRug:golfball) )
        6
        (= 50 (external-forall-minimize (count towerFallsWhileBuilding:pink) ) )
        (* 6 (* (count towerFallsWhileBuilding:block:yellow:blue_cube_block) 3 (+ 0.5 (* (count towerFallsWhileBuilding:hexagonal_bin) 1 )
            )
            (count-longest throwFromEdgeOfRug:book)
            4
            (count-overlapping throwFromEdgeOfRug:purple)
            (- (count towerFallsWhileBuilding:golfball) )
          )
        )
        5
      )
    )
  )
)
)



(define (game game-id-479) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either floor dodgeball))
    (and
      (exists (?z ?z0 ?z1 - front_left_corner)
        (forall (?b9 - ball ?o - hexagonal_bin ?c - hexagonal_bin)
          (and
            (game-conserved
              (in_motion ?h)
            )
            (game-optional
              (exists (?c - dodgeball)
                (not
                  (and
                    (not
                      (not
                        (and
                          (agent_holds rug)
                          (or
                            (and
                              (and
                                (> (distance ?h agent) (distance ?c ?h))
                                (not
                                  (on ?h ?h)
                                )
                              )
                              (and
                                (in_motion ?c)
                                (in_motion ?h)
                                (on ?c ?h)
                              )
                            )
                            (in ?h floor)
                          )
                          (in_motion ?h)
                        )
                      )
                    )
                    (not
                      (not
                        (agent_holds ?h)
                      )
                    )
                  )
                )
              )
            )
            (and
              (game-conserved
                (and
                  (adjacent ?h ?c)
                  (in_motion ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - block)
        (then
          (once (agent_holds brown) )
          (hold-while (not (exists (?c - cube_block ?b - hexagonal_bin) (not (on ?b ?b) ) ) ) (not (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?r - block)
        (then
          (once (not (agent_holds ?r) ) )
          (hold (adjacent_side ?r right ?r) )
          (hold-while (and (not (and (agent_holds ?r) (not (in ?r ?r) ) ) ) (on ?r ?r) ) (agent_holds bed) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?t1 - teddy_bear)
        (then
          (hold (in_motion agent) )
          (once (same_color ?t1 ?t1) )
          (hold-while (in_motion blue) (on ?t1 ?t1) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* 4 (* (> 10 7 )
        15
      )
    )
  )
)
(:scoring
  (* (* 2 (count-measure objectMovedRoomSide:doggie_bed:white) )
    (* (external-forall-maximize (count objectMovedRoomSide:dodgeball) ) (count objectMovedRoomSide:dodgeball) (count-once-per-objects throwFromBehindChairsInBin:basketball) )
    (count beachballOnRug:blue_pyramid_block)
  )
)
)



(define (game game-id-480) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (forall (?t1 - pillow ?l - game_object)
      (and
        (preference dodgeballHitsBin
          (exists (?d2 - hexagonal_bin ?c2 - dodgeball ?o - hexagonal_bin)
            (at-end
              (not
                (and
                  (and
                    (and
                      (agent_holds ?l)
                    )
                    (in_motion ?l)
                  )
                  (not
                    (and
                      (in_motion ?o)
                      (between ?o ?l ?o)
                    )
                  )
                )
              )
            )
          )
        )
        (preference throwBallToBin
          (exists (?c - flat_block)
            (then
              (hold (or (not (same_color ?c ?l) ) (same_color agent ?l) ) )
              (once (on ?c ?l) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-minimize (count throwBallToBin:yellow) ) (count throwBallToBin:dodgeball:book:golfball) )
)
(:scoring
  (external-forall-maximize
    (count throwBallToBin:beachball)
  )
)
)



(define (game game-id-481) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - block)
    (and
      (forall (?d - pillow)
        (exists (?c - dodgeball)
          (game-conserved
            (not
              (and
                (not
                  (exists (?h - blinds ?c - beachball)
                    (and
                      (and
                        (= (distance desk ?d) (building_size bed) 5)
                        (< (distance bed ?c) (distance ?c ?c))
                        (is_setup_object rug)
                      )
                      (in ?l1 ?c)
                    )
                  )
                )
                (> 1 (distance door ?l1))
                (= 0.5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?o - hexagonal_bin ?g - hexagonal_bin ?b6 - block ?l1 - dodgeball)
        (then
          (hold (agent_holds ?l1) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?b5 - building ?bl ?b2 - hexagonal_bin)
        (then
          (once (adjacent ?b2 floor) )
          (hold (not (and (adjacent ?b2 ?bl) (not (in_motion ?b2) ) ) ) )
          (hold (agent_holds ?bl) )
        )
      )
    )
  )
)
(:terminal
  (>= 60 (count dodgeballAndBasketballInBin:block) )
)
(:scoring
  (count dodgeballAndBasketballInBin:basketball:green)
)
)



(define (game game-id-482) (:domain many-objects-room-v1)
(:setup
  (forall (?b - doggie_bed ?c - cylindrical_block)
    (game-conserved
      (adjacent ?c ?c)
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - bridge_block)
        (then
          (hold (is_setup_object ?c) )
          (hold-while (and (and (not (not (in ?c ?c) ) ) (and (not (in_motion ?c) ) (not (object_orientation ?c upside_down) ) ) (and (and (touch ?c ?c) (on ?c agent) (on ?c ?c) ) (and (and (and (toggled_on ?c) (same_object ?c ?c) ) (not (in_motion bed) ) ) (not (and (exists (?b6 - dodgeball ?h - ball ?s - dodgeball ?p - doggie_bed) (and (broken ?p) (and (not (and (agent_holds ?c) (and (in_motion floor) (and (and (in ?c ?p) (agent_crouches ) (and (on ?c ?p) (not (on ?p agent) ) ) ) (agent_holds ?p) ) ) ) ) (agent_holds ?p) ) ) ) (in_motion ?c) ) ) ) ) ) (not (and (in ?c ?c) (in_motion ?c) ) ) ) (on ?c agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (>= (+ 4 (count-once-per-objects blockFromRugToDesk:dodgeball) )
      (* (count-once-per-objects blockFromRugToDesk:green) (external-forall-minimize (+ (count-once-per-objects blockFromRugToDesk:golfball) )
        )
        2
        30
      )
    )
    (external-forall-maximize
      (external-forall-maximize
        (* (>= (count blockFromRugToDesk:dodgeball:golfball) (count blockFromRugToDesk:blue_dodgeball) )
          20
          (count-once-per-external-objects blockFromRugToDesk:pink)
        )
      )
    )
  )
)
(:scoring
  (* (count-once-per-objects blockFromRugToDesk:red) 3 )
)
)



(define (game game-id-483) (:domain many-objects-room-v1)
(:setup
  (exists (?c1 - (either pyramid_block) ?g - (either desktop cube_block))
    (and
      (game-conserved
        (and
          (agent_holds ?g)
          (adjacent bed ?g)
        )
      )
      (exists (?c1 - cube_block)
        (game-optional
          (in_motion ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?o - game_object)
        (then
          (once (agent_holds ?o) )
          (hold (same_type ?o ?o) )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?o - curved_wooden_ramp ?b2 - dodgeball)
        (then
          (hold (in_motion agent) )
          (once (in_motion ?b2) )
          (once (and (not (rug_color_under ?b2 tan) ) (agent_holds ?b2) ) )
        )
      )
    )
    (preference blockIncorrectlyPicked
      (exists (?h - dodgeball)
        (at-end
          (not
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (> 1 (+ 10 (* 3 )
    )
  )
)
(:scoring
  (count throwBallToBinOffObject:yellow_cube_block:beachball)
)
)



(define (game game-id-484) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?l4 - dodgeball)
      (and
        (exists (?o - hexagonal_bin ?h - hexagonal_bin)
          (game-conserved
            (in_motion ?l4)
          )
        )
        (exists (?l2 - hexagonal_bin)
          (game-conserved
            (and
              (not
                (exists (?d - hexagonal_bin)
                  (< 4 (distance room_center ?d))
                )
              )
              (agent_holds ?l4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?b1 - (either key_chain beachball))
        (at-end
          (and
            (in_motion bed)
            (and
              (and
                (on bed ?b1)
                (agent_crouches )
              )
              (not
                (and
                  (touch ?b1 ?b1)
                  (agent_holds ?b1)
                )
              )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin ?o3 - block)
      (and
        (preference blockPickedUp
          (exists (?c1 - desk_shelf)
            (then
              (once (and (same_type ?o3 ?c1) (forall (?h - building ?o3 - (either lamp cellphone doggie_bed)) (and (not (and (and (and (in ?c1 ?c1) (and (and (in_motion ?c1) (not (and (not (and (exists (?c1 - (either blue_cube_block basketball) ?d - dodgeball ?o - hexagonal_bin ?d - dodgeball) (agent_holds ?d) ) (agent_holds ?o3) ) ) (and (on ?o3 desk) (agent_holds floor) ) (in ?c1 ?o3) ) ) (exists (?y - (either upside_down) ?d - (either dodgeball key_chain)) (agent_holds ?d) ) ) (agent_holds ?c1) (agent_holds ?o3) ) ) (and (exists (?r1 - triangular_ramp) (is_setup_object ?o3) ) (in_motion agent) ) (< 8 (distance ?o3 ?c1)) ) (object_orientation ?o3 upright) (touch ?c1 ?c1) ) ) (or (agent_holds ?o3) (and (not (> (distance ?c1 ?o3) (distance room_center ?o3)) ) (same_color ?c1 bed) ) ) (not (in ?o3 ?c1) ) ) ) ) )
              (once (on ?o3 ?o3) )
              (once (not (agent_holds ?c1) ) )
              (hold (not (and (in_motion ?c1) (agent_holds ?c1) ) ) )
            )
          )
        )
      )
    )
    (forall (?o4 - dodgeball)
      (and
        (preference blockPlacedInBuilding
          (exists (?p - game_object ?g - (either key_chain cellphone))
            (then
              (once (not (on ?g ?g) ) )
              (hold-while (in_motion ?o4) (not (agent_holds ?o4) ) )
              (once (not (agent_holds ?o4) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (< (+ (count blockPlacedInBuilding:rug) )
      10
    )
  )
)
(:scoring
  (count matchingBuildingBuilt:golfball)
)
)



(define (game game-id-485) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (object_orientation desk upright)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?c - (either lamp book pillow) ?w - wall ?h - game_object)
        (then
          (hold (exists (?l2 - ball) (< 1 0) ) )
          (once (and (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> 5 2 )
      (>= (* (count throwFromEdgeOfRug:blue_dodgeball) (count throwFromEdgeOfRug:blue_dodgeball:blue_dodgeball) )
        3
      )
    )
    (>= 3 4 )
    (or
      (>= (count throwFromEdgeOfRug:purple) (count-once-per-external-objects throwFromEdgeOfRug:book) )
      (>= 2 (count throwFromEdgeOfRug:book) )
    )
  )
)
(:scoring
  (+ (- (count throwFromEdgeOfRug:blue_pyramid_block) )
    (- (* (* 3 (count throwFromEdgeOfRug:red:basketball) )
        (* 3 (>= (* (+ (count-once-per-objects throwFromEdgeOfRug:beachball:blue_dodgeball) (+ (* (* 6 180 )
                    300
                  )
                  5
                )
              )
              3
            )
            1
          )
        )
      )
    )
  )
)
)



(define (game game-id-486) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (game-optional
      (not
        (adjacent rug agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - ball ?h - building ?b ?h - game_object ?l - hexagonal_bin)
      (and
        (preference blockFromRugToDesk
          (exists (?x - orange ?y - (either diagonal sideways sideways))
            (then
              (once (in_motion agent) )
              (once (in_motion ?l) )
              (once (and (in_motion rug) (in_motion ?l) ) )
            )
          )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?o - cylindrical_block)
        (then
          (hold-while (in ?o ?o) (on ?o ?o) )
          (hold (in_motion desk) )
          (once (and (in_motion ?o) (and (not (adjacent desk ?o) ) (and (is_setup_object ?o) (and (broken ?o) (not (and (in ?o ?o) (agent_holds ?o) ) ) ) ) ) ) )
        )
      )
    )
    (preference throwFromDoorToBin
      (exists (?l2 - block)
        (then
          (once (adjacent_side ?l2 front ?l2) )
          (once (adjacent ?l2 ?l2) )
          (hold (in ?l2 ?l2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (or
        (>= 15 (total-score) )
      )
    )
  )
)
(:scoring
  (* 3 (count-once-per-objects baseBlockInTowerAtEnd) )
)
)



(define (game game-id-487) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o ?h ?h ?o ?o - beachball ?d - block)
      (game-conserved
        (adjacent_side door front_left_corner ?d left)
      )
    )
    (forall (?d - game_object)
      (exists (?b - desk_shelf ?c - (either alarm_clock))
        (exists (?w - hexagonal_bin)
          (and
            (and
              (exists (?h - building ?h - drawer)
                (forall (?h - hexagonal_bin)
                  (exists (?d - (either book blue_cube_block))
                    (forall (?z - (either front_left_corner) ?r2 - pink_dodgeball)
                      (exists (?h - dodgeball)
                        (game-conserved
                          (not
                            (in agent ?d)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (agent_holds ?c)
              )
            )
          )
        )
      )
    )
    (exists (?d - game_object)
      (and
        (forall (?b - game_object ?d - (either dodgeball book) ?d - hexagonal_bin ?x ?x0 - brown)
          (game-conserved
            (< 1 1)
          )
        )
        (and
          (game-conserved
            (above ?d ?d)
          )
        )
        (exists (?h - chair)
          (game-conserved
            (and
              (and
                (and
                  (not
                    (and
                      (not
                        (> 1 (distance_side door left ?d left))
                      )
                      (in_motion agent)
                      (in_motion ?d)
                      (agent_holds ?h)
                    )
                  )
                )
                (and
                  (and
                    (and
                      (in ?h ?h)
                      (agent_holds ?h)
                      (toggled_on ?h)
                    )
                    (not
                      (> 1 1)
                    )
                  )
                  (not
                    (not
                      (< (distance desk ?h) 1)
                    )
                  )
                  (agent_crouches )
                )
              )
              (agent_holds ?d)
              (game_start )
              (not
                (toggled_on ?h)
              )
              (same_color ?d agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b3 - curved_wooden_ramp ?d - cylindrical_block)
        (at-end
          (in_motion desk)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (* 25 (count dodgeballAndBasketballInBin:pink) 3 )
)
)



(define (game game-id-488) (:domain many-objects-room-v1)
(:setup
  (forall (?l - dodgeball)
    (exists (?f - hexagonal_bin ?p3 - golfball)
      (or
        (exists (?b - dodgeball)
          (and
            (exists (?h - dodgeball)
              (and
                (exists (?d2 - triangular_ramp)
                  (exists (?c4 - pyramid_block)
                    (exists (?o - dodgeball)
                      (and
                        (forall (?d - doggie_bed ?h - blue_pyramid_block)
                          (exists (?w - cube_block)
                            (and
                              (exists (?b - ball)
                                (game-optional
                                  (agent_holds ?d2)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (and
            (agent_holds desk)
            (= (distance ?p3 ?p3) 4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - tan_cube_block)
      (and
        (preference bookOnDeskShelf
          (exists (?h - wall ?b ?c4 ?b2 ?p ?b2 ?b ?t2 ?p1 ?c6 ?b - doggie_bed ?l - dodgeball)
            (then
              (once (not (in_motion top_drawer) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) 3 )
)
(:scoring
  (count bookOnDeskShelf:dodgeball)
)
)



(define (game game-id-489) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (exists (?p - beachball ?g - building ?o2 - dodgeball)
      (agent_holds ?o2)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?c - beachball)
        (then
          (once (adjacent room_center agent) )
          (once (not (in_motion ?c) ) )
          (hold (in ?c ?c) )
          (once (not (not (on ?c ?c) ) ) )
        )
      )
    )
    (forall (?x ?x0 ?x1 - pink ?b - dodgeball)
      (and
        (preference failedThrowToBin
          (exists (?b - building)
            (then
              (hold (on rug ?b) )
              (once (above ?b rug) )
              (once (and (on ?b ?b) (in_motion floor) (adjacent_side ?b right ?b) ) )
              (hold-while (not (adjacent_side door front ?b front) ) (and (adjacent desk ?b) (on ?b ?b) (is_setup_object ?b) (agent_holds ?b) (not (in_motion ?b) ) (not (and (and (or (>= 8 (distance desk ?b)) (and (in_motion ?b) (in_motion ?b) (and (agent_holds ?b) (adjacent ?b ?b) ) (and (in_motion ?b) (and (< 1 (distance ?b ?b)) (not (= (distance desk ?b) 4) ) ) (in_motion ?b) ) ) ) (in_motion ?b) ) (agent_holds ?b) (not (not (agent_holds ?b) ) ) (< (distance ?b agent) (distance ?b agent)) ) ) (is_setup_object ?b) (agent_holds ?b) (adjacent bed ?b) (agent_holds ?b) ) (in_motion ?b) )
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?p1 - wall)
        (at-end
          (and
            (in_motion ?p1)
            (and
              (agent_holds ?p1)
              (on ?p1 bed)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-maximize (+ (* (* -30 (count-once-per-objects objectThrownFromRug:green) )
            3
          )
          (count-once itemsHidingScreens:purple:beachball)
          (count-overlapping failedThrowToBin:beachball)
          (= (count-longest itemsHidingScreens:orange:blue_dodgeball) (* (count-once-per-objects failedThrowToBin:alarm_clock:dodgeball) 10 )
          )
          1
          (+ (count-same-positions failedThrowToBin:red) 1 (+ (+ (count objectThrownFromRug:pink_dodgeball) (count-once-per-objects failedThrowToBin:book:green) )
              4
            )
            (external-forall-maximize
              (count-increasing-measure objectThrownFromRug:pyramid_block:book)
            )
            10
            (* (* (+ (+ (* (count failedThrowToBin:yellow:green:beachball) (* 2 )
                    )
                    2
                    1
                    (* 3 (count-overlapping failedThrowToBin:golfball) )
                  )
                  (- (* 0 (= 3 )
                    )
                  )
                )
                2
                (* 4 (+ 1 (+ 10 3 )
                  )
                )
              )
              3
            )
            (count itemsHidingScreens:block)
          )
        )
      )
      (count-once failedThrowToBin:yellow_cube_block)
    )
    (>= 5 (external-forall-maximize (* (external-forall-maximize (count-once itemsHidingScreens:dodgeball) ) (* 3 (* 4 (count objectThrownFromRug:pyramid_block:rug) (= 3 15 )
            )
            (count objectThrownFromRug:beachball:cube_block)
          )
        )
      )
    )
  )
)
(:scoring
  (count-once objectThrownFromRug:red)
)
)



(define (game game-id-490) (:domain few-objects-room-v1)
(:setup
  (forall (?c3 - ball)
    (and
      (exists (?b - dodgeball)
        (game-optional
          (on ?b agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?w2 - dodgeball)
        (then
          (hold (in ?w2 floor) )
          (hold (agent_holds ?w2) )
          (once (or (in_motion ?w2) (and (not (on ?w2 ?w2) ) (in ?w2 ?w2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (count watchOnShelf:yellow_pyramid_block:dodgeball) (* 0.7 (- (external-forall-maximize (* (= 40 3 )
            (count watchOnShelf:yellow)
            (* (+ (* (* (count watchOnShelf:cube_block:beachball) 10 )
                  (count watchOnShelf:golfball)
                )
                (count-once-per-external-objects watchOnShelf:book:basketball)
                (count watchOnShelf:yellow)
                5
                (count watchOnShelf:purple)
                (* 6 10 )
              )
              (count-longest watchOnShelf:doggie_bed:beachball)
            )
          )
        )
        10
      )
    )
  )
)
(:scoring
  (count-longest watchOnShelf:alarm_clock)
)
)



(define (game game-id-491) (:domain few-objects-room-v1)
(:setup
  (forall (?c - chair ?d ?l1 ?b ?h - (either cube_block lamp cd))
    (game-optional
      (and
        (not
          (and
            (not
              (and
                (in_motion green)
                (adjacent desk ?d)
              )
            )
            (not
              (and
                (and
                  (agent_holds ?b)
                  (not
                    (or
                      (in_motion ?l1)
                      (on ?l1 ?b)
                    )
                  )
                )
                (touch ?d ?d)
              )
            )
            (and
              (not
                (<= 7 (distance ?b ?b))
              )
              (and
                (and
                  (and
                    (agent_holds ?b)
                    (and
                      (in_motion floor)
                      (toggled_on ?d)
                    )
                    (agent_holds ?d)
                  )
                  (agent_holds ?d)
                )
                (not
                  (and
                    (and
                      (not
                        (agent_holds ?d)
                      )
                      (agent_holds ?b)
                    )
                    (> (distance_side ?b front_left_corner ?b left) (distance_side desk right ?l1))
                    (adjacent door ?b)
                    (and
                      (agent_holds ?l1)
                      (and
                        (agent_holds rug)
                        (adjacent ?b bed)
                      )
                    )
                    (not
                      (not
                        (not
                          (not
                            (agent_holds ?h)
                          )
                        )
                      )
                    )
                    (and
                      (on ?b ?d)
                      (not
                        (same_type ?b pillow)
                      )
                      (agent_holds ?d)
                      (on ?h bed)
                    )
                    (not
                      (in ?b ?b)
                    )
                  )
                )
              )
            )
            (in_motion ?l1)
          )
        )
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?b - (either desktop pen pyramid_block))
        (then
          (once (in_motion ?b) )
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-once blocksInPlace) )
)
(:scoring
  (count-once-per-objects blocksInPlace:golfball)
)
)



(define (game game-id-492) (:domain few-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (or
      (game-conserved
        (agent_holds ?d)
      )
      (forall (?t2 - curved_wooden_ramp ?d - dodgeball)
        (exists (?l1 - (either cube_block teddy_bear curved_wooden_ramp laptop))
          (forall (?tb - chair)
            (exists (?l1 - hexagonal_bin)
              (game-optional
                (on ?d ?d)
              )
            )
          )
        )
      )
      (exists (?y - (either sideways upright))
        (game-optional
          (not
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?z - (either front back) ?o3 - block ?r - cylindrical_block)
        (at-end
          (not
            (in_motion desk)
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?t - drawer ?g - dodgeball)
        (then
          (hold (on ?g ?g) )
          (once (on ?g ?g) )
          (once (touch ?g ?g) )
        )
      )
    )
    (preference pillowMovedToRoomCenter
      (exists (?b1 - shelf ?d - hexagonal_bin)
        (then
          (hold (not (toggled_on agent) ) )
          (hold (in_motion ?d) )
          (hold (is_setup_object ?d) )
          (once (and (agent_holds ?d) (not (< 4 (distance ?d ?d)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 15 )
)
(:scoring
  (count throwOverRamp:pink:yellow)
)
)



(define (game game-id-493) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?c - yellow_cube_block)
        (then
          (hold (agent_holds ?c) )
          (once (in_motion ?c) )
          (once (not (and (not (and (exists (?w2 - ball) (and (in ?w2 ?w2) (above rug ?w2) ) ) (on ?c floor) ) ) (in_motion ?c) ) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?b - game_object)
        (then
          (once (not (in ?b ?b) ) )
          (once (not (adjacent ?b ?b) ) )
          (once (object_orientation bed diagonal) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 25 5 )
  )
)
(:scoring
  (count blockCorrectlyPicked:pink_dodgeball:dodgeball:yellow)
)
)



(define (game game-id-494) (:domain many-objects-room-v1)
(:setup
  (forall (?t1 - book ?b9 - block)
    (exists (?w1 ?b5 - hexagonal_bin ?f - game_object)
      (and
        (and
          (forall (?b9 - dodgeball)
            (game-conserved
              (on ?f bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c6 - dodgeball)
        (then
          (once (agent_holds ?c6) )
          (once-measure (not (in_motion agent) ) (distance green_golfball ?c6) )
          (once (on ?c6 ?c6) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?r2 - game_object)
        (at-end
          (agent_holds ?r2)
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?l4 - ball)
        (then
          (once (in ?l4 ?l4) )
          (once (in_motion ?l4) )
          (hold (in_motion ?l4) )
        )
      )
    )
    (preference throwOverRamp
      (exists (?c1 - hexagonal_bin)
        (then
          (once (agent_holds ?c1) )
          (hold-while (not (above blue ?c1) ) (in_motion ?c1) )
          (once (not (agent_holds ?c1) ) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?o5 - game_object)
        (at-end
          (not
            (in_motion ?o5)
          )
        )
      )
    )
  )
)
(:terminal
  (> 5 6 )
)
(:scoring
  (external-forall-minimize
    (count teddyBearHitsBall:yellow:white)
  )
)
)



(define (game game-id-495) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?h - desk_shelf)
        (then
          (hold (agent_holds ?h) )
          (hold-while (and (in_motion agent) (and (and (in ?h agent) (agent_holds ?h) ) (not (in ?h desk) ) ) ) (agent_holds ?h) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* 10 20 )
      15
    )
    (>= (count throwFromEdgeOfRug:hexagonal_bin:cube_block) (* (count-once throwFromEdgeOfRug:green) 10 )
    )
  )
)
(:scoring
  (count-once throwFromEdgeOfRug:yellow_pyramid_block)
)
)



(define (game game-id-496) (:domain few-objects-room-v1)
(:setup
  (exists (?d2 - cube_block ?r - building)
    (forall (?p1 - building)
      (exists (?bl - flat_block)
        (exists (?o - shelf)
          (and
            (and
              (forall (?l3 - wall)
                (game-conserved
                  (in_motion ?bl)
                )
              )
              (game-optional
                (on ?bl ?p1)
              )
              (game-optional
                (on bed ?p1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?o - curved_wooden_ramp)
        (then
          (once (and (in_motion ?o) (and (on ?o ?o) (in agent ?o) (not (and (not (exists (?g - doggie_bed) (not (touch ?o ?g) ) ) ) (exists (?c4 - building) (is_setup_object ?o) ) (agent_holds ?o) ) ) ) ) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?d1 ?d - wall)
        (then
          (once (and (not (> (distance door ?d1) 1) ) (in ?d ?d1) ) )
          (once (not (in_motion ?d1) ) )
          (once (and (and (agent_holds ?d) (rug_color_under ?d1 brown) ) (in_motion ?d1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownToRug:blue_pyramid_block:dodgeball:red) (count-once-per-objects ballRolledOnRampToRug:yellow:pyramid_block) )
)
(:scoring
  (+ 2 100 (* (count ballThrownToRug:pink_dodgeball) (count-once-per-objects ballThrownToRug:pink_dodgeball) )
    5
  )
)
)



(define (game game-id-497) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?o3 - ball ?d - (either flat_block doggie_bed))
        (game-optional
          (same_type ?d ball)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?l1 - golfball)
        (then
          (hold (touch ?l1 ?l1) )
          (once-measure (in_motion ?l1) (distance room_center ?l1) )
          (hold-while (or (in_motion ?l1) (and (agent_holds ?l1) (agent_holds agent) ) ) (in_motion ?l1) (and (not (and (and (and (agent_holds ?l1) (on ?l1 ?l1) ) (on ?l1 ?l1) (< 1 (distance room_center ?l1)) ) (not (in_motion ?l1) ) ) ) (in_motion rug) ) (not (and (and (and (or (not (< 4 (distance south_wall ?l1)) ) (not (exists (?b6 - dodgeball ?o3 ?h - hexagonal_bin) (agent_holds ?l1) ) ) ) (>= (distance ?l1 ?l1) (distance bed ?l1)) (not (not (touch ?l1 ?l1) ) ) (in_motion ?l1) (and (agent_holds bed) (object_orientation ?l1 sideways) ) (adjacent ?l1 ?l1) ) (agent_holds ?l1) ) (agent_holds ?l1) ) ) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?d - hexagonal_bin)
        (then
          (once (agent_holds ?d) )
          (once (adjacent ?d ?d) )
          (hold-while (on ?d ?d) (exists (?r ?c ?p ?h - ball ?b3 - chair) (and (or (not (agent_holds ?b3) ) (not (in_motion ?d) ) ) (above agent bed) ) ) (and (on ?d ?d) (above ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count-increasing-measure ballThrownToRug:blue_dodgeball) 3 )
  )
)
(:scoring
  (count ballThrownToRug:tall_cylindrical_block)
)
)



(define (game game-id-498) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - building)
    (game-conserved
      (agent_holds ?h)
    )
  )
)
(:constraints
  (and
    (forall (?t - game_object ?d - curved_wooden_ramp ?o2 - hexagonal_bin ?b - cube_block ?d ?l - (either golfball))
      (and
        (preference matchingBuildingBuilt
          (exists (?c - doggie_bed)
            (then
              (hold (not (agent_holds ?l) ) )
              (hold-while (agent_holds ?c) (and (in_motion agent) (< (distance ?d ?c) 1) (exists (?g - block) (and (in ?l north_wall) (and (on ?c ?l) (in_motion ?c) ) (not (and (in ?g ?d) (open ?l) ) ) ) ) ) )
              (hold (agent_holds agent) )
            )
          )
        )
        (preference objectsHidden
          (exists (?b3 - game_object)
            (at-end
              (agent_holds bed)
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?o - dodgeball)
            (then
              (once-measure (agent_holds ?c) (distance room_center ?c) )
              (once (agent_holds agent) )
              (hold (agent_holds ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects objectsHidden:red:basketball) )
)
(:scoring
  (count matchingBuildingBuilt:beachball)
)
)



(define (game game-id-499) (:domain few-objects-room-v1)
(:setup
  (exists (?d - ball)
    (and
      (exists (?b - teddy_bear ?c - (either dodgeball book basketball) ?h - ball ?p - chair)
        (forall (?r - hexagonal_bin)
          (exists (?b7 - hexagonal_bin)
            (and
              (forall (?tb ?o1 - hexagonal_bin)
                (and
                  (game-conserved
                    (and
                      (in_motion ?tb)
                      (agent_holds ?o1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c - block ?h - building)
        (then
          (once (not (and (agent_holds ?h) (= 0.5 (distance ?h ?h)) ) ) )
          (hold-while (in_motion ?h) (same_type ?h ?h) )
          (once (not (and (in_motion ?h) (in_motion ?h) (not (agent_holds ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (+ 5 (count dodgeballsInPlace:yellow) )
        (total-time)
      )
    )
  )
)
(:scoring
  (* (count dodgeballsInPlace:rug) (count-once dodgeballsInPlace:hexagonal_bin) )
)
)



(define (game game-id-500) (:domain few-objects-room-v1)
(:setup
  (exists (?b - shelf)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?w - ball)
        (then
          (once (in_motion ?w) )
          (once (and (in_motion ?w) (and (agent_holds desk) (agent_holds rug) (not (in ?w ?w) ) (not (not (and (on agent ?w) (agent_holds agent) ) ) ) ) ) )
          (hold-while (on ?w ?w) (in_motion agent) )
        )
      )
    )
    (preference blindsOpened
      (exists (?bl ?o2 ?w1 ?ob ?l ?p - ball)
        (then
          (once (adjacent ?o2 ?bl) )
          (hold-while (and (not (not (in_motion ?w1) ) ) (agent_holds ?l) ) (and (in_motion agent) (and (agent_holds ?bl) (object_orientation ?l upside_down) ) ) )
        )
      )
    )
    (forall (?c - dodgeball ?b10 - ball ?l3 - hexagonal_bin ?o1 - hexagonal_bin)
      (and
        (preference throwFromDoorToBin
          (exists (?c - (either golfball golfball key_chain) ?h - (either mug cube_block))
            (at-end
              (agent_holds ?o1)
            )
          )
        )
      )
    )
    (preference blockToBinFromRug
      (exists (?h - dodgeball ?o1 - ball)
        (then
          (once (and (touch top_drawer ?o1) (adjacent ?o1 ?o1) ) )
          (once (and (touch ?o1 agent) (adjacent ?o1 ?o1) ) )
          (hold (between ?o1 agent ?o1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 1 30 )
      (>= 8 (total-time) )
    )
    (> (count pinkObjectMovedToRoomCenter:doggie_bed) (count-once-per-objects blindsOpened:basketball) )
    (>= (+ (* (* 3 (* (count pinkObjectMovedToRoomCenter:purple:blue_pyramid_block) 50 )
            5
          )
          (+ (count-longest pinkObjectMovedToRoomCenter:green) (* (count throwFromDoorToBin:purple) (count-once-per-objects pinkObjectMovedToRoomCenter:beachball) )
          )
        )
        2
      )
      (* 0 3 )
    )
  )
)
(:scoring
  (count-once-per-objects blindsOpened:yellow:pink)
)
)



(define (game game-id-501) (:domain few-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin)
    (game-optional
      (on ?g ?g)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference objectOnBed
          (then
            (once (not (not (not (not (not (and (not (in_motion ?b) ) (and (in_motion ?b) ) ) ) ) ) ) ) )
            (hold (agent_holds floor) )
            (once (and (on ?b ?b) (not (and (in_motion agent) (and (faces ?b ?b) (not (agent_holds ?b) ) ) (object_orientation ?b sideways) ) ) ) )
          )
        )
        (preference dodgeballHitsBin
          (exists (?b3 - hexagonal_bin ?d - (either golfball golfball))
            (then
              (once (adjacent desk ?d) )
              (hold (not (and (and (agent_holds ?d) (> (x_position ?d) (distance desk ?d)) ) (agent_holds ?b) (agent_holds ?d) (and (not (not (not (and (and (and (same_color ?d ?b) (exists (?r2 - beachball ?h - chair) (not (and (or (in_motion ?h) (not (in_motion ?d) ) ) (in ?h ?d) ) ) ) ) (on ?b ?d) ) (not (agent_holds ?d) ) ) ) ) ) (and (object_orientation ?b sideways) (object_orientation ?d upright) ) (not (same_color ?d agent) ) ) ) ) )
              (once (not (not (not (and (in_motion ?b) (in ?d ?d) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 1 )
)
(:scoring
  (+ 6 (count dodgeballHitsBin:dodgeball) )
)
)



(define (game game-id-502) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - game_object)
    (forall (?w2 - chair)
      (and
        (exists (?h - hexagonal_bin)
          (game-optional
            (on ?w2 desk)
          )
        )
        (exists (?c - (either golfball teddy_bear))
          (game-conserved
            (agent_holds agent)
          )
        )
        (game-optional
          (in ?b ?w2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 - hexagonal_bin ?d - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?g - cube_block)
            (then
              (once (opposite ?d ?g) )
              (hold (< 7 1) )
              (once (on ?d ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-maximize (count-once-per-objects throwAttempt:green) ) )
)
(:scoring
  (count-once-per-objects throwAttempt:beachball)
)
)



(define (game game-id-503) (:domain few-objects-room-v1)
(:setup
  (exists (?d - blue_pyramid_block)
    (game-conserved
      (> (distance_side ?d back ?d) 1)
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?s - game_object ?d - (either dodgeball beachball))
        (then
          (once (agent_holds ?d) )
          (once (not (or (on ?d rug) (agent_holds ?d) ) ) )
          (once (and (touch rug ?d) (and (in_motion ?d) (or (and (on ?d ?d) (on ?d ?d) ) (and (in_motion ?d) (in_motion ?d) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (external-forall-minimize (count-once-per-objects objectsHidden:dodgeball:beachball) ) )
)
(:scoring
  (count-once-per-objects objectsHidden:blue_cube_block)
)
)



(define (game game-id-504) (:domain medium-objects-room-v1)
(:setup
  (forall (?b8 - doggie_bed ?h - hexagonal_bin)
    (game-conserved
      (and
        (in ?h ?h)
        (on ?h ?h)
        (< 4 10)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?o4 - (either bridge_block cube_block))
        (at-end
          (exists (?t2 - hexagonal_bin)
            (in_motion agent)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count cubeThrownToBin:dodgeball:doggie_bed) )
)
(:scoring
  (* (count-once-per-objects cubeThrownToBin:yellow:yellow) (count-once-per-objects cubeThrownToBin:basketball:cube_block) )
)
)



(define (game game-id-505) (:domain many-objects-room-v1)
(:setup
  (exists (?o - curved_wooden_ramp)
    (exists (?b - hexagonal_bin ?d - cube_block ?r - ball)
      (game-conserved
        (open ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?x ?x0 ?x1 - purple)
        (at-end
          (broken top_shelf)
        )
      )
    )
  )
)
(:terminal
  (< (total-time) (external-forall-minimize (+ 2 (- 10 )
      )
    )
  )
)
(:scoring
  (count redDodgeballThrownToBin:beachball:doggie_bed)
)
)



(define (game game-id-506) (:domain few-objects-room-v1)
(:setup
  (exists (?o4 - triangular_ramp ?b - cube_block)
    (exists (?o3 - doggie_bed ?w - desk_shelf)
      (forall (?d - dodgeball ?p3 - dodgeball ?f - drawer)
        (not
          (not
            (and
              (exists (?c2 - cube_block)
                (exists (?b5 - building ?b - dodgeball)
                  (forall (?b6 - dodgeball)
                    (game-conserved
                      (agent_holds ?f)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b10 ?o - triangular_ramp ?o4 ?p1 ?h - blue_cube_block ?db - (either tall_cylindrical_block cube_block) ?f ?c - (either golfball desktop) ?y ?y0 ?y1 - (either upside_down))
        (at-end
          (< 1 (distance desk ?c))
        )
      )
    )
    (forall (?d - wall ?db - triangular_ramp)
      (and
        (preference thrownBallReachesEnd
          (then
            (hold (in ?db bed) )
            (once (not (in ?db ?db) ) )
            (hold-while (adjacent ?db ?db) (in_motion ?db) )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once thrownBallReachesEnd:block) (total-score) )
)
(:scoring
  (* 40 (+ 2 20 )
    2
  )
)
)



(define (game game-id-507) (:domain many-objects-room-v1)
(:setup
  (forall (?b6 - (either golfball alarm_clock))
    (game-conserved
      (agent_holds ?b6)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - hexagonal_bin ?g - teddy_bear ?h - dodgeball)
        (then
          (hold-while (not (or (agent_holds desk) (same_color bed ?h) ) ) (and (adjacent ?h ?h) (adjacent desk ?h) ) )
          (once (exists (?d - ball ?s ?o ?d ?h - dodgeball) (in_motion ?h) ) )
          (once (and (exists (?c - dodgeball) (< 8 (distance rug ?h)) ) (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (= 2 (count-once-per-objects blockInTowerKnockedByDodgeball:pink_dodgeball) )
  )
)
(:scoring
  (count-shortest blockInTowerKnockedByDodgeball:red)
)
)



(define (game game-id-508) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (game-conserved
      (on ?d ?d)
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?d - ball)
        (then
          (once (in ?d desk) )
          (hold (in_motion pink) )
          (once (>= 2 1) )
        )
      )
    )
    (preference throwToBin
      (exists (?l - (either doggie_bed golfball))
        (then
          (hold (and (agent_holds ?l) (adjacent_side room_center back ?l) (forall (?c3 ?d ?b7 - (either golfball alarm_clock) ?h - hexagonal_bin) (agent_holds ?h) ) ) )
          (hold (in_motion ?l) )
          (hold (in_motion ?l) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (* (* (count-once-per-objects binKnockedOver) (count-once throwToBin:pink) 5 (* (count binKnockedOver:doggie_bed) (* (count-once-per-objects throwToBin:blue_dodgeball:dodgeball) (* (count-once throwToBin:dodgeball) (count binKnockedOver:basketball) )
        )
      )
    )
    (count binKnockedOver:beachball)
  )
)
)



(define (game game-id-509) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (>= (distance room_center floor) 1)
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?c - ball)
        (then
          (once-measure (< (distance_side room_center left ?c) 1) (distance bed ?c) )
          (hold-while (and (in_motion ?c) (not (and (adjacent room_center ?c) (agent_holds ?c) ) ) ) (exists (?b - game_object ?d - building) (not (not (same_object ?c ?c) ) ) ) (object_orientation ?c upright) )
          (hold (or (in_motion ?c) (on ?c ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 20 (+ (* (count dodgeballHitsBin:basketball:yellow) (- (external-forall-maximize (count-once dodgeballHitsBin:hexagonal_bin) ) )
        (count-once-per-objects dodgeballHitsBin:purple)
        (count-once-per-external-objects dodgeballHitsBin:yellow:green:top_drawer)
        7
        5
      )
      (+ (count dodgeballHitsBin:golfball:blue_dodgeball) (count-once-per-objects dodgeballHitsBin:dodgeball:dodgeball) )
    )
  )
)
(:scoring
  (count dodgeballHitsBin:red)
)
)



(define (game game-id-510) (:domain many-objects-room-v1)
(:setup
  (forall (?b5 - shelf ?b - doggie_bed)
    (game-conserved
      (and
        (exists (?b - wall ?r2 - shelf)
          (same_object ?b ?r2)
        )
        (in_motion agent)
        (not
          (and
            (not
              (adjacent south_wall ?b)
            )
            (not
              (on ?b rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?o - cube_block)
        (at-end
          (in_motion ?o)
        )
      )
    )
    (preference throwAttempt
      (exists (?p - curved_wooden_ramp)
        (at-end
          (faces agent ?p)
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?g - wall)
        (then
          (hold-while (equal_z_position desk ?g) (and (and (agent_holds ?g) (and (and (in_motion rug) (in_motion ?g) ) (not (and (touch ?g ?g) (same_object ?g ?g) ) ) ) ) (touch ?g rug) ) )
          (hold (on desk ?g) )
          (once (same_object ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:basketball) (count-once throwAttempt:pink:blue_pyramid_block) )
)
(:scoring
  (= (+ 10 (count-once-per-external-objects dodgeballsInPlace:basketball) )
    (count dodgeballsInPlace:block)
  )
)
)



(define (game game-id-511) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - cylindrical_block)
      (and
        (exists (?p - hexagonal_bin)
          (game-conserved
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?h - hexagonal_bin)
        (then
          (hold (and (not (< (distance ?h ?h) 2) ) (on ?h ?h) ) )
          (once (in_motion ?h) )
          (once (on ?h ?h) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (<= (* (count-once-per-objects blockFromRugToDesk) (+ (count blockFromRugToDesk:dodgeball) (count blockFromRugToDesk:blue_cube_block) (* (count blockFromRugToDesk:dodgeball) (+ 30 (external-forall-maximize (- 2 )
            )
            (count blockFromRugToDesk:blue_dodgeball)
          )
        )
      )
    )
    20
  )
)
(:scoring
  (count blockFromRugToDesk)
)
)



(define (game game-id-512) (:domain medium-objects-room-v1)
(:setup
  (or
    (game-optional
      (game_start )
    )
    (exists (?l2 - (either dodgeball cube_block game_object cube_block yellow_cube_block blue_cube_block mug))
      (forall (?o5 - chair ?b ?d - ball)
        (exists (?d - building ?l3 - dodgeball ?w - golfball)
          (and
            (exists (?c - dodgeball)
              (game-conserved
                (adjacent_side ?c front top_drawer)
              )
            )
            (game-optional
              (and
                (touch ?d floor)
                (not
                  (and
                    (on ?l2 ?l2)
                    (not
                      (adjacent door ?w)
                    )
                    (agent_holds desk)
                    (not
                      (in ?b ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference ballThrownFromDoor
          (exists (?h - dodgeball)
            (then
              (once (on agent ?b) )
              (once (in_motion ?h) )
              (hold (in_motion ?h) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d - cube_block)
        (then
          (once (and (not (and (agent_holds ?d) (agent_holds ?d) ) ) (in_motion ?d) ) )
          (hold (same_color ?d ?d) )
          (hold (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= 5 (total-score) )
      (or
        (>= (count throwFromBehindChairsInBin:pink:book) 2 )
        (or
          (and
            (>= (total-score) 3 )
            (<= (count throwFromBehindChairsInBin:purple) (* (count throwFromBehindChairsInBin:orange) 4 (count-longest throwFromBehindChairsInBin:basketball) (* (* (count ballThrownFromDoor:alarm_clock:basketball) 10 )
                  (* 12 (count ballThrownFromDoor:yellow) )
                  (count-unique-positions ballThrownFromDoor:beachball)
                  (count ballThrownFromDoor:basketball)
                )
                300
                (+ (count ballThrownFromDoor:hexagonal_bin) (count-once-per-objects ballThrownFromDoor:yellow) )
              )
            )
          )
          (>= 180 10 )
        )
      )
      (>= (* (count-once throwFromBehindChairsInBin:yellow_cube_block:beachball) (* (/ 5 6 ) (* (count ballThrownFromDoor:hexagonal_bin) )
          )
        )
        (total-score)
      )
    )
  )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-513) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?h - hexagonal_bin ?d - shelf)
    (forall (?b - doggie_bed ?c - pillow)
      (game-conserved
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone hexagonal_bin))
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?x ?x0 ?x1 - green ?c3 - hexagonal_bin)
            (then
              (once (or (and (rug_color_under ?h purple) (on ?h ?c3) ) (not (not (in_motion ?h) ) ) ) )
              (hold-while (agent_holds ?c3) (adjacent ?h ?h) )
              (once (agent_holds bed) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?b1 - cube_block)
        (then
          (once (in_motion ?b1) )
          (once (in_motion ?b1) )
          (once (in_motion ?b1) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (count throwAttempt:dodgeball:blue_dodgeball) )
)
(:scoring
  (+ 1 4 )
)
)



(define (game game-id-514) (:domain many-objects-room-v1)
(:setup
  (exists (?b - dodgeball)
    (exists (?o2 - hexagonal_bin)
      (exists (?h - hexagonal_bin)
        (forall (?b6 - wall)
          (forall (?ob - (either book cd dodgeball))
            (and
              (game-conserved
                (in_motion ?b6)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?d - hexagonal_bin)
        (then
          (once (on ?d ?d) )
          (hold (in ?d ?d) )
          (once (< 10 7) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 1 )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:blue_dodgeball)
)
)



(define (game game-id-515) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - cube_block ?r - game_object)
    (exists (?s - building)
      (game-conserved
        (and
          (agent_holds rug)
          (not
            (< 1 (distance ?r ?r))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?b - hexagonal_bin ?d ?b - cylindrical_block)
        (then
          (once (not (and (and (>= 1 10) (adjacent door ?b) ) (adjacent ?b ?b) ) ) )
          (once (in ?d ?d) )
          (hold (adjacent room_center ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count throwBallToDoggieBedOffWall:pink:red:pyramid_block) )
)
(:scoring
  (count-longest throwBallToDoggieBedOffWall:golfball)
)
)



(define (game game-id-516) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?l1 - cube_block)
        (and
          (and
            (game-conserved
              (in ?l1 ?l1)
            )
          )
          (exists (?s - game_object)
            (and
              (and
                (and
                  (forall (?b - (either hexagonal_bin dodgeball) ?b - cube_block ?b - chair)
                    (and
                      (game-optional
                        (in_motion ?l1)
                      )
                    )
                  )
                  (game-conserved
                    (on ?s ?s)
                  )
                  (game-optional
                    (not
                      (<= (distance room_center ?l1) (distance east_sliding_door ?l1))
                    )
                  )
                )
                (game-conserved
                  (between agent ?s ?s)
                )
                (not
                  (and
                    (and
                      (forall (?p - game_object)
                        (game-conserved
                          (and
                            (not
                              (agent_holds ?s)
                            )
                            (and
                              (opposite agent agent)
                              (exists (?b - (either main_light_switch laptop) ?o1 - red_pyramid_block)
                                (in_motion ?l1)
                              )
                              (and
                                (not
                                  (exists (?b4 - hexagonal_bin)
                                    (agent_holds ?p)
                                  )
                                )
                                (in ?l1 ?l1)
                                (and
                                  (faces ?l1 ?p)
                                  (and
                                    (in_motion ?s)
                                    (and
                                      (agent_holds ?p)
                                      (not
                                        (in_motion ?p)
                                      )
                                    )
                                    (in_motion ?s)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (or
                        (and
                          (and
                            (and
                              (game-conserved
                                (not
                                  (not
                                    (touch ?s ?l1)
                                  )
                                )
                              )
                            )
                            (not
                              (and
                                (exists (?x - blue ?f - teddy_bear)
                                  (exists (?r - game_object ?l - cube_block)
                                    (and
                                      (and
                                        (game-conserved
                                          (not
                                            (touch top_shelf ?l)
                                          )
                                        )
                                        (and
                                          (and
                                            (exists (?g - dodgeball ?h - hexagonal_bin)
                                              (game-optional
                                                (in_motion agent)
                                              )
                                            )
                                            (exists (?o - triangular_ramp)
                                              (exists (?b - game_object)
                                                (game-conserved
                                                  (in_motion ?f)
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (game-conserved
                                          (and
                                            (same_object ?l ?s)
                                            (adjacent_side ?l1 front ?s)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                                (exists (?b - dodgeball ?h - wall ?d - hexagonal_bin ?h - chair)
                                  (and
                                    (exists (?b - hexagonal_bin)
                                      (exists (?o - blinds)
                                        (game-conserved
                                          (in_motion blue)
                                        )
                                      )
                                    )
                                    (forall (?s - hexagonal_bin)
                                      (game-conserved
                                        (on ?l1 ?h)
                                      )
                                    )
                                    (and
                                      (game-conserved
                                        (not
                                          (in ?h ?h)
                                        )
                                      )
                                      (not
                                        (game-optional
                                          (and
                                            (in ?s ?s)
                                            (in ?h ?h)
                                          )
                                        )
                                      )
                                      (exists (?h - (either cellphone doggie_bed))
                                        (game-conserved
                                          (and
                                            (and
                                              (adjacent_side bed left ?s)
                                              (same_object ?h ?s)
                                            )
                                            (and
                                              (adjacent room_center ?s)
                                              (on ?l1 ?l1)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?d - (either triangle_block bridge_block laptop))
                            (exists (?d - ball ?h - (either book cd))
                              (not
                                (exists (?d - hexagonal_bin)
                                  (forall (?c - (either dodgeball dodgeball pillow pen cd bridge_block doggie_bed))
                                    (forall (?b1 ?b - dodgeball)
                                      (forall (?d - (either flat_block pillow tall_cylindrical_block))
                                        (game-optional
                                          (not
                                            (agent_holds agent)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (and
                            (not
                              (game-optional
                                (> (distance ?s ?s) (distance desk ?l1))
                              )
                            )
                            (and
                              (exists (?c3 - (either dodgeball cylindrical_block))
                                (game-conserved
                                  (in ?c3 ?c3)
                                )
                              )
                            )
                          )
                        )
                        (and
                          (exists (?p - yellow_pyramid_block)
                            (forall (?b7 - triangular_ramp ?b - curved_wooden_ramp)
                              (forall (?b - curved_wooden_ramp ?h - triangular_ramp ?w - dodgeball)
                                (exists (?s - hexagonal_bin)
                                  (forall (?l2 - block ?b - curved_wooden_ramp)
                                    (game-optional
                                      (and
                                        (< (distance rug ?p) 0.5)
                                        (in_motion ?p)
                                        (and
                                          (is_setup_object agent)
                                          (agent_holds ?l1)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (exists (?c4 ?d ?h ?d ?r2 ?bl - ball)
                            (exists (?x ?x0 - yellow)
                              (and
                                (game-conserved
                                  (and
                                    (and
                                      (in_motion ?h)
                                      (agent_holds ?r2)
                                    )
                                    (adjacent ?c4 ?bl)
                                  )
                                )
                                (game-conserved
                                  (in_motion ?bl)
                                )
                              )
                            )
                          )
                        )
                        (and
                          (game-conserved
                            (in_motion bed)
                          )
                        )
                      )
                      (game-optional
                        (not
                          (in_motion ?s)
                        )
                      )
                      (game-conserved
                        (not
                          (adjacent_side door left ?s)
                        )
                      )
                      (game-optional
                        (in_motion ?s)
                      )
                    )
                    (and
                      (exists (?d - dodgeball)
                        (game-conserved
                          (in_motion ?l1)
                        )
                      )
                      (game-conserved
                        (in_motion ?l1)
                      )
                    )
                    (game-optional
                      (touch ?l1 ?l1)
                    )
                  )
                )
              )
              (and
                (exists (?b1 - block)
                  (and
                    (game-conserved
                      (> (distance rug ?b1) (distance room_center top_drawer))
                    )
                    (game-conserved
                      (and
                        (not
                          (not
                            (on ?l1 ?b1)
                          )
                        )
                        (same_color ?b1 ?l1)
                      )
                    )
                    (forall (?db - beachball)
                      (game-conserved
                        (and
                          (agent_holds ?db)
                          (on ?s bed)
                        )
                      )
                    )
                  )
                )
              )
              (forall (?b1 - chair)
                (game-optional
                  (not
                    (in ?b1 ?b1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?o4 - (either pillow cellphone) ?z - (either left right right) ?d - ball)
        (then
          (once (not (agent_holds ?d) ) )
          (once (on ?d ?d) )
          (hold (not (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once throwObjectToBin:pink_dodgeball:green) )
)
(:scoring
  (* (* (count-longest throwObjectToBin:hexagonal_bin:hexagonal_bin) 10 )
    10
  )
)
)



(define (game game-id-517) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - pillow)
    (exists (?tb ?h ?d ?c2 - game_object)
      (and
        (game-optional
          (not
            (on ?tb ?tb)
          )
        )
        (exists (?o - ball)
          (exists (?c - doggie_bed)
            (exists (?o1 - hexagonal_bin)
              (game-conserved
                (and
                  (= 0)
                  (in ?c ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - hexagonal_bin)
      (and
        (preference dodgeballHitsBinBottom
          (exists (?o1 ?tb - golfball)
            (then
              (once (and (and (in_motion agent) (and (same_type ?tb ?tb) (and (in ?tb ?tb) (in ?o1 ?b1) ) (in ?tb ?b1) ) ) (not (same_type ?tb ball) ) ) )
              (once (in_motion floor) )
              (once (agent_holds ?o1) )
            )
          )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?o - block)
        (then
          (once (in_motion ?o) )
          (hold-while (agent_holds ?o) (in_motion ?o) )
          (once (and (and (in ?o ?o) (in_motion ?o) ) (and (< 8 9) (on ?o ?o) (in_motion ?o) ) (in ?o top_shelf) (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 1 (count-once-per-objects failedThrowToBin:yellow:blue_dodgeball) )
    (>= (total-time) 9 )
    (and
      (or
        (>= (count failedThrowToBin) (* (count dodgeballHitsBinBottom:pink_dodgeball) (+ (count dodgeballHitsBinBottom:yellow) 50 (* (- 20 )
                (count failedThrowToBin:dodgeball)
                (* (* 5 7 (count failedThrowToBin:pink_dodgeball) )
                  (- (count failedThrowToBin:hexagonal_bin) )
                )
              )
              (- (+ (* 10 30 )
                  50
                  2
                )
              )
              (count dodgeballHitsBinBottom:white)
              (+ 6 4 )
            )
          )
        )
        (> 2 (* (count failedThrowToBin:golfball) (* 3 (count failedThrowToBin:pyramid_block) )
          )
        )
      )
      (>= (* 2 5 )
        (+ 8 )
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count dodgeballHitsBinBottom:green:pink_dodgeball)
  )
)
)



(define (game game-id-518) (:domain few-objects-room-v1)
(:setup
  (forall (?c - chair)
    (forall (?d - dodgeball ?c3 - dodgeball)
      (game-optional
        (not
          (not
            (exists (?b2 - (either cylindrical_block cube_block cellphone) ?r - dodgeball)
              (< 5 1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?c4 ?b6 - chair)
        (at-end
          (rug_color_under ?c4 color)
        )
      )
    )
  )
)
(:terminal
  (or
    (= (total-time) 3 )
    (>= 4 (total-score) )
  )
)
(:scoring
  (/
    3
    (count teddyBearHitsBall:pink:dodgeball)
  )
)
)



(define (game game-id-519) (:domain many-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?y - upright ?l - hexagonal_bin ?b - teddy_bear)
    (game-optional
      (and
        (not
          (in_motion ?b)
        )
        (exists (?t1 - chair)
          (on ?t1 ?t1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?x - color ?o - hexagonal_bin ?d - cube_block)
        (then
          (hold-while (and (not (< 1 6) ) (not (and (on ?d ?d) (not (not (in_motion agent) ) ) ) ) ) (not (not (and (< (distance desk blue) 0.5) (and (>= 1 (distance desk ?d)) (open agent) ) (in_motion ?d) (not (adjacent desk ?d) ) ) ) ) )
          (hold-while (same_color desk brown) (agent_holds ?d) )
          (once (and (agent_holds pink) (agent_holds ?d) ) )
        )
      )
    )
    (forall (?p - hexagonal_bin ?z - back ?h - (either golfball golfball curved_wooden_ramp))
      (and
        (preference thrownObjectHitsComputer
          (exists (?y - (either sideways upright sideways))
            (then
              (once (not (in_motion ?h) ) )
              (once (and (and (agent_holds floor) (and (agent_holds agent) (or (in ?h top_shelf) (or (same_type ?h block) (agent_crouches ) ) ) ) ) (not (on ?h ?h) ) ) )
              (hold-while (in agent ?h) (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects tanObjectMovedToRoomCenter:dodgeball) 3 )
    (total-score)
  )
)
(:scoring
  (count-overlapping tanObjectMovedToRoomCenter:dodgeball:pink)
)
)



(define (game game-id-520) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - block)
    (forall (?o1 - wall)
      (exists (?b1 - pillow ?g - hexagonal_bin)
        (game-optional
          (<= (distance ?d1 ?d1) (distance room_center ?o1))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?g ?r - pink_dodgeball)
        (at-end
          (in_motion ?r)
        )
      )
    )
    (forall (?o2 - (either cylindrical_block golfball))
      (and
        (preference dodgeballsInPlace
          (exists (?y ?y0 - (either upright sideways upside_down))
            (then
              (hold (agent_holds ?o2) )
              (hold (and (not (touch ?o2 ?o2) ) (adjacent_side side_table right ?o2) (agent_holds ?o2) (in_motion ?o2) ) )
              (once (in_motion ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 1 (total-score) )
)
(:scoring
  (+ (external-forall-maximize (count-once dodgeballsInPlace:green:yellow) ) 5 )
)
)



(define (game game-id-521) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - curved_wooden_ramp ?o4 - hexagonal_bin)
      (or
        (exists (?l1 ?b8 ?o - game_object ?h - hexagonal_bin)
          (exists (?t - chair)
            (game-optional
              (agent_holds ?t)
            )
          )
        )
        (game-conserved
          (in_motion ?o4)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference towerFallsWhileBuilding
          (exists (?s ?b7 - dodgeball)
            (then
              (once (not (exists (?h - building) (on ?b7 agent) ) ) )
              (once (not (not (adjacent ?b7 agent) ) ) )
              (once (not (agent_holds rug) ) )
            )
          )
        )
      )
    )
    (forall (?r - tall_cylindrical_block)
      (and
        (preference dodgeballHitsBin
          (exists (?b - dodgeball)
            (then
              (hold (< 1 (distance ?r ?r)) )
              (once (and (not (not (and (agent_crouches ) (in_motion ?b) ) ) ) (in_motion ?r) (touch ?b ?r) ) )
              (hold-while (agent_holds ?b) (game_start ) )
              (once (broken ?b) )
            )
          )
        )
        (preference objectInBuilding
          (exists (?c4 - ball)
            (at-end
              (and
                (exists (?c4 - hexagonal_bin)
                  (in_motion ?r)
                )
                (or
                  (agent_holds ?r)
                  (and
                    (adjacent room_center ?r)
                    (adjacent ?c4 ?r)
                    (and
                      (agent_holds ?c4)
                      (and
                        (not
                          (agent_holds ?r)
                        )
                        (in_motion agent)
                      )
                    )
                    (< (building_size ?r) 1)
                  )
                )
                (opposite bed ?r)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (< (- 10 )
        (* (* 10 10 )
          1
        )
      )
      (<= 2 5 )
      (not
        (= (count-once-per-objects towerFallsWhileBuilding:basketball:blue_dodgeball:golfball) (total-time) )
      )
    )
    (< (count objectInBuilding:basketball) (total-score) )
    (>= (total-score) (count dodgeballHitsBin:doggie_bed:hexagonal_bin) )
  )
)
(:scoring
  (count-once-per-external-objects objectInBuilding:dodgeball)
)
)



(define (game game-id-522) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?b - (either alarm_clock flat_block))
      (and
        (forall (?g - game_object ?o5 - teddy_bear)
          (forall (?o3 - dodgeball ?h - beachball)
            (game-conserved
              (< (distance ?b ?h) 0)
            )
          )
        )
        (forall (?x - yellow ?h - doggie_bed)
          (exists (?x - yellow ?h - (either triangular_ramp book floor))
            (game-conserved
              (in_motion ?b)
            )
          )
        )
      )
    )
    (exists (?b - dodgeball ?bl - block)
      (game-optional
        (in ?bl agent)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - block)
        (then
          (hold (in_motion ?d) )
          (once (not (in ?d ?d) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromRugToBin:beachball) (count-once-per-objects dodgeballFromRugToBin:blue_pyramid_block:dodgeball) )
)
(:scoring
  (- (* -30 (count dodgeballFromRugToBin:dodgeball) 10 )
  )
)
)



(define (game game-id-523) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?w - hexagonal_bin ?b - chair)
      (and
        (and
          (and
            (game-optional
              (adjacent_side ?b back blue)
            )
          )
        )
        (and
          (and
            (and
              (game-conserved
                (in_motion ?b)
              )
            )
          )
          (forall (?b3 - hexagonal_bin ?b3 - doggie_bed)
            (and
              (and
                (and
                  (game-conserved
                    (in_motion ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - pillow)
      (and
        (preference smallObjectThrownToBed
          (exists (?b - ball)
            (at-end
              (not
                (in_motion ?r2)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> 50 3 )
)
(:scoring
  (* (- 10 )
    (count smallObjectThrownToBed:yellow:hexagonal_bin)
  )
)
)



(define (game game-id-524) (:domain few-objects-room-v1)
(:setup
  (exists (?h - block)
    (and
      (game-conserved
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?l2 - hexagonal_bin)
        (then
          (hold (not (and (not (and (in_motion ?l2) (same_type ?l2 bridge_block) ) ) (in_motion floor) ) ) )
          (once (not (in_motion ?l2) ) )
          (once (in_motion ?l2) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?b1 - cube_block)
        (then
          (once (between ?b1 ?b1 ?b1) )
          (hold (exists (?c4 - teddy_bear) (agent_holds ?c4) ) )
          (hold-while (in_motion ?b1) (agent_holds ?b1) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (- (* 50 (* 3 10 )
      )
    )
  )
)
(:scoring
  (* 5 3 (external-forall-maximize (count-once-per-objects castleBuilt:golfball) ) (* (count castleBuilt:dodgeball) )
    (count-once castleBuilt:pink)
  )
)
)



(define (game game-id-525) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (>= 1 1)
  )
)
(:constraints
  (and
    (forall (?b3 - cube_block)
      (and
        (preference ballRolledOnRampToRug
          (exists (?g - dodgeball)
            (then
              (once (equal_z_position desk ?g) )
              (once (and (on ?g ?b3) (agent_holds agent) (< 1 8) (same_type ?b3 block) (not (not (in_motion ?g) ) ) (agent_holds ?g) ) )
              (once (in ?g rug) )
            )
          )
        )
        (preference gameBlockFound
          (exists (?z ?z0 ?z1 - left ?b10 - triangular_ramp ?o2 - dodgeball)
            (then
              (once (on ?b3 agent) )
              (hold (not (and (and (in_motion ?b3) (in ?b3 rug) ) (in_motion ?o2) ) ) )
              (once (on ?b3 ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (= 0 (count-once gameBlockFound:tan) )
  )
)
(:scoring
  (count-unique-positions ballRolledOnRampToRug:dodgeball)
)
)



(define (game game-id-526) (:domain many-objects-room-v1)
(:setup
  (exists (?o - doggie_bed)
    (game-conserved
      (and
        (not
          (not
            (in_motion ?o)
          )
        )
        (and
          (in_motion rug)
          (and
            (in agent ?o)
            (in_motion ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c5 - cube_block)
        (then
          (once (on desk agent) )
          (hold (not (object_orientation agent diagonal) ) )
          (hold (in_motion ?c5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count throwKnocksOverBear:doggie_bed) )
    (>= (* (+ 50 (count-once throwKnocksOverBear:pyramid_block) )
        3
      )
      (< (count throwKnocksOverBear:alarm_clock) (+ (count throwKnocksOverBear:basketball) (count throwKnocksOverBear:dodgeball) )
      )
    )
  )
)
(:scoring
  (* 15 (count throwKnocksOverBear:dodgeball) 3 )
)
)



(define (game game-id-527) (:domain few-objects-room-v1)
(:setup
  (forall (?c - game_object)
    (exists (?d - game_object)
      (game-optional
        (in ?c ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?c1 - dodgeball)
        (then
          (hold (< 1 (distance room_center ?c1)) )
          (hold (agent_holds ?c1) )
          (once (adjacent_side ?c1 front ?c1) )
        )
      )
    )
    (preference objectLandsInBin
      (exists (?r2 - pyramid_block)
        (then
          (hold (in_motion ?r2) )
          (hold (and (and (on ?r2 ?r2) (not (and (and (agent_holds ?r2) (not (equal_z_position door ?r2) ) (in floor agent) ) (not (agent_holds ?r2) ) (not (and (on ?r2 ?r2) (not (exists (?b10 - (either hexagonal_bin cellphone)) (agent_holds ?b10) ) ) (agent_holds ?r2) ) ) ) ) (and (and (on ?r2 ?r2) (in_motion ?r2) (in_motion ?r2) (in_motion ?r2) (not (not (< 2 (distance desk ?r2)) ) ) ) (and (exists (?b1 - hexagonal_bin) (on ?b1 ?r2) ) (or (in_motion ?r2) (faces ?r2 ?r2) ) (agent_holds agent) ) ) ) (not (on ?r2 ?r2) ) (and (not (in_motion ?r2) ) (> (distance room_center ?r2) (distance_side ?r2 back ?r2 back)) (not (in_motion ?r2) ) ) ) )
          (hold (in ?r2 ?r2) )
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-maximize (* (+ (* (+ (* 30 (count objectLandsInBin:golfball) )
              6
            )
            2
          )
          3
        )
        5
        (count-longest objectLandsInBin:red)
        (external-forall-maximize
          (< (external-forall-maximize (count objectLandsInBin:dodgeball) ) (+ (count throwToRampToBin:basketball) 2 )
          )
        )
      )
    )
    (count throwToRampToBin:green)
  )
)
(:scoring
  (- (+ 18 (* 2 (* (count throwToRampToBin:dodgeball) 2 (count-increasing-measure throwToRampToBin) )
      )
    )
  )
)
)



(define (game game-id-528) (:domain few-objects-room-v1)
(:setup
  (forall (?p2 - doggie_bed)
    (game-optional
      (adjacent ?p2 ?p2)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?s - (either bridge_block pillow alarm_clock cd))
        (at-end
          (in_motion ?s)
        )
      )
    )
    (preference ballThrownHitsAgent
      (exists (?c1 - dodgeball ?b - hexagonal_bin)
        (then
          (hold (agent_holds ?b) )
          (hold-while (not (in_motion ?b) ) (in_motion ?b) (not (agent_holds ?b) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownHitsAgent:red:golfball) (* 2 (count-once-per-objects ballThrownHitsAgent:alarm_clock) )
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:red:cube_block)
)
)



(define (game game-id-529) (:domain few-objects-room-v1)
(:setup
  (exists (?d - dodgeball)
    (game-conserved
      (and
        (forall (?b ?h ?l4 ?w2 - beachball ?l - (either dodgeball golfball))
          (broken ?d)
        )
        (in ?d agent)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?l2 - (either yellow_cube_block dodgeball hexagonal_bin))
        (then
          (hold (and (between ?l2 ?l2 ?l2) (same_object ?l2 ?l2) ) )
          (once (same_color agent orange) )
          (hold (on rug ?l2) )
        )
      )
    )
  )
)
(:terminal
  (> (* 5 2 )
    3
  )
)
(:scoring
  (external-forall-maximize
    (* 10 9 )
  )
)
)



(define (game game-id-530) (:domain medium-objects-room-v1)
(:setup
  (forall (?c4 - hexagonal_bin)
    (forall (?b - cube_block ?b - cylindrical_block)
      (forall (?d - dodgeball)
        (game-conserved
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?d - game_object)
        (then
          (once (and (in_motion ?d) (on ?d agent) (adjacent ?d ?d) ) )
          (once (agent_holds ?d) )
          (hold (< 3 4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (+ (* 2 3 )
        )
        (count ballThrownToWallToAgent:basketball:golfball)
      )
      (total-score)
    )
  )
)
(:scoring
  (count ballThrownToWallToAgent:blue)
)
)



(define (game game-id-531) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds pink)
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference objectThrownFromRug
          (then
            (once (equal_z_position desk ?b) )
            (hold (adjacent desk ?b) )
            (once (or (exists (?h - (either hexagonal_bin book golfball pyramid_block laptop ball laptop) ?l2 - triangular_ramp) (not (and (and (in_motion agent) ) (and (in_motion ?b) (not (in ?b ?l2) ) ) ) ) ) (agent_holds ?b) ) )
          )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?l1 - hexagonal_bin)
        (then
          (once (agent_holds ?l1) )
          (once (and (agent_holds ?l1) ) )
          (once (or (in_motion ?l1) (on ?l1 ?l1) (on ?l1 ?l1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count matchingBuildingBuilt:hexagonal_bin) (count-once-per-objects matchingBuildingBuilt:cube_block) )
)
(:scoring
  (count matchingBuildingBuilt:dodgeball)
)
)



(define (game game-id-532) (:domain medium-objects-room-v1)
(:setup
  (or
    (forall (?p - watch)
      (game-conserved
        (or
          (not
            (<= 0.5 (distance ?p ?p))
          )
          (agent_holds ?p)
        )
      )
    )
    (and
      (game-conserved
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?c1 - hexagonal_bin ?b - (either hexagonal_bin yellow_cube_block))
        (then
          (once (not (agent_holds brown) ) )
          (once (< (distance ?b ?b) (distance room_center ?b)) )
          (once (not (not (and (in ?b ?b) (in_motion ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 2 (+ 1 (count-shortest ballThrownToBin:beachball) )
    )
    (>= (count ballThrownToBin:beachball) 3 )
  )
)
(:scoring
  (count-once ballThrownToBin:beachball:yellow_pyramid_block)
)
)



(define (game game-id-533) (:domain many-objects-room-v1)
(:setup
  (forall (?h - block)
    (or
      (forall (?h - dodgeball ?c4 - cube_block)
        (forall (?b4 - hexagonal_bin)
          (game-optional
            (not
              (on blue floor)
            )
          )
        )
      )
      (game-conserved
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?p2 - dodgeball)
        (then
          (hold (not (not (not (in_motion ?p2) ) ) ) )
          (once (not (and (< 4 5) (touch ?p2 ?p2) ) ) )
          (once-measure (agent_holds ?p2) (building_size ?p2) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?x - brown ?d - teddy_bear ?h - ball)
        (at-end
          (in_motion agent)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects ballThrownThroughRampToBin:beachball:golfball) (count objectLandsInBin:pink_dodgeball) )
)
(:scoring
  (+ (+ 10 (< 10 (count-once-per-external-objects ballThrownThroughRampToBin:beachball) )
      5
    )
    (* 5 )
  )
)
)



(define (game game-id-534) (:domain medium-objects-room-v1)
(:setup
  (exists (?o4 - hexagonal_bin)
    (game-conserved
      (not
        (agent_holds ?o4)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?d - building)
        (at-end
          (on agent ?d)
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?g - hexagonal_bin)
        (then
          (once (in_motion ?g) )
          (hold (in_motion ?g) )
          (hold (in ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (>= (count ballThrownToChair:red:basketball) (count-once ballThrownToChair:blue_dodgeball) )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:pink)
)
)



(define (game game-id-535) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?c ?d ?c ?c - golfball)
    (and
      (exists (?b - building)
        (forall (?b - hexagonal_bin)
          (exists (?b3 - teddy_bear)
            (game-conserved
              (and
                (broken ?d)
                (< (distance desk ?c) 1)
                (in_motion bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?b - teddy_bear ?h - bridge_block ?b ?b - dodgeball)
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?b - hexagonal_bin)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (>= (> 2 (* (+ (* 5 (count smallItemsInPlace:book) )
          5
        )
        (* (+ (count throwGolfballToBin:dodgeball:basketball:basketball) 7 (count smallItemsInPlace:block) 3 (+ (count-unique-positions smallItemsInPlace:red_pyramid_block) 4 )
            (count throwGolfballToBin:basketball)
          )
          (* (* (* (= (* 5 4 3 (count-once-per-objects smallItemsInPlace:dodgeball) 1 )
                  8
                )
                (+ (* (count-once-per-objects throwGolfballToBin:alarm_clock) 10 )
                  (count throwGolfballToBin:beachball)
                )
              )
              (* (* 2 5 )
                (count smallItemsInPlace:purple:alarm_clock)
              )
            )
            (count-once smallItemsInPlace:dodgeball)
          )
          4
        )
      )
    )
    5
  )
)
(:scoring
  (< (count smallItemsInPlace:yellow:pink_dodgeball) 0 )
)
)



(define (game game-id-536) (:domain few-objects-room-v1)
(:setup
  (forall (?z ?z0 ?z1 - (either right front_left_corner back))
    (forall (?c1 - curved_wooden_ramp)
      (game-conserved
        (on ?c1 bed)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?c - cube_block)
        (at-end
          (in_motion ?c)
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count ballThrownToBed:cylindrical_block:basketball) )
)
(:scoring
  (count-once ballThrownToBed:beachball)
)
)



(define (game game-id-537) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - cube_block)
    (forall (?o ?c - (either golfball laptop))
      (game-optional
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?c - (either key_chain floor cellphone))
        (then
          (once-measure (not (on ?c ?c) ) (distance desk ?c) )
          (once (agent_holds blue) )
          (hold-while (not (or (on ?c ?c) (and (in ?c ?c) (in ?c ?c) ) ) ) (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-longest teddyBearLandsInBin:dodgeball:blue)
)
)



(define (game game-id-538) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d ?bl - ball ?r - dodgeball)
        (and
          (and
            (exists (?d - doggie_bed ?b - tall_cylindrical_block ?f - hexagonal_bin ?d - block ?w1 - building)
              (game-optional
                (and
                  (not
                    (not
                      (and
                        (not
                          (forall (?bl - wall)
                            (agent_holds brown)
                          )
                        )
                        (in_motion ?w1)
                      )
                    )
                  )
                  (not
                    (agent_holds ?w1)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?h - shelf)
        (game-conserved
          (not
            (< (distance bed ?h) 1)
          )
        )
      )
    )
    (exists (?b4 - cube_block ?d - hexagonal_bin)
      (exists (?d1 - cube_block)
        (exists (?b - block ?l4 - (either cube_block pillow) ?b3 - (either pyramid_block desktop))
          (game-conserved
            (not
              (object_orientation ?d1 sideways)
            )
          )
        )
      )
    )
    (exists (?b8 - desktop ?c - beachball)
      (game-conserved
        (and
          (in_motion ?c)
          (in ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b3 - hexagonal_bin ?d - (either golfball dodgeball watch) ?c1 ?b ?g ?p2 ?f - golfball)
        (then
          (once (and (and (not (on ?g ?b) ) (faces ?p2 agent) ) (and (and (agent_holds agent) (in_motion ?g) ) (not (>= (x_position ?g) 1) ) ) (and (and (and (not (and (and (or (not (agent_holds side_table) ) (and (on ?b rug) (and (on ?c1 ?p2) (in ?g agent) ) ) (agent_holds blue) ) (agent_holds ?g) (= (distance_side bed front_left_corner ?g right) 1 (distance ?p2 bed)) ) (and (not (on ?g ?p2) ) (and (and (in ?f ?p2) (not (in_motion ?g) ) ) (agent_holds ?b) (agent_holds ?c1) (adjacent room_center ?c1) ) (in ?g ?g) (not (on ?b desk) ) ) ) ) (and (not (agent_holds ?f) ) (< 4 2) ) ) (adjacent desk agent) (not (toggled_on ?g) ) ) (in ?f ?p2) ) ) )
          (once (not (equal_x_position ?g ?b) ) )
          (hold (not (not (on ?p2 ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 2 2 )
)
(:scoring
  (count ballThrownIntoTarget:blue_dodgeball)
)
)



(define (game game-id-539) (:domain medium-objects-room-v1)
(:setup
  (exists (?l1 - hexagonal_bin ?b - dodgeball)
    (exists (?s - (either hexagonal_bin key_chain doggie_bed))
      (game-conserved
        (is_setup_object ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?g - curved_wooden_ramp ?ob - game_object)
        (at-end
          (and
            (is_setup_object ?ob)
            (in ?ob ?ob)
          )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?w - doggie_bed ?h - teddy_bear)
        (then
          (once (agent_holds ?h) )
          (once (and (agent_holds ?h) (and (and (< (distance room_center ?h) (distance ?h floor)) (in rug green) ) (open ?h) ) (agent_crouches ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (external-forall-minimize (* (* (count beachballBouncedOffRamp:alarm_clock) (+ (count beachballBouncedOffRamp:green) 1 (* (external-forall-maximize (count-overlapping throwAttemptKnocksBlock:dodgeball) ) (count beachballBouncedOffRamp:tall_cylindrical_block) )
            10
            6
            25
          )
          50
        )
        30
      )
    )
  )
)
(:scoring
  (count throwAttemptKnocksBlock:yellow)
)
)



(define (game game-id-540) (:domain medium-objects-room-v1)
(:setup
  (exists (?b7 ?o5 - hexagonal_bin)
    (and
      (and
        (and
          (exists (?c5 - hexagonal_bin ?b3 - dodgeball)
            (exists (?h - block)
              (game-optional
                (and
                  (between ?o5 ?h ?o5)
                  (in ?o5 bed)
                )
              )
            )
          )
          (game-optional
            (and
              (agent_holds ?b7)
              (above ?o5 bed)
            )
          )
          (not
            (exists (?c3 - hexagonal_bin)
              (and
                (game-optional
                  (> (distance ?b7 ?o5) (distance_side south_wall left ?o5))
                )
                (game-optional
                  (agent_holds ?c3)
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (on ?o5 blue)
          )
        )
        (forall (?z ?z0 - right ?r1 - cylindrical_block ?d - cube_block)
          (game-conserved
            (on brown rug)
          )
        )
        (game-conserved
          (in ?b7 ?o5)
        )
        (or
          (and
            (game-optional
              (agent_holds ?o5)
            )
            (and
              (and
                (exists (?c - cube_block)
                  (exists (?d - curved_wooden_ramp ?t - ball)
                    (exists (?g - (either dodgeball) ?d - ball)
                      (forall (?g - game_object)
                        (forall (?b - chair)
                          (and
                            (game-conserved
                              (on ?d ?t)
                            )
                            (forall (?c6 - cylindrical_block ?bl - shelf)
                              (and
                                (game-optional
                                  (same_color ?d ?t)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (forall (?b4 - dodgeball)
              (game-optional
                (or
                  (and
                    (exists (?o - shelf)
                      (not
                        (or
                          (not
                            (touch ?b4 top_shelf)
                          )
                          (in ?b4 ?b7)
                        )
                      )
                    )
                    (in_motion ?o5)
                  )
                  (in_motion ?b7)
                  (agent_holds ?o5)
                )
              )
            )
            (exists (?c - cube_block ?w - game_object)
              (or
                (forall (?l1 ?c - dodgeball)
                  (game-conserved
                    (broken ?c)
                  )
                )
                (forall (?h ?d - block ?h - ball ?h - building)
                  (game-optional
                    (broken ?o5)
                  )
                )
                (forall (?p - chair)
                  (and
                    (and
                      (game-conserved
                        (exists (?b7 - teddy_bear)
                          (in_motion ?w)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (in_motion ?o5)
            )
          )
          (game-conserved
            (agent_holds ?o5)
          )
        )
      )
      (forall (?h ?h ?h ?b ?h ?l2 - hexagonal_bin ?b - dodgeball)
        (exists (?b1 - drawer)
          (game-optional
            (adjacent ?b ?b7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?o - hexagonal_bin ?h - cube_block)
        (at-end
          (agent_holds rug)
        )
      )
    )
  )
)
(:terminal
  (>= 5 10 )
)
(:scoring
  (count ballKnocksTeddy:green:dodgeball)
)
)



(define (game game-id-541) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?b8 - doggie_bed ?b - (either key_chain))
        (then
          (once (on ?b ?b) )
          (once (in_motion ?b) )
          (once (and (not (not (or (agent_holds agent) ) ) ) (in_motion agent) (agent_holds ?b) ) )
          (once-measure (not (not (and (agent_holds ?b) (and (not (on ?b ?b) ) (agent_holds ?b) ) ) ) ) (distance room_center ?b) )
        )
      )
    )
  )
)
(:terminal
  (> 10 (count dodgeballFromDeskToTarget:book) )
)
(:scoring
  (* (* 7 (count dodgeballFromDeskToTarget:cylindrical_block) )
    2
    (count dodgeballFromDeskToTarget:hexagonal_bin)
  )
)
)



(define (game game-id-542) (:domain few-objects-room-v1)
(:setup
  (exists (?c - doggie_bed ?h - dodgeball)
    (forall (?l - hexagonal_bin ?d2 - pillow)
      (exists (?b4 - hexagonal_bin ?s - ball)
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - cube_block)
      (and
        (preference objectThrownFromRug
          (exists (?b - building ?c2 - beachball ?o5 - drawer)
            (at-end
              (object_orientation ?r upside_down)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-once-per-objects objectThrownFromRug:hexagonal_bin) 100 5 )
      (* -30 10 )
    )
  )
)
(:scoring
  (count objectThrownFromRug:orange)
)
)



(define (game game-id-543) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - (either dodgeball alarm_clock) ?b4 - cylindrical_block)
    (game-conserved
      (rug_color_under ?b4 yellow)
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?c - dodgeball)
      (and
        (preference smallItemsInPlace
          (then
            (hold (not (in_motion ?c) ) )
            (hold (in_motion ?c) )
            (once (touch agent ?c) )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (+ 5 100 8 (count smallItemsInPlace:golfball) 9 5 )
      (count smallItemsInPlace)
    )
    (or
      (or
        (> (count-once-per-objects smallItemsInPlace:hexagonal_bin) 6 )
        (or
          (>= (total-score) (* (+ (count smallItemsInPlace:blue_dodgeball) (external-forall-maximize (* (count smallItemsInPlace:dodgeball) )
                )
              )
              (* (count smallItemsInPlace:beachball) 10 (count smallItemsInPlace:white) (+ (= 2 300 )
                  (+ (count smallItemsInPlace:yellow) (count smallItemsInPlace:cube_block:basketball) )
                )
                (count smallItemsInPlace:purple:dodgeball)
              )
            )
          )
          (>= 40 6 )
        )
      )
    )
  )
)
(:scoring
  (count-measure smallItemsInPlace:golfball)
)
)



(define (game game-id-544) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?o5 - hexagonal_bin ?b - hexagonal_bin)
    (exists (?o - chair)
      (forall (?s - book)
        (exists (?d - building ?b6 - (either golfball key_chain) ?b - hexagonal_bin)
          (and
            (game-conserved
              (same_color ?b bed)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?l - cube_block)
        (then
          (once (in agent agent) )
          (once (agent_holds ?l) )
          (hold (and (agent_holds ?l) (in_motion desk) ) )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?w2 - teddy_bear)
        (then
          (hold (in_motion ?w2) )
          (once (and (and (and (adjacent room_center ?w2) (agent_holds ?w2) ) (in_motion ?w2) ) (exists (?c - doggie_bed) (and (agent_holds ?w2) ) ) ) )
          (hold (not (in_motion ?w2) ) )
        )
      )
    )
    (preference objectOnBed
      (exists (?db - hexagonal_bin ?b9 - cube_block)
        (then
          (once (not (not (not (and (in_motion ?b9) (on ?b9 ?b9) ) ) ) ) )
          (hold-while (exists (?tb - teddy_bear ?d - drawer) (on ?b9 ?d) ) (in_motion rug) (agent_holds ?b9) (and (and (between ?b9 ?b9 ?b9) (and (and (agent_holds ?b9) ) (not (agent_holds ?b9) ) ) ) ) )
          (hold (adjacent ?b9 ?b9) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (count objectToBinOnFirstTry) 3 )
      )
    )
    (> (+ 6 (external-forall-maximize (count-unique-positions objectOnBed:orange) ) )
      (count objectOnBed:beachball:basketball)
    )
  )
)
(:scoring
  (+ 5 (count matchingBuildingBuilt:blue_dodgeball:alarm_clock) (- (count matchingBuildingBuilt:hexagonal_bin) 10 ) )
)
)



(define (game game-id-545) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?r - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?r)
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - wall)
        (then
          (once (in_motion ?d) )
          (once (on ?d ?d) )
          (once (in_motion ?d) )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?d - game_object ?o5 - hexagonal_bin)
        (at-end
          (agent_holds ?o5)
        )
      )
    )
  )
)
(:terminal
  (>= 100 (* (count throwToBin:beachball) 2 (<= (count woodenBlockMovedFromRugToDesk:yellow:pink_dodgeball) (* (* (* (count throwToBin:golfball) (* 2 (count-once-per-external-objects woodenBlockMovedFromRugToDesk:blue) )
              (count woodenBlockMovedFromRugToDesk:pink)
              3
            )
            15
            (* (count woodenBlockMovedFromRugToDesk:yellow) (count woodenBlockMovedFromRugToDesk:beachball) )
          )
          (* (- (count woodenBlockMovedFromRugToDesk:yellow) )
            (< 6 (* (* (* (count-once-per-objects throwToBin:pink) 2 )
                  (count-once-per-objects woodenBlockMovedFromRugToDesk:hexagonal_bin)
                )
                1
              )
            )
          )
        )
      )
      (* (= 8 2 )
        5
      )
      (* 2 (count-shortest woodenBlockMovedFromRugToDesk:beachball:red) )
      3
    )
  )
)
(:scoring
  (count throwToBin:doggie_bed)
)
)



(define (game game-id-546) (:domain medium-objects-room-v1)
(:setup
  (forall (?c1 - building ?l - (either wall golfball) ?c2 - hexagonal_bin)
    (game-optional
      (forall (?t - hexagonal_bin)
        (in_motion desk)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?c5 - doggie_bed)
        (then
          (hold-while (agent_holds ?c5) (and (and (agent_holds ?c5) (agent_holds ?c5) ) (not (faces ?c5 bottom_shelf) ) ) )
          (once (and (adjacent desk ?c5) (and (on ?c5 ?c5) (in_motion ?c5) ) (touch ?c5 ?c5) ) )
          (once (not (between ?c5 ?c5 desk) ) )
        )
      )
    )
  )
)
(:terminal
  (< (> (count throwBallToBinOffObject:block) (* 8 (* (+ -30 2 )
          0
        )
      )
    )
    (count throwBallToBinOffObject:pyramid_block)
  )
)
(:scoring
  (* 4 (- (* 5 9 )
    )
    (external-forall-maximize
      (count-once-per-objects throwBallToBinOffObject:side_table)
    )
    (count throwBallToBinOffObject:dodgeball)
    (count-once-per-objects throwBallToBinOffObject:red)
    (count-once-per-objects throwBallToBinOffObject:golfball)
  )
)
)



(define (game game-id-547) (:domain few-objects-room-v1)
(:setup
  (exists (?o - dodgeball)
    (and
      (exists (?d1 - hexagonal_bin ?t2 - game_object)
        (exists (?l3 - ball ?t2 - hexagonal_bin)
          (and
            (game-conserved
              (object_orientation ?o diagonal)
            )
          )
        )
      )
      (or
        (not
          (exists (?c - ball)
            (game-conserved
              (in_motion ?c)
            )
          )
        )
        (forall (?b - hexagonal_bin ?c - ball)
          (exists (?w2 ?d - dodgeball ?h - dodgeball ?b - dodgeball)
            (and
              (game-conserved
                (not
                  (adjacent_side rug right ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x ?x0 ?x1 - (either green) ?b - game_object ?b3 - cube_block ?x ?x0 - yellow)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?d1 - (either main_light_switch golfball cd))
            (then
              (once (agent_holds ?b3) )
              (once (and (and (is_setup_object ?b3) ) (not (and (on ?b3 ?d1) (in ?b3 ?d1) ) ) (exists (?b - hexagonal_bin ?l2 - game_object) (and (rug_color_under ?l2 tan) (opposite ?d1 agent) (not (touch ?b3 ?d1) ) ) ) ) )
              (hold (on agent ?b3) )
            )
          )
        )
      )
    )
    (forall (?c5 - ball ?p1 - hexagonal_bin)
      (and
        (preference failedThrowToBin
          (exists (?d - ball ?d - (either ball golfball) ?db - hexagonal_bin)
            (then
              (once (same_color agent ?p1) )
              (once (on ?p1 ?p1) )
              (once (not (not (opposite ?db ?db) ) ) )
            )
          )
        )
      )
    )
    (preference cubeBlockInBuilding
      (exists (?l3 - cube_block ?d - (either golfball beachball) ?b - hexagonal_bin ?b - dodgeball)
        (then
          (once (not (not (and (agent_holds ?b) (and (touch ?b ?b) (and (in_motion ?b) (and (on ?b ?b) (< 3 (distance ?b agent)) ) ) ) (in ?b bed) ) ) ) )
          (hold (agent_holds agent) )
          (once (exists (?x - white) (agent_crouches ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 15 (count brownObjectMovedToRoomCenter:red) )
)
(:scoring
  (+ 3 (count-once-per-external-objects failedThrowToBin:basketball) )
)
)



(define (game game-id-548) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (and
      (game-conserved
        (adjacent rug ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?w - curved_wooden_ramp)
        (then
          (once (< (distance rug ?w) (distance room_center agent)) )
          (once (not (not (in_motion ?w) ) ) )
          (hold-while (broken ?w) (agent_holds ?w) (and (= (distance bed ?w) 2) (and (and (not (on rug ?w) ) (agent_holds ?w) ) (in_motion ?w) (not (agent_holds ?w) ) (in_motion ?w) (object_orientation ?w sideways) (in_motion ?w) ) (on ?w ?w) ) (not (agent_holds ?w) ) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?d - flat_block)
        (then
          (once (not (agent_holds ?d) ) )
          (once (and (= 1 (x_position ?d)) (and (not (not (touch ?d ?d) ) ) (not (exists (?o - dodgeball) (not (touch ?o ?d) ) ) ) ) (not (not (adjacent desk ?d) ) ) (in_motion ?d) ) )
          (once (in_motion agent) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference gameObjectToBin
          (then
            (once (touch ?d ?d) )
            (hold-while (or (and (and (and (in_motion ?d) (agent_holds ?d) (equal_z_position ?d ?d) ) (and (in_motion ?d) (in ?d ?d) ) ) (not (in ?d agent) ) (and (and (not (adjacent_side ?d back ?d) ) (and (in_motion agent) ) (not (in rug ?d) ) ) (< (distance desk ?d) 0.5) ) ) (on ?d ?d) ) (in ?d ?d) )
            (once (and (and (agent_holds ?d) (and (not (on ?d desk) ) (game_start ) ) (exists (?b6 - (either mug cylindrical_block) ?d - ball ?y ?y0 - (either diagonal diagonal sideways)) (game_over ) ) (in_motion ?d) ) (on agent ?d) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count dodgeballFromBlockToBin:yellow:pyramid_block:hexagonal_bin) (- (count-once throwFromBehindChairsInBin:cube_block) )
    )
    (* 3 3 )
  )
)
(:scoring
  (count-increasing-measure gameObjectToBin:blue_cube_block:dodgeball)
)
)



(define (game game-id-549) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?h ?ob - (either cellphone book))
      (exists (?b7 - dodgeball)
        (and
          (and
            (game-conserved
              (not
                (< 1 (x_position ?b7))
              )
            )
            (exists (?b3 - doggie_bed)
              (game-conserved
                (in_motion blue)
              )
            )
          )
          (game-conserved
            (in_motion ?ob)
          )
          (game-optional
            (forall (?w - curved_wooden_ramp ?c - ball ?g - dodgeball)
              (and
                (adjacent ?g ?ob)
                (agent_holds bed)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?o5 - dodgeball)
        (then
          (hold (and (on ?o5 ?o5) (on ?o5 ?o5) (rug_color_under ?o5 white) (exists (?d - cube_block) (not (= 2) ) ) (and (adjacent ?o5 ?o5) (or (and (adjacent_side desk right ?o5 front) (not (not (agent_holds ?o5) ) ) ) (= (distance desk ?o5) (distance room_center ?o5) 1) ) ) (not (and (and (between top_drawer ?o5 ?o5) (not (agent_holds ?o5) ) ) (adjacent_side door front ?o5) (not (not (agent_holds ?o5) ) ) ) ) ) )
          (once (faces floor ?o5) )
          (hold (not (< (distance_side bed left ?o5) 10) ) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?h - dodgeball)
        (at-end
          (< (distance_side ?h front ?h) (building_size ?h))
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (count dodgeballFromRugToBin:beachball) ) (count-once-per-external-objects dodgeballFromRugToBin:beachball) )
)
(:scoring
  (* (* (* 10 (= (count-once-per-external-objects dodgeballFromRugToBin:yellow) (* (* -10 )
            3
          )
        )
      )
      2
      (count ballThrownOntoTarget:yellow)
    )
    (count-once-per-objects dodgeballFromRugToBin:yellow_pyramid_block:golfball)
  )
)
)



(define (game game-id-550) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - dodgeball ?b3 - chair)
    (and
      (and
        (exists (?l - chair)
          (and
            (and
              (game-conserved
                (and
                  (in_motion bed)
                  (and
                    (< 1 1)
                    (and
                      (toggled_on ?b3)
                      (not
                        (object_orientation ?b3 sideways)
                      )
                    )
                    (object_orientation ?l diagonal)
                  )
                )
              )
            )
            (game-conserved
              (< 6 6)
            )
            (game-conserved
              (and
                (in_motion ?b3)
                (in_motion ?l)
                (and
                  (not
                    (in_motion ?b3)
                  )
                  (in_motion rug)
                )
              )
            )
          )
        )
        (exists (?b9 - chair ?tb - triangular_ramp)
          (and
            (exists (?w1 - wall ?o2 - game_object)
              (game-conserved
                (same_object ?o2 ?tb)
              )
            )
            (exists (?r2 - building)
              (exists (?s - dodgeball)
                (forall (?o - blinds)
                  (game-conserved
                    (faces ?o ?b3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference ballOnBedAtEnd
          (exists (?d - curved_wooden_ramp ?b6 - beachball)
            (at-end
              (on ?b6 ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count ballOnBedAtEnd:dodgeball:doggie_bed) )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:blue_dodgeball)
)
)



(define (game game-id-551) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?c6 - chair)
    (exists (?h - beachball ?y ?y0 - (either upside_down upside_down upside_down))
      (game-conserved
        (exists (?d1 - dodgeball ?h - hexagonal_bin)
          (on agent ?c6)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - teddy_bear ?w2 - hexagonal_bin)
        (then
          (hold (agent_holds ?w2) )
          (once (in_motion agent) )
          (once (not (not (in_motion ?w2) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 15 (count gameBlockFound:beachball) )
)
(:scoring
  (count-total gameBlockFound:dodgeball)
)
)



(define (game game-id-552) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (and
      (game-conserved
        (and
          (on floor ?d)
          (and
            (rug_color_under ?d blue)
            (in_motion ?d)
          )
        )
      )
      (and
        (forall (?o3 - curved_wooden_ramp)
          (or
            (game-optional
              (on agent ?o3)
            )
            (exists (?o1 - golfball ?c5 - dodgeball)
              (exists (?d - cube_block)
                (and
                  (game-conserved
                    (in ?c5 ?o3)
                  )
                  (game-optional
                    (on ?c5 ?d)
                  )
                  (exists (?g - (either cube_block yellow_cube_block))
                    (exists (?b6 - hexagonal_bin)
                      (game-conserved
                        (and
                          (adjacent ?g ?c5)
                          (and
                            (and
                              (same_color ?b6 yellow)
                              (not
                                (rug_color_under ?c5 green)
                              )
                              (agent_holds agent)
                            )
                            (in_motion ?c5)
                          )
                          (same_color ?o3 ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (game-optional
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - block ?o1 - doggie_bed)
        (then
          (once (agent_holds ?o1) )
          (once (in_motion ?o1) )
          (once (object_orientation ?o1 upright) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (total-time) )
)
(:scoring
  (count cubeBlockFromBedToShelf:orange)
)
)



(define (game game-id-553) (:domain medium-objects-room-v1)
(:setup
  (forall (?w - hexagonal_bin)
    (game-optional
      (or
        (on ?w ?w)
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?d1 - (either desktop tall_cylindrical_block triangle_block))
        (then
          (once (and (and (touch ?d1 ?d1) (agent_holds ?d1) ) (in_motion agent) ) )
          (once (or (on ?d1 ?d1) (not (and (not (and (not (on ?d1 ?d1) ) (in_motion ?d1) ) ) (< (distance room_center ?d1) 6) (in ?d1 ?d1) ) ) ) )
          (hold (>= 0.5 (x_position ?d1)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 0 (count throwTeddyOntoPillow:doggie_bed) )
  )
)
(:scoring
  (count throwTeddyOntoPillow:basketball)
)
)



(define (game game-id-554) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin ?o - hexagonal_bin ?b - hexagonal_bin)
      (game-conserved
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 ?p1 - hexagonal_bin)
      (and
        (preference ballOnBedAtEnd
          (exists (?b3 - block ?o2 - cube_block)
            (then
              (once (agent_holds ?p1) )
              (once (and (in_motion ?o2) (same_object ?o1 ?p1) ) )
              (once (and (same_color agent ?p1) (in_motion ?o1) ) )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?p3 ?c - dodgeball)
            (at-end
              (agent_holds ?o1)
            )
          )
        )
        (preference ballThrownFromDoor
          (exists (?c - chair)
            (then
              (once (not (and (agent_holds ?c) (object_orientation ?o1 diagonal) (< 0.5 (distance room_center ?p1)) ) ) )
              (hold (and (and (not (is_setup_object ?o1) ) (agent_holds ?p1) (touch ?p1 ?p1) (not (and (game_over ) ) ) ) (equal_z_position room_center ?c) ) )
              (once (not (exists (?h - blue_pyramid_block) (rug_color_under floor yellow) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (count-once-per-objects ballThrownFromDoor:red) 2 )
)
(:scoring
  (* (count beachballBouncedOffRamp:hexagonal_bin:beachball) (count ballThrownFromDoor:purple) )
)
)



(define (game game-id-555) (:domain many-objects-room-v1)
(:setup
  (forall (?b8 - game_object)
    (exists (?o - chair ?h - shelf)
      (game-conserved
        (and
          (in agent ?h)
          (in_motion ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin)
      (and
        (preference throwAttempt
          (then
            (hold (and (or (and (toggled_on agent) (agent_holds ?d) (on ?d ?d) (and (on ?d ?d) (touch agent agent) ) (and (in_motion ?d) (and (not (same_color ?d ?d) ) (and (adjacent_side desk back ?d) (and (and (and (= (distance desk ?d)) (and (and (< (distance ?d ?d) 1) (in_motion ?d) ) (object_orientation ?d sideways) ) ) (not (adjacent desk ?d) ) ) (touch ?d ?d) (and (in_motion ?d) (agent_holds ?d) ) ) ) ) ) ) (not (in_motion ?d) ) ) (and (adjacent ?d top_drawer) (same_type ?d ball) (and (rug_color_under ?d light_blue) (and (and (on ?d ?d) (not (in ?d ?d) ) (not (agent_holds ?d) ) ) (not (and (and (< 9 1) (and (agent_holds ?d) (agent_holds bed) ) ) (agent_holds agent) ) ) ) ) ) ) )
            (once (in agent ?d) )
            (once (not (= 1 (distance ?d ?d)) ) )
            (hold (exists (?b - red_dodgeball) (= 0.5 1) ) )
          )
        )
        (preference throwInBin
          (exists (?g - game_object)
            (at-end
              (or
                (agent_holds agent)
                (not
                  (in ?d ?d)
                )
                (touch agent ?d)
              )
            )
          )
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?c4 - pyramid_block)
        (then
          (once (agent_holds ?c4) )
          (once (not (in ?c4 ?c4) ) )
          (once (and (not (not (agent_holds ?c4) ) ) (and (and (adjacent_side desk left ?c4) (agent_holds desk) (or (adjacent ?c4 ?c4) (not (agent_holds ?c4) ) ) ) (not (adjacent ?c4 ?c4) ) ) ) )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?c2 ?r - ball ?b5 - (either pillow flat_block hexagonal_bin cube_block desktop))
        (then
          (once (in_motion ?b5) )
          (hold (in ?b5 ?b5) )
          (hold (< (distance_side door right ?b5) 1) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 8 )
    10
  )
)
(:scoring
  (+ 2 (count throwAttempt:basketball) )
)
)



(define (game game-id-556) (:domain few-objects-room-v1)
(:setup
  (forall (?tb - hexagonal_bin)
    (forall (?h - curved_wooden_ramp ?b ?t ?h ?d - building)
      (forall (?d - block ?c - curved_wooden_ramp)
        (game-optional
          (and
            (adjacent_side ?t front ?b)
            (on ?h ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - wall ?h - wall ?o3 - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?l1 - game_object)
            (then
              (once (agent_holds ?o3) )
              (once (in_motion ?l1) )
              (once (or (not (agent_holds ?o3) ) (and (and (in_motion ?l1) (faces ?o3 ?l1) (on ?l1 ?l1) (toggled_on ?l1) (exists (?ob - dodgeball ?c - building) (in_motion floor) ) (and (agent_holds ?l1) (not (in_motion ?o3) ) (not (agent_holds agent) ) ) (not (on ?l1 ?l1) ) (agent_holds ?l1) (not (in ?l1 ?o3) ) (on ?o3 top_shelf) ) (and (not (in_motion ?o3) ) (not (agent_crouches ) ) ) (and (adjacent_side ?l1 left ?l1 front) (not (not (equal_x_position desk ?o3) ) ) ) ) ) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?c ?bl - hexagonal_bin)
            (then
              (once (agent_holds agent) )
              (once (and (agent_holds ?bl) (agent_holds ?c) ) )
              (hold (is_setup_object rug) )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?b - dodgeball)
            (then
              (hold (and (and (in_motion ?b) (not (on ?b ?b) ) ) (in_motion agent) ) )
              (hold (exists (?b - (either floor key_chain)) (touch ?o3 ?b) ) )
              (once (and (in_motion ?b) (and (and (opposite agent ?b) (not (or (not (in ?o3 ?b) ) (and (in_motion bed) (adjacent desk ?b) ) ) ) ) (exists (?h - bridge_block ?t1 - hexagonal_bin) (adjacent ?o3 ?o3) ) (not (in ?o3 ?b) ) ) (and (in_motion agent) (in ?b ?o3) ) ) )
            )
          )
        )
      )
    )
    (preference blockFromRugToDesk
      (exists (?b - dodgeball)
        (then
          (once (not (in_motion ?b) ) )
          (once (not (and (and (agent_holds ?b) (not (agent_holds ?b) ) (not (on ?b ?b) ) ) (agent_holds ?b) ) ) )
          (hold (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (- 4 )
  )
)
(:scoring
  (count throwAttemptKnocksBlock:yellow_pyramid_block)
)
)



(define (game game-id-557) (:domain many-objects-room-v1)
(:setup
  (exists (?d2 - building ?c3 - dodgeball)
    (exists (?d - wall ?y ?y0 ?y1 - (either upside_down diagonal sideways))
      (forall (?c ?d2 - chair)
        (forall (?d - doggie_bed ?b6 - game_object ?r - dodgeball)
          (game-conserved
            (not
              (and
                (not
                  (agent_holds ?r)
                )
                (exists (?b - curved_wooden_ramp)
                  (<= (distance ?d ?b) 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - triangular_ramp)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?d - curved_wooden_ramp ?g - blinds)
            (at-end
              (in bed ?r)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* 25 (count-once-per-objects dodgeballThrownToBinFromDesk:cube_block) )
  )
)
(:scoring
  (count dodgeballThrownToBinFromDesk:pink_dodgeball)
)
)



(define (game game-id-558) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?g - ball)
      (and
        (preference itemsHidingScreens
          (exists (?r2 - (either cellphone floor dodgeball) ?d2 - cube_block)
            (then
              (once (in ?d2 ?d2) )
              (once (< (distance side_table ?g) 8) )
              (once (agent_holds ?g) )
            )
          )
        )
      )
    )
    (forall (?b - cylindrical_block ?l - dodgeball ?d - ball)
      (and
        (preference throwBallToBinOffObject
          (exists (?c2 - pillow ?y ?y0 - (either diagonal))
            (then
              (hold (on ?c2 ?d) )
              (hold (not (same_color ?d ?c2) ) )
              (once (and (equal_z_position room_center ?d) (agent_holds rug) (and (not (not (not (on ?c2 agent) ) ) ) (or (in_motion ?d) (in_motion rug) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b - chair)
      (and
        (preference cubeBlockInBuilding
          (exists (?r - cube_block)
            (then
              (hold (adjacent room_center ?r) )
              (once (in_motion agent) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-time) (count-longest itemsHidingScreens:basketball) )
)
(:scoring
  (count cubeBlockInBuilding:green:basketball)
)
)



(define (game game-id-559) (:domain many-objects-room-v1)
(:setup
  (exists (?w - (either laptop cube_block))
    (and
      (game-conserved
        (and
          (not
            (in_motion ?w)
          )
          (adjacent_side ?w front ?w left)
          (and
            (and
              (game_over )
              (or
                (not
                  (and
                    (not
                      (and
                        (in_motion ?w)
                        (in ?w ?w)
                      )
                    )
                    (in_motion ?w)
                    (same_type ?w ?w)
                  )
                )
                (not
                  (agent_holds ?w)
                )
              )
            )
            (not
              (not
                (not
                  (in_motion ?w)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?c4 - (either blue_cube_block ball doggie_bed))
        (then
          (once (not (not (between ?c4 ?c4 ?c4) ) ) )
          (hold (in_motion bed) )
          (once (and (and (toggled_on ?c4) (forall (?l - triangular_ramp ?p1 - (either hexagonal_bin pyramid_block)) (in_motion ?c4) ) (agent_holds ?c4) ) (forall (?g - hexagonal_bin) (and (agent_holds ?g) (and (or (and (not (and (touch ?g ?g) (same_object ?g desk) (agent_holds agent) (adjacent room_center ?g) (agent_holds floor) (adjacent desk ?c4) ) ) (agent_holds ?g) ) (agent_holds ?g) ) (agent_holds desk) ) ) ) ) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?b - (either teddy_bear yellow_cube_block))
        (then
          (once (not (object_orientation floor upside_down) ) )
          (hold (in_motion ?b) )
          (once (equal_x_position ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 20 (count itemInClosedDrawerAtEnd:beachball) )
)
(:scoring
  (- (count-once-per-objects ballThrownFromBehindBlock:orange) )
)
)



(define (game game-id-560) (:domain many-objects-room-v1)
(:setup
  (exists (?b - pyramid_block)
    (game-optional
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?c1 - (either mug basketball) ?d - dodgeball)
        (then
          (once (in_motion ?d) )
          (hold-while (in_motion ?d) (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?d1 - (either doggie_bed watch))
        (then
          (once (and (in_motion ?d1) (agent_holds ?d1) ) )
          (once (agent_holds ?d1) )
          (hold-while (< (distance ?d1 agent) 0) (in_motion ?d1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once-per-objects pinkObjectMovedToRoomCenter:doggie_bed) )
)
(:scoring
  (+ 10 1 )
)
)



(define (game game-id-561) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - hexagonal_bin)
    (game-conserved
      (on ?o2 ?o2)
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?o2 - dodgeball)
        (then
          (once (in_motion rug) )
          (once (in_motion ?o2) )
          (once (in ?o2 ?o2) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count throwFromBehindChairsInBin:hexagonal_bin) )
)
(:scoring
  (* 5 4 )
)
)



(define (game game-id-562) (:domain few-objects-room-v1)
(:setup
  (forall (?o3 - ball)
    (game-optional
      (> (distance ?o3 ?o3) 0)
    )
  )
)
(:constraints
  (and
    (forall (?d ?d2 - hexagonal_bin ?w2 - dodgeball)
      (and
        (preference cubeBlockThrowAttempt
          (exists (?d - building)
            (at-end
              (and
                (in_motion ?w2)
                (in_motion ?w2)
              )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?t - cube_block)
        (then
          (once (and (adjacent ?t ?t) (and (in_motion ?t) (or (and (not (in_motion ?t) ) (and (agent_holds ?t) (not (not (not (in_motion ?t) ) ) ) (agent_holds ?t) ) ) (and (exists (?c2 - dodgeball) (in ?c2 ?t) ) (equal_z_position room_center ?t) (and (agent_holds ?t) (in_motion ?t) ) ) ) ) ) )
          (hold (in_motion agent) )
          (once (not (exists (?c - (either alarm_clock alarm_clock)) (agent_holds ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 4 1 )
)
(:scoring
  (count-overlapping cubeBlockThrowAttempt:hexagonal_bin)
)
)



(define (game game-id-563) (:domain few-objects-room-v1)
(:setup
  (exists (?d - doggie_bed ?p1 - shelf)
    (game-conserved
      (in_motion ?p1)
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b - hexagonal_bin ?x - pink ?l2 - game_object)
        (then
          (once (agent_holds ?l2) )
          (once (not (and (> 8 1) (and (adjacent door ?l2) (and (not (not (agent_holds ?l2) ) ) (same_color ?l2 purple) ) (and (not (agent_holds rug) ) (and (in_motion ?l2) (object_orientation ?l2 upright) ) (and (on ?l2 ?l2) (same_object rug ?l2) ) ) ) (and (adjacent ?l2 ?l2) ) ) ) )
          (once (and (in_motion rug) (on ?l2 ?l2) ) )
        )
      )
    )
    (forall (?r - dodgeball)
      (and
        (preference ballThrownIntoTarget
          (exists (?db - ball)
            (then
              (once (on ?r ?db) )
              (hold (is_setup_object ?r) )
              (hold (in ?db ?r) )
              (once (= 3 (distance desk ?r) 1) )
              (hold (agent_holds ?db) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count ballThrownIntoTarget:red) 6 )
    (>= 3 (count ballRolledOnRampToRug:purple:dodgeball) )
  )
)
(:scoring
  (- 0.5 )
)
)



(define (game game-id-564) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - doggie_bed)
    (game-conserved
      (not
        (and
          (in_motion agent)
          (agent_holds ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromBehindBlock
      (exists (?h - game_object)
        (then
          (once (rug_color_under ?h white) )
          (once (not (adjacent ?h ?h) ) )
          (once (not (not (in ?h ?h) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 10 )
  )
)
(:scoring
  (count ballThrownFromBehindBlock:basketball)
)
)



(define (game game-id-565) (:domain few-objects-room-v1)
(:setup
  (forall (?g - dodgeball ?c1 - wall)
    (game-conserved
      (on pink agent)
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b2 - wall)
        (then
          (hold (agent_holds ?b2) )
          (once (on ?b2 ?b2) )
          (once (is_setup_object ?b2) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?b - hexagonal_bin)
        (then
          (hold (and (in ?b ?b) (and (object_orientation ?b sideways) (agent_holds ?b) ) ) )
          (hold (and (in_motion agent) (and (and (< (distance room_center ?b) 1) (not (> (distance room_center ?b) (distance ?b ?b)) ) ) (agent_holds ?b) ) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwKnocksOverBear) (external-forall-maximize (count-shortest throwKnocksOverBear:dodgeball:blue_cube_block) ) )
)
(:scoring
  (count throwBallFromOtherBallToBin:beachball)
)
)



(define (game game-id-566) (:domain medium-objects-room-v1)
(:setup
  (forall (?l1 - (either pencil key_chain))
    (exists (?b - hexagonal_bin)
      (and
        (exists (?w ?d - building ?h - shelf ?b ?o - (either basketball desktop basketball) ?s - hexagonal_bin)
          (game-conserved
            (exists (?w1 - hexagonal_bin)
              (object_orientation ?s sideways)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blueObjectMovedToRoomCenter
      (exists (?c6 - ball)
        (at-end
          (< 1 (distance side_table ?c6))
        )
      )
    )
    (forall (?d - (either hexagonal_bin main_light_switch cube_block))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?o4 - dodgeball)
            (then
              (once (broken ?o4) )
              (once (not (game_start ) ) )
              (once (forall (?c4 - hexagonal_bin ?ob ?r ?o3 - (either blue_cube_block golfball pillow) ?o - ball) (not (exists (?w1 ?l - dodgeball) (not (not (in agent ?o) ) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 15 )
)
(:scoring
  (* (* (count ballThrownFromObjectToBin:dodgeball) (* 15 3 )
    )
    (count ballThrownFromObjectToBin:doggie_bed:beachball)
  )
)
)



(define (game game-id-567) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - cube_block ?g ?o - hexagonal_bin ?w2 - game_object)
    (exists (?c - shelf ?h ?o2 ?b10 ?c5 - curved_wooden_ramp)
      (and
        (game-conserved
          (adjacent desk ?b10)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - hexagonal_bin ?o - game_object ?h ?h ?c ?l4 ?h ?b ?h ?d ?h ?c2 - beachball ?r1 - dodgeball)
      (and
        (preference throwGolfballToBin
          (exists (?h - game_object)
            (at-end
              (not
                (broken ?r1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (count-once throwGolfballToBin) 15 )
      (>= 3 (>= 15 2 )
      )
      (or
        (or
          (>= (total-score) (total-score) )
          (< (- (* 5 15 )
            )
            6
          )
          (>= (count throwGolfballToBin) (count-once throwGolfballToBin:dodgeball) )
        )
        (or
          (>= 1 (count-once-per-objects throwGolfballToBin:beachball) )
          (> (count-once-per-objects throwGolfballToBin:red) (count-once-per-external-objects throwGolfballToBin:dodgeball) )
          (>= 10 5 )
        )
        (>= (count throwGolfballToBin:dodgeball:pink) (- (count-once-per-objects throwGolfballToBin:yellow:green) )
        )
      )
    )
    (or
      (and
        (or
          (not
            (>= (total-score) (total-score) )
          )
          (= (count throwGolfballToBin:white:yellow) 2 )
        )
        (>= (external-forall-maximize (count-shortest throwGolfballToBin) ) (* 2 (count-once throwGolfballToBin:pink:blue_pyramid_block) )
        )
        (>= (* (* (> (* (* (count throwGolfballToBin:dodgeball) (count-measure throwGolfballToBin:hexagonal_bin) )
                  (+ 2 (count throwGolfballToBin:dodgeball:red) )
                )
                50
              )
              (- (* (count-once-per-objects throwGolfballToBin:dodgeball:red) (count throwGolfballToBin:yellow) )
              )
            )
            (count-overlapping throwGolfballToBin:beachball)
          )
          10
        )
      )
      (or
        (or
          (>= 2 (total-time) )
        )
      )
      (>= (count-once throwGolfballToBin:side_table) 8 )
    )
  )
)
(:scoring
  (count throwGolfballToBin:basketball)
)
)



(define (game game-id-568) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds desk)
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c - wall ?b4 ?d ?h ?h - hexagonal_bin ?b - block)
        (then
          (hold (agent_holds ?b) )
          (hold-while (and (in_motion ?b) (same_type ?b block) (not (in_motion ?b) ) ) (touch ?b ?b) )
          (hold (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count throwKnocksOverBear:basketball) (total-score) )
  )
)
(:scoring
  (count throwKnocksOverBear:pyramid_block:beachball)
)
)



(define (game game-id-569) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o1 - pyramid_block ?g - building)
      (exists (?p - ball)
        (exists (?o2 - block ?c1 - shelf ?b4 - dodgeball ?o - hexagonal_bin ?d1 - bridge_block)
          (game-conserved
            (agent_holds ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?c - shelf)
        (at-end
          (not
            (in ?c ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (+ 5 5 5 (count baseBlockInTowerAtEnd:hexagonal_bin) 10 5 )
)
)



(define (game game-id-570) (:domain many-objects-room-v1)
(:setup
  (exists (?o5 - hexagonal_bin)
    (exists (?h - tall_cylindrical_block)
      (forall (?c - hexagonal_bin ?b5 - game_object ?c - cube_block)
        (exists (?b - hexagonal_bin)
          (and
            (forall (?c1 - triangular_ramp)
              (and
                (forall (?h - dodgeball ?o2 - cube_block)
                  (and
                    (game-conserved
                      (and
                        (in_motion ?h)
                        (on floor ?o5)
                      )
                    )
                    (exists (?d ?l1 - chair)
                      (forall (?c - hexagonal_bin ?o3 ?p3 - block)
                        (exists (?b2 - shelf ?o ?c3 - (either key_chain cylindrical_block) ?h - (either cube_block desktop))
                          (exists (?p3 - chair ?db - hexagonal_bin)
                            (and
                              (exists (?o - (either pyramid_block alarm_clock) ?c2 - dodgeball)
                                (and
                                  (game-conserved
                                    (in_motion ?o2)
                                  )
                                  (forall (?b - desk_shelf ?c1 - game_object)
                                    (or
                                      (game-optional
                                        (in ?db ?o3)
                                      )
                                      (forall (?c4 - block)
                                        (and
                                          (forall (?ob - (either cd bridge_block) ?f - hexagonal_bin ?h - dodgeball ?c6 - curved_wooden_ramp)
                                            (forall (?b2 - hexagonal_bin ?p2 ?d - curved_wooden_ramp)
                                              (game-conserved
                                                (not
                                                  (on ?o3 ?c6)
                                                )
                                              )
                                            )
                                          )
                                          (exists (?d - cube_block)
                                            (game-optional
                                              (and
                                                (on ?c4 ?o3)
                                                (agent_holds ?o3)
                                                (adjacent desk ?h)
                                              )
                                            )
                                          )
                                          (exists (?d - dodgeball)
                                            (game-conserved
                                              (in_motion top_shelf)
                                            )
                                          )
                                          (and
                                            (game-optional
                                              (agent_holds ?p3)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (exists (?w2 - dodgeball)
                      (exists (?p - (either hexagonal_bin dodgeball))
                        (and
                          (and
                            (exists (?b2 - block)
                              (forall (?b - hexagonal_bin)
                                (and
                                  (game-optional
                                    (agent_holds green_golfball)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (in_motion ?c1)
                )
              )
            )
            (game-conserved
              (not
                (in ?o5 ?c)
              )
            )
            (forall (?c2 - hexagonal_bin)
              (and
                (and
                  (and
                    (game-optional
                      (on ?b ?b)
                    )
                  )
                  (exists (?ob - (either basketball))
                    (game-conserved
                      (not
                        (on ?c ?o5)
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (in_motion ?h)
                    (not
                      (agent_holds ?b)
                    )
                  )
                )
                (and
                  (forall (?h - cube_block)
                    (forall (?h - hexagonal_bin ?b2 - cube_block)
                      (game-optional
                        (< (distance ?b ?b2) 1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?s ?c2 - dodgeball ?r - game_object)
        (then
          (once (and (agent_holds ?r) (not (in_motion floor) ) ) )
          (hold (agent_holds ?r) )
          (hold (in ?r ?r) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?b - dodgeball)
        (then
          (hold (on ?b ?b) )
          (hold (agent_holds ?b) )
          (once (and (in_motion ?b) (and (or (and (same_color ?b ?b) (not (agent_holds ?b) ) ) (on ?b ?b) ) (and (in_motion ?b) (object_orientation ?b upright) (in ?b floor) ) ) (in ?b ?b) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?f - dodgeball ?c1 - (either dodgeball book))
        (then
          (hold (and (agent_holds ?c1) (in_motion ?c1) (on ?c1 ?c1) ) )
          (hold (agent_holds ?c1) )
          (hold (in_motion bed) )
        )
      )
    )
    (preference thrownObjectHitsComputer
      (exists (?d ?s - dodgeball)
        (at-end
          (not
            (agent_holds ?s)
          )
        )
      )
    )
    (forall (?b3 - teddy_bear)
      (and
        (preference bigObjectThrownToBed
          (then
            (once (agent_holds ?b3) )
            (hold (and (agent_crouches ) (agent_holds ?b3) ) )
            (once (agent_holds ?b3) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-shortest bigObjectThrownToBed:pink_dodgeball) )
)
(:scoring
  (count-once-per-objects ballNeverThrown:tan)
)
)



(define (game game-id-571) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (< 8 2)
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?c2 - pillow)
        (at-end
          (and
            (is_setup_object ?c2)
            (not
              (in_motion ?c2)
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?d - hexagonal_bin)
            (at-end
              (not
                (not
                  (and
                    (not
                      (and
                        (in_motion ?b)
                        (and
                          (and
                            (in_motion rug)
                          )
                          (agent_holds ?d)
                        )
                      )
                    )
                    (on ?b ?b)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 6 )
)
(:scoring
  (count throwInBin:dodgeball)
)
)



(define (game game-id-572) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?s - wall ?h - cube_block)
      (not
        (and
          (game-optional
            (on ?h ?h)
          )
          (and
            (game-conserved
              (agent_holds rug)
            )
          )
          (game-conserved
            (and
              (not
                (on ?h ?h)
              )
              (and
                (agent_holds ?h)
                (in_motion ?h)
              )
              (and
                (and
                  (adjacent_side ?h front_left_corner ?h)
                  (in_motion ?h)
                )
                (not
                  (on ?h agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?d - dodgeball ?l - building)
        (at-end
          (in_motion ?l)
        )
      )
    )
    (preference dodgeballsInPlace
      (exists (?c2 ?c4 ?d2 - (either dodgeball cube_block))
        (then
          (hold (game_over ) )
          (once (or (in ?c4 ?d2) (object_orientation ?c4 sideways) ) )
          (once (on ?c2 ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects dodgeballsInPlace:red) 2 )
)
(:scoring
  (* 5 2 )
)
)



(define (game game-id-573) (:domain medium-objects-room-v1)
(:setup
  (forall (?w1 - block)
    (forall (?o - dodgeball)
      (exists (?b10 - chair)
        (game-optional
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?b - (either blue_cube_block cd) ?b8 - pyramid_block ?c - shelf)
        (then
          (once (not (adjacent_side ?c front_left_corner ?c) ) )
          (once (agent_holds ?c) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (and
    (and
      (>= 10 (total-time) )
      (>= 20 6 )
      (> 2 (+ (+ (count thrownBallHitsBlock:yellow_cube_block) 1 0 )
          (= (count thrownBallHitsBlock:basketball) (* (count thrownBallHitsBlock:pyramid_block) (count thrownBallHitsBlock:blue_dodgeball) )
            (count thrownBallHitsBlock:pyramid_block:basketball)
          )
        )
      )
    )
  )
)
(:scoring
  (count-once thrownBallHitsBlock:blue_dodgeball)
)
)



(define (game game-id-574) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (object_orientation pink diagonal)
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b - hexagonal_bin)
        (then
          (hold-while (in_motion ?b) (not (and (in_motion ?b) (on ?b ?b) ) ) (and (< 10 (distance_side room_center left floor)) (and (on ?b ?b) (agent_holds rug) ) ) )
          (hold (and (agent_holds ?b) (touch ?b top_drawer) (agent_holds ?b) (in ?b ?b) (not (on bed ?b) ) (and (in_motion agent) (agent_holds ?b) ) (in ?b ?b) ) )
          (once (between ?b ?b ?b) )
        )
      )
    )
    (forall (?b10 - dodgeball)
      (and
        (preference teddyBearHitsBall
          (exists (?c3 - cube_block ?b1 - hexagonal_bin ?d2 - curved_wooden_ramp)
            (then
              (hold (in_motion ?b10) )
              (once (agent_holds ?b10) )
              (hold (in ?b10 ?b10) )
            )
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?o - curved_wooden_ramp)
        (then
          (hold-while (agent_holds ?o) (agent_holds ?o) (not (rug_color_under ?o light_blue) ) (not (or (and (touch ?o brown) (and (agent_holds agent) (not (and (open ?o) (in ?o ?o) ) ) ) ) (and (and (not (touch ?o ?o) ) (< (distance ?o ?o) (distance_side bed front ?o)) ) (adjacent desk bed) ) ) ) )
          (once (in_motion rug) )
          (once (game_over ) )
        )
      )
    )
    (forall (?c4 - (either pillow pyramid_block))
      (and
        (preference throwFromEdgeOfRug
          (exists (?r1 - hexagonal_bin)
            (then
              (once (not (and (game_over ) (agent_holds ?c4) ) ) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?o - wall)
        (then
          (once (not (and (on ?o agent) (exists (?r - block) (and (game_start ) (game_start ) (adjacent desk ?o) ) ) (not (not (equal_x_position desk ?o) ) ) (agent_holds ?o) (adjacent_side ?o right ?o) (and (and (forall (?h - triangular_ramp) (and (agent_holds ?o) (not (in ?h ?h) ) (not (in_motion ?o) ) ) ) (and (adjacent room_center ?o) (and (not (not (agent_holds ?o) ) ) (not (broken agent) ) ) ) (in_motion agent) ) (in_motion ?o) ) ) ) )
          (once (agent_holds ?o) )
          (hold (on ?o ?o) )
        )
      )
    )
    (preference throwInBin
      (exists (?c1 - beachball)
        (then
          (once (adjacent room_center ?c1) )
          (once (adjacent_side west_wall back ?c1) )
          (hold (agent_holds rug) )
          (hold (not (agent_holds ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (+ (+ 6 (= 10 5 )
    )
    (external-forall-maximize
      (count-once ballThrownIntoTarget:pink)
    )
    (+ 7 2 )
  )
)
)



(define (game game-id-575) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - (either dodgeball doggie_bed dodgeball) ?c - hexagonal_bin)
      (exists (?b - ball)
        (game-conserved
          (adjacent room_center ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - dodgeball)
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (not (adjacent_side desk back ?h) ) )
              (once (faces ?l ?l) )
              (once (in ?h ?l) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (+ (count throwObjectToBin) (count-once-per-objects throwObjectToBin:pink_dodgeball) )
      (* (* 5 (count throwObjectToBin:red) )
        (>= -10 8 )
        (- (* (* 3 10 )
            (* (* (count-once throwObjectToBin:basketball) (count throwObjectToBin) )
              (count throwObjectToBin:yellow)
            )
          )
        )
        9
        (count-overlapping throwObjectToBin:hexagonal_bin)
        (external-forall-maximize
          (count-once-per-objects throwObjectToBin:green)
        )
        (count throwObjectToBin:beachball)
        (= (count throwObjectToBin:yellow) (count throwObjectToBin:golfball:dodgeball) (count-increasing-measure throwObjectToBin:alarm_clock) )
        (-
          (> 8 (count-once throwObjectToBin:beachball:dodgeball) )
          (* (* (< (/ 6 (count throwObjectToBin:orange:red) ) (+ (external-forall-maximize (count throwObjectToBin:red) ) (* (count throwObjectToBin:white) 20 )
                )
              )
              (/
                (count throwObjectToBin:dodgeball)
                15
              )
            )
            2
            10
            (+ (+ (count-once-per-external-objects throwObjectToBin:golfball) (= (+ (* 3 (* 20 (count-shortest throwObjectToBin:yellow_pyramid_block) )
                    )
                    2
                    (+ (count throwObjectToBin:red:tall_cylindrical_block) (+ (* (count throwObjectToBin:red) (* 1 (count throwObjectToBin:red) (* (count-longest throwObjectToBin:pink) )
                            (count-overlapping throwObjectToBin:dodgeball:blue_dodgeball)
                          )
                        )
                        (+ 15 )
                      )
                    )
                    3
                  )
                  4
                  (= (* 3 (* (count-measure throwObjectToBin:blue_dodgeball) 60 )
                    )
                    (count throwObjectToBin:orange)
                  )
                )
              )
              (+ 2 (+ (count-overlapping throwObjectToBin:yellow) 10 (- 3 )
                )
                (* (count-once-per-objects throwObjectToBin:beachball) (= 4 2 )
                )
              )
            )
          )
        )
        2
        5
        -30
      )
    )
    (>= (total-time) (total-score) )
  )
)
(:scoring
  (* 3 (count-once-per-objects throwObjectToBin:yellow:red) )
)
)



(define (game game-id-576) (:domain medium-objects-room-v1)
(:setup
  (exists (?l3 - (either blue_cube_block wall) ?c3 - cube_block)
    (game-conserved
      (in_motion ?c3)
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - triangular_ramp)
        (then
          (hold (in_motion desk) )
          (once (and (agent_holds ?h) (adjacent ?h ?h) ) )
          (once (not (touch ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 10 (count-once-per-objects bookOnDeskShelf:dodgeball) )
    3
  )
)
(:scoring
  (* (count-increasing-measure bookOnDeskShelf:pink_dodgeball) (count-once-per-objects bookOnDeskShelf:green) )
)
)



(define (game game-id-577) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?o4 - (either pyramid_block hexagonal_bin hexagonal_bin))
      (exists (?l4 - beachball)
        (exists (?c - game_object)
          (exists (?t - (either desktop bridge_block basketball))
            (game-optional
              (rug_color_under ?t light_blue)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c1 - shelf ?c - dodgeball)
      (and
        (preference thrownBallHitsBlock
          (exists (?r - shelf)
            (then
              (once (agent_holds ?c) )
              (once (in_motion ?r) )
              (hold (in_motion ?r) )
            )
          )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?o2 - doggie_bed ?l1 - building)
        (then
          (once (and (and (adjacent ?l1 ?l1) (not (in ?l1 ?l1) ) ) (exists (?tb - (either book pen cube_block)) (adjacent ?tb ?tb) ) ) )
          (once (not (adjacent desk ?l1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-score) )
)
(:scoring
  (* (count thrownBallHitsBlock:basketball) (count thrownBallHitsBlock:green) )
)
)



(define (game game-id-578) (:domain many-objects-room-v1)
(:setup
  (exists (?l ?o1 ?h - hexagonal_bin)
    (game-optional
      (rug_color_under bed light_blue)
    )
  )
)
(:constraints
  (and
    (forall (?b - cube_block ?d - triangular_ramp)
      (and
        (preference rollBallToBin
          (exists (?l1 ?o5 - block)
            (then
              (once (agent_holds ?l1) )
              (once (rug_color_under rug pink) )
              (hold (not (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 8 2 )
  )
)
(:scoring
  (count-once-per-objects rollBallToBin:basketball:hexagonal_bin)
)
)



(define (game game-id-579) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?z ?z0 ?z1 - (either front_left_corner right))
      (and
        (exists (?b1 - curved_wooden_ramp)
          (game-conserved
            (exists (?y - (either upright upright upright))
              (not
                (agent_holds ?b1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?c4 - hexagonal_bin ?o3 - cube_block)
        (at-end
          (same_object bed ?o3)
        )
      )
    )
    (forall (?b8 - dodgeball)
      (and
        (preference castleBuilt
          (exists (?h - (either golfball mug) ?b6 - chair)
            (then
              (once (touch ?b6 ?b8) )
              (hold (and (not (game_over ) ) (agent_holds ?b8) ) )
              (once (on ?b8 ?b6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count-longest ballThrownFromRug:pink) 0.7 )
  )
)
(:scoring
  (count ballThrownFromRug:red:dodgeball)
)
)



(define (game game-id-580) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (not
        (agent_holds agent)
      )
    )
    (forall (?b8 - (either laptop wall))
      (game-optional
        (not
          (adjacent room_center ?b8)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - hexagonal_bin)
      (and
        (preference objectsHidden
          (then
            (once (agent_holds ?t) )
            (once (or (agent_holds ?t) ) )
            (hold (same_object ?t ?t) )
          )
        )
        (preference blockFromRugToDesk
          (exists (?d1 - hexagonal_bin)
            (at-end
              (and
                (in_motion ?d1)
                (and
                  (in_motion ?d1)
                  (and
                    (in ?d1 ?t)
                    (agent_holds ?d1)
                    (and
                      (game_over )
                      (not
                        (not
                          (agent_holds ?d1)
                        )
                      )
                    )
                    (not
                      (= (distance ?t ?t) 10)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (* 6 (* (count objectsHidden:basketball) (count-unique-positions blockFromRugToDesk:basketball:basketball) (= (count objectsHidden:pink_dodgeball:alarm_clock) (count objectsHidden:basketball) (count blockFromRugToDesk:green) )
            (count-once-per-objects blockFromRugToDesk:yellow_pyramid_block:pink)
          )
          (* (* (count blockFromRugToDesk:hexagonal_bin) (count objectsHidden:yellow) )
            (count objectsHidden:top_drawer)
          )
        )
        15
      )
    )
    (> 0 (count objectsHidden:dodgeball:basketball) )
  )
)
(:scoring
  (count objectsHidden:green:golfball)
)
)



(define (game game-id-581) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - (either bed alarm_clock))
    (game-conserved
      (not
        (touch ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?h - beachball ?c2 - teddy_bear)
        (then
          (once (not (in_motion ?c2) ) )
        )
      )
    )
    (preference castleBuilt
      (exists (?bl ?l2 ?h - wall ?b - building)
        (then
          (once (in ?b ?b) )
          (once (not (and (> 9 (distance ?b ?b)) (and (on ?b ?b) (and (adjacent ?b ?b) (not (not (on ?b ?b) ) ) (and (< (distance ?b agent) 9) (in ?b ?b) (agent_holds ?b) (and (rug_color_under ?b gray) (not (and (and (and (< 0.5 3) (and (in_motion ?b) (not (not (agent_holds ?b) ) ) ) ) (touch ?b ?b) ) (agent_holds ?b) (agent_holds ?b) ) ) ) (not (object_orientation ?b upright) ) (forall (?d - hexagonal_bin) (object_orientation agent diagonal) ) (in_motion ?b) (touch ?b ?b) (agent_holds ?b) (< 1 (distance ?b rug)) ) ) ) ) ) )
          (hold (not (agent_holds ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (- 2 )
    3
  )
)
(:scoring
  (count castleBuilt:beachball:beachball)
)
)



(define (game game-id-582) (:domain many-objects-room-v1)
(:setup
  (not
    (game-conserved
      (<= 2 1)
    )
  )
)
(:constraints
  (and
    (preference tanObjectMovedToRoomCenter
      (exists (?o - (either tall_cylindrical_block golfball book basketball))
        (then
          (once (in ?o ?o) )
          (once (and (adjacent_side desk front ?o) (not (and (equal_x_position room_center ?o) (agent_holds ?o) ) ) ) )
          (once (between ?o ?o ?o) )
        )
      )
    )
    (preference otherObjectsOnDeskShelf
      (exists (?f ?h ?ob - (either golfball alarm_clock pyramid_block))
        (then
          (once (= (distance ?h ?h)) )
          (hold (in_motion desk) )
          (once (is_setup_object desk) )
          (once (in_motion ?ob) )
          (hold (not (in blue ?ob) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-once-per-objects tanObjectMovedToRoomCenter:red:book) )
    (>= 100 (count tanObjectMovedToRoomCenter:blue_dodgeball) )
    (>= (total-time) (total-time) )
  )
)
(:scoring
  (count-once-per-objects tanObjectMovedToRoomCenter:yellow)
)
)



(define (game game-id-583) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o5 - chair)
      (and
        (forall (?b9 - wall)
          (exists (?f - shelf)
            (or
              (and
                (exists (?c - doggie_bed)
                  (exists (?b ?d2 - hexagonal_bin)
                    (exists (?t - building ?r - doggie_bed)
                      (and
                        (forall (?c - (either doggie_bed tall_cylindrical_block))
                          (forall (?b - hexagonal_bin ?p1 - red_dodgeball ?b4 - block ?r1 - shelf ?h - pillow)
                            (game-conserved
                              (not
                                (agent_holds rug)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (agent_holds bed)
                    (in_motion ?b9)
                  )
                )
                (and
                  (forall (?f - game_object)
                    (exists (?tb ?l - game_object ?b1 - wall ?c3 - teddy_bear ?f - chair)
                      (game-conserved
                        (not
                          (not
                            (not
                              (not
                                (agent_holds ?f)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (forall (?b3 - (either pillow pyramid_block) ?p1 - (either yellow_cube_block mug))
                    (exists (?h ?h - (either blue_cube_block cellphone cd) ?g - block)
                      (game-conserved
                        (< (distance ?b9 agent) 1)
                      )
                    )
                  )
                )
              )
              (and
                (forall (?d - hexagonal_bin)
                  (game-conserved
                    (agent_holds ?f)
                  )
                )
                (game-conserved
                  (between ?b9 ?o5 ?o5)
                )
              )
            )
          )
        )
      )
    )
    (exists (?d ?b - dodgeball)
      (and
        (forall (?b - shelf ?h - hexagonal_bin)
          (game-optional
            (or
              (agent_holds ?b)
            )
          )
        )
        (game-conserved
          (agent_holds ?d)
        )
      )
    )
    (exists (?o2 - shelf ?b8 - red_dodgeball)
      (exists (?g - hexagonal_bin ?d - curved_wooden_ramp)
        (game-conserved
          (and
            (equal_x_position door ?d)
            (and
              (and
                (and
                  (in_motion ?b8)
                  (in_motion floor)
                  (in_motion ?d)
                  (agent_holds ?b8)
                  (agent_holds ?d)
                  (forall (?d - (either mug pencil book))
                    (in_motion ?b8)
                  )
                  (not
                    (in ?b8 ?d)
                  )
                )
                (on ?b8 ?b8)
              )
              (touch agent ?d)
            )
            (agent_holds ?d)
            (on ?b8 ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?l ?h - cube_block ?b - game_object)
        (then
          (hold (is_setup_object ?b) )
          (once (is_setup_object ?b) )
          (hold (touch ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count throwToBin:blue_dodgeball) )
)
(:scoring
  (count-longest throwToBin:basketball)
)
)



(define (game game-id-584) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - curved_wooden_ramp ?db - doggie_bed)
    (and
      (forall (?b - wall)
        (exists (?w1 - block)
          (forall (?h - game_object)
            (game-optional
              (same_type ?db ?h)
            )
          )
        )
      )
      (and
        (and
          (game-conserved
            (in_motion ?db)
          )
          (game-conserved
            (and
              (same_object ?db agent)
              (in ?db ?db)
              (not
                (in_motion ?db)
              )
              (in_motion desk)
            )
          )
          (and
            (game-optional
              (agent_holds ?db)
            )
            (game-optional
              (and
                (and
                  (and
                    (and
                      (on ?db ?db)
                      (or
                        (on ?db ?db)
                      )
                      (not
                        (on ?db ?db)
                      )
                      (in_motion ?db)
                    )
                    (and
                      (and
                        (agent_holds ?db)
                        (same_object ?db ?db)
                      )
                    )
                  )
                  (and
                    (<= 1 1)
                    (not
                      (agent_holds ?db)
                    )
                  )
                )
                (not
                  (agent_holds ?db)
                )
              )
            )
            (game-optional
              (and
                (in ?db ?db)
                (and
                  (agent_holds floor)
                  (not
                    (not
                      (agent_holds ?db)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?d - (either basketball doggie_bed))
          (game-conserved
            (and
              (and
                (adjacent room_center bed)
                (not
                  (above ?d agent)
                )
              )
              (in_motion ?d)
            )
          )
        )
      )
      (not
        (exists (?b5 ?c ?d - beachball)
          (and
            (not
              (and
                (and
                  (game-conserved
                    (and
                      (agent_holds ?c)
                      (not
                        (agent_holds ?d)
                      )
                    )
                  )
                  (exists (?l - hexagonal_bin)
                    (forall (?o - block ?r - (either golfball cube_block))
                      (game-conserved
                        (not
                          (<= 1 6)
                        )
                      )
                    )
                  )
                )
              )
            )
            (forall (?h - dodgeball)
              (game-conserved
                (on ?d ?c)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?r - chair)
        (then
          (once (in_motion ?r) )
          (hold (in_motion ?r) )
          (once (not (toggled_on ?r) ) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b - block)
        (then
          (once (in_motion ?b) )
          (once (agent_holds ?b) )
          (once (and (agent_holds ?b) (or (touch top_drawer ?b) (or (same_color ?b ?b) (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (total-score) )
    (<= (total-time) 6 )
  )
)
(:scoring
  (+ (count-once blockPlacedInBuilding:yellow:yellow) 3 )
)
)



(define (game game-id-585) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (forall (?o3 - cube_block)
      (and
        (preference throwBallToBin
          (exists (?p2 - building)
            (at-end
              (and
                (same_color ?p2 ?p2)
                (and
                  (< 7 6)
                  (agent_holds ?o3)
                )
              )
            )
          )
        )
      )
    )
    (forall (?w1 - hexagonal_bin ?c4 - teddy_bear)
      (and
        (preference dodgeballHitsBin
          (exists (?p ?d - (either golfball key_chain))
            (then
              (hold (< 2 1) )
              (once (agent_holds ?d) )
              (hold (in_motion ?c4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 3 (count-once-per-external-objects dodgeballHitsBin:pink) )
    )
    (> (count dodgeballHitsBin) (total-score) )
    (>= (* (count-once-per-objects throwBallToBin:yellow:golfball) 2 )
      1
    )
  )
)
(:scoring
  (count-once dodgeballHitsBin:basketball)
)
)



(define (game game-id-586) (:domain many-objects-room-v1)
(:setup
  (forall (?b - shelf)
    (game-optional
      (< (distance bed ?b) (distance ?b ?b))
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?h - (either cellphone hexagonal_bin))
        (then
          (hold (on ?h ?h) )
          (once (touch ?h ?h) )
          (hold (and (not (agent_holds ?h) ) (in ?h floor) (adjacent desk rug) ) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?c4 - pyramid_block)
        (then
          (once (or (adjacent bed ?c4) (> 9 1) ) )
          (once (broken ?c4) )
          (once (in ?c4 ?c4) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count beachballOnRug:beachball) )
)
(:scoring
  (count-once-per-objects beachballOnRug:basketball)
)
)



(define (game game-id-587) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (forall (?h - beachball)
      (forall (?c6 - dodgeball)
        (and
          (forall (?h - triangular_ramp)
            (exists (?b - chair ?l2 - curved_wooden_ramp)
              (and
                (exists (?l - dodgeball ?g - chair ?r - teddy_bear ?c - hexagonal_bin)
                  (game-optional
                    (and
                      (and
                        (not
                          (in_motion desk)
                        )
                        (in_motion ?c)
                        (and
                          (<= 8 (distance_side door back ?h))
                          (and
                            (in_motion ?c6)
                            (and
                              (exists (?o - cube_block ?b5 - hexagonal_bin)
                                (agent_holds ?l2)
                              )
                              (agent_holds ?c6)
                            )
                          )
                        )
                        (and
                          (and
                            (same_color rug ?c)
                            (in_motion floor)
                          )
                          (and
                            (is_setup_object ?h)
                            (in_motion ?c)
                          )
                        )
                      )
                      (on agent ?h)
                      (in ?h ?h)
                    )
                  )
                )
                (and
                  (forall (?o - beachball)
                    (forall (?p - building)
                      (game-optional
                        (agent_holds ?h)
                      )
                    )
                  )
                )
                (exists (?p - hexagonal_bin)
                  (exists (?h - hexagonal_bin)
                    (forall (?o3 - dodgeball ?h - dodgeball)
                      (not
                        (exists (?h ?d - teddy_bear)
                          (forall (?b - triangular_ramp ?c - pyramid_block)
                            (forall (?g - doggie_bed)
                              (exists (?o1 - block)
                                (and
                                  (game-conserved
                                    (in ?c ?c6)
                                  )
                                  (game-conserved
                                    (in_motion ?d)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?w2 - hexagonal_bin ?l4 ?h ?w2 ?w2 ?h ?b - hexagonal_bin)
        (then
          (once (touch ?b ?b) )
          (once-measure (adjacent bed ?b) (distance ?h ?l4) )
          (hold (on green_golfball ?w2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 5 50 )
    (>= (= (* 40 (count-once throwBallToDoggieBedOffWall:yellow) )
        (count throwBallToDoggieBedOffWall:red)
      )
      (total-time)
    )
  )
)
(:scoring
  (count-increasing-measure throwBallToDoggieBedOffWall:hexagonal_bin)
)
)



(define (game game-id-588) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p1 - drawer)
      (game-conserved
        (and
          (game_start )
          (open ?p1)
          (touch ?p1 top_drawer)
        )
      )
    )
    (exists (?p2 - teddy_bear ?o - game_object)
      (forall (?c4 - doggie_bed)
        (and
          (game-optional
            (in_motion ?c4)
          )
        )
      )
    )
    (exists (?bl - block)
      (exists (?t - dodgeball)
        (exists (?g - doggie_bed)
          (game-optional
            (not
              (not
                (not
                  (touch agent ?t)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r2 - hexagonal_bin)
      (and
        (preference itemsBroken
          (exists (?r2 ?d - hexagonal_bin ?db - shelf)
            (then
              (once (object_orientation ?db upside_down) )
              (once (and (on bottom_shelf ?db) (game_over ) ) )
              (hold (in_motion agent) )
            )
          )
        )
      )
    )
    (preference woodenBlockMovedFromRugToDesk
      (exists (?g ?o5 - dodgeball)
        (then
          (once-measure (adjacent_side desk back ?o5) (distance ?g ?o5) )
          (once (not (not (exists (?l - cube_block) (in_motion ?g) ) ) ) )
          (hold (game_over ) )
        )
      )
    )
    (preference throwAttemptFromDoor
      (exists (?bl ?b ?p3 ?c5 - cube_block)
        (then
          (once (< 1 9) )
          (hold (in_motion ?bl) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (>= (count throwAttemptFromDoor:green) (* 15 (count itemsBroken:hexagonal_bin) 10 3 (count-once-per-objects itemsBroken:tall_cylindrical_block) (* (count-total woodenBlockMovedFromRugToDesk:green) (* (* (count itemsBroken:blue_dodgeball:green) 2 )
              (count itemsBroken:red_pyramid_block)
              2
            )
          )
          15
          (* (* (count throwAttemptFromDoor:pink:dodgeball) 1 )
            (count throwAttemptFromDoor:pink)
          )
          (+ 5 8 )
        )
      )
    )
    (>= 10 5 )
  )
)
(:scoring
  (count-once-per-objects throwAttemptFromDoor:blue:dodgeball)
)
)



(define (game game-id-589) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c4 - curved_wooden_ramp)
      (exists (?bl - ball)
        (and
          (forall (?b - dodgeball ?b - chair ?c1 - dodgeball ?c6 - game_object)
            (exists (?b - doggie_bed)
              (and
                (game-optional
                  (not
                    (on ?b ?b)
                  )
                )
              )
            )
          )
          (and
            (and
              (exists (?x ?x0 ?x1 - pink)
                (exists (?t1 - game_object)
                  (game-optional
                    (agent_holds ?c4)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?b5 - hexagonal_bin)
        (at-end
          (agent_holds ?b5)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 6 (external-forall-maximize (count throwAttemptKnocksBlock:basketball) ) )
      (count-once-per-objects throwAttemptKnocksBlock:dodgeball:tall_cylindrical_block)
    )
    (>= (total-score) (count-measure throwAttemptKnocksBlock:hexagonal_bin:green:red) )
  )
)
(:scoring
  (* (* 0 2 )
    (* (count-same-positions throwAttemptKnocksBlock:red) (+ 5 2 )
    )
    (count-once-per-external-objects throwAttemptKnocksBlock:side_table)
  )
)
)



(define (game game-id-590) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - dodgeball)
    (game-conserved
      (not
        (agent_holds ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?b9 - shelf)
            (then
              (hold (and (not (and (not (in ?b9 ?b) ) (< (distance_side ?b front_left_corner ?b) 1) ) ) (touch ?b9 desk) (on ?b9 ?b9) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 10 )
)
(:scoring
  (count-once-per-objects greenObjectMovedToRoomCenter)
)
)



(define (game game-id-591) (:domain few-objects-room-v1)
(:setup
  (exists (?c - chair)
    (exists (?r - ball)
      (exists (?b8 - flat_block)
        (game-conserved
          (on ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?d - dodgeball ?o2 - blue_cube_block)
        (then
          (hold (and (equal_z_position room_center ?o2) (agent_holds ?o2) (in_motion ?o2) ) )
          (once (touch ?o2 ?o2) )
          (hold-while (> (x_position ?o2) (distance ?o2 ?o2)) (agent_holds ?o2) (in_motion agent) (< (distance desk ?o2) 1) )
        )
      )
    )
  )
)
(:terminal
  (<= (+ 15 )
    3
  )
)
(:scoring
  (count throwAttemptFromBehindBlock:red)
)
)



(define (game game-id-592) (:domain many-objects-room-v1)
(:setup
  (exists (?g - red_dodgeball)
    (game-conserved
      (in_motion ?g)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?s - (either lamp key_chain) ?d - watch)
        (then
          (once (agent_holds ?d) )
          (once (same_color ?d ?d) )
          (once (not (in_motion ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttempt:basketball) (count-overlapping throwAttempt) )
)
(:scoring
  (count-once-per-objects throwAttempt:red:dodgeball)
)
)



(define (game game-id-593) (:domain medium-objects-room-v1)
(:setup
  (exists (?h ?b5 ?b ?o5 - dodgeball)
    (exists (?h - (either side_table dodgeball golfball))
      (and
        (exists (?c ?c5 ?c ?l ?c1 - (either flat_block dodgeball))
          (game-conserved
            (and
              (is_setup_object ?l)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - (either cellphone yellow_cube_block))
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?c1 - bridge_block)
            (then
              (once (not (in_motion ?c1) ) )
              (once (on ?c1 ?c1) )
              (once (game_start ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (count golfballLandsInBinThroughRamp:basketball) (count golfballLandsInBinThroughRamp:dodgeball) )
)
(:scoring
  (+ (* (count-once-per-objects golfballLandsInBinThroughRamp:red) (+ (count-once-per-external-objects golfballLandsInBinThroughRamp:basketball) (count golfballLandsInBinThroughRamp:dodgeball) (* (count golfballLandsInBinThroughRamp:red_pyramid_block) (count-once golfballLandsInBinThroughRamp:basketball) )
      )
    )
    (* (count-once golfballLandsInBinThroughRamp:dodgeball) (count-once golfballLandsInBinThroughRamp:golfball) )
    (count golfballLandsInBinThroughRamp:beachball:dodgeball)
    (count golfballLandsInBinThroughRamp:dodgeball:hexagonal_bin)
    3
    (count golfballLandsInBinThroughRamp:white)
  )
)
)



(define (game game-id-594) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - block ?l1 - game_object)
    (forall (?c1 - hexagonal_bin)
      (exists (?p3 - curved_wooden_ramp)
        (exists (?r - chair ?o - (either golfball cd))
          (forall (?o1 - game_object ?h ?b - hexagonal_bin ?b5 - building)
            (and
              (game-optional
                (in_motion ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?d1 - ball ?d - dodgeball ?h - dodgeball ?d1 - hexagonal_bin)
        (then
          (once (and (and (and (faces ?d1 ?d1) (and (and (< 9 6) (not (not (not (not (and (and (agent_holds green) (and (in_motion ?d1) (not (touch ?d1 ?d1) ) ) (not (game_start ) ) (not (not (and (not (in_motion ?d1) ) (and (and (and (agent_holds ?d1) (adjacent bed ?d1) ) (in_motion side_table) ) (not (in ?d1 ?d1) ) ) ) ) ) (touch ?d1 ?d1) (agent_holds ?d1) (agent_holds ?d1) ) (and (equal_z_position desk ?d1) (not (not (not (and (and (and (in_motion ?d1) (and (= 1 (distance room_center ?d1)) (not (adjacent ?d1 ?d1) ) ) (touch ?d1 ?d1) ) (agent_holds ?d1) ) (adjacent green_golfball desk) ) ) ) ) (not (and (game_over ) (in_motion rug) ) ) ) ) ) ) ) ) ) ) ) (agent_holds ?d1) ) (in_motion desk) (and (in ?d1 ?d1) ) ) )
          (hold (> (distance bed ?d1) 1) )
          (once (and (and (touch agent ?d1) (in_motion tan) (and (not (in_motion ?d1) ) (opposite ?d1 ?d1) ) ) (not (not (agent_holds ?d1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> 1 (+ 1 (count-unique-positions throwToDrawerOrBin:pink) )
  )
)
(:scoring
  (count throwToDrawerOrBin:pink)
)
)



(define (game game-id-595) (:domain few-objects-room-v1)
(:setup
  (exists (?c2 - (either wall bed))
    (game-conserved
      (in ?c2 west_wall)
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?h - bridge_block ?h - building ?c6 - dodgeball ?b6 - dodgeball)
        (then
          (hold (agent_holds ?b6) )
          (once (in desk bed) )
          (hold (touch ?b6 ?b6) )
        )
      )
    )
    (forall (?h - chair)
      (and
        (preference objectInBuilding
          (exists (?b4 - drawer ?d - block ?c5 - curved_wooden_ramp)
            (then
              (hold-while (exists (?b4 ?b1 - curved_wooden_ramp) (not (and (in_motion ?b1) (not (on agent ?h) ) (and (agent_holds ?h) (in_motion ?b4) ) ) ) ) (not (> (building_size ?c5) 0.5) ) (in_motion ?c5) )
              (hold (in ?h ?c5) )
              (once (on ?c5 ?c5) )
            )
          )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?c1 - building)
        (at-end
          (and
            (in_motion ?c1)
            (equal_z_position ?c1 ?c1)
            (above ?c1 ?c1)
          )
        )
      )
    )
    (forall (?b1 - drawer ?l3 - block)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (or (not (and (and (exists (?g - hexagonal_bin ?c2 - curved_wooden_ramp) (touch ?l3 ?l3) ) (and (in_motion ?l3) (above ?l3 ?l3) ) ) (agent_holds ?l3) ) ) ) )
            (once (not (not (and (and (adjacent ?l3 ?l3) (agent_holds agent) ) (not (in_motion ?l3) ) ) ) ) )
            (once (forall (?s - block) (in ?s ?s) ) )
          )
        )
        (preference throwBallToBin
          (exists (?o - (either pillow blue_cube_block))
            (then
              (hold (and (and (not (and (not (touch ?l3 ?o) ) (agent_holds ?o) ) ) (faces ?l3 ?l3) ) (touch ?o ?l3) ) )
              (once (in_motion ?l3) )
              (hold (not (and (not (touch ?o ?l3) ) (on ?l3 ?l3) ) ) )
            )
          )
        )
      )
    )
    (forall (?c ?c - hexagonal_bin)
      (and
        (preference ballThrownToWallToAgent
          (then
            (hold (agent_holds ?c) )
            (hold (not (not (touch ?c ?c) ) ) )
            (hold (in_motion floor) )
            (hold-while (and (in ?c ?c) (in_motion ?c) ) (on agent ?c) (or (< (distance room_center ?c) 2) (and (not (touch ?c ?c) ) (in_motion ?c) ) ) )
          )
        )
        (preference throwToDrawerOrBin
          (exists (?l - (either blue_cube_block lamp))
            (at-end
              (> (distance ?c ?c) (distance door ?l))
            )
          )
        )
      )
    )
    (forall (?z ?z0 ?z1 - back)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?h) )
              (once (faces ?h ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (- 2 )
        (* 1 (* (* (count blockInTowerAtEnd:yellow:dodgeball) (external-forall-maximize (count-same-positions ballThrownToWallToAgent:hexagonal_bin) ) )
            10
          )
          (+ 5 (- 8 )
          )
          (+ (- (* (count-unique-positions throwFromEdgeOfRug:hexagonal_bin) (count-once-per-objects objectInBuilding:beachball) )
            )
            (count throwFromEdgeOfRug:hexagonal_bin)
          )
        )
        (count throwToDrawerOrBin:basketball)
      )
      (count-once-per-objects golfballUnderBridgeWithoutTouchingBlock:dodgeball)
    )
    (* 3 18 )
  )
)
(:scoring
  (count-overlapping throwFromEdgeOfRug:pink)
)
)



(define (game game-id-596) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c4 - game_object)
      (and
        (game-conserved
          (in_motion ?c4)
        )
        (game-conserved
          (not
            (and
              (agent_holds ?c4)
              (not
                (touch ?c4 floor)
              )
              (and
                (adjacent ?c4 ?c4)
                (in ?c4 agent)
                (and
                  (in_motion ?c4)
                  (in_motion ?c4)
                )
                (game_start )
                (in_motion ?c4)
                (not
                  (rug_color_under ?c4 purple)
                )
              )
            )
          )
        )
        (game-conserved
          (agent_holds ?c4)
        )
      )
    )
    (forall (?l1 - hexagonal_bin)
      (exists (?c3 - dodgeball)
        (and
          (game-optional
            (not
              (and
                (not
                  (on ?c3 ?c3)
                )
                (in_motion ?c3)
              )
            )
          )
          (game-conserved
            (touch agent brown)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?b4 - doggie_bed)
        (at-end
          (and
            (is_setup_object ?b4)
            (and
              (< (distance room_center agent) (distance desk ?b4))
              (in ?b4 agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count objectToBinOnFirstTry:basketball) 5 )
)
(:scoring
  (* (* 2 5 10 5 3 0 )
    (count objectToBinOnFirstTry:red)
    (count objectToBinOnFirstTry:alarm_clock)
  )
)
)



(define (game game-id-597) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t ?b6 - hexagonal_bin ?c - ball)
      (game-optional
        (and
          (game_over )
          (in ?c ?c)
          (not
            (not
              (in_motion ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?r - hexagonal_bin)
        (at-end
          (forall (?r - (either ball curved_wooden_ramp chair blue_cube_block) ?b - watch)
            (in agent ?r)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= 180 (total-score) )
  )
)
(:scoring
  (count-once-per-objects ballThrowAttempt:red)
)
)



(define (game game-id-598) (:domain few-objects-room-v1)
(:setup
  (exists (?b5 - shelf ?h - (either pen))
    (game-conserved
      (< (distance door ?h) (distance bed ?h))
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?c - hexagonal_bin)
        (then
          (hold (same_color ?c ?c) )
          (once (in_motion ?c) )
          (once (and (in_motion ?c) (and (agent_holds ?c) (agent_holds ?c) ) ) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?d - ball ?o - hexagonal_bin)
        (then
          (once (and (in_motion bed) (not (and (agent_holds bed) (forall (?c - game_object) (not (and (in_motion ?o) (on ?c ?o) ) ) ) ) ) ) )
          (hold (agent_holds agent) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToDoggieBed:red:blue_dodgeball) (total-score) )
)
(:scoring
  (count-overlapping throwBallToDoggieBed:basketball)
)
)



(define (game game-id-599) (:domain medium-objects-room-v1)
(:setup
  (exists (?db - hexagonal_bin ?p2 ?b1 ?w ?c4 ?o3 - desk_shelf)
    (and
      (game-optional
        (> 5 1)
      )
      (and
        (and
          (exists (?b6 - ball ?d - hexagonal_bin)
            (and
              (game-conserved
                (equal_x_position desk ?d)
              )
            )
          )
        )
      )
      (game-conserved
        (not
          (on ?p2 ?w)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsTurnedOff
      (exists (?b - ball)
        (then
          (once (and (open ?b) (in bed ?b) (same_object ?b ?b) (adjacent ?b agent) (agent_holds ?b) (in ?b ?b) (and (< (distance ?b bed) 3) (in_motion ?b) ) (in ?b rug) ) )
          (once (and (agent_holds ?b) (in ?b ?b) ) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 12 (count itemsTurnedOff:blue_cube_block) )
)
(:scoring
  (count itemsTurnedOff:wall)
)
)



(define (game game-id-600) (:domain few-objects-room-v1)
(:setup
  (forall (?c - (either key_chain yellow_cube_block))
    (exists (?d - curved_wooden_ramp)
      (game-conserved
        (not
          (and
            (in_motion ?c)
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?r ?f ?b2 ?p1 ?o2 ?w ?t ?h ?c ?h - dodgeball)
        (then
          (hold-while (agent_holds ?w) (and (< 10 8) (and (agent_holds ?r) (not (not (agent_holds ?h) ) ) ) ) )
          (once (> 3 1) )
          (once (same_object desk ?h) )
        )
      )
    )
  )
)
(:terminal
  (> 15 (count-once-per-objects objectLandsInBin:dodgeball:beachball) )
)
(:scoring
  (count objectLandsInBin:dodgeball:golfball)
)
)



(define (game game-id-601) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?d - dodgeball)
        (then
          (once (in_motion ?d) )
        )
      )
    )
    (preference ballToBinFromBed
      (exists (?b - pillow)
        (then
          (hold (in_motion ?b) )
          (once (forall (?b1 - dodgeball) (on ?b1 ?b1) ) )
          (once (between ?b ?b ?b) )
          (hold (and (agent_holds ?b) (in_motion ?b) (agent_holds ?b) ) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?o5 - doggie_bed)
        (then
          (hold (in_motion rug) )
          (hold (not (not (broken ?o5) ) ) )
          (once (< 0 (distance ?o5 blue)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 1 (total-time) )
    (>= 10 (external-forall-maximize (count-once-per-objects ballToBinFromBed:pink_dodgeball) ) )
  )
)
(:scoring
  (* 4 (count ballNeverThrown:tan:blue) )
)
)



(define (game game-id-602) (:domain few-objects-room-v1)
(:setup
  (exists (?b - shelf)
    (and
      (game-conserved
        (and
          (in_motion ?b)
          (<= (distance ?b ?b) 1)
        )
      )
      (and
        (game-conserved
          (exists (?t - ball ?c - hexagonal_bin ?x ?x0 - yellow)
            (in ?b ?c)
          )
        )
        (game-optional
          (in_motion ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?o - building)
        (then
          (hold-while (in_motion ?o) (adjacent south_wall floor) )
          (once (not (not (agent_holds ?o) ) ) )
          (once (and (< (distance ?o ?o) 0.5) (agent_holds ?o) ) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?l - cylindrical_block)
        (at-end
          (and
            (> 1 (distance desk ?l))
            (not
              (agent_holds ?l)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dodgeballFromDeskToTarget:dodgeball) (count-once-per-objects dodgeballFromDeskToTarget:dodgeball) )
)
(:scoring
  (- (count-unique-positions laptopAndBookInPlace:dodgeball:dodgeball:basketball) )
)
)



(define (game game-id-603) (:domain few-objects-room-v1)
(:setup
  (forall (?d - cube_block ?b - (either cellphone top_drawer))
    (game-conserved
      (not
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?o - game_object)
        (then
          (hold-while (and (in_motion ?o) (in_motion ?o) ) (agent_holds ?o) )
          (once (agent_holds ?o) )
          (once (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (not
    (not
      (> (+ (count throwToBinFromDistance:golfball) (count throwToBinFromDistance:blue_cube_block) )
        (count throwToBinFromDistance:beachball)
      )
    )
  )
)
(:scoring
  (count throwToBinFromDistance:basketball)
)
)



(define (game game-id-604) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?d - doggie_bed)
        (exists (?t - cube_block ?b2 - (either watch cd))
          (exists (?p - hexagonal_bin)
            (forall (?h - game_object)
              (or
                (exists (?h - hexagonal_bin ?tb - ball)
                  (and
                    (game-conserved
                      (not
                        (and
                          (and
                            (< 1 3)
                            (in_motion ?p)
                          )
                          (agent_holds ?h)
                        )
                      )
                    )
                    (game-conserved
                      (in_motion ?p)
                    )
                    (game-optional
                      (not
                        (>= (x_position ?tb) 1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?p1 - dodgeball)
        (and
          (and
            (and
              (game-optional
                (not
                  (agent_holds ?p1)
                )
              )
            )
            (game-optional
              (and
                (on ?p1 ?p1)
              )
            )
            (exists (?c1 - shelf ?b - game_object)
              (exists (?o - hexagonal_bin)
                (exists (?h - dodgeball)
                  (and
                    (forall (?c - dodgeball)
                      (and
                        (exists (?d2 - cube_block ?b - hexagonal_bin ?l1 - dodgeball)
                          (and
                            (game-optional
                              (and
                                (agent_holds ?p1)
                                (not
                                  (= (distance ?h ?o) 0)
                                )
                              )
                            )
                            (game-conserved
                              (toggled_on top_shelf)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?o - building)
        (game-conserved
          (in_motion ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?b - desk_shelf ?bl - hexagonal_bin)
        (then
          (hold (and (not (touch bed ?bl) ) (not (agent_holds ?bl) ) ) )
          (once (agent_holds top_drawer) )
          (once (and (not (agent_holds ?bl) ) (< 1 (distance ?bl rug)) ) )
        )
      )
    )
    (forall (?l - teddy_bear)
      (and
        (preference ballDroppedInBin
          (then
            (hold-while (on ?l ?l) (and (in rug ?l) (= 3 8) (in ?l ?l) (agent_holds ?l) (faces ?l ?l) (in_motion ?l) (adjacent_side desk front ?l) (= (distance ?l ?l) 2) (not (and (exists (?d - ball) (in ?l ?l) ) (not (not (in_motion ?l) ) ) ) ) (exists (?w2 - ball) (on agent ?l) ) ) )
            (hold (and (not (not (and (agent_holds ?l) (and (and (on ?l ?l) (not (not (in_motion ?l) ) ) (on ?l ?l) (in ?l ?l) ) (in agent ?l) ) ) ) ) (agent_holds ?l) ) )
            (once (and (game_start ) (or (on green_golfball ?l) (agent_holds bed) ) ) )
          )
        )
        (preference throwGolfballToBin
          (then
            (hold (agent_holds ?l) )
            (once (agent_holds ?l) )
            (once (touch ?l ?l) )
          )
        )
        (preference blockToBinFromRug
          (exists (?g ?h - blue_cube_block)
            (then
              (hold (and (not (agent_holds ?l) ) (in_motion ?l) ) )
              (once (not (not (not (in_motion bed) ) ) ) )
              (once (adjacent ?g ?h) )
              (hold (not (adjacent_side ?g back ?h) ) )
              (once (and (and (not (in ?h ?l) ) (and (forall (?b - wall) (and (on ?g ?b) (not (or (in agent ?l) (and (agent_holds ?b) (and (and (> (distance_side ?b front ?l) (distance ?l ?h)) (adjacent ?b ?g) ) ) ) ) ) ) ) (not (< (distance ?h ?h) (distance_side ?g right bed back)) ) ) ) (agent_holds ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 3 )
)
(:scoring
  (count ballDroppedInBin)
)
)



(define (game game-id-605) (:domain few-objects-room-v1)
(:setup
  (exists (?z - front_left_corner)
    (forall (?h - dodgeball ?d - (either key_chain dodgeball))
      (game-optional
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b5 - dodgeball)
        (then
          (once (in green_golfball ?b5) )
          (once (same_type ?b5 pillow) )
          (hold (in agent bed) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count redDodgeballThrownToBinWithoutTouchingFloor:blue_dodgeball:pink) 10 )
  )
)
(:scoring
  (count redDodgeballThrownToBinWithoutTouchingFloor:hexagonal_bin)
)
)



(define (game game-id-606) (:domain many-objects-room-v1)
(:setup
  (exists (?t - beachball)
    (game-conserved
      (or
        (and
          (adjacent desk ?t)
          (not
            (not
              (touch ?t ?t)
            )
          )
        )
        (exists (?o2 - (either cube_block cube_block))
          (in_motion ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - ball ?b4 - (either blue_cube_block dodgeball) ?l4 - block)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?c6 - hexagonal_bin)
            (at-end
              (on ?l4 ?l4)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 6 )
)
(:scoring
  (count cubeBlockThrownToTopShelf:beachball)
)
)



(define (game game-id-607) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - ball)
    (forall (?b4 - dodgeball ?w2 ?s - ball ?b10 - pink_dodgeball)
      (and
        (exists (?s - curved_wooden_ramp ?b6 - cube_block)
          (forall (?d - (either alarm_clock cellphone))
            (forall (?t - dodgeball)
              (or
                (game-optional
                  (in ?o ?t)
                )
                (game-conserved
                  (and
                    (on agent ?b10)
                    (and
                      (on ?b6 ?o)
                      (adjacent_side ?b10 back ?b10)
                    )
                  )
                )
                (exists (?h - (either triangle_block cube_block) ?o3 - cube_block ?o3 - cylindrical_block)
                  (game-optional
                    (not
                      (open ?t)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (and
            (opposite ?o ?o)
            (in_motion desk)
          )
        )
        (or
          (game-conserved
            (agent_holds ?b10)
          )
        )
        (exists (?t2 - ball)
          (game-conserved
            (in_motion ?o)
          )
        )
        (game-conserved
          (and
            (or
              (on ?o ?o)
              (and
                (and
                  (not
                    (in_motion ?b10)
                  )
                  (in_motion ?o)
                  (agent_holds agent)
                  (and
                    (rug_color_under ?b10 color)
                    (not
                      (in_motion agent)
                    )
                  )
                )
                (and
                  (not
                    (in ?o ?b10)
                  )
                  (not
                    (opposite ?o ?o)
                  )
                )
                (is_setup_object ?o)
              )
            )
            (agent_holds ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToDrawerOrBin
      (exists (?b7 - dodgeball)
        (then
          (hold (< 1 2) )
          (hold (on ?b7 ?b7) )
          (once (in agent agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToDrawerOrBin:dodgeball) (count throwToDrawerOrBin:yellow) )
)
(:scoring
  (* 1 (count-overlapping throwToDrawerOrBin:dodgeball) )
)
)



(define (game game-id-608) (:domain few-objects-room-v1)
(:setup
  (exists (?c1 - ball ?b4 - wall)
    (game-conserved
      (agent_holds ?b4)
    )
  )
)
(:constraints
  (and
    (forall (?h - chair)
      (and
        (preference objectToBinOnFirstTry
          (exists (?c1 - pyramid_block)
            (then
              (once (and (not (game_start ) ) (agent_holds ?h) (in ?h ?c1) ) )
              (once (and (and (and (on ?c1 ?h) (not (touch ?h ?h) ) ) ) (agent_holds ?c1) ) )
              (once (not (touch bed ?h) ) )
            )
          )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?b4 - dodgeball ?b5 - curved_wooden_ramp)
        (at-end
          (agent_holds top_shelf)
        )
      )
    )
    (preference redDodgeballThrownToBin
      (exists (?r2 - game_object)
        (at-end
          (adjacent_side ?r2 back ?r2)
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwFromBehindChairsInBin:dodgeball) )
)
(:scoring
  (+ 3 (* (count redDodgeballThrownToBin:golfball) (count-once-per-objects objectToBinOnFirstTry:beachball) )
    (+ (- 2 )
      (count redDodgeballThrownToBin:red)
    )
    5
    2
  )
)
)



(define (game game-id-609) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - hexagonal_bin ?w1 - hexagonal_bin ?w1 - building ?c - chair)
    (game-optional
      (exists (?b - teddy_bear)
        (opposite ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockKnockedFromBuildingInBin
      (exists (?c2 - pillow)
        (then
          (once (and (in_motion ?c2) (not (touch ?c2 ?c2) ) ) )
          (hold (agent_holds ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 3 )
)
(:scoring
  (count blockKnockedFromBuildingInBin:basketball)
)
)



(define (game game-id-610) (:domain medium-objects-room-v1)
(:setup
  (forall (?l2 - hexagonal_bin)
    (and
      (and
        (not
          (game-conserved
            (agent_holds ?l2)
          )
        )
      )
      (game-conserved
        (and
          (agent_holds ?l2)
          (and
            (in agent ?l2)
            (touch agent bed)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?c ?o1 - dodgeball ?b6 - cube_block ?t - hexagonal_bin ?d - ball)
        (at-end
          (and
            (in_motion ?d)
            (not
              (and
                (in_motion ?d)
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?bl - dodgeball)
        (then
          (once (in ?bl ?bl) )
          (once (game_start ) )
          (once (exists (?p1 - flat_block ?o - pillow) (in ?o ?bl) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference ballDroppedInBin
          (exists (?b6 - wall)
            (then
              (hold (in ?b6 agent) )
              (hold (agent_holds agent) )
              (hold (in_motion floor) )
            )
          )
        )
      )
    )
    (forall (?b - hexagonal_bin)
      (and
        (preference ballThrownToBed
          (exists (?d1 - cylindrical_block)
            (then
              (hold (agent_holds ?b) )
              (once (in_motion ?b) )
              (once (touch ?b ?d1) )
            )
          )
        )
      )
    )
    (forall (?h - wall)
      (and
        (preference ballInOrOnBin
          (exists (?bl - tan_cube_block)
            (then
              (once (and (or (in ?bl ?h) (exists (?x - light_blue) (not (agent_holds ?h) ) ) ) (or (on ?bl ?h) (toggled_on agent) (and (in_motion ?h) (not (and (not (agent_holds ?h) ) (and (in ?h ?bl) (not (on ?h ?bl) ) (and (agent_holds ?h) (in_motion ?bl) ) (agent_holds ?bl) ) ) ) ) ) (not (on ?h ?bl) ) ) )
              (once (not (is_setup_object ?bl) ) )
              (hold (and (agent_holds ?h) (and (and (not (and (in_motion ?bl) (not (not (and (is_setup_object rug) (agent_holds ?bl) ) ) ) ) ) (in ?bl ?bl) ) (open ?h) ) ) )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (then
            (hold (broken ?h) )
            (hold (in_motion ?h) )
            (hold (touch agent ?h) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (= 6 (- 3 (count-unique-positions dodgeballFromBlockToBin:golfball) ) (count-once-per-external-objects dodgeballFromRugToBin:hexagonal_bin) )
      10
    )
    2
  )
)
(:scoring
  (* (- (+ 10 (count-once-per-objects dodgeballFromRugToBin) (* (count-once-per-objects dodgeballFromBlockToBin:purple) (count cubeBlockThrownToTopShelf:yellow) )
      )
    )
    (count-once-per-objects dodgeballFromRugToBin:yellow)
  )
)
)



(define (game game-id-611) (:domain few-objects-room-v1)
(:setup
  (exists (?b - teddy_bear)
    (game-optional
      (not
        (= 1 1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?p2 - (either laptop book))
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?o - bridge_block)
            (then
              (once (in_motion ?p2) )
              (hold (not (agent_holds ?o) ) )
              (hold-while (agent_holds ?p2) (agent_holds desk) )
              (once (agent_holds ?p2) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?h - cube_block ?h - hexagonal_bin)
            (then
              (hold (not (not (in_motion ?h) ) ) )
              (hold (< 1 (distance ?h agent)) )
              (hold (< (distance desk ?h) 1) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?p - pillow ?w1 - ball)
        (then
          (once (not (in_motion agent) ) )
          (once (not (and (agent_holds agent) (in_motion ?w1) ) ) )
          (hold (not (between ?w1 ?w1 ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwToRampToBin:basketball:beachball) (count pinkObjectMovedToRoomCenter:dodgeball) )
)
(:scoring
  (count ballThrownToChair:dodgeball)
)
)



(define (game game-id-612) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - (either dodgeball pyramid_block triangle_block))
    (game-conserved
      (and
        (and
          (on ?h ?h)
          (adjacent ?h ?h)
        )
        (adjacent desk agent)
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?ob - doggie_bed)
        (then
          (hold (not (touch ?ob ?ob) ) )
          (hold-while (< (distance rug ?ob) 1) (in agent ?ob) )
          (once (agent_holds bed) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b8 - dodgeball ?o - dodgeball ?g - chair)
        (then
          (once (and (touch ?g floor) (and (not (in_motion ?g) ) (in ?g ?g) (in_motion ?g) ) ) )
          (hold-while (and (on ?g ?g) (and (agent_holds ?g) (in ?g agent) ) ) (and (agent_holds ?g) (agent_holds ?g) (not (not (in ?g ?g) ) ) ) )
          (once (in_motion ?g) )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?p1 - ball)
        (at-end
          (agent_holds ?p1)
        )
      )
    )
    (preference blindsOpened
      (exists (?p3 - block)
        (then
          (hold (on main_light_switch ?p3) )
          (hold (in agent ?p3) )
          (hold (agent_holds ?p3) )
        )
      )
    )
    (forall (?b - game_object ?t1 - wall ?c - triangular_ramp)
      (and
        (preference objectMovedRoomSide
          (exists (?t - cube_block ?g - hexagonal_bin ?b - dodgeball ?c2 - teddy_bear)
            (then
              (once-measure (in ?c ?c2) (distance desk ?c) )
              (once (exists (?h - hexagonal_bin) (in_motion ?c2) ) )
              (once (in_motion ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:dodgeball:blue_pyramid_block) (external-forall-minimize (count-once-per-objects blindsOpened:pink) ) )
)
(:scoring
  (-
    6
    5
  )
)
)



(define (game game-id-613) (:domain medium-objects-room-v1)
(:setup
  (exists (?b3 - ball)
    (forall (?z - front)
      (and
        (and
          (game-conserved
            (not
              (in ?b3 rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?c1 - beachball)
        (then
          (once (touch ?c1 ?c1) )
          (once (between west_wall ?c1 ?c1) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 2 )
)
(:scoring
  (+ (count-once rollBallToBin:dodgeball) (count-increasing-measure rollBallToBin:basketball) )
)
)



(define (game game-id-614) (:domain few-objects-room-v1)
(:setup
  (forall (?c6 - sliding_door)
    (game-conserved
      (opposite ?c6 ?c6)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?p - doggie_bed ?b - drawer)
        (then
          (hold (open ?b) )
          (once (not (in_motion ?b) ) )
          (once (adjacent bed ?b) )
        )
      )
    )
  )
)
(:terminal
  (= (+ 3 (count beachballBouncedOffRamp:alarm_clock:purple) )
    30
  )
)
(:scoring
  (count-once-per-objects beachballBouncedOffRamp:golfball)
)
)



(define (game game-id-615) (:domain few-objects-room-v1)
(:setup
  (forall (?t - hexagonal_bin)
    (exists (?o - hexagonal_bin)
      (forall (?b - (either cube_block alarm_clock))
        (game-optional
          (not
            (not
              (not
                (and
                  (not
                    (agent_holds ?b)
                  )
                  (not
                    (and
                      (and
                        (in_motion ?o)
                        (in_motion ?t)
                      )
                      (and
                        (toggled_on ?t)
                        (in_motion ?t)
                      )
                      (< (distance_side ?t back ?o) 7)
                      (agent_holds ?t)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?p - hexagonal_bin)
        (at-end
          (in_motion ?p)
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (total-time) )
)
(:scoring
  (* (count-once-per-objects watchOnShelf:dodgeball:green:golfball) (< (external-forall-maximize (+ (count-shortest watchOnShelf) (+ 3 (+ (count watchOnShelf:dodgeball) (count-once-per-objects watchOnShelf:basketball) )
            (count watchOnShelf:alarm_clock:beachball)
          )
        )
      )
      2
    )
  )
)
)



(define (game game-id-616) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?h - doggie_bed ?b - block)
      (and
        (game-optional
          (in_motion ?b)
        )
        (game-optional
          (and
            (agent_holds ?b)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?c - ball)
        (then
          (once (equal_z_position desk ?c) )
          (once (agent_holds ?c) )
          (hold (agent_holds ?c) )
        )
      )
    )
    (preference thrownBallHitsBlock
      (exists (?d - ball ?c5 - ball)
        (then
          (hold (in_motion ?c5) )
          (hold (exists (?o - ball) (same_color ?o desk) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (> (* (>= (+ (count-once-per-objects thrownBallHitsBlock:golfball) (count-total thrownBallHitsBlock:dodgeball) )
            (count thrownBallHitsBlock:beachball)
          )
          (+ (count thrownBallHitsBlock:basketball) (> (count-once-per-objects thrownBallHitsBlock:basketball) (+ (count thrownBallHitsBlock:blue_pyramid_block) (count golfballLandsInBinThroughRamp:doggie_bed) )
            )
          )
        )
        (count-once-per-objects golfballLandsInBinThroughRamp:purple)
      )
    )
    (>= 4 8 )
  )
)
(:scoring
  (count-same-positions golfballLandsInBinThroughRamp:dodgeball)
)
)



(define (game game-id-617) (:domain few-objects-room-v1)
(:setup
  (exists (?t - ball)
    (and
      (game-optional
        (on ?t ?t)
      )
    )
  )
)
(:constraints
  (and
    (forall (?s - chair ?x - orange)
      (and
        (preference throwMissesBin
          (exists (?d - wall)
            (then
              (once (in_motion ?d) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (> (total-time) (count throwMissesBin:beachball) )
      (= (total-score) (total-score) )
      (or
        (>= (count throwMissesBin:blue_pyramid_block) (* (count-once-per-objects throwMissesBin:pyramid_block:tan) (* (count-once-per-objects throwMissesBin:book) 6 )
          )
        )
        (>= (total-score) 10 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwMissesBin:purple)
)
)



(define (game game-id-618) (:domain medium-objects-room-v1)
(:setup
  (exists (?l - ball)
    (exists (?b5 - watch ?c1 - chair)
      (game-conserved
        (and
          (not
            (not
              (on ?l ?l)
            )
          )
          (and
            (in ?l desk)
            (in_motion ?l)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - beachball)
      (and
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?b - beachball ?b - curved_wooden_ramp)
            (then
              (hold (not (agent_holds ?b) ) )
              (once (agent_holds desktop) )
              (once (adjacent ?b ?b) )
            )
          )
        )
        (preference pillowThrownToDoggieBed
          (exists (?d - building ?h - hexagonal_bin)
            (then
              (hold-while (and (agent_holds ?h) (not (in_motion ?h) ) (in ?h ?b) ) (adjacent ?b ?h) )
              (hold (not (not (<= (distance bed blue) 1) ) ) )
              (hold (in_motion rug) )
            )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?b - wall)
            (then
              (once (rug_color_under ?b orange) )
              (once (and (in_motion ?b) (not (agent_holds ?b) ) ) )
              (once (equal_z_position ?b ?b) )
            )
          )
        )
      )
    )
    (preference towerFallsWhileBuilding
      (exists (?b - building)
        (then
          (hold (and (and (on ?b ?b) (or (in_motion ?b) (on ?b floor) ) (and (agent_holds ?b) (and (and (in_motion ?b) (not (not (and (agent_holds ?b) (touch rug ?b) ) ) ) ) (> 1 (distance bed ?b)) ) ) (= (distance door ?b) 3) (exists (?w1 - block) (agent_holds ?b) ) (not (on ?b ?b) ) (opposite ?b ?b) (exists (?l3 - triangular_ramp) (not (not (agent_holds ?b) ) ) ) (in_motion ?b) (same_color ?b ?b) ) (and (game_start ) (toggled_on ?b) ) (in_motion ?b) ) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
    (forall (?d - cube_block)
      (and
        (preference throwMissesBin
          (exists (?o ?h - shelf ?c5 - hexagonal_bin ?h - hexagonal_bin)
            (then
              (hold (in_motion ?d) )
              (hold (agent_holds agent) )
              (once (> (distance ?d ?h) 0.5) )
            )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?b - (either dodgeball) ?d - drawer)
        (then
          (hold (and (same_type ?d block) (in_motion ?d) ) )
          (once (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count throwMissesBin:dodgeball:pink) )
)
(:scoring
  (count-overlapping towerFallsWhileBuilding:yellow)
)
)



(define (game game-id-619) (:domain many-objects-room-v1)
(:setup
  (forall (?ob - ball)
    (and
      (exists (?d1 - hexagonal_bin)
        (forall (?o - hexagonal_bin ?w1 - cube_block ?b4 - (either dodgeball basketball triangular_ramp))
          (game-conserved
            (>= (distance ?ob ?b4) 1)
          )
        )
      )
      (forall (?c1 ?g ?l1 - (either pen pyramid_block book) ?w - hexagonal_bin)
        (game-conserved
          (in_motion ?ob)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?g - cube_block)
      (and
        (preference beachballBouncedOffRamp
          (exists (?d - (either alarm_clock) ?h - hexagonal_bin)
            (then
              (once (adjacent bed ?g) )
              (once (in_motion ?h) )
              (hold-while (and (touch agent ?g) (<= (distance ?h ?h) (distance door ?g)) ) (agent_holds ?h) (on ?h ?h) )
            )
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?h - cube_block)
        (then
          (hold (and (agent_holds ?h) (forall (?c3 - (either book laptop basketball)) (same_type ?c3 ?h) ) (not (or (adjacent_side desk front ?h front) (and (and (same_object ?h agent) (in ?h ?h) ) (and (in_motion ?h) (< (distance desk ?h) 1) (not (adjacent south_wall ?h) ) (same_color ?h pink) ) ) ) ) ) )
          (once (agent_holds rug) )
          (hold (exists (?h - dodgeball) (in_motion bed) ) )
          (once (not (same_color ?h ?h) ) )
          (hold-while (in ?h ?h) (not (agent_holds ?h) ) (in_motion ?h) (not (not (adjacent_side ?h left ?h) ) ) )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?b ?d - dodgeball)
        (then
          (once-measure (agent_holds ?b) (x_position ?d) )
          (hold-while (and (in_motion ?b) (in floor ?b) ) (not (faces ?d ?d) ) )
          (once (agent_holds ?b) )
        )
      )
    )
    (preference throwAttempt
      (exists (?b7 - (either dodgeball watch))
        (then
          (hold (not (and (in_motion ?b7) (not (and (agent_holds ?b7) (on ?b7 floor) ) ) ) ) )
          (once (not (on ?b7 ?b7) ) )
          (once (same_color agent ?b7) )
        )
      )
    )
    (preference ballThrownToBin
      (exists (?o - hexagonal_bin)
        (at-end
          (touch ?o ?o)
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-time) )
)
(:scoring
  (count-once-per-objects throwAttempt:pink_dodgeball:dodgeball)
)
)



(define (game game-id-620) (:domain many-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (forall (?h - (either pillow tall_cylindrical_block yellow_cube_block pencil cylindrical_block))
      (and
        (exists (?z ?z0 - front ?t - hexagonal_bin)
          (game-optional
            (< 7 (distance desk ?d))
          )
        )
        (and
          (forall (?c - chair)
            (and
              (or
                (exists (?c - ball)
                  (and
                    (forall (?b - game_object)
                      (and
                        (and
                          (forall (?c - block)
                            (exists (?c6 - cube_block)
                              (exists (?o5 - pyramid_block)
                                (exists (?d - red_dodgeball ?r2 - ball)
                                  (game-conserved
                                    (adjacent ?r2 ?c6)
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (in_motion agent)
                          )
                        )
                      )
                    )
                    (game-optional
                      (not
                        (< (distance_side room_center left agent) (distance desk ?d))
                      )
                    )
                    (game-conserved
                      (object_orientation desk diagonal)
                    )
                    (and
                      (exists (?c - (either cylindrical_block cube_block))
                        (exists (?r1 - (either pyramid_block floor main_light_switch pillow))
                          (game-conserved
                            (in_motion ?d)
                          )
                        )
                      )
                      (exists (?x ?x0 ?x1 - color ?t1 - dodgeball)
                        (and
                          (game-conserved
                            (or
                              (not
                                (in_motion ?c)
                              )
                            )
                          )
                          (game-optional
                            (not
                              (in_motion ?h)
                            )
                          )
                          (game-optional
                            (not
                              (> 4 (distance desk ?t1))
                            )
                          )
                        )
                      )
                      (exists (?b2 - shelf ?b - triangular_ramp)
                        (exists (?b5 - (either dodgeball pyramid_block) ?h - dodgeball)
                          (and
                            (and
                              (game-optional
                                (on ?c ?d)
                              )
                            )
                          )
                        )
                      )
                    )
                    (forall (?g - dodgeball ?w1 - hexagonal_bin)
                      (and
                        (forall (?r ?c ?h ?w1 ?c ?d - (either cube_block cylindrical_block cylindrical_block))
                          (and
                            (and
                              (and
                                (exists (?d - cube_block)
                                  (game-optional
                                    (in_motion ?r)
                                  )
                                )
                                (game-optional
                                  (not
                                    (adjacent desk ?w1)
                                  )
                                )
                              )
                            )
                            (game-conserved
                              (and
                                (not
                                  (same_type ?w1 block)
                                )
                                (not
                                  (game_over )
                                )
                              )
                            )
                            (forall (?x - gray)
                              (and
                                (and
                                  (game-optional
                                    (in_motion ?d)
                                  )
                                )
                                (and
                                  (and
                                    (game-conserved
                                      (in_motion ?c)
                                    )
                                  )
                                )
                              )
                            )
                            (exists (?d - block)
                              (exists (?c5 - (either cube_block cube_block basketball))
                                (game-conserved
                                  (and
                                    (agent_holds ?d)
                                    (and
                                      (and
                                        (in_motion ?c)
                                        (in agent ?w1)
                                      )
                                      (exists (?c - cube_block ?x ?x0 - light_blue)
                                        (on ?c ?r)
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (in_motion ?h)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (and
                      (on ?c agent)
                      (between ?d ?h ?d)
                    )
                  )
                )
              )
            )
          )
          (exists (?p - hexagonal_bin)
            (and
              (and
                (exists (?l2 - building ?d - dodgeball ?h - hexagonal_bin)
                  (exists (?c6 - hexagonal_bin)
                    (game-conserved
                      (> 1 0.5)
                    )
                  )
                )
                (game-conserved
                  (adjacent room_center agent)
                )
                (game-conserved
                  (on ?h ?p)
                )
                (game-conserved
                  (in_motion ?h)
                )
                (forall (?g - hexagonal_bin)
                  (and
                    (game-conserved
                      (same_color ?d ?h)
                    )
                    (game-conserved
                      (agent_holds ?p)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either cube_block chair) ?d - golfball ?b9 - (either golfball floor doggie_bed))
      (and
        (preference ballThrownToRampToBed
          (exists (?h - curved_wooden_ramp ?o ?o ?b7 ?o1 - hexagonal_bin)
            (then
              (hold (not (on agent blue) ) )
              (once (not (agent_holds pink) ) )
              (hold (touch ?o ?o1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (count-once-per-objects ballThrownToRampToBed:dodgeball:hexagonal_bin) (+ 8 (count-once-per-objects ballThrownToRampToBed:blue_pyramid_block) )
    )
  )
)
(:scoring
  (count-unique-positions ballThrownToRampToBed:basketball)
)
)



(define (game game-id-621) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - chair)
    (and
      (game-optional
        (not
          (not
            (agent_holds ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?o3 - cylindrical_block)
        (then
          (once (not (and (in ?o3 ?o3) (and (and (agent_holds ?o3) (touch ?o3 ?o3) ) (in ?o3 ?o3) (between bed ?o3 ?o3) ) ) ) )
          (once (in ?o3 ?o3) )
          (once (and (in ?o3 rug) (not (equal_z_position ?o3 ?o3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:dodgeball) (+ 2 (* 2 (external-forall-maximize (count-once throwMovesBeachballWithoutKnockingTeddy:dodgeball:red:beachball) ) (+ 15 2 )
        20
        (+ 2 0 )
        (* (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:blue_dodgeball) (* (* 9 3 )
            5
            (- (* 4 (count-once throwMovesBeachballWithoutKnockingTeddy:golfball:beachball) )
            )
            (count throwMovesBeachballWithoutKnockingTeddy:yellow)
            (count-measure throwMovesBeachballWithoutKnockingTeddy:dodgeball:blue_pyramid_block)
            5
          )
        )
      )
    )
  )
)
(:scoring
  (* (* (* (* (count-once throwMovesBeachballWithoutKnockingTeddy:red) )
        30
      )
      5
    )
    8
  )
)
)



(define (game game-id-622) (:domain medium-objects-room-v1)
(:setup
  (forall (?o2 - building ?h - bridge_block)
    (game-conserved
      (same_type desktop bridge_block)
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?c - (either pillow dodgeball))
        (at-end
          (above ?c ?c)
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?l - dodgeball ?y ?y0 - (either upside_down upside_down))
        (at-end
          (on ?l ?l)
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count bigObjectThrownToBed:basketball) (+ 2 1 )
    )
  )
)
(:scoring
  (count teddyBearHitsBall:pink)
)
)



(define (game game-id-623) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - (either hexagonal_bin cube_block bridge_block golfball))
    (game-optional
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?d - (either main_light_switch golfball blue_cube_block) ?b7 - hexagonal_bin ?p - ball)
        (then
          (hold (in_motion top_shelf) )
          (once (on ?p agent) )
          (once-measure (and (in_motion agent) (agent_holds ?p) ) (distance ?p ?p) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?o - game_object ?bl - chair)
        (then
          (hold (and (not (in ?bl ?bl) ) ) )
          (once (and (> 0 1) (and (not (on ?bl ?bl) ) (in ?bl ?bl) (and (agent_holds ?bl) (in_motion ?bl) ) ) ) )
          (once (not (in_motion ?bl) ) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?l3 - teddy_bear ?d - dodgeball)
        (then
          (hold (exists (?z ?z0 ?z1 - left ?b - hexagonal_bin ?d - block) (and (and (> 1 2) (agent_holds ?d) ) (not (agent_holds ?d) ) (in rug ?d) ) ) )
          (once (and (not (not (in ?d ?d) ) ) (touch ?d ?d) (touch ?d agent) ) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ (* (count woodenBlockMovedFromRugToDesk:beachball) (count woodenBlockMovedFromRugToDesk:hexagonal_bin:beachball) )
      (count-once-per-objects woodenBlockMovedFromRugToDesk:pink:dodgeball)
      (* 3 180 )
    )
  )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:yellow)
)
)



(define (game game-id-624) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (and
        (exists (?h - cube_block)
          (and
            (game-conserved
              (toggled_on ?h)
            )
          )
        )
      )
      (and
        (or
          (game-conserved
            (exists (?h - chair)
              (in ?h ?h)
            )
          )
          (game-conserved
            (exists (?p - ball)
              (not
                (and
                  (on ?p ?p)
                  (< (distance ?p ?p) 1)
                  (adjacent desk bed)
                  (in_motion ?p)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?c ?b - wall)
        (then
          (once (adjacent door ?b) )
          (hold (and (is_setup_object ?c) (game_over ) ) )
          (hold (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 2 )
)
(:scoring
  (count-once-per-objects blockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-625) (:domain medium-objects-room-v1)
(:setup
  (exists (?w2 - (either book pyramid_block) ?o - dodgeball ?r - hexagonal_bin)
    (game-optional
      (and
        (or
          (is_setup_object ?r)
          (in_motion ?r)
        )
        (adjacent room_center ?r)
        (< 2 (distance desk ?r))
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - block ?r - wall)
      (and
        (preference throwFromDoorToBin
          (exists (?r1 ?d ?s ?b6 ?g ?s - dodgeball)
            (then
              (once (not (agent_holds ?d) ) )
              (once-measure (in_motion ?r) (distance_side ?d front agent) )
            )
          )
        )
        (preference throwBallToDoggieBed
          (exists (?d - hexagonal_bin)
            (then
              (hold (agent_holds ?r) )
              (once (and (not (< 6 1) ) (not (in_motion agent) ) ) )
              (once (agent_holds ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwBallToDoggieBed:yellow_pyramid_block:pink_dodgeball) 1 )
)
(:scoring
  (count throwFromDoorToBin:golfball:basketball)
)
)



(define (game game-id-626) (:domain many-objects-room-v1)
(:setup
  (exists (?l - shelf)
    (game-conserved
      (not
        (in ?l ?l)
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - ball ?c3 - (either pencil flat_block))
        (then
          (once (and (and (in_motion ?c3) (game_over ) ) (in_motion floor) ) )
          (once (< (distance ?c3 ?c3) (distance desk ?c3)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToBinFromOppositeWall:beachball) (total-score) )
)
(:scoring
  (count-once throwToBinFromOppositeWall:purple)
)
)



(define (game game-id-627) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion rug)
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?l ?o4 - (either doggie_bed desktop))
        (then
          (once (and (not (and (adjacent rug rug) (not (in_motion ?l) ) (in_motion ?l) ) ) (and (not (< (distance ?l ?l) (distance desk desk)) ) (< (distance ?l ?o4) 1) (agent_holds ?o4) ) ) )
          (once (faces ?o4 ?o4) )
          (once (and (agent_holds ?l) (and (not (is_setup_object ?o4) ) (toggled_on ?o4) ) ) )
        )
      )
    )
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?l1 - teddy_bear ?z ?z0 - front_left_corner)
        (then
          (hold (forall (?h ?b7 - (either dodgeball alarm_clock)) (in_motion ?b7) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (external-forall-maximize (count cubeBlockThrownToTopShelf:block) ) )
)
(:scoring
  (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball:beachball)
)
)



(define (game game-id-628) (:domain many-objects-room-v1)
(:setup
  (exists (?b - doggie_bed)
    (exists (?d - hexagonal_bin)
      (forall (?b - (either wall cellphone))
        (and
          (forall (?p - block ?x ?x0 - red)
            (game-optional
              (agent_holds ?d)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference otherObjectsOnDeskShelf
      (exists (?o2 ?p - hexagonal_bin)
        (then
          (once (not (agent_holds ?o2) ) )
          (once (on ?p ?o2) )
          (hold (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-external-objects otherObjectsOnDeskShelf:pink) )
)
(:scoring
  (count otherObjectsOnDeskShelf:dodgeball)
)
)



(define (game game-id-629) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - cylindrical_block)
    (game-conserved
      (and
        (and
          (not
            (and
              (on ?d ?d)
              (same_color ?d ?d)
            )
          )
          (agent_holds ?d)
        )
        (and
          (not
            (on ?d ?d)
          )
          (not
            (in ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksBlock
      (exists (?g - drawer ?c - wall)
        (then
          (once (on ?c ?c) )
          (hold (and (not (not (not (not (on ?c ?c) ) ) ) ) (not (and (agent_holds ?c) (on ?c ?c) ) ) (same_color ?c ?c) ) )
          (once (is_setup_object desk) )
          (once (agent_holds ?c) )
        )
      )
    )
  )
)
(:terminal
  (= (* (count throwKnocksBlock:dodgeball) (* (+ (count-once-per-objects throwKnocksBlock:golfball) 3 (* 3 3 (- 10 )
          )
          (count throwKnocksBlock:basketball:dodgeball)
        )
        (count-same-positions throwKnocksBlock:beachball)
      )
    )
    1
  )
)
(:scoring
  (* (* 2 5 )
    2
    1
  )
)
)



(define (game game-id-630) (:domain many-objects-room-v1)
(:setup
  (exists (?d - teddy_bear ?b - cube_block)
    (game-optional
      (and
        (< (distance ?b ?b) 1)
        (on ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?h - doggie_bed)
        (then
          (once (and (in_motion floor) (in ?h rug) ) )
          (once (in_motion rug) )
          (once (and (adjacent_side ?h right ?h right) (< 6 (distance ?h ?h)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (total-score) )
)
(:scoring
  (* 9 300 )
)
)



(define (game game-id-631) (:domain many-objects-room-v1)
(:setup
  (and
    (or
      (and
        (exists (?l1 - cube_block ?d - hexagonal_bin ?o3 - curved_wooden_ramp ?b10 - dodgeball)
          (and
            (forall (?o - hexagonal_bin)
              (game-optional
                (in_motion ?b10)
              )
            )
            (game-conserved
              (broken ?b10)
            )
          )
        )
      )
      (or
        (exists (?l1 - dodgeball)
          (exists (?x - brown ?r - shelf)
            (exists (?b - hexagonal_bin)
              (exists (?b3 - dodgeball)
                (game-conserved
                  (and
                    (not
                      (agent_holds ?l1)
                    )
                    (in_motion ?b3)
                    (and
                      (not
                        (not
                          (and
                            (in ?b ?r)
                            (not
                              (agent_holds ?b3)
                            )
                          )
                        )
                      )
                    )
                    (not
                      (not
                        (agent_holds ?r)
                      )
                    )
                    (exists (?b - watch ?o - ball)
                      (in_motion ?b)
                    )
                    (touch agent ?b)
                  )
                )
              )
            )
          )
        )
        (exists (?h - beachball)
          (game-conserved
            (same_color ?h color)
          )
        )
        (forall (?o5 - block)
          (exists (?y - (either upright))
            (game-optional
              (not
                (and
                  (agent_holds ?o5)
                  (agent_holds ?o5)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?h ?l - ball ?x ?x0 - tan)
            (then
              (once (in_motion ?l) )
              (once (in_motion ?b) )
              (once (in_motion ?b) )
            )
          )
        )
        (preference throwKnocksOverBear
          (exists (?r - hexagonal_bin)
            (at-end
              (agent_holds ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 7 (* 3 (count blockInTowerAtEnd) )
  )
)
(:scoring
  (* (count-once-per-objects blockInTowerAtEnd:rug:side_table) 2 )
)
)



(define (game game-id-632) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (on top_drawer agent)
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?l1 - dodgeball ?b - ball)
        (then
          (hold (in_motion ?b) )
          (once (in_motion ?b) )
          (once (on ?b ?b) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b10 - teddy_bear)
        (then
          (once (not (and (on ?b10 ?b10) (touch top_drawer ?b10) (agent_holds ?b10) (same_object ?b10 ?b10) (agent_holds ?b10) (not (touch ?b10 ?b10) ) ) ) )
          (once (in_motion ?b10) )
          (once (not (agent_holds ?b10) ) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?l4 - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (not (same_type ?h block) ) )
          (once (not (in_motion agent) ) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects pillowThrownToDoggieBed:golfball) (external-forall-maximize (count-once-per-objects throwMovesBeachballWithoutKnockingTeddy:purple) ) )
)
(:scoring
  (count throwObjectToBin:blue)
)
)



(define (game game-id-633) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o2 - (either main_light_switch dodgeball))
      (and
        (forall (?b6 - building ?y ?y0 - (either sideways upside_down sideways))
          (not
            (game-optional
              (not
                (in ?o2 ?o2)
              )
            )
          )
        )
        (exists (?g - shelf ?c3 - hexagonal_bin ?b3 - beachball)
          (game-conserved
            (object_orientation ?b3 diagonal)
          )
        )
      )
    )
    (forall (?b - building)
      (game-conserved
        (not
          (agent_holds rug)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - ball)
      (and
        (preference rollBallToBin
          (exists (?b8 - hexagonal_bin)
            (then
              (once (and (on ?o2 ?o2) (adjacent_side desk back ?b8) ) )
              (once (and (and (touch ?b8 bed) (not (not (and (not (and (and (not (adjacent ?b8 ?b8) ) (in_motion ?b8) ) (< (distance ?o2 ?o2) (distance_side bed right ?o2)) ) ) (not (not (touch rug ?b8) ) ) ) ) ) ) (same_color ?b8 ?o2) ) )
              (once (not (in_motion ?b8) ) )
            )
          )
        )
        (preference objectsHidden
          (exists (?b - building)
            (then
              (hold-while (not (in_motion ?b) ) (and (and (same_type ?b block) (not (not (or (in_motion floor) (agent_holds ?b) (and (not (and (adjacent room_center ?b) (same_type ?o2 pillow) ) ) (agent_holds ?o2) (agent_holds bed) (not (above agent ?b) ) (and (adjacent_side door back ?o2 left) (and (and (and (< 1 1) ) (agent_holds agent) (agent_holds ?b) ) (and (and (agent_holds ?o2) (agent_holds agent) ) (on ?o2 ?o2) ) ) ) (and (not (not (on ?o2 ?o2) ) ) (same_type ?o2 ?o2) ) (not (and (in_motion ?o2) (and (not (and (and (and (agent_holds ?o2) (agent_holds ?o2) ) (not (in_motion ?b) ) ) (and (in ?b ?b) (in_motion ?o2) ) ) ) (touch ?b ?o2) ) ) ) (in_motion ?o2) ) (in_motion ?o2) ) ) ) (agent_holds ?o2) (in_motion ?b) ) (on ?o2 agent) ) )
              (once (toggled_on ?o2) )
              (once (agent_holds ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (count objectsHidden:dodgeball) )
)
(:scoring
  (count objectsHidden:dodgeball:hexagonal_bin)
)
)



(define (game game-id-634) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o3 ?l3 ?p3 - wall ?b7 - block)
      (exists (?r - teddy_bear ?c ?l - hexagonal_bin)
        (and
          (game-conserved
            (same_color ?b7 bed)
          )
          (game-conserved
            (and
              (touch ?c ?c)
              (and
                (in_motion agent)
                (in bed ?b7)
              )
              (open ?c)
              (game_over )
              (agent_holds ?l)
              (not
                (on ?b7 ?b7)
              )
            )
          )
          (and
            (game-optional
              (agent_holds ?b7)
            )
            (game-optional
              (not
                (or
                  (same_object ?l ?l)
                  (agent_holds ?c)
                )
              )
            )
            (game-optional
              (adjacent_side ?l front_left_corner ?l)
            )
          )
        )
      )
    )
    (forall (?o3 - (either hexagonal_bin key_chain) ?r - hexagonal_bin)
      (game-conserved
        (on ?r ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference throwObjectToBin
          (exists (?p1 - ball)
            (then
              (hold (agent_holds ?b) )
              (hold (forall (?b - hexagonal_bin) (in ?b ?b) ) )
              (once (and (on ?p1 ?p1) (in_motion ?p1) ) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?b7 - hexagonal_bin ?x ?x0 ?x1 - red)
            (then
              (once (on ?c agent) )
              (once (agent_holds ?c) )
              (once (faces ?b7 ?c) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ (count golfballLandsInBinThroughRamp:green) (external-forall-maximize (* 2 (count golfballLandsInBinThroughRamp) )
      )
    )
  )
)
(:scoring
  (+ 10 (count golfballLandsInBinThroughRamp:pink_dodgeball:green) )
)
)



(define (game game-id-635) (:domain few-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (game-optional
      (and
        (not
          (and
            (not
              (not
                (and
                  (agent_holds ?r)
                  (agent_holds agent)
                )
              )
            )
            (and
              (on ?r ?r)
              (agent_holds ?r)
            )
          )
        )
        (not
          (agent_holds ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?c - (either mug golfball))
        (then
          (once (not (in ?c ?c) ) )
          (hold (and (same_color ?c ?c) (not (not (and (< (distance ?c ?c) (x_position ?c)) (and (and (and (> (distance desk ?c) (distance room_center ?c)) (> 3 2) ) (touch ?c ?c) ) (agent_holds ?c) (and (< 6 (distance ?c ?c)) ) (< (distance_side ?c front ?c back) (distance desk ?c)) (exists (?x - color) (and (agent_holds ?c) (> 1 (distance ?c ?c)) ) ) (not (agent_holds ?c) ) (and (not (and (= 1 6) (in_motion ?c) (agent_holds floor) ) ) (not (in ?c ?c) ) ) (and (in_motion ?c) ) (open ?c) (and (adjacent_side room_center front_left_corner ?c front_left_corner) (on ?c ?c) ) ) ) ) ) ) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (count-once-per-objects blockThrowAttempt:hexagonal_bin) )
)
(:scoring
  (count blockThrowAttempt:dodgeball)
)
)



(define (game game-id-636) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent door agent)
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?b9 - dodgeball)
        (then
          (once (< 1 (distance desk brown)) )
          (once (and (agent_holds ?b9) (and (on ?b9 ?b9) (in_motion ?b9) ) ) )
          (once (in ?b9 agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (* 3 (count-once ballInOrOnBin:golfball:pink) )
  )
)
(:scoring
  (count ballInOrOnBin:blue_dodgeball)
)
)



(define (game game-id-637) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?p1 - block)
        (then
          (hold-while (in_motion rug) (not (and (agent_holds ?p1) (not (not (in_motion pink) ) ) ) ) )
          (hold-while (in_motion ?p1) (in_motion ?p1) )
          (once (agent_holds rug) )
          (once (not (in_motion ?p1) ) )
        )
      )
    )
    (preference ballInOrOnBin
      (exists (?o - hexagonal_bin)
        (then
          (once (not (touch ?o ?o) ) )
          (hold (in ?o ?o) )
          (once (not (not (on ?o agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= (count ballInOrOnBin:red) (count-measure ballInOrOnBin:beachball:dodgeball) )
    )
    (>= (count-once-per-objects golfballInBinFromPillow:yellow_cube_block:basketball) 9 )
  )
)
(:scoring
  (count golfballInBinFromPillow:dodgeball)
)
)



(define (game game-id-638) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball)
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?b - block)
        (then
          (once (in ?b ?b) )
          (once (> (distance ?b ?b) (distance bed ?b)) )
          (once (not (on ?b ?b) ) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?c - wall ?h - hexagonal_bin)
        (at-end
          (in ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-overlapping baseBlockInTowerAtEnd:pink:pink) 300 )
      30
    )
    (>= (total-score) 10 )
    (> (count baseBlockInTowerAtEnd:golfball) (count-same-positions throwKnocksBlock:triangle_block) )
  )
)
(:scoring
  (count throwKnocksBlock:dodgeball:golfball)
)
)



(define (game game-id-639) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - curved_wooden_ramp ?c2 - shelf ?b - (either basketball triangle_block golfball beachball))
      (exists (?d - doggie_bed ?p1 - chair)
        (and
          (and
            (exists (?b4 - hexagonal_bin ?g - (either cd flat_block) ?ob - cube_block)
              (game-conserved
                (agent_holds ?b)
              )
            )
            (forall (?b - hexagonal_bin)
              (exists (?b - hexagonal_bin)
                (forall (?b - hexagonal_bin ?h - shelf ?t - teddy_bear)
                  (and
                    (game-conserved
                      (in ?t ?t)
                    )
                  )
                )
              )
            )
            (exists (?p1 - game_object)
              (game-optional
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b - wall)
        (then
          (once (not (agent_holds ?b) ) )
          (once (and (not (agent_holds ?b) ) (not (< (distance ?b ?b) 2) ) (and (agent_holds ?b) (not (and (and (and (in floor ?b) (and (and (in_motion ?b) (not (agent_holds ?b) ) (not (agent_holds agent) ) ) (and (on ?b ?b) (in_motion ?b) (in_motion ?b) (game_start ) (toggled_on ?b) (and (not (not (is_setup_object ?b) ) ) (rug_color_under ?b blue) ) ) ) ) (and (in ?b ?b) (and (not (and (on ?b ?b) ) ) (and (agent_holds agent) (not (on side_table ?b) ) ) ) (agent_holds ?b) ) (< 1 (distance ?b ?b)) (agent_holds ?b) ) (and (< (distance ?b ?b) (distance ?b ?b)) (in ?b ?b) ) (not (in_motion ?b) ) (and (equal_z_position ?b bed) (in_motion ?b) (agent_holds ?b) (in agent ?b) ) ) ) ) (in_motion ?b) (not (and (and (exists (?w2 - game_object) (in_motion ?w2) ) (forall (?t1 - wall) (and (and (in_motion ?b) (not (agent_holds ?b) ) (not (agent_holds ?t1) ) (agent_holds ?t1) ) (in_motion ?b) ) ) ) (agent_holds ?b) ) ) (agent_holds ?b) ) )
          (once (< (distance ?b ?b) 0.5) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?h) )
          (hold (not (in_motion ?h) ) )
          (once (forall (?h - cube_block) (in_motion ?h) ) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?d2 - (either cylindrical_block ball) ?h - hexagonal_bin ?bl - red_dodgeball)
        (then
          (once (on ?bl ?bl) )
          (once (not (on agent ?bl) ) )
          (hold (on ?bl agent) )
        )
      )
    )
    (preference cubeBlockFromBedToShelf
      (exists (?b - ball)
        (at-end
          (and
            (is_setup_object ?b)
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (> (count blockPickedUp:blue_dodgeball) (total-time) )
)
(:scoring
  (* (* 3 12 (count cubeBlockFromBedToShelf:basketball) )
  )
)
)



(define (game game-id-640) (:domain many-objects-room-v1)
(:setup
  (forall (?h - book)
    (game-optional
      (and
        (not
          (not
            (not
              (agent_holds agent)
            )
          )
        )
        (is_setup_object top_drawer)
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?b - dodgeball)
      (and
        (preference gameBlockFound
          (exists (?o3 - hexagonal_bin ?p - hexagonal_bin)
            (then
              (hold (and (in_motion ?r) (not (adjacent ?r ?p) ) ) )
              (once (not (agent_holds ?b) ) )
              (once (adjacent ?p ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count-once gameBlockFound:basketball) (+ 3 7 )
    )
    (> 3 2 )
  )
)
(:scoring
  (* 6 (count-once-per-objects gameBlockFound:red) 10 )
)
)



(define (game game-id-641) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 - triangular_ramp)
    (exists (?b2 - (either dodgeball cellphone))
      (game-conserved
        (> 9 2)
      )
    )
  )
)
(:constraints
  (and
    (preference brownObjectMovedToRoomCenter
      (exists (?b - cube_block)
        (then
          (hold (in ?b ?b) )
          (once (agent_holds ?b) )
        )
      )
    )
  )
)
(:terminal
  (< 10 6 )
)
(:scoring
  (count-once-per-objects brownObjectMovedToRoomCenter:blue_dodgeball)
)
)



(define (game game-id-642) (:domain many-objects-room-v1)
(:setup
  (forall (?b - ball)
    (game-conserved
      (on ?b ?b)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?l - ball)
        (at-end
          (same_object ?l ?l)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwToBinFromDistance:blue_cube_block) 10 )
)
(:scoring
  (* (count-once-per-objects throwToBinFromDistance:purple:dodgeball) (count-once-per-objects throwToBinFromDistance:beachball) )
)
)



(define (game game-id-643) (:domain many-objects-room-v1)
(:setup
  (forall (?b - building ?r - chair ?c4 - block ?d - block)
    (game-conserved
      (and
        (not
          (on ?d ?d)
        )
        (not
          (is_setup_object ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - shelf)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?b - block ?p - cube_block)
            (at-end
              (in ?c ?p)
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (exists (?d - cube_block ?h - game_object)
            (then
              (once (in_motion ?h) )
              (once (agent_holds ?h) )
              (once (and (not (between ?c ?c ?h) ) (on ?c ?c) (and (and (game_over ) (not (and (and (not (in_motion ?h) ) (agent_holds ?c) ) (and (on ?h ?h) (on ?c ?h) (in_motion ?c) ) ) ) ) (and (on ?c ?h) (not (agent_holds ?c) ) (and (and (and (agent_holds ?h) (in ?c agent) ) (on ?h ?c) ) (and (and (in_motion ?h) (> 10 5) ) (in ?h ?c) ) ) (on ?h ?h) (on ?h ?h) (in agent ?h) (same_type ?c ?c) ) ) (and (and (above ?c rug) (and (not (or (not (opposite ?h ?c) ) (agent_holds agent) ) ) (and (agent_holds ?h) (adjacent green_golfball ?h) (not (not (agent_holds agent) ) ) (not (and (not (and (<= (distance ?c ?h) (distance_side ?h right ?h)) (and (and (not (agent_holds ?h) ) (agent_holds ?c) ) (adjacent ?h ?c) ) (and (adjacent ?c ?c) (not (faces ?c ?h) ) (on ?c ?c) ) (on ?c ?c) ) ) (in_motion ?h) ) ) (in agent ?c) (in_motion ?c) ) ) ) (agent_crouches ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ (count dodgeballFromBlockToBin:red_pyramid_block) (+ (count dodgeballFromBlockToBin:basketball) (count dodgeballFromBlockToBin:purple) )
      )
      2
    )
    (and
      (>= (count ballThrownFromObjectToBin:pink) 30 )
      (= (+ 3 (* (* (count-once dodgeballFromBlockToBin:pink_dodgeball) )
            (count-once dodgeballFromBlockToBin:top_drawer)
            (count ballThrownFromObjectToBin:hexagonal_bin)
          )
        )
        (count-once ballThrownFromObjectToBin:blue_dodgeball)
      )
      (>= 4 (count-once-per-objects dodgeballFromBlockToBin:dodgeball) )
    )
  )
)
(:scoring
  (+ (* (count dodgeballFromBlockToBin:green) (count-once ballThrownFromObjectToBin:book) )
    15
  )
)
)



(define (game game-id-644) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - ball)
      (game-conserved
        (on ?c ?c)
      )
    )
    (exists (?c1 - dodgeball)
      (and
        (exists (?h - hexagonal_bin ?t ?b2 - book ?c - game_object)
          (forall (?c3 - (either pyramid_block doggie_bed))
            (game-optional
              (in_motion ?c1)
            )
          )
        )
        (game-optional
          (in_motion ?c1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - dodgeball)
        (then
          (hold-while (in_motion ?b) (and (agent_holds ?b) (agent_holds ?b) ) (object_orientation ?b upright) )
          (once (game_start ) )
          (hold (agent_holds ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?d - dodgeball ?t2 - building)
      (and
        (preference ballThrownToBin
          (exists (?bl - block)
            (then
              (hold (and (on ?t2 ?bl) (and (same_type ?t2 block) (and (not (and (in ?bl ?bl) (on bed ?bl) (in_motion ?bl) ) ) (< 1 9) (not (>= 3 (distance rug ?bl)) ) (touch blue ?t2) (not (in_motion ?bl) ) (and (agent_holds ?bl) (is_setup_object ?bl) ) ) ) ) )
              (hold (and (in_motion agent) (on ?t2 ?t2) ) )
              (once (and (in ?bl ?t2) (> (distance ?t2 ?t2) 0) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (hold (and (< (x_position ?t2) 4) ) )
              (once (and (and (in_motion desk) ) (in_motion ?h) ) )
              (hold (rug_color_under ?t2 orange) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 4 )
)
(:scoring
  (count ballThrownToBin:yellow)
)
)



(define (game game-id-645) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - curved_wooden_ramp)
      (exists (?d - hexagonal_bin)
        (exists (?b ?c ?d ?o1 - pillow ?l2 - hexagonal_bin)
          (game-optional
            (and
              (and
                (same_type ?h pillow)
                (agent_holds agent)
                (agent_holds ?l2)
              )
              (in agent ?l2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?p - block)
        (then
          (once (touch ?p ?p) )
          (hold-while (in_motion agent) (and (not (and (in ?p ?p) (opposite ?p top_shelf) ) ) (not (agent_holds ?p) ) ) (on ?p ?p) (and (adjacent bed ?p) (on ?p ?p) (in_motion ?p) ) )
          (once (and (and (not (not (> 1 (distance bed ?p)) ) ) (agent_holds ?p) ) (not (in_motion ?p) ) ) )
        )
      )
    )
    (forall (?o - drawer)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - ball)
            (then
              (once (same_type ?o block) )
              (once (on ?o ?o) )
              (once (and (on ?l agent) (not (not (and (in_motion agent) (in ?l ?o) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (* 6 (count cubeBlockInBuilding:pink:basketball) )
      (total-time)
    )
    (or
      (>= (* (- (* 3 (count cubeBlockInBuilding:purple) )
          )
          (* 5 (+ 10 )
          )
          1
        )
        10
      )
      (>= (* (count cubeBlockInBuilding:beachball) 4 )
        6
      )
    )
    (or
      (not
        (or
          (>= (* (external-forall-maximize (count cubeBlockInBuilding:pink) ) )
            (+ (* 15 (* (* (count blockPlacedInBuilding:golfball) (+ 2 7 )
                  )
                  (- (<= 2 (count-once-per-objects blockPlacedInBuilding:green) )
                  )
                )
              )
              4
              2
            )
          )
          (<= (+ 4 (external-forall-maximize (external-forall-minimize (count cubeBlockInBuilding:red_pyramid_block:purple) ) ) )
            (count-total blockPlacedInBuilding:green:yellow_pyramid_block:side_table)
          )
          (> (count-once-per-objects cubeBlockInBuilding:blue_dodgeball) (total-score) )
        )
      )
      (>= (> 1 (count cubeBlockInBuilding:dodgeball) )
        (+ 7 50 )
      )
      (not
        (>= 4 (count cubeBlockInBuilding:blue_cube_block) )
      )
    )
  )
)
(:scoring
  (* 20 (count-once-per-objects blockPlacedInBuilding:pink) )
)
)



(define (game game-id-646) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b10 - hexagonal_bin)
      (game-optional
        (not
          (> (distance ?b10 desk) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromBehindChairsInBin
      (exists (?h - building)
        (then
          (hold-while (< (distance_side desk front_left_corner ?h) 10) (not (rug_color_under ?h white) ) (on ?h bed) )
          (hold (adjacent_side bed front ?h) )
          (hold (in_motion floor) )
        )
      )
    )
  )
)
(:terminal
  (<= (count throwFromBehindChairsInBin:white:pink) 1 )
)
(:scoring
  (count throwFromBehindChairsInBin:doggie_bed:tan)
)
)



(define (game game-id-647) (:domain many-objects-room-v1)
(:setup
  (exists (?c ?h - shelf ?c2 - triangular_ramp)
    (exists (?c - hexagonal_bin ?b - chair)
      (and
        (exists (?b - building)
          (not
            (exists (?h ?d ?o2 ?t ?d - sliding_door)
              (exists (?d - chair ?s - game_object)
                (exists (?x ?x0 - light_blue)
                  (game-conserved
                    (not
                      (and
                        (on ?t rug)
                        (in_motion ?d)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - building)
      (and
        (preference throwFromDoorToBin
          (exists (?x - tan)
            (then
              (once (not (in ?d ?d) ) )
              (once (agent_holds ?d) )
              (once (= 5 1) )
            )
          )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?h ?g ?d - hexagonal_bin ?h - hexagonal_bin ?g - doggie_bed)
        (then
          (hold (in ?g ?g) )
          (hold (on ?g ?g) )
          (hold (on ?g ?g) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count throwFromDoorToBin:green) (count-once-per-objects throwBallToBinOffObject:doggie_bed) )
    (count-once-per-objects throwFromDoorToBin:beachball:blue_cube_block)
  )
)
(:scoring
  (external-forall-maximize
    (count throwBallToBinOffObject:pink_dodgeball:basketball)
  )
)
)



(define (game game-id-648) (:domain few-objects-room-v1)
(:setup
  (forall (?b10 - chair)
    (and
      (game-conserved
        (faces agent ?b10)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin)
      (and
        (preference thrownObjectHitsComputer
          (exists (?c3 - ball)
            (then
              (hold (rug_color_under ?c3 white) )
              (hold-while (and (and (in_motion ?h) (in_motion ?c3) (and (on ?c3 ?h) ) ) (agent_holds ?c3) ) (and (< (distance desk bed) 1) (forall (?b10 - hexagonal_bin ?b - (either desktop tall_cylindrical_block ball) ?b - tall_cylindrical_block ?p - block) (not (and (and (faces ?c3 ?h) (and (in_motion ?c3) (touch ?p ?p) ) (toggled_on brown) ) (adjacent desk ?c3) ) ) ) ) (exists (?b1 - hexagonal_bin) (= (distance ?h ?c3) (distance door ?b1)) ) )
              (hold (in_motion ?c3) )
            )
          )
        )
      )
    )
    (preference throwOverRamp
      (exists (?o5 ?o1 ?t2 - curved_wooden_ramp ?r - hexagonal_bin)
        (then
          (hold (not (on ?r agent) ) )
          (once (agent_holds ?r) )
          (once (not (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (< (external-forall-minimize (count-same-positions thrownObjectHitsComputer:dodgeball:dodgeball) ) (total-score) )
    (> (count-once-per-objects thrownObjectHitsComputer:basketball) (count-same-positions thrownObjectHitsComputer:dodgeball) )
  )
)
(:scoring
  (count-measure throwOverRamp:white)
)
)



(define (game game-id-649) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - triangular_ramp ?c - ball ?b - book)
    (and
      (game-optional
        (exists (?o - ball ?b1 - curved_wooden_ramp)
          (not
            (not
              (and
                (and
                  (< 0 3)
                  (and
                    (agent_holds ?b1)
                    (agent_holds ?b1)
                  )
                )
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?w1 - dodgeball ?r - hexagonal_bin)
        (then
          (hold (not (in_motion bed) ) )
          (hold (< (distance desk ?r) 4) )
          (once (in_motion ?r) )
        )
      )
    )
    (preference throwAttempt
      (exists (?tb - curved_wooden_ramp ?d ?h - (either lamp laptop))
        (then
          (hold (agent_holds ?h) )
          (once (in_motion ?h) )
          (once (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (total-time) )
    (> (+ 5 6 )
      (count-once-per-objects throwAttempt:beachball)
    )
    (< (- 6 )
      (total-time)
    )
    (< (count-once-per-objects thrownObjectHitsComputer:pink:doggie_bed) 2 )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:beachball)
)
)



(define (game game-id-650) (:domain many-objects-room-v1)
(:setup
  (exists (?c - pillow)
    (or
      (exists (?b - (either dodgeball pillow golfball) ?w1 - dodgeball)
        (and
          (exists (?c - ball)
            (game-conserved
              (or
                (not
                  (< (x_position agent) 1)
                )
                (and
                  (in_motion ?w1)
                  (adjacent desk floor)
                )
                (agent_holds ?c)
              )
            )
          )
          (exists (?s - hexagonal_bin ?o - flat_block)
            (and
              (exists (?d2 - dodgeball)
                (game-conserved
                  (agent_holds ?d2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?b - game_object)
        (then
          (hold-while (not (agent_holds ?b) ) (in_motion ?b) )
          (once (not (not (not (in_motion ?b) ) ) ) )
          (hold (adjacent bed ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-score) (total-score) )
      (>= 5 (count greenObjectMovedToRoomCenter) )
    )
    (>= (total-score) 6 )
  )
)
(:scoring
  (* 2 4 )
)
)



(define (game game-id-651) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c5 ?b4 ?b1 - ball)
      (game-conserved
        (and
          (and
            (not
              (< 1 (x_position ?b1))
            )
            (same_color ?b4 ?b4)
            (touch agent ?b4)
          )
          (and
            (object_orientation agent upright)
            (in ?b4 ?b4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?b2 - hexagonal_bin)
        (then
          (hold (in_motion ?b2) )
          (hold (not (on ?b2 ?b2) ) )
          (hold (agent_holds ?b2) )
        )
      )
    )
    (preference objectsHidden
      (exists (?h - game_object)
        (then
          (once (agent_holds ?h) )
          (hold (not (and (not (not (in ?h ?h) ) ) (exists (?w2 - hexagonal_bin) (same_type ?w2 drawer) ) ) ) )
          (once (not (above ?h ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 6 15 )
)
(:scoring
  (count objectWithMatchingColor:hexagonal_bin)
)
)



(define (game game-id-652) (:domain many-objects-room-v1)
(:setup
  (forall (?d1 - building)
    (forall (?h - doggie_bed)
      (forall (?p - curved_wooden_ramp)
        (exists (?b - (either basketball cube_block) ?d - triangular_ramp ?b - dodgeball ?b - (either golfball laptop dodgeball))
          (exists (?r2 - hexagonal_bin)
            (game-conserved
              (in_motion ?d1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball ?bl ?p3 ?h ?l ?c ?s ?l1 ?t ?h ?g - hexagonal_bin ?c4 - ball)
      (and
        (preference redDodgeballThrownToBin
          (exists (?c5 - block ?h - dodgeball ?d - blue_pyramid_block)
            (then
              (hold-while (in_motion ?c4) (opposite ?c4 ?c4) )
              (once (agent_holds ?c4) )
              (once (not (is_setup_object ?c4) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 7 )
)
(:scoring
  (* 3 1 )
)
)



(define (game game-id-653) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?h - hexagonal_bin)
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?s - hexagonal_bin)
        (then
          (once (agent_holds ?s) )
          (once (adjacent room_center ?s) )
          (hold (on ?s ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count blocksInPlace:beachball) (count blocksInPlace:red) (count-once-per-objects blocksInPlace:beachball) (count-once-per-objects blocksInPlace:blue_dodgeball) )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects blocksInPlace:beachball:golfball)
)
)



(define (game game-id-654) (:domain many-objects-room-v1)
(:setup
  (exists (?b8 - doggie_bed ?x - blue)
    (and
      (exists (?l - hexagonal_bin)
        (exists (?o2 - (either triangle_block book key_chain) ?t - beachball)
          (game-optional
            (not
              (on ?b8 agent)
            )
          )
        )
      )
      (exists (?b6 - building ?c - dodgeball)
        (and
          (and
            (exists (?o ?h ?d - (either cd golfball) ?s - hexagonal_bin)
              (game-optional
                (exists (?c3 - game_object)
                  (in green ?c)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?b1 - hexagonal_bin)
        (then
          (hold (adjacent desk ?b1) )
          (once (agent_holds ?b1) )
          (once (and (not (and (in_motion ?b1) (not (< 3 6) ) ) ) (open ?b1) ) )
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?w - hexagonal_bin ?b5 - curved_wooden_ramp ?g - pillow)
        (then
          (hold (and (agent_holds ?g) (agent_holds ?g) (and (on ?g ?g) (on ?g ?g) ) ) )
          (once (and (agent_holds ?g) (agent_holds ?g) (and (and (not (in_motion ?g) ) (agent_crouches ) ) (agent_holds ?g) (touch ?g ?g) ) ) )
          (once (agent_holds ?g) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?b5 - dodgeball)
        (then
          (once (< (distance ?b5 ?b5) (x_position ?b5)) )
          (hold (or (not (in_motion ?b5) ) (toggled_on ?b5) ) )
          (hold (on ?b5 agent) )
          (once (same_type ?b5 ?b5) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (* 100 10 )
      (count-once ballThrownToRampToBed:golfball)
    )
    (or
      (>= (count blockFromRugToDesk:dodgeball) (* (count-once-per-external-objects blockFromRugToDesk:green) (+ (+ 3 (count-increasing-measure ballThrownToRampToBed:dodgeball) )
            (count-measure ballThrownToRampToBed:hexagonal_bin)
          )
          5
          (+ 15 (- (count-once-per-objects ballThrownToRampToBed:alarm_clock:doggie_bed:basketball) )
          )
        )
      )
      (or
        (not
          (>= (* (* (* (count-once-per-objects blockFromRugToDesk:beachball) 10 )
                3
                6
                3
                7
                (count-once-per-objects ballThrownToRampToBed:dodgeball)
              )
              (= 180 (count-once-per-objects ballThrownThroughRampAndBlocksToBin:purple) )
            )
            (- 9 )
          )
        )
        (or
          (< 10 (>= (count-once-per-objects ballThrownToRampToBed:blue_dodgeball) 3 )
          )
          (>= (count-once-per-objects blockFromRugToDesk) (* 18 (- (* (count-once blockFromRugToDesk:brown) (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin:dodgeball:beachball) )
              )
            )
          )
        )
      )
      (>= 6 (count ballThrownThroughRampAndBlocksToBin:dodgeball) )
    )
    (>= 3 (* 0 (count ballThrownThroughRampAndBlocksToBin:top_drawer) )
    )
  )
)
(:scoring
  (count-once blockFromRugToDesk:yellow:rug:red)
)
)



(define (game game-id-655) (:domain many-objects-room-v1)
(:setup
  (forall (?c6 - hexagonal_bin)
    (forall (?o3 - (either key_chain cd dodgeball cd floor))
      (forall (?h - hexagonal_bin)
        (and
          (game-conserved
            (in_motion ?c6)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c5 - (either top_drawer pillow))
        (then
          (once (and (and (in_motion desk) (adjacent ?c5 ?c5) ) (< (distance_side ?c5 front ?c5 back) (distance ?c5 ?c5)) (agent_holds ?c5) ) )
          (once (in_motion ?c5) )
          (once (not (on ?c5 agent) ) )
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference ballRolledOnRampToRug
          (exists (?f - (either blue_cube_block pyramid_block) ?b4 - (either cube_block desktop))
            (then
              (once (on agent ?d) )
              (hold-while (in ?b4 ?d) (same_object ?d ?b4) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 2 1 )
  )
)
(:scoring
  (count-once-per-objects dodgeballsInPlace:golfball)
)
)



(define (game game-id-656) (:domain few-objects-room-v1)
(:setup
  (forall (?d - doggie_bed)
    (game-optional
      (same_object ?d bed)
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c4 - hexagonal_bin ?l1 - hexagonal_bin)
        (then
          (once (>= 4 (x_position ?l1)) )
          (hold (in_motion ?l1) )
          (once (and (and (and (agent_holds ?l1) (in_motion ?l1) (not (agent_holds ?l1) ) ) (and (same_color ?l1 ?l1) (not (and (agent_holds ?l1) (in_motion ?l1) (in ?l1 ?l1) (not (and (and (on agent ?l1) (agent_holds ?l1) ) (and (and (or (forall (?h - (either mug dodgeball dodgeball) ?d - hexagonal_bin) (on ?d ?l1) ) (and (not (and (< 1 5) (in_motion agent) (in ?l1 ?l1) ) ) (game_over ) ) ) (in_motion ?l1) ) (object_orientation ?l1 sideways) ) (not (< (distance room_center ?l1) (distance room_center ?l1)) ) (in_motion ?l1) ) ) ) ) ) ) (not (open ?l1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (not
      (not
        (< 5 (total-time) )
      )
    )
  )
)
(:scoring
  (count-once throwAttempt:book)
)
)



(define (game game-id-657) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - (either triangle_block main_light_switch chair cube_block) ?b - hexagonal_bin)
    (and
      (exists (?b - (either triangular_ramp teddy_bear))
        (and
          (game-conserved
            (= 1 (distance ?b rug))
          )
        )
      )
      (game-conserved
        (in ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - ball)
        (then
          (hold (not (in_motion ?b) ) )
          (hold (in_motion ?b) )
          (once (and (and (in_motion ?b) (and (and (agent_crouches ) (agent_crouches ) ) (on ?b ?b) ) ) (in_motion ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count-shortest throwBallToBin:beachball) )
)
(:scoring
  (count throwBallToBin:pink_dodgeball)
)
)



(define (game game-id-658) (:domain few-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (forall (?c - drawer)
      (game-optional
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l - hexagonal_bin ?b3 - tan_cube_block)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?o - ball ?c6 - triangular_ramp)
            (then
              (once (same_color ?b3 ?c6) )
              (hold (same_color ?c6 ?b3) )
              (once (broken agent) )
            )
          )
        )
        (preference ballThrownOntoTarget
          (at-end
            (in ?b3 ?b3)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (* (* 3 5 )
        2
      )
    )
    (count-once-per-objects blockInTowerKnockedByDodgeball:dodgeball)
  )
)
(:scoring
  (count-once-per-objects ballThrownOntoTarget:dodgeball)
)
)



(define (game game-id-659) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - wall)
    (game-optional
      (< (distance_side ?p2 right ?p2) (distance room_center ?p2))
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?l1 - hexagonal_bin)
        (at-end
          (on ?l1 ?l1)
        )
      )
    )
    (preference throwAttempt
      (exists (?c - ball)
        (then
          (hold (agent_holds ?c) )
          (hold (on ?c ?c) )
          (once (adjacent ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (count-once-per-objects throwAttempt:red_pyramid_block) (count throwAttempt:dodgeball) )
      (not
        (> (count-once-per-objects throwAttempt:hexagonal_bin:dodgeball) (total-score) )
      )
      (= (total-time) 2 )
    )
    (> 4 3 )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:yellow)
)
)



(define (game game-id-660) (:domain medium-objects-room-v1)
(:setup
  (forall (?p2 - hexagonal_bin ?p2 - tan_cube_block)
    (and
      (exists (?c - building ?d ?d - building)
        (game-conserved
          (in ?d ?d)
        )
      )
      (exists (?b - hexagonal_bin)
        (exists (?b - dodgeball)
          (not
            (game-optional
              (faces ?b rug)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?b4 - dodgeball)
        (then
          (once (exists (?o1 - block) (touch ?o1 ?o1) ) )
          (hold (agent_holds ?b4) )
          (once (adjacent door ?b4) )
        )
      )
    )
    (forall (?r2 ?l2 - hexagonal_bin ?l - dodgeball)
      (and
        (preference cubeBlockFromBedToShelf
          (exists (?x - orange)
            (then
              (once (in_motion ?l) )
              (once (on ?l ?l) )
              (hold (not (on ?l ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) 4 )
)
(:scoring
  (+ 8 (* (> (* 2 (+ (count-once-per-external-objects redDodgeballThrownToBinWithoutTouchingFloor:basketball) (- (- (count-once-per-objects cubeBlockFromBedToShelf:pink_dodgeball) )
            )
            (* 7 1 )
          )
          (external-forall-minimize
            (count redDodgeballThrownToBinWithoutTouchingFloor:red_pyramid_block:triangle_block)
          )
          3
          5
        )
        3
      )
      2
    )
  )
)
)



(define (game game-id-661) (:domain medium-objects-room-v1)
(:setup
  (exists (?b ?h - curved_wooden_ramp)
    (exists (?s - doggie_bed)
      (exists (?w - drawer)
        (game-conserved
          (= (distance_side bed right floor) 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?z - left)
            (then
              (once (>= 3 (distance desk ?h)) )
              (hold (agent_holds floor) )
              (hold (in ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (count blueObjectMovedToRoomCenter:blue_cube_block) 3 )
  )
)
(:scoring
  (- (* (* (count blueObjectMovedToRoomCenter:hexagonal_bin:pink_dodgeball) 2 (+ 10 (count blueObjectMovedToRoomCenter:tan:dodgeball) )
        (external-forall-maximize
          (+ 300 3 )
        )
        (count blueObjectMovedToRoomCenter:blue_dodgeball:red)
        (* (* (* (count-once-per-objects blueObjectMovedToRoomCenter:book) 5 (* (count blueObjectMovedToRoomCenter:dodgeball) (count blueObjectMovedToRoomCenter:basketball) )
            )
            10
          )
          (count blueObjectMovedToRoomCenter:alarm_clock:green)
        )
        2
        10
        2
      )
      1
    )
  )
)
)



(define (game game-id-662) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (forall (?o - hexagonal_bin)
      (exists (?p3 - wall)
        (game-conserved
          (in ?o ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b - hexagonal_bin)
        (then
          (hold (and (and (exists (?b - cube_block) (is_setup_object bed) ) (not (in_motion ?b) ) ) (on ?b rug) ) )
          (hold (agent_holds ?b) )
          (once (and (agent_holds ?b) (agent_holds ?b) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count cubeBlockThrownToTopShelf:dodgeball:beachball) (total-time) )
      (>= (count cubeBlockThrownToTopShelf:red) (+ (= (= 4 5 )
          )
          2
        )
      )
    )
    (= (total-score) 1 )
  )
)
(:scoring
  (+ (count-once-per-objects cubeBlockThrownToTopShelf:blue_dodgeball:red) 0 )
)
)



(define (game game-id-663) (:domain medium-objects-room-v1)
(:setup
  (forall (?b10 - cube_block ?l4 - block)
    (and
      (exists (?l4 - chair)
        (and
          (and
            (game-optional
              (and
                (touch ?l4 ?l4)
                (on bed ?l4)
              )
            )
            (game-conserved
              (and
                (adjacent ?l4 ?l4)
                (and
                  (agent_holds ?l4)
                  (in_motion agent)
                  (exists (?w - (either blue_cube_block golfball))
                    (not
                      (in ?w ?l4)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (adjacent bed ?l4)
          )
          (game-conserved
            (agent_holds ?l4)
          )
        )
      )
      (exists (?o - (either yellow_cube_block dodgeball laptop book dodgeball blue_cube_block cellphone))
        (and
          (exists (?o3 - (either doggie_bed main_light_switch) ?d - hexagonal_bin)
            (forall (?b - (either dodgeball))
              (and
                (exists (?d - cube_block)
                  (game-conserved
                    (not
                      (adjacent desk ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (in_motion ?l4)
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?t - pyramid_block)
        (then
          (hold (in_motion ?t) )
          (once (not (agent_holds ?t) ) )
          (once (in ?t ?t) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count towerFallsWhileBuilding:doggie_bed) 2 )
    (not
      (> 10 (count-unique-positions towerFallsWhileBuilding:basketball) )
    )
  )
)
(:scoring
  (count towerFallsWhileBuilding:yellow)
)
)



(define (game game-id-664) (:domain many-objects-room-v1)
(:setup
  (exists (?l1 - pyramid_block ?y ?y0 ?y1 - (either upside_down upside_down))
    (game-conserved
      (agent_holds ?l1)
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?b9 - hexagonal_bin ?r2 - pillow)
        (at-end
          (< (distance ?r2 ?r2) (distance bed ?r2))
        )
      )
    )
    (forall (?r - hexagonal_bin ?h - (either hexagonal_bin) ?b - ball ?r2 - block)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?l - chair ?w2 - hexagonal_bin)
            (then
              (once (in_motion ?r2) )
              (hold (and (and (agent_holds agent) (in ?r2 ?r2) (agent_holds ?r2) (not (in ?w2 ?w2) ) ) (not (agent_holds ?r2) ) (and (same_object ?w2 ?r2) (in_motion ?r2) ) ) )
              (hold (not (same_type ?r2 bridge_block) ) )
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?c - building ?d - building)
            (at-end
              (agent_holds ?r2)
            )
          )
        )
        (preference ballThrownThroughRampToBin
          (exists (?c3 - triangular_ramp ?o5 - red_dodgeball)
            (at-end
              (and
                (in_motion ?o5)
                (not
                  (agent_holds ?r2)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects otherObjectsOnDeskShelf:cube_block) (+ (* 4 (* (count ballThrownThroughRampToBin:orange:pink) )
      )
      3
    )
  )
)
(:scoring
  (* (* (+ 3 10 (* (* (+ (count ballThrownThroughRampToBin:pink) (* 6 (* 6 (count-once-per-objects ballThrownThroughRampToBin:book) )
              )
            )
            (* 1 (count-once-per-objects otherObjectsOnDeskShelf:beachball) (* (+ 8 2 )
              )
              (+ (count dodgeballBouncesOnceToDoggieBed:basketball) (* 3 (count otherObjectsOnDeskShelf:beachball) )
                15
              )
            )
          )
          300
        )
      )
      5
    )
    10
  )
)
)



(define (game game-id-665) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (and
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b - dodgeball)
        (then
          (once (exists (?c - beachball ?o - hexagonal_bin ?b9 - dodgeball ?h - dodgeball) (not (not (in bed ?b) ) ) ) )
          (once (agent_holds ?b) )
          (once (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 4 10 (count cubeThrownToBin:pink:beachball) )
      (count-increasing-measure cubeThrownToBin:bed)
    )
    3
  )
)
(:scoring
  (* (external-forall-maximize (* (count cubeThrownToBin:basketball) 10 )
    )
    1
  )
)
)



(define (game game-id-666) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (not
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?t - game_object ?x - green)
        (then
          (hold (and (exists (?b6 - ball) (touch agent ?b6) ) (and (agent_holds ?t) (in_motion agent) ) (same_type ?t ?t) ) )
          (once (is_setup_object agent) )
          (hold (object_orientation ?t upside_down) )
        )
      )
    )
    (preference throwKnocksBlock
      (exists (?y ?y0 ?y1 - upright ?h - hexagonal_bin)
        (then
          (hold (adjacent ?h ?h) )
          (once-measure (in_motion ?h) (distance ?h desk) )
          (hold (is_setup_object ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ 50 5 )
      2
    )
    (>= 1 (count-once-per-objects ballKnocksBlockFromRug:red) )
    (not
      (or
        (> (count throwKnocksBlock:yellow) 1 )
        (>= (total-time) (= 18 (* 4 10 )
          )
        )
      )
    )
  )
)
(:scoring
  (+ 1 2 (+ 3 (count throwKnocksBlock:wall) )
  )
)
)



(define (game game-id-667) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - doggie_bed)
    (forall (?h - hexagonal_bin)
      (exists (?db - wall)
        (exists (?c - ball ?c2 - ball ?b8 - ball)
          (and
            (and
              (forall (?w2 ?c - hexagonal_bin)
                (game-conserved
                  (in_motion ?b8)
                )
              )
              (game-optional
                (and
                  (touch ?h ?b2)
                  (and
                    (not
                      (in_motion ?h)
                    )
                    (on ?b2 ?b8)
                  )
                )
              )
              (and
                (and
                  (exists (?p - hexagonal_bin)
                    (and
                      (game-optional
                        (not
                          (not
                            (touch ?p ?h)
                          )
                        )
                      )
                      (and
                        (and
                          (game-conserved
                            (not
                              (and
                                (in_motion ?p)
                                (adjacent desk ?p)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?s - curved_wooden_ramp)
        (then
          (once (or (in_motion agent) ) )
          (once (and (touch ?s ?s) (agent_holds ?s) ) )
          (once (not (in_motion ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (count-once dodgeballFromBlockToBin:golfball) )
    3
  )
)
(:scoring
  (- 40 )
)
)



(define (game game-id-668) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - dodgeball ?l2 - (either chair cellphone) ?d - (either blue_cube_block chair dodgeball))
    (game-optional
      (not
        (not
          (not
            (on ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?g - dodgeball)
        (then
          (hold (on ?g ?g) )
          (once (< 1 0) )
          (hold-while (and (not (not (not (rug_color_under ?g brown) ) ) ) (object_orientation ?g upright) ) (in_motion ?g) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count redDodgeballThrownToBinWithoutTouchingFloor:basketball) (count redDodgeballThrownToBinWithoutTouchingFloor:orange:book) )
  )
)
(:scoring
  (count-once redDodgeballThrownToBinWithoutTouchingFloor:bed:pink_dodgeball)
)
)



(define (game game-id-669) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (and
      (exists (?c2 - (either rug dodgeball golfball))
        (exists (?d - golfball ?p1 - dodgeball)
          (forall (?b - hexagonal_bin)
            (exists (?d - cylindrical_block)
              (game-conserved
                (adjacent door ?h)
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (or
            (or
              (in_motion ?h)
              (in_motion ?h)
              (not
                (and
                  (agent_holds ?h)
                  (and
                    (agent_holds ?h)
                    (< 1 1)
                  )
                )
              )
            )
            (and
              (in ?h ?h)
              (same_color agent color)
            )
            (and
              (not
                (in_motion ?h)
              )
              (and
                (on ?h ?h)
                (not
                  (on floor ?h)
                )
              )
              (agent_holds ?h)
              (on ?h top_drawer)
            )
          )
          (in ?h brown)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?b - dodgeball ?g - watch)
        (then
          (once (in_motion ?g) )
          (once (not (on ?g floor) ) )
          (once (> (distance ?g ?g) 4) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count-once-per-objects nonBlockPlacedInBuilding:orange:orange) (count nonBlockPlacedInBuilding:orange) )
      (or
        (>= (count nonBlockPlacedInBuilding:blue_dodgeball) 10 )
        (<= (count nonBlockPlacedInBuilding:green) (count-once-per-objects nonBlockPlacedInBuilding:basketball) )
      )
    )
    (= (count nonBlockPlacedInBuilding:orange) (total-time) )
    (>= 5 (* 10 5 (count-same-positions nonBlockPlacedInBuilding:dodgeball) (- (count-overlapping nonBlockPlacedInBuilding:dodgeball) )
        18
        (* 0.5 (* (count-once nonBlockPlacedInBuilding:blue_dodgeball:beachball) (external-forall-minimize (count nonBlockPlacedInBuilding:dodgeball:basketball) ) )
        )
      )
    )
  )
)
(:scoring
  (* (- (* (count-increasing-measure nonBlockPlacedInBuilding:beachball:purple) (<= 10 (+ (count nonBlockPlacedInBuilding:yellow) 50 30 )
        )
      )
    )
  )
)
)



(define (game game-id-670) (:domain many-objects-room-v1)
(:setup
  (exists (?c5 - game_object)
    (game-optional
      (game_start )
    )
  )
)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?tb - wall ?d - (either cellphone cellphone blue_cube_block) ?h - hexagonal_bin ?bl ?w2 ?h ?p2 ?b7 ?b4 ?l4 ?w ?b ?d - wall)
        (then
          (once (not (not (in_motion ?h) ) ) )
          (once (and (and (and (touch ?h ?l4) (not (agent_holds top_drawer) ) (in_motion ?b7) ) (not (agent_holds ?l4) ) (agent_holds ?l4) ) (adjacent ?b ?bl) ) )
          (once (forall (?c - hexagonal_bin) (in agent ?b4) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?d ?f ?h ?bl ?s ?b - dodgeball)
        (at-end
          (and
            (in_motion ?f)
            (opposite ?s ?bl)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (* (- 1 )
      )
      (= 9 (- (count dodgeballBouncesOnceToDoggieBed:book:yellow_pyramid_block) )
      )
    )
    (* 30 (count-once-per-objects failedThrowToBin:beachball) 20 (external-forall-maximize (count failedThrowToBin:blue_dodgeball) ) 0 10 (= 50 5 )
      5
      (count dodgeballBouncesOnceToDoggieBed:dodgeball:dodgeball)
    )
  )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:yellow)
)
)



(define (game game-id-671) (:domain many-objects-room-v1)
(:setup
  (exists (?p3 - ball)
    (game-conserved
      (on ?p3 agent)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?l - (either dodgeball bed curved_wooden_ramp))
        (then
          (hold (not (> 1 (distance ?l ?l)) ) )
          (once (in_motion ?l) )
          (hold-while (in ?l ?l) (exists (?y - upside_down ?h - block) (not (in ?h ?l) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-time) )
)
(:scoring
  (+ (count-overlapping throwToBinFromDistance:hexagonal_bin:pink:doggie_bed) (count throwToBinFromDistance:beachball) )
)
)



(define (game game-id-672) (:domain few-objects-room-v1)
(:setup
  (forall (?p1 - hexagonal_bin)
    (game-conserved
      (agent_holds ?p1)
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?d2 - (either dodgeball basketball))
        (at-end
          (< 2 (distance ?d2 ?d2))
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (external-forall-minimize (count-once-per-objects thrownObjectHitsComputer:yellow) ) )
)
(:scoring
  (count thrownObjectHitsComputer:blue_pyramid_block)
)
)



(define (game game-id-673) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (exists (?ob - dodgeball)
      (equal_z_position desk ?ob)
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b3 - game_object)
        (at-end
          (agent_holds agent)
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (not
        (>= 6 10 )
      )
      (>= 5 4 )
      (>= (count-once-per-external-objects dropAttempt:yellow:cube_block:yellow) (total-time) )
    )
    (>= (total-time) 2 )
  )
)
(:scoring
  (count dropAttempt:dodgeball)
)
)



(define (game game-id-674) (:domain medium-objects-room-v1)
(:setup
  (exists (?b4 - game_object)
    (game-conserved
      (< 10 (distance room_center ?b4))
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?d - (either pyramid_block golfball book) ?c - ball)
        (then
          (hold-while (in_motion ?c) (in_motion ?c) )
          (once (and (= (distance ?c ?c)) (exists (?h ?b - hexagonal_bin ?h - hexagonal_bin) (in_motion ?c) ) ) )
          (hold (and (and (in_motion ?c) (exists (?ob - pyramid_block) (not (on ?c green_golfball) ) ) (not (exists (?h - building) (in_motion ?h) ) ) ) (not (or (< 2 9) (in_motion ?c) (and (and (and (equal_x_position ?c ?c) (and (game_start ) (exists (?l - (either alarm_clock ball desktop)) (exists (?h - game_object) (and (between ?c ?h ?l) (adjacent bed ?l) ) ) ) ) ) (not (and (not (and (same_color ?c ?c) (exists (?bl - ball) (in_motion ?bl) ) (adjacent desk ?c) (not (and (on rug ?c) (not (broken ?c) ) ) ) ) ) (equal_z_position ?c ?c) ) ) ) (< (distance ?c ?c) 9) ) ) ) ) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?o5 - hexagonal_bin ?c6 - hexagonal_bin)
        (then
          (once (adjacent_side desk left ?c6) )
          (once (is_setup_object ?c6) )
          (once (not (in_motion ?c6) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:tall_cylindrical_block) )
  )
)
(:scoring
  (* (* (count redDodgeballThrownToBinWithoutTouchingFloor:doggie_bed) 2 )
    2
  )
)
)



(define (game game-id-675) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - (either blue_cube_block beachball book) ?o - curved_wooden_ramp)
    (exists (?b - (either cellphone pyramid_block book))
      (and
        (game-conserved
          (< (x_position ?b) (distance door ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b ?b - chair)
      (and
        (preference bounceBallToBin
          (exists (?bl - wall ?c3 - bridge_block)
            (at-end
              (game_over )
            )
          )
        )
        (preference ballKnocksTeddy
          (exists (?o4 - hexagonal_bin)
            (at-end
              (not
                (not
                  (agent_holds ?b)
                )
              )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?t - game_object ?d - hexagonal_bin)
            (then
              (once (agent_holds ?b) )
              (once (not (in_motion floor) ) )
              (once (in_motion ?d) )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?l1 - cube_block ?c5 - (either hexagonal_bin pen))
            (then
              (once (open ?c5) )
              (once (< 1 (x_position ?c5)) )
              (once (and (on ?b ?c5) (same_type ?b ?c5) ) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?c - cube_block)
        (then
          (hold-while (and (not (agent_holds ?c) ) (and (is_setup_object ?c) (is_setup_object ?c) (or (not (not (not (in ?c ?c) ) ) ) (not (agent_holds ?c) ) ) (agent_crouches ) ) ) (not (and (in tan blue) (in_motion ?c) ) ) )
          (hold-while (not (rug_color_under ?c purple) ) (= 1 9) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* 2 25 )
        50
      )
      (count-shortest bounceBallToBin:golfball)
    )
    5
  )
)
(:scoring
  (+ 5 (count-unique-positions ballKnocksTeddy:dodgeball) (count ballOnBedAtEnd:dodgeball) )
)
)



(define (game game-id-676) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - cube_block)
    (game-optional
      (not
        (and
          (in ?b ?b)
          (adjacent ?b ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either cellphone book cube_block) ?c - doggie_bed)
      (and
        (preference dodgeballsInPlace
          (exists (?s - curved_wooden_ramp ?h - (either pillow dodgeball blue_cube_block))
            (then
              (once (not (and (and (and (< 2 1) (and (in_motion bed) (equal_x_position ?h ?c) ) ) (in_motion agent) ) (agent_holds rug) ) ) )
              (once (agent_holds ?c) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
    (forall (?h - desktop ?h ?b1 ?c ?p ?b1 ?d - hexagonal_bin)
      (and
        (preference blockThrowAttempt
          (exists (?l - cube_block ?h - dodgeball)
            (then
              (once (in_motion floor) )
              (hold (exists (?c1 - (either bridge_block tall_cylindrical_block)) (agent_holds ?h) ) )
              (once (and (not (in ?b1 ?p) ) (and (on agent ?c) (same_type agent ?b1) ) (on ?d ?d) ) )
              (hold (not (touch ?c ?b1) ) )
              (once (and (object_orientation ?p diagonal) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-score) )
)
(:scoring
  (count-once blockThrowAttempt:side_table)
)
)



(define (game game-id-677) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?c - teddy_bear ?w1 - doggie_bed)
      (game-conserved
        (agent_holds ?w1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?f - (either rug floor laptop) ?d1 - red_dodgeball)
      (and
        (preference throwKnocksBlock
          (exists (?z - (either front_left_corner back front))
            (then
              (once (and (not (in_motion ?d1) ) ) )
              (once (in_motion ?d1) )
              (hold (< 10 (distance desk ?d1)) )
            )
          )
        )
        (preference thrownObjectHitsComputer
          (then
            (hold (and (not (agent_holds ?d1) ) (and (not (on ?d1 ?d1) ) (and (not (and (and (object_orientation green_golfball upside_down) (and (in_motion ?d1) ) (in_motion ?d1) ) (not (same_color ?d1 west_wall) ) (in_motion ?d1) ) ) (not (and (< 1 (distance ?d1 ?d1)) (touch ?d1 ?d1) (adjacent_side ?d1 front agent back) ) ) (in_motion ?d1) ) (in_motion ?d1) (and (exists (?h - game_object ?d - shelf) (< (distance bed agent) 0.5) ) (in_motion ?d1) ) (touch ?d1 agent) (on ?d1 ?d1) (and (and (on ?d1 ?d1) (and (on ?d1 agent) ) ) (exists (?c6 - shelf) (and (in_motion ?d1) ) ) ) (forall (?o - cube_block) (and (in ?o ?d1) ) ) (not (in_motion ?d1) ) (in ?d1 ?d1) ) (agent_holds ?d1) ) )
            (hold (< 2 (distance door agent)) )
            (hold (and (same_type agent ?d1) (agent_holds ?d1) ) )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?d - (either wall doggie_bed))
            (then
              (once (and (and (and (adjacent desk ?d1) (not (and (= (distance ?d ?d) 0.5) (and (not (on ?d1 agent) ) (not (in_motion ?d) ) ) ) ) (and (and (and (agent_holds floor) (and (in_motion ?d) (agent_holds ?d) ) ) (in ?d1 ?d) (not (agent_holds ?d) ) (not (on brown ?d) ) (and (adjacent desk ?d) (and (adjacent_side desk front ?d1) (in_motion ?d) ) ) (not (< 1 1) ) ) (not (not (in ?d ?d1) ) ) ) ) (in_motion ?d) (not (agent_holds ?d) ) ) (not (< 1 1) ) ) )
              (once (in_motion ?d) )
              (once (and (exists (?t - cube_block) (in_motion floor) ) (in_motion ?d) ) )
            )
          )
        )
      )
    )
    (preference objectsHidden
      (exists (?o2 - hexagonal_bin ?o - hexagonal_bin)
        (then
          (hold (< 5 (distance room_center ?o)) )
          (hold (not (not (not (adjacent desk ?o) ) ) ) )
          (once (agent_holds pink) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= (total-time) 5 )
    (>= (* (count throwKnocksBlock:dodgeball) 1 )
      (total-time)
    )
    (>= (count thrownObjectHitsComputer:basketball) 20 )
  )
)
(:scoring
  (count-once-per-objects thrownObjectHitsComputer:pink)
)
)



(define (game game-id-678) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (forall (?x - red)
      (game-conserved
        (adjacent desk ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?t - hexagonal_bin)
        (at-end
          (in_motion ?t)
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ 6 (+ 40 1 )
      )
      6
    )
    (count-shortest blockInTowerAtEnd:hexagonal_bin)
  )
)
(:scoring
  (+ (count blockInTowerAtEnd:pink) (> (- (* (- 3 )
        )
      )
      5
    )
    5
  )
)
)



(define (game game-id-679) (:domain medium-objects-room-v1)
(:setup
  (forall (?b4 - hexagonal_bin)
    (game-conserved
      (and
        (exists (?b ?p ?o4 ?b - yellow_pyramid_block ?b7 ?b ?b4 ?w - doggie_bed)
          (game_over )
        )
        (and
          (or
            (and
              (not
                (< 3 1)
              )
              (agent_holds ?b4)
            )
            (and
              (between green ?b4 ?b4)
              (not
                (and
                  (in_motion ?b4)
                  (and
                    (not
                      (in ?b4 agent)
                    )
                    (and
                      (adjacent ?b4 ?b4)
                      (in rug ?b4)
                      (in_motion ?b4)
                    )
                    (not
                      (on ?b4 ?b4)
                    )
                  )
                )
              )
            )
          )
          (not
            (and
              (> 10 (distance ?b4 pink))
              (or
                (is_setup_object ?b4)
                (and
                  (not
                    (in ?b4 ?b4)
                  )
                  (= 3 6)
                  (adjacent ?b4 ?b4)
                )
              )
            )
          )
          (same_object ?b4 ?b4)
        )
        (not
          (on ?b4 ?b4)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?b - wall ?b - dodgeball)
            (then
              (once (rug_color_under ?d tan) )
              (once (< 1 1) )
              (hold (and (on ?b ?d) (in_motion rug) ) )
            )
          )
        )
        (preference ballThrownToRug
          (exists (?d - (either credit_card book triangle_block))
            (then
              (once (above ?d ?d) )
            )
          )
        )
        (preference ballThrownToBin
          (exists (?g ?b - block ?p - drawer)
            (then
              (once (adjacent bed ?p) )
              (once (adjacent side_table ?d) )
              (once (game_over ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 3 (count-same-positions ballThrownToRug:dodgeball) )
)
(:scoring
  (+ (* (count-once ballThrownToBin:white) 1 10 )
    (* (* 20 (count-increasing-measure ballThrownToRug:blue_cube_block) )
      (count-once-per-objects ballThrownToBin:dodgeball)
    )
  )
)
)



(define (game game-id-680) (:domain few-objects-room-v1)
(:setup
  (exists (?b2 - dodgeball ?p ?b4 - wall)
    (forall (?c - game_object ?o - hexagonal_bin)
      (and
        (exists (?t - dodgeball ?d1 - game_object)
          (forall (?b9 ?h - (either beachball cd triangle_block) ?c2 - ball ?b2 - dodgeball)
            (and
              (and
                (and
                  (game-optional
                    (on ?o ?p)
                  )
                )
                (forall (?r - block ?p - dodgeball ?h - pink_dodgeball)
                  (game-optional
                    (and
                      (on ?b4 ?o)
                      (in ?d1 ?h)
                      (not
                        (or
                          (exists (?o2 - pillow)
                            (not
                              (on agent ?d1)
                            )
                          )
                          (agent_holds ?o)
                        )
                      )
                      (and
                        (not
                          (agent_holds ?b4)
                        )
                        (and
                          (agent_holds desk)
                          (on ?p ?d1)
                          (exists (?d - hexagonal_bin ?r - green_triangular_ramp)
                            (not
                              (and
                                (in ?o ?h)
                              )
                            )
                          )
                          (forall (?o1 - teddy_bear ?l - cube_block)
                            (or
                              (not
                                (game_start )
                              )
                              (adjacent ?p ?b4)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (between ?o ?o ?o)
        )
        (game-optional
          (on ?p ?p)
        )
        (game-optional
          (agent_holds ?b4)
        )
        (and
          (forall (?g - game_object)
            (game-conserved
              (in_motion ?o)
            )
          )
          (exists (?o - game_object)
            (and
              (or
                (exists (?d - ball ?f - hexagonal_bin)
                  (game-conserved
                    (object_orientation ?p upright)
                  )
                )
                (and
                  (and
                    (forall (?b - hexagonal_bin)
                      (game-optional
                        (< 6 (distance desk ?b))
                      )
                    )
                  )
                  (and
                    (forall (?r - hexagonal_bin)
                      (game-optional
                        (in_motion ?p)
                      )
                    )
                    (game-conserved
                      (and
                        (adjacent_side desk front_left_corner ?p)
                        (touch desk west_wall)
                        (in_motion ?b4)
                      )
                    )
                  )
                )
              )
            )
          )
          (and
            (game-optional
              (in ?b4 agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?d - (either block cd))
        (then
          (once (agent_holds ?d) )
          (once (in_motion ?d) )
          (hold-while (agent_holds ?d) (adjacent_side desk back ?d) )
          (hold-while (in ?d agent) (and (not (on ?d ?d) ) (in_motion ?d) (adjacent ?d ?d) (agent_holds ?d) ) (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count golfballInBinFromPillow:dodgeball) (external-forall-maximize (+ 15 (external-forall-minimize (+ 6 10 )
          )
          (count golfballInBinFromPillow:bed)
          (+ 6 (external-forall-maximize (external-forall-maximize (* 15 -10 )
              )
            )
            (count golfballInBinFromPillow:pink)
            (count golfballInBinFromPillow:golfball)
            (* (external-forall-maximize (count golfballInBinFromPillow:purple) ) (* (count golfballInBinFromPillow:orange) (= (- 100 (count-longest golfballInBinFromPillow:yellow) ) (count golfballInBinFromPillow:yellow) )
              )
            )
            (= (count-increasing-measure golfballInBinFromPillow:blue_dodgeball:hexagonal_bin) (count-once-per-objects golfballInBinFromPillow:dodgeball) )
            1
          )
          (/
            (count golfballInBinFromPillow:pink)
            (* 6 2 )
          )
          (+ 30 (count-unique-positions golfballInBinFromPillow:alarm_clock) )
          (* (* (- (+ (* (count-once golfballInBinFromPillow:basketball:red) (count golfballInBinFromPillow:dodgeball:pink) )
                  30
                  5
                  (count-once-per-objects golfballInBinFromPillow:pink_dodgeball)
                )
              )
              (count golfballInBinFromPillow:dodgeball)
              (count golfballInBinFromPillow:blue_cube_block:beachball:blue)
              (count-once-per-objects golfballInBinFromPillow:alarm_clock:red)
              (= 3 (* (count golfballInBinFromPillow:dodgeball) (count-once-per-objects golfballInBinFromPillow:pyramid_block:green) )
                (count-once-per-objects golfballInBinFromPillow:golfball:pink_dodgeball)
              )
              (* (count golfballInBinFromPillow:tan) (+ (count golfballInBinFromPillow:blue_pyramid_block:alarm_clock) )
              )
            )
            (count-once golfballInBinFromPillow:pink:blue_dodgeball)
          )
        )
      )
    )
    (>= (count golfballInBinFromPillow:dodgeball) (+ (> 10 (* (- (count golfballInBinFromPillow:pink_dodgeball) )
            (count-once golfballInBinFromPillow:basketball:hexagonal_bin)
            (count golfballInBinFromPillow:dodgeball)
          )
        )
        (count golfballInBinFromPillow:dodgeball)
      )
    )
  )
)
(:scoring
  (+ (count golfballInBinFromPillow:beachball:golfball) 3 )
)
)



(define (game game-id-681) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - chair)
    (forall (?b - hexagonal_bin ?l2 - (either alarm_clock dodgeball) ?c - cylindrical_block ?r2 - triangular_ramp ?d - cube_block)
      (game-conserved
        (not
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?w1 - golfball)
        (then
          (once (agent_holds ?w1) )
          (hold (not (agent_holds ?w1) ) )
          (once (and (opposite ?w1 ?w1) (in_motion ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 0 )
    (>= 3 (count-longest agentLeavesDogbedOrNoMoreBalls) )
    (>= (count agentLeavesDogbedOrNoMoreBalls:cylindrical_block:pink_dodgeball) 10 )
  )
)
(:scoring
  (* 3 (count-measure agentLeavesDogbedOrNoMoreBalls:pink) 6 )
)
)



(define (game game-id-682) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (game-optional
      (not
        (and
          (not
            (same_color ?h ?h)
          )
          (not
            (in ?h ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - (either pyramid_block doggie_bed))
        (then
          (once (agent_holds ?b) )
          (once (on ?b top_drawer) )
        )
      )
    )
  )
)
(:terminal
  (>= (count woodenBlockMovedFromRugToDesk:golfball) (count-measure woodenBlockMovedFromRugToDesk:hexagonal_bin) )
)
(:scoring
  (count woodenBlockMovedFromRugToDesk:purple)
)
)



(define (game game-id-683) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o4 - (either main_light_switch game_object) ?d - building)
      (and
        (exists (?c6 - hexagonal_bin ?g ?t1 - hexagonal_bin)
          (and
            (forall (?w - cylindrical_block)
              (game-conserved
                (or
                  (and
                    (touch ?t1 ?d)
                    (and
                      (and
                        (faces ?d ?g)
                        (and
                          (in_motion ?w)
                          (not
                            (or
                              (not
                                (not
                                  (not
                                    (same_color ?t1 ?d)
                                  )
                                )
                              )
                              (< (distance room_center ?d) (distance desk ?w))
                            )
                          )
                        )
                      )
                      (on ?w ?g)
                    )
                  )
                  (opposite brown ?w)
                )
              )
            )
            (exists (?c - hexagonal_bin ?w - hexagonal_bin)
              (and
                (and
                  (and
                    (forall (?h - hexagonal_bin ?b1 - (either dodgeball laptop key_chain))
                      (and
                        (forall (?h - game_object)
                          (or
                            (game-conserved
                              (adjacent ?d ?w)
                            )
                            (and
                              (game-conserved
                                (on ?g ?d)
                              )
                            )
                            (game-conserved
                              (and
                                (in_motion ?g)
                                (and
                                  (in_motion ?h)
                                  (in ?h ?h)
                                )
                                (in_motion ?t1)
                              )
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?b - chair ?b10 - hexagonal_bin)
                        (forall (?f - hexagonal_bin ?c2 - hexagonal_bin)
                          (and
                            (forall (?b1 - block)
                              (game-optional
                                (in_motion ?t1)
                              )
                            )
                            (forall (?x ?x0 ?x1 - gray ?d - shelf)
                              (game-conserved
                                (< 9 (distance ?d ?d))
                              )
                            )
                          )
                        )
                      )
                      (forall (?d2 ?g - (either cube_block teddy_bear cube_block))
                        (game-conserved
                          (not
                            (on ?w ?g)
                          )
                        )
                      )
                    )
                  )
                  (game-optional
                    (on ?t1 ?w)
                  )
                )
                (and
                  (game-conserved
                    (in_motion ?d)
                  )
                  (forall (?l - dodgeball ?g - dodgeball)
                    (game-conserved
                      (equal_x_position desk agent)
                    )
                  )
                  (and
                    (game-optional
                      (and
                        (not
                          (< (distance_side ?d back agent) (distance desk ?t1))
                        )
                        (agent_holds ?d)
                        (on ?g ?t1)
                        (agent_holds ?g)
                      )
                    )
                    (exists (?h - hexagonal_bin)
                      (forall (?t2 - red_dodgeball ?d - dodgeball)
                        (game-optional
                          (in ?t1 ?w)
                        )
                      )
                    )
                  )
                )
                (and
                  (game-conserved
                    (in ?t1 ?t1)
                  )
                )
              )
            )
            (game-conserved
              (game_over )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?d1 - (either cylindrical_block flat_block))
        (then
          (once (adjacent room_center ?d1) )
          (hold (not (agent_holds ?d1) ) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?p3 - cube_block ?h - (either cylindrical_block key_chain))
        (at-end
          (agent_holds ?h)
        )
      )
    )
  )
)
(:terminal
  (> (* (count-once-per-external-objects bigObjectThrownToBed:orange:yellow) (* (count bigObjectThrownToBed:hexagonal_bin) (count-once laptopAndBookInPlace:book:pink) )
      (* (+ (+ (* 5 (* 10 2 (+ (count laptopAndBookInPlace:dodgeball) (count-once-per-objects laptopAndBookInPlace:cube_block) )
              )
            )
            10
          )
          4
        )
        (count bigObjectThrownToBed:purple)
        (* (count-once-per-objects laptopAndBookInPlace:red) 7 (* 3 (- 5 )
            6
          )
        )
        10
        (* (< (count bigObjectThrownToBed:hexagonal_bin) (+ 9 2 )
          )
          6
        )
        (count-once-per-objects bigObjectThrownToBed:dodgeball)
      )
      (+ (* 5 (+ 2 (* (count-once bigObjectThrownToBed:dodgeball) 2 )
          )
        )
        9
      )
      2
      1
    )
    3
  )
)
(:scoring
  (count bigObjectThrownToBed:golfball)
)
)



(define (game game-id-684) (:domain medium-objects-room-v1)
(:setup
  (exists (?c4 - (either desktop))
    (exists (?c2 - hexagonal_bin)
      (and
        (exists (?o2 - (either golfball yellow_cube_block) ?c4 - triangular_ramp)
          (and
            (exists (?y - upside_down)
              (game-conserved
                (toggled_on ?c2)
              )
            )
            (exists (?s - wall ?b - dodgeball)
              (and
                (forall (?c1 - curved_wooden_ramp ?f - dodgeball ?d - wall)
                  (forall (?o4 - hexagonal_bin)
                    (game-conserved
                      (same_color ?o4 ?o4)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?c6 - hexagonal_bin)
        (at-end
          (not
            (not
              (same_object ?c6 ?c6)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count dropAttempt:basketball) 100 )
)
(:scoring
  (* 5 20 )
)
)



(define (game game-id-685) (:domain many-objects-room-v1)
(:setup
  (exists (?b9 ?h - triangular_ramp ?d - hexagonal_bin ?d - dodgeball ?b ?b6 - hexagonal_bin)
    (and
      (forall (?h - hexagonal_bin ?c4 - (either cube_block cube_block dodgeball laptop))
        (game-optional
          (is_setup_object ?b6)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - game_object ?b - hexagonal_bin)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?b - wall)
            (at-end
              (not
                (on ?b agent)
              )
            )
          )
        )
        (preference itemsHidingScreens
          (exists (?b9 - pink_dodgeball)
            (then
              (once (in_motion ?b) )
              (hold (game_over ) )
              (hold (in_motion ?b9) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 2 3 )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-686) (:domain few-objects-room-v1)
(:setup
  (exists (?o - blinds)
    (game-conserved
      (not
        (and
          (agent_holds ?o)
          (and
            (agent_holds ?o)
            (rug_color_under agent red)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?h - pink_dodgeball)
        (then
          (once (same_object ?h ?h) )
          (once (object_orientation ?h upside_down) )
          (hold (agent_holds ?h) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?l - hexagonal_bin)
        (then
          (hold (not (same_type ?l ?l) ) )
          (once (not (forall (?b6 - hexagonal_bin) (and (above ?b6 agent) (exists (?x - blue) (in ?l ?b6) ) ) ) ) )
          (once (and (not (not (and (not (in_motion ?l) ) (in_motion ?l) ) ) ) (in_motion ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (> (+ (count-once-per-objects dodgeballFromBlockToBin:dodgeball) (count golfballUnderBridgeWithoutTouchingBlock:dodgeball) (count golfballUnderBridgeWithoutTouchingBlock:pink) 2 )
    (count-once-per-external-objects dodgeballFromBlockToBin:beachball)
  )
)
(:scoring
  (+ (- 5 )
    (* (count golfballUnderBridgeWithoutTouchingBlock:beachball) (count-total dodgeballFromBlockToBin:golfball) 10 )
  )
)
)



(define (game game-id-687) (:domain few-objects-room-v1)
(:setup
  (exists (?b4 ?b ?l4 - flat_block ?o - dodgeball)
    (forall (?h - dodgeball)
      (not
        (game-conserved
          (and
            (not
              (game_start )
            )
            (exists (?z ?z0 ?z1 - front_left_corner)
              (touch ?h ?o)
            )
            (on ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?p2 - hexagonal_bin ?r2 - block ?x ?x0 ?x1 - orange ?o5 ?h - hexagonal_bin)
        (then
          (once (adjacent bed ?o5) )
          (once (in ?o5 rug) )
          (once (not (on bed north_wall) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blocksInPlace:basketball) (* (external-forall-minimize (count-overlapping blocksInPlace:beachball) ) (count blocksInPlace:blue_dodgeball:green) )
  )
)
(:scoring
  (count blocksInPlace:dodgeball:blue_dodgeball)
)
)



(define (game game-id-688) (:domain medium-objects-room-v1)
(:setup
  (exists (?z ?z0 ?z1 - (either back front) ?b1 - flat_block ?d - dodgeball)
    (game-conserved
      (not
        (in_motion ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?b7 - chair)
        (then
          (once-measure (agent_holds ?b7) (distance ?b7 ?b7) )
          (hold (not (not (on ?b7 blue) ) ) )
          (once (in_motion ?b7) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockFromRugToDesk:dodgeball) 5 )
)
(:scoring
  (count-increasing-measure blockFromRugToDesk:dodgeball)
)
)



(define (game game-id-689) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (in_motion blue)
    )
    (exists (?p2 ?c - dodgeball)
      (game-optional
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?h - pyramid_block)
        (then
          (once (exists (?l - cube_block ?d - bridge_block) (not (not (or (on ?h ?h) (and (on ?d ?h) ) ) ) ) ) )
          (once (not (in ?h ?h) ) )
          (hold-while (and (same_type ?h pillow) (and (on ?h ?h) ) (or (not (on ?h ?h) ) (and (< (distance bed ?h) 2) (agent_holds ?h) (in ?h ?h) ) ) ) (not (and (not (and (adjacent bed brown) (in_motion ?h) ) ) (not (exists (?b3 ?t2 - ball ?c1 - ball) (agent_holds ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= (count-once-per-objects ballThrownToWallToAgent:dodgeball) 40 )
    (< (total-score) (- 3 )
    )
  )
)
(:scoring
  (* 8 (count-increasing-measure ballThrownToWallToAgent:purple) 5 3 2 (< (+ (* 4 2 (* (count ballThrownToWallToAgent:basketball) (count ballThrownToWallToAgent:dodgeball) )
          9
          4
          (count ballThrownToWallToAgent:green)
          (count ballThrownToWallToAgent:pink_dodgeball:blue_pyramid_block)
        )
        5
        (count-once-per-objects ballThrownToWallToAgent:blue_pyramid_block)
        (count ballThrownToWallToAgent:dodgeball)
        2
        (count-once ballThrownToWallToAgent:beachball)
      )
      (* (- (+ (+ (* 20 )
              (* 10 (count ballThrownToWallToAgent:bed) )
            )
            2
            1
          )
          (* 2 30 )
        )
        (* 1 3 5 )
      )
    )
  )
)
)



(define (game game-id-690) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d - (either cylindrical_block basketball) ?c6 - (either key_chain book lamp dodgeball hexagonal_bin))
      (game-optional
        (adjacent ?c6 ?c6)
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?c - block)
        (then
          (once (agent_holds ?c) )
          (once (in_motion ?c) )
          (once (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (= (count-once-per-objects ballInOrOnBin:pink_dodgeball:red) (total-score) )
      (or
        (or
          (>= 5 20 )
          (>= (count-once-per-objects ballInOrOnBin:yellow_pyramid_block) 9 )
          (>= (count ballInOrOnBin:red) 10 )
        )
        (<= (count ballInOrOnBin:pink:golfball:blue_dodgeball) 3 )
      )
    )
    (or
      (> 2 4 )
      (>= (count-once ballInOrOnBin:rug) (count ballInOrOnBin:red:golfball) )
      (or
        (>= 6 (total-time) )
        (>= (external-forall-maximize (count ballInOrOnBin:yellow:dodgeball) ) -30 )
        (>= (count ballInOrOnBin:basketball:beachball) 5 )
      )
    )
  )
)
(:scoring
  (> 10 (count-measure ballInOrOnBin:red) )
)
)



(define (game game-id-691) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (object_orientation desk sideways)
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?h - hexagonal_bin)
        (then
          (once (is_setup_object ?h) )
          (once (not (and (adjacent ?h ?h) (agent_holds ?h) (on rug ?h) ) ) )
          (hold (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 10 (total-time) )
  )
)
(:scoring
  (count dropAttempt:dodgeball)
)
)



(define (game game-id-692) (:domain medium-objects-room-v1)
(:setup
  (exists (?f - ball)
    (exists (?d - blue_cube_block ?bl ?c2 - chair)
      (and
        (and
          (game-optional
            (in ?c2 ?f)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - hexagonal_bin)
      (and
        (preference beachballOnRug
          (exists (?l4 - curved_wooden_ramp)
            (then
              (once (and (not (or (not (in_motion ?l4) ) (and (and (in_motion ?o2) (not (on ?l4 brown) ) (and (agent_holds ?o2) (adjacent_side room_center front_left_corner top_drawer) ) (agent_holds ?o2) ) (in ?o2 ?o2) (in_motion ?l4) (and (adjacent room_center top_shelf) (touch ?o2 ?l4) ) ) ) ) (agent_holds ?l4) ) )
              (once (< 0 1) )
              (hold (faces ?l4 ?o2) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (exists (?c3 - dodgeball ?g ?b3 - building)
            (then
              (hold (not (and (in_motion agent) (not (and (in_motion ?b3) (on blue ?g) ) ) (exists (?c - hexagonal_bin ?b1 - shelf) (and (on ?b1 ?b1) (adjacent ?g ?b1) (not (and (and (and (and (in_motion ?o2) (not (in_motion ?g) ) (not (on ?b1 ?b3) ) (or (< 8 1) (same_object ?b3 ?b1) ) ) (and (open blue) (and (in ?b1 ?g) (not (and (and (forall (?r2 - beachball) (in_motion agent) ) (not (toggled_on ?b3) ) ) (on ?b3 ?b3) ) ) ) ) ) (agent_holds ?b1) (and (not (in_motion ?b3) ) (not (< (distance ?b3 ?o2) 1) ) (in_motion rug) ) ) (in_motion ?b1) ) ) (agent_holds floor) ) ) ) ) )
              (once (> (distance room_center ?o2) 1) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?b1 - chair)
            (then
              (once (agent_holds ?b1) )
              (once (between ?o2 ?o2 floor) )
              (hold (agent_holds rug) )
            )
          )
        )
      )
    )
    (forall (?b - cube_block)
      (and
        (preference objectMovedRoomSide
          (exists (?l - (either dodgeball pillow book pen))
            (then
              (hold (agent_holds ?b) )
              (hold (adjacent door ?l) )
              (once (exists (?d - doggie_bed) (in_motion ?b) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (>= (+ 10 3 )
        (= (count-increasing-measure itemsTurnedOff:pink:orange) 3 7 )
      )
      (not
        (>= (count-overlapping beachballOnRug:dodgeball) 3 )
      )
    )
  )
)
(:scoring
  (count beachballOnRug)
)
)



(define (game game-id-693) (:domain many-objects-room-v1)
(:setup
  (forall (?b - curved_wooden_ramp)
    (and
      (and
        (game-conserved
          (< (distance west_wall ?b) (distance desk ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToChair
      (exists (?w1 - beachball ?o - shelf)
        (then
          (once (and (in ?o ?o) (not (not (on ?o agent) ) ) ) )
          (once (and (not (and (agent_holds ?o) (agent_holds ?o) ) ) (in ?o ?o) ) )
          (once (and (and (in agent ?o) (agent_holds ?o) ) (adjacent desk ?o) ) )
        )
      )
    )
    (forall (?f - beachball)
      (and
        (preference throwFromDoorToBin
          (exists (?t1 ?h - dodgeball ?o - building)
            (then
              (once (not (or (or (exists (?w2 - hexagonal_bin) (and (not (and (not (not (in ?w2 agent) ) ) (and (or (not (not (and (agent_holds ?f) (not (agent_holds ?f) ) ) ) ) (and (agent_holds ?o) (< 1 (x_position ?o)) ) ) (and (agent_holds ?o) (in_motion ?o) (not (not (agent_holds ?o) ) ) ) ) ) ) (in ?w2 ?w2) ) ) (on ?o rug) ) ) ) )
              (hold (in_motion ?o) )
              (once (on ?f ?o) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (at-end
            (and
              (and
                (and
                  (above ?f brown)
                  (in_motion ?f)
                )
                (< (distance_side ?f front ?f) 2)
                (object_orientation ?f diagonal)
                (not
                  (on ?f agent)
                )
                (and
                  (not
                    (not
                      (in_motion ?f)
                    )
                  )
                  (in_motion ?f)
                )
                (< (distance door ?f) (distance ?f ?f))
                (not
                  (not
                    (not
                      (faces ?f ?f)
                    )
                  )
                )
                (exists (?h - hexagonal_bin)
                  (not
                    (< 1 4)
                  )
                )
              )
              (not
                (in_motion ?f)
              )
            )
          )
        )
      )
    )
    (preference cubeThrownToBin
      (exists (?b1 - dodgeball)
        (then
          (once-measure (not (in ?b1 ?b1) ) (distance bed ?b1) )
          (once (and (exists (?r - cube_block) (and (same_color ?b1 ?b1) (in_motion ?r) (agent_holds ?b1) (same_type ?b1 ball) ) ) (in ?b1 brown) (agent_holds ?b1) ) )
          (once (> (distance ?b1 ?b1) (distance ?b1 ?b1)) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (count-longest cubeThrownToBin:beachball:white) )
)
(:scoring
  (external-forall-minimize
    (count-measure ballThrownIntoTarget:block)
  )
)
)



(define (game game-id-694) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d ?c5 - doggie_bed)
      (exists (?o4 - hexagonal_bin ?l1 - game_object)
        (game-conserved
          (in ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b) )
          (hold (> 1 (distance room_center ?b)) )
          (once (not (agent_holds ?b) ) )
        )
      )
    )
    (forall (?w - ball ?h - golfball)
      (and
        (preference tanObjectMovedToRoomCenter
          (then
            (once (agent_holds ?h) )
            (once (touch green ?h) )
            (hold (in_motion ?h) )
          )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?l2 - teddy_bear)
        (at-end
          (on ?l2 ?l2)
        )
      )
    )
  )
)
(:terminal
  (> (total-time) 3 )
)
(:scoring
  (count tanObjectMovedToRoomCenter:blue_cube_block)
)
)



(define (game game-id-695) (:domain many-objects-room-v1)
(:setup
  (exists (?o - golfball)
    (forall (?z - (either left right right) ?d - doggie_bed)
      (game-optional
        (on ?d ?o)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?d1 - ball)
        (then
          (once (same_object ?d1 ?d1) )
          (hold (not (and (on ?d1 ?d1) (in_motion ?d1) ) ) )
          (once-measure (object_orientation ?d1 diagonal) (x_position rug) )
        )
      )
    )
    (preference bigObjectThrownToBed
      (exists (?w - triangular_ramp)
        (then
          (once (and (in ?w ?w) (and (and (in_motion ?w) (or (not (not (in_motion ?w) ) ) (and (and (not (not (agent_holds side_table) ) ) (or (agent_holds agent) (not (in_motion ?w) ) ) ) (in ?w ?w) ) ) ) (and (< (distance ?w ?w) 1) (not (in floor ?w) ) ) ) ) )
          (hold (or (in_motion rug) (adjacent_side ?w front ?w right) (open ?w) ) )
          (once (< (distance ?w ?w) 1) )
        )
      )
    )
    (forall (?b - beachball ?o4 - hexagonal_bin)
      (and
        (preference blockFromRugToDesk
          (exists (?d - beachball)
            (at-end
              (not
                (adjacent ?d ?o4)
              )
            )
          )
        )
      )
    )
    (preference matchingBuildingBuilt
      (exists (?d ?b2 ?t - cylindrical_block)
        (then
          (hold (adjacent ?d ?t) )
          (once (in ?d ?t) )
          (once (in bed ?t) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?d - hexagonal_bin)
        (then
          (hold (adjacent desk ?d) )
          (hold (touch ?d ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?w - hexagonal_bin)
        (then
          (once (and (and (not (adjacent desk ?w) ) (agent_holds agent) ) (and (not (and (on ?w ?w) (and (not (in_motion agent) ) ) ) ) (agent_holds ?w) (not (in_motion ?w) ) (not (not (on ?w ?w) ) ) ) (not (adjacent ?w ?w) ) ) )
          (once (and (and (in_motion ?w) (touch ?w ?w) ) (not (and (and (exists (?d ?r - golfball ?b ?w2 - hexagonal_bin) (same_type ?w2 ?w2) ) (agent_holds ?w) ) (in_motion ?w) ) ) (and (in_motion ?w) (in agent desk) (agent_holds ?w) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects bigObjectThrownToBed:dodgeball) 10 )
)
(:scoring
  (count-longest bigObjectThrownToBed:brown:basketball)
)
)



(define (game game-id-696) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - block)
        (agent_holds ?h)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cylindrical_block)
      (and
        (preference blockInTowerKnockedByDodgeball
          (exists (?b - teddy_bear)
            (then
              (once (on ?b ?b) )
              (hold (between ?b ?b ?b) )
              (once (= (distance desk ?b) (distance ?b ?b)) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-same-positions blockInTowerKnockedByDodgeball:basketball:dodgeball) (count blockInTowerKnockedByDodgeball:blue_cube_block) )
    (or
      (>= (count blockInTowerKnockedByDodgeball:hexagonal_bin:dodgeball:beachball) (- (count blockInTowerKnockedByDodgeball:top_drawer) )
      )
    )
  )
)
(:scoring
  (* 1 (count-same-positions blockInTowerKnockedByDodgeball:basketball) 1 (count blockInTowerKnockedByDodgeball:beachball:pink) 50 3 )
)
)



(define (game game-id-697) (:domain medium-objects-room-v1)
(:setup
  (not
    (and
      (exists (?o1 - (either book dodgeball))
        (forall (?h - hexagonal_bin ?w1 - dodgeball)
          (exists (?x - red ?w - doggie_bed)
            (game-conserved
              (in_motion ?o1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?b ?ob - ball ?h ?h - cube_block)
        (then
          (once (on ?h ?h) )
          (once (not (same_type ?h ?h) ) )
          (hold-while (on ?h ?h) (not (agent_holds ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects golfballLandsInBinThroughRamp:hexagonal_bin) 10 )
    (>= 10 5 )
  )
)
(:scoring
  (count golfballLandsInBinThroughRamp:dodgeball:yellow_pyramid_block)
)
)



(define (game game-id-698) (:domain few-objects-room-v1)
(:setup
  (exists (?l2 - ball ?d ?d2 ?t - game_object ?c - game_object ?b - triangular_ramp ?b - cube_block)
    (and
      (exists (?b2 - dodgeball ?c4 - ball)
        (game-optional
          (in ?c4 ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?b - doggie_bed)
        (then
          (hold-while (between ?b ?b ?b) (not (not (not (touch ?b ?b) ) ) ) )
          (hold-while (on ?b ?b) (rug_color_under ?b color) (same_type green_golfball blinds) (not (and (opposite ?b ?b) (open ?b) (and (in_motion bottom_shelf) (< 1 (distance ?b top_drawer)) ) ) ) )
          (once (and (on ?b ?b) (not (not (not (in_motion ?b) ) ) ) (on ?b ?b) ) )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?c5 - (either alarm_clock dodgeball book))
        (then
          (once (same_color ?c5 bed) )
          (once (and (agent_holds ?c5) (> (distance desk ?c5) (distance desk ?c5)) ) )
          (hold (not (and (on side_table ?c5) (on ?c5 bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (= (* (count ballThrownIntoTarget:basketball) (count-once-per-objects ballThrownIntoTarget:pink_dodgeball) 1 (external-forall-maximize (count pillowThrownToDoggieBed:doggie_bed:dodgeball:beachball) ) (count-same-positions pillowThrownToDoggieBed:cube_block) 7 )
      18
    )
    (total-time)
  )
)
(:scoring
  (count-once-per-external-objects pillowThrownToDoggieBed:basketball)
)
)



(define (game game-id-699) (:domain few-objects-room-v1)
(:setup
  (forall (?b1 - ball)
    (and
      (game-optional
        (in_motion ?b1)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?h - curved_wooden_ramp)
        (then
          (once (on ?h ?h) )
          (hold (not (in_motion ?h) ) )
          (hold (on ?h ?h) )
        )
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?o4 - hexagonal_bin ?b - (either basketball yellow_cube_block))
        (at-end
          (> 8 (distance room_center ?b))
        )
      )
    )
  )
)
(:terminal
  (>= 3 (* (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:dodgeball) (* (- (count blockInTowerKnockedByDodgeball:dodgeball) )
          1
        )
      )
      5
      (- (* (external-forall-maximize (count-once dodgeballHitsPillowWithoutTouchingBlock:dodgeball) ) 5 )
      )
      (external-forall-maximize
        (external-forall-maximize
          (+ (count blockInTowerKnockedByDodgeball:book) (- (count blockInTowerKnockedByDodgeball:bed) )
            10
          )
        )
      )
      10
      (* 1 (count blockInTowerKnockedByDodgeball:hexagonal_bin:pink) 7 (count dodgeballHitsPillowWithoutTouchingBlock) 10 (count-once-per-objects blockInTowerKnockedByDodgeball:yellow_pyramid_block) )
    )
  )
)
(:scoring
  (* (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball:dodgeball:green) 5 )
)
)



(define (game game-id-700) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - teddy_bear ?b1 - triangular_ramp ?b - (either pen chair))
    (game-optional
      (rug_color_under ?b white)
    )
  )
)
(:constraints
  (and
    (forall (?p - wall ?d - drawer ?d - cube_block)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?x ?x0 ?x1 - green)
            (then
              (hold (on ?d ?d) )
              (hold-while (in_motion ?d) (is_setup_object floor) )
              (once (and (and (on ?d ?d) (and (and (in_motion desk) (in_motion ?d) (and (is_setup_object ?d) (on ?d ?d) ) ) (above ?d ?d) ) ) (not (in_motion ?d) ) (agent_holds ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 5 (* 10 (* (count-once baseBlockInTowerAtEnd:dodgeball) (count-once baseBlockInTowerAtEnd:red) )
        5
        (* (count baseBlockInTowerAtEnd:book) 10 )
        15
        (external-forall-minimize
          (count baseBlockInTowerAtEnd:orange:dodgeball)
        )
        1
        (count-once-per-objects baseBlockInTowerAtEnd:yellow_cube_block:yellow)
        3
      )
    )
    (>= (total-score) (count baseBlockInTowerAtEnd:pink_dodgeball:blue_cube_block) )
    (< (count-once-per-objects baseBlockInTowerAtEnd:hexagonal_bin) (total-time) )
  )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:book)
)
)



(define (game game-id-701) (:domain few-objects-room-v1)
(:setup
  (exists (?b3 - block)
    (and
      (and
        (exists (?b6 - (either key_chain hexagonal_bin))
          (forall (?b3 - (either laptop dodgeball))
            (game-conserved
              (not
                (and
                  (in ?b3 ?b6)
                  (not
                    (agent_holds agent)
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (on ?b3 ?b3)
      )
      (exists (?p3 - doggie_bed ?r - wall ?b - teddy_bear)
        (and
          (forall (?d - blue_pyramid_block ?b - curved_wooden_ramp)
            (and
              (and
                (exists (?o - cube_block ?d ?h - chair)
                  (and
                    (exists (?c - game_object ?c - game_object)
                      (and
                        (and
                          (game-optional
                            (on ?b ?b3)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (< 2 1)
                )
              )
              (or
                (forall (?b2 - shelf)
                  (forall (?b2 - building)
                    (forall (?h ?p2 - (either dodgeball dodgeball golfball))
                      (game-conserved
                        (and
                          (in_motion ?b3)
                          (< (distance room_center ?b) 1)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (agent_holds ?b)
                    (and
                      (toggled_on ?b3)
                      (agent_holds ?b)
                    )
                    (and
                      (< 1 1)
                    )
                    (and
                      (agent_holds rug)
                      (not
                        (and
                          (not
                            (and
                              (in_motion ?b3)
                              (toggled_on ?b)
                            )
                          )
                          (in_motion ?b)
                        )
                      )
                    )
                  )
                )
              )
              (game-conserved
                (exists (?r1 - hexagonal_bin)
                  (< 1 6)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallItemsInPlace
      (exists (?r ?g - pyramid_block ?t - building)
        (at-end
          (not
            (and
              (and
                (adjacent ?t ?t)
                (in_motion ?t)
              )
              (is_setup_object ?t)
              (in_motion ?t)
              (and
                (in_motion ?t)
                (in ?t ?t)
                (in ?t ?t)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (* (external-forall-maximize (count-once smallItemsInPlace:basketball:golfball) ) (count-once-per-objects smallItemsInPlace:golfball) )
    )
    (>= 10 (+ (count-once smallItemsInPlace:yellow:beachball) (count smallItemsInPlace:beachball:purple) )
    )
  )
)
(:scoring
  (count smallItemsInPlace:red)
)
)



(define (game game-id-702) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - doggie_bed ?b - teddy_bear)
    (exists (?l4 - hexagonal_bin)
      (forall (?b - game_object)
        (game-conserved
          (same_color ?b ?l4)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - hexagonal_bin ?h - cube_block)
      (and
        (preference objectLandsInBin
          (exists (?h - ball)
            (at-end
              (exists (?o1 ?b - ball)
                (on ?o1 agent)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count objectLandsInBin:hexagonal_bin) (* (count objectLandsInBin:dodgeball) (< 0 10 )
    )
  )
)
(:scoring
  (* 10 10 )
)
)



(define (game game-id-703) (:domain few-objects-room-v1)
(:setup
  (exists (?r - game_object)
    (game-conserved
      (and
        (in ?r agent)
        (on ?r ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - building ?l1 - chair ?h - dodgeball)
      (and
        (preference ballToBinFromBed
          (exists (?c2 - hexagonal_bin ?h - (either wall book cellphone) ?o3 - ball)
            (then
              (hold (equal_x_position ?h agent) )
              (hold-while (agent_holds ?h) (and (and (toggled_on ?o3) (agent_holds ?o3) ) (and (not (in_motion bed) ) (in_motion green_golfball) (agent_holds ?h) (same_type ?o3 ?h) ) ) )
              (hold (in_motion ?h) )
            )
          )
        )
        (preference cubeBlockThrowAttempt
          (exists (?c - shelf ?h - dodgeball)
            (then
              (once (agent_holds ?h) )
              (once (agent_holds ?h) )
              (hold (exists (?d - hexagonal_bin ?b4 - dodgeball) (agent_holds ?b4) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count cubeBlockThrowAttempt:dodgeball) 2 )
)
(:scoring
  (count ballToBinFromBed:blue_dodgeball)
)
)



(define (game game-id-704) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - ball)
      (exists (?b3 - hexagonal_bin)
        (game-optional
          (not
            (in_motion ?b3)
          )
        )
      )
    )
    (forall (?o5 - ball)
      (game-conserved
        (agent_holds agent)
      )
    )
  )
)
(:constraints
  (and
    (preference ballRolledOnRampToRug
      (exists (?b ?d - red_dodgeball ?b4 - game_object)
        (then
          (hold (and (and (broken ?b4) ) (and (agent_holds ?b4) (in_motion ?b4) ) ) )
          (once (agent_holds ?b4) )
          (once (and (in_motion ?b4) (same_type bottom_shelf ?b4) (open bottom_shelf) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (and
        (>= 2 (>= 2 7 )
        )
        (>= (total-score) (total-score) )
      )
    )
  )
)
(:scoring
  (count-longest ballRolledOnRampToRug:dodgeball)
)
)



(define (game game-id-705) (:domain few-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?p - doggie_bed ?tb - shelf)
    (forall (?h - game_object)
      (forall (?d - dodgeball)
        (game-conserved
          (is_setup_object ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?c2 - hexagonal_bin ?h - ball ?w - game_object)
        (then
          (hold (in_motion ?w) )
          (hold (and (agent_holds ?w) (adjacent ?w ?w) ) )
          (hold (on ?w ?w) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 2 )
)
(:scoring
  (* (+ 10 4 (count-once-per-objects bigObjectThrownToBed:dodgeball) 6 5 10 )
    300
    5
  )
)
)



(define (game game-id-706) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?c - (either bridge_block desktop top_drawer) ?o ?b - dodgeball)
        (then
          (hold (agent_holds ?b) )
          (once (in_motion floor) )
          (once (< 1 5) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-time) (total-time) )
    (not
      (> 50 (* (count cubeBlockThrowAttempt:basketball:dodgeball) (count cubeBlockThrowAttempt:basketball) )
      )
    )
  )
)
(:scoring
  (count-total cubeBlockThrowAttempt:brown)
)
)



(define (game game-id-707) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (exists (?l3 - red_dodgeball)
      (forall (?d - cube_block)
        (game-optional
          (not
            (in ?l3 ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - dodgeball ?o4 - golfball)
      (and
        (preference objectInBuilding
          (exists (?b5 - dodgeball)
            (at-end
              (and
                (in_motion ?b5)
                (and
                  (in_motion ?o4)
                  (agent_holds ?b5)
                )
                (< 1 (distance ?b5 ?o4))
              )
            )
          )
        )
      )
    )
    (forall (?tb - (either dodgeball book))
      (and
        (preference throwObjectToBin
          (exists (?y ?y0 - diagonal)
            (then
              (once (agent_holds agent) )
              (once (and (on ?tb ?tb) (and (and (broken ?tb) (in ?tb ?tb) (in ?tb ?tb) (opposite ?tb ?tb) ) (not (in_motion ?tb) ) ) ) )
              (hold (in_motion ?tb) )
            )
          )
        )
        (preference itemsBroken
          (exists (?l2 ?c ?d - (either wall beachball book) ?p3 - chair)
            (then
              (once (exists (?h - ball ?r - (either bridge_block golfball cube_block book)) (> 1 (distance ?r ?p3)) ) )
              (once (or (and (and (agent_holds ?tb) (and (> (distance ?p3 ?p3) 6) (and (not (and (on ?p3 ?tb) (adjacent desk ?tb) ) ) (on desk ?p3) (adjacent ?p3 ?tb) ) ) ) (and (exists (?b7 - hexagonal_bin ?r1 - hexagonal_bin ?h - shelf) (in_motion ?p3) ) (on ?p3 ?p3) (adjacent door ?tb) ) ) (in_motion ?tb) ) )
              (once (touch ?p3 ?p3) )
            )
          )
        )
        (preference throwKnocksBlock
          (exists (?db - building)
            (then
              (once-measure (< (distance_side ?tb back agent) (distance door ?tb)) (distance room_center ?tb) )
              (hold-while (in_motion ?db) (agent_holds ?db) )
              (once (not (and (< 5 10) (in ?db ?db) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (= (count-increasing-measure throwObjectToBin:pink_dodgeball) (count throwObjectToBin:green) )
  )
)
(:scoring
  (count-once-per-objects itemsBroken:pink)
)
)



(define (game game-id-708) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?b - hexagonal_bin)
      (game-optional
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerAtEnd
      (exists (?b - blinds)
        (at-end
          (in_motion ?b)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 2 )
    (>= (total-time) 6 )
    (or
      (>= (- (count blockInTowerAtEnd:block:golfball) 1 ) (count-once-per-objects blockInTowerAtEnd:pink:pink) )
      (>= (count blockInTowerAtEnd:beachball) (+ 30 4 )
      )
    )
    (>= (external-forall-maximize (count blockInTowerAtEnd:beachball:golfball) ) 5 )
  )
)
(:scoring
  (count blockInTowerAtEnd:yellow:beachball)
)
)



(define (game game-id-709) (:domain medium-objects-room-v1)
(:setup
  (exists (?c2 - curved_wooden_ramp)
    (game-optional
      (not
        (not
          (and
            (in_motion ?c2)
            (broken agent)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (hold-while (> 7 3) (in_motion ?h) )
          (hold-while (not (not (agent_holds ?h) ) ) (not (not (= (distance desk ?h) 3) ) ) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?h - beachball ?c - hexagonal_bin)
        (then
          (once (adjacent ?c ?c) )
          (hold (not (on ?c ?c) ) )
          (once (in ?c ?c) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (count-measure gameObjectToBin:golfball:basketball) )
    (>= 6 (total-score) )
  )
)
(:scoring
  (* (count-once gameObjectToBin:pink_dodgeball) (* (= (* (count woodenBlockMovedFromRugToDesk:yellow_cube_block) 5 )
        3
        4
      )
      8
    )
    (count-once-per-objects woodenBlockMovedFromRugToDesk:red:yellow)
  )
)
)



(define (game game-id-710) (:domain few-objects-room-v1)
(:setup
  (exists (?b10 - wall)
    (game-optional
      (< (distance ?b10 ?b10) (distance rug ?b10))
    )
  )
)
(:constraints
  (and
    (forall (?tb ?h - doggie_bed)
      (and
        (preference ballThrownToRug
          (exists (?b - game_object ?b - cube_block)
            (then
              (hold (not (and (same_color ?h red) (in_motion ?h) ) ) )
              (hold (adjacent_side ?h front agent) )
              (once (in_motion ?tb) )
            )
          )
        )
        (preference throwInBin
          (exists (?b2 - hexagonal_bin)
            (then
              (hold-while (not (in_motion ?h) ) (on ?b2 ?h) )
              (once (in_motion ?b2) )
              (hold (exists (?x - red) (not (not (on ?h ?h) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 50 )
)
(:scoring
  (* 5 (* (+ 9 )
      5
    )
  )
)
)



(define (game game-id-711) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either floor doggie_bed cellphone main_light_switch cylindrical_block key_chain key_chain))
    (game-optional
      (not
        (adjacent ?b ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - ball ?p - dodgeball)
      (and
        (preference objectOnBed
          (exists (?o3 - shelf)
            (then
              (once (agent_holds ?o3) )
              (hold-while (in_motion ?p) (adjacent ?p ?p) )
            )
          )
        )
        (preference greenObjectMovedToRoomCenter
          (exists (?b9 - hexagonal_bin)
            (then
              (hold (exists (?r1 - flat_block) (not (not (same_color ?b9 ?p) ) ) ) )
              (once (adjacent_side desk right ?b9 left) )
              (hold (= 1 (distance ?p ?b9) 1) )
              (hold (and (agent_holds ?p) ) )
              (hold-while (and (exists (?d1 - teddy_bear) (in ?b9 rug) ) (agent_holds ?b9) ) (not (in_motion ?b9) ) )
              (once (and (in_motion ?p) (in agent ?b9) ) )
            )
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?b1 - building)
        (then
          (once (and (not (on agent ?b1) ) (in ?b1 ?b1) ) )
          (once (not (agent_holds ?b1) ) )
          (hold-while (equal_x_position ?b1 ?b1) (< 5 0.5) )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?r - dodgeball ?h - golfball)
        (at-end
          (< (distance desk ?h) (building_size ?h))
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count-once-per-objects dodgeballAndBasketballInBin:hexagonal_bin:dodgeball) )
)
(:scoring
  (* (count-once objectOnBed:green) )
)
)



(define (game game-id-712) (:domain many-objects-room-v1)
(:setup
  (exists (?d1 - triangular_ramp)
    (game-optional
      (touch ?d1 ?d1)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?t2 - drawer)
        (then
          (hold-while (same_object ?t2 ?t2) (or (same_color ?t2 pink) (adjacent_side ?t2 front ?t2 front) ) (in south_wall ?t2) )
          (once (in ?t2 ?t2) )
          (hold-while (and (and (not (broken ?t2) ) (< 3 (distance ?t2 ?t2)) ) (and (on ?t2 ?t2) (and (agent_holds ?t2) (agent_holds ?t2) ) (and (same_color ?t2 ?t2) (or (not (agent_holds floor) ) (agent_holds ?t2) ) ) ) (agent_holds ?t2) (between ?t2 floor ?t2) ) (forall (?d - curved_wooden_ramp) (on ?d ?d) ) )
        )
      )
    )
    (preference ballKnocksBlockFromRug
      (exists (?d - dodgeball)
        (at-end
          (is_setup_object ?d)
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (or
        (or
          (>= (- 5 )
            15
          )
          (>= 3 (* 7 (count-overlapping beachballBouncedOffRamp:dodgeball:pink:book) )
          )
          (>= 3 (total-time) )
        )
        (or
          (>= (total-score) 7 )
          (>= 10 (* (* (- (* (* (count-once-per-objects ballKnocksBlockFromRug:golfball) 2 )
                    (* 3 )
                  )
                )
                15
              )
              (- (count ballKnocksBlockFromRug:pink) )
            )
          )
        )
        (> -10 (count beachballBouncedOffRamp:red) )
      )
    )
    (and
      (not
        (>= (* (count beachballBouncedOffRamp:dodgeball) (count-once-per-objects ballKnocksBlockFromRug:pink) )
          (total-score)
        )
      )
      (>= 2 (count beachballBouncedOffRamp:beachball) )
      (>= (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (count-once-per-external-objects ballKnocksBlockFromRug:pink_dodgeball) )
    )
    (>= 6 (count-once-per-external-objects ballKnocksBlockFromRug:basketball) )
  )
)
(:scoring
  (count-once-per-objects beachballBouncedOffRamp:purple)
)
)



(define (game game-id-713) (:domain many-objects-room-v1)
(:setup
  (exists (?c4 - block)
    (and
      (and
        (exists (?s - doggie_bed ?g - dodgeball ?ob - hexagonal_bin)
          (game-conserved
            (exists (?s - cube_block)
              (agent_holds ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?c - hexagonal_bin)
        (at-end
          (adjacent ?c agent)
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count throwKnocksOverBear:basketball) )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects throwKnocksOverBear)
  )
)
)



(define (game game-id-714) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - hexagonal_bin ?b3 - pyramid_block ?b - (either golfball cube_block golfball flat_block cd book curved_wooden_ramp))
      (game-conserved
        (or
          (adjacent ?b ?b)
          (in_motion ?b)
        )
      )
    )
    (exists (?p ?b7 - cylindrical_block)
      (and
        (and
          (and
            (game-conserved
              (not
                (and
                  (< 6 1)
                  (not
                    (on ?p ?b7)
                  )
                )
              )
            )
          )
        )
        (exists (?c - (either dodgeball wall) ?h - ball)
          (game-conserved
            (and
              (on ?p ?p)
              (in ?p ?h)
              (and
                (and
                  (not
                    (not
                      (not
                        (adjacent ?h ?p)
                      )
                    )
                  )
                  (and
                    (on ?p agent)
                    (exists (?z ?z0 ?z1 - (either right front_left_corner))
                      (or
                        (in_motion ?h)
                        (and
                          (and
                            (or
                              (and
                                (and
                                  (or
                                    (agent_holds ?b7)
                                    (is_setup_object ?p)
                                  )
                                  (in_motion ?b7)
                                )
                                (in_motion ?b7)
                                (and
                                  (equal_z_position desk ?b7)
                                  (not
                                    (adjacent ?p ?p)
                                  )
                                  (and
                                    (game_over )
                                    (in_motion ?h)
                                  )
                                )
                              )
                              (and
                                (not
                                  (forall (?b - block)
                                    (not
                                      (toggled_on ?b)
                                    )
                                  )
                                )
                                (and
                                  (< (distance ?h ?p) (distance ?h ?p))
                                  (not
                                    (not
                                      (and
                                        (and
                                          (not
                                            (in_motion ?h)
                                          )
                                          (not
                                            (in_motion agent)
                                          )
                                        )
                                        (not
                                          (in_motion ?b7)
                                        )
                                      )
                                    )
                                  )
                                )
                                (same_type ?b7 block)
                              )
                            )
                            (adjacent_side ?b7 front ?b7 back)
                            (game_over )
                            (rug_color_under ?b7 color)
                          )
                          (not
                            (agent_holds ?p)
                          )
                        )
                      )
                    )
                  )
                )
                (in_motion rug)
              )
            )
          )
        )
        (and
          (game-optional
            (same_object ?b7 ?b7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?b - hexagonal_bin)
        (then
          (hold (on ?b ?b) )
          (once-measure (same_color desk ?b) (building_size ?b) )
          (once (in_motion ?b) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?d2 - hexagonal_bin)
        (then
          (hold (or (and (agent_holds ?d2) (exists (?h - ball) (on ?d2 ?h) ) ) (not (forall (?h - wall ?h - game_object) (and (adjacent_side ?d2 left top_drawer front) (not (not (< 1 1) ) ) ) ) ) ) )
          (once (agent_holds ?d2) )
          (hold (< (x_position ?d2) (distance ?d2 ?d2)) )
        )
      )
    )
  )
)
(:terminal
  (> (- 20 )
    (total-score)
  )
)
(:scoring
  (count throwBallToBinOffObject:cube_block)
)
)



(define (game game-id-715) (:domain few-objects-room-v1)
(:setup
  (exists (?s - ball ?l4 ?c5 - wall)
    (game-conserved
      (in ?c5 agent)
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?bl - hexagonal_bin)
        (then
          (once (agent_holds ?bl) )
          (once (not (on ?bl ?bl) ) )
          (once (not (on bed ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (+ 10 (count-total throwTeddyOntoPillow:beachball:green) )
  )
)
(:scoring
  (* (count-once-per-objects throwTeddyOntoPillow:purple) 2 )
)
)



(define (game game-id-716) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (not
      (< 1 9)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?h - hexagonal_bin)
        (then
          (hold (in green_golfball ?h) )
          (once (not (in_motion ?h) ) )
          (hold (and (not (not (and (not (agent_holds ?h) ) (game_start ) ) ) ) (on ?h ?h) ) )
        )
      )
    )
    (preference laptopAndBookInPlace
      (exists (?r - ball)
        (then
          (once (agent_holds ?r) )
          (hold-while (and (adjacent room_center ?r) (agent_holds ?r) ) (not (in ?r agent) ) )
          (once (agent_holds rug) )
        )
      )
    )
  )
)
(:terminal
  (> (count-increasing-measure throwToBinFromDistance:doggie_bed:dodgeball) (count-overlapping laptopAndBookInPlace:dodgeball:yellow) )
)
(:scoring
  (count laptopAndBookInPlace:basketball)
)
)



(define (game game-id-717) (:domain few-objects-room-v1)
(:setup
  (forall (?d - cube_block)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference ballThrownOntoTarget
      (exists (?b1 - drawer ?r - cube_block)
        (then
          (once (in_motion ?r) )
          (hold-while (and (not (agent_holds ?r) ) (not (in_motion agent) ) ) (rug_color_under agent pink) )
          (once (and (not (agent_holds agent) ) (agent_holds ?r) ) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?b3 - (either alarm_clock dodgeball) ?b - hexagonal_bin)
        (then
          (once (< 6 7) )
          (once (and (in_motion ?b) (forall (?l2 - hexagonal_bin ?x - brown ?r - ball) (and (in agent agent) (not (adjacent_side ?b back ?r) ) ) ) ) )
          (once (or (in_motion ?b) (not (not (> (distance room_center ?b) 1) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (count ballThrownOntoTarget:basketball) )
)
(:scoring
  (count ballThrownOntoTarget:purple)
)
)



(define (game game-id-718) (:domain few-objects-room-v1)
(:setup
  (exists (?l - cube_block)
    (forall (?g - ball ?c - hexagonal_bin)
      (and
        (game-conserved
          (< 1 (distance rug ?c))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?d - chair ?c3 - hexagonal_bin)
        (then
          (hold (agent_holds agent) )
          (once (agent_holds ?c3) )
          (once (in_motion ?c3) )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) (count-once-per-external-objects ballNeverThrown:red) )
)
(:scoring
  (count-once-per-objects ballNeverThrown:alarm_clock)
)
)



(define (game game-id-719) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - pillow)
    (exists (?l - red_dodgeball ?b - hexagonal_bin)
      (and
        (exists (?w - pink_dodgeball)
          (and
            (exists (?r - hexagonal_bin ?b - hexagonal_bin)
              (forall (?w2 - ball)
                (and
                  (exists (?d - desk_shelf)
                    (exists (?h - wall)
                      (or
                        (game-optional
                          (agent_holds ?w2)
                        )
                        (exists (?l2 ?p2 ?h ?h ?o1 ?h - hexagonal_bin)
                          (game-conserved
                            (not
                              (agent_holds ?h)
                            )
                          )
                        )
                      )
                    )
                  )
                  (game-conserved
                    (< (distance ?h ?h) 1)
                  )
                  (and
                    (game-optional
                      (and
                        (and
                          (agent_holds ?b)
                          (agent_holds ?h)
                        )
                        (in_motion ?b)
                      )
                    )
                    (exists (?b7 ?d ?tb ?c3 - (either blue_cube_block cylindrical_block))
                      (game-conserved
                        (and
                          (adjacent ?b7 ?b7)
                          (in_motion ?d)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?h - (either cube_block golfball hexagonal_bin))
              (game-conserved
                (on ?b ?b)
              )
            )
          )
        )
        (game-conserved
          (touch floor ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?w - dodgeball ?c2 ?bl - hexagonal_bin)
      (and
        (preference pillowThrownToDoggieBed
          (exists (?d - game_object ?s - hexagonal_bin ?s - bridge_block)
            (then
              (once (agent_holds ?bl) )
              (once (in_motion ?bl) )
              (once (and (object_orientation bed upright) (between ?bl ?bl ?s) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< 6 (total-time) )
)
(:scoring
  (count-once pillowThrownToDoggieBed:hexagonal_bin)
)
)



(define (game game-id-720) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - cylindrical_block)
    (game-conserved
      (< 1 (distance ?p rug))
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?o1 - wall ?h - hexagonal_bin ?o3 - hexagonal_bin)
        (then
          (once (and (in_motion ?o3) (not (not (on ?o3 brown) ) ) ) )
          (once (and (on ?o3 ?o3) (on ?o3 ?o3) ) )
          (once (touch ?o3 ?o3) )
        )
      )
    )
    (forall (?b10 - hexagonal_bin)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?b - doggie_bed)
            (then
              (once (on ?b ?b10) )
              (once (in_motion ?b) )
              (hold (not (not (opposite ?b10 ?b10) ) ) )
            )
          )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?t - (either cube_block bridge_block dodgeball))
        (then
          (hold (not (in_motion ?t) ) )
          (once (on agent pink) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballFromDeskToTarget:basketball) 3 )
)
(:scoring
  (- 10 )
)
)



(define (game game-id-721) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?ob - hexagonal_bin)
        (and
          (game-conserved
            (on ?ob ?ob)
          )
          (game-conserved
            (not
              (in_motion ?ob)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?p - (either book blue_cube_block golfball) ?h - hexagonal_bin)
        (then
          (hold-while (exists (?l3 - cube_block ?b - dodgeball) (in ?h rug) ) (on ?h ?h) (agent_holds ?h) )
          (once (between ?h ?h ?h) )
          (once (in_motion ?h) )
        )
      )
    )
    (preference smallObjectThrownToBed
      (exists (?r - hexagonal_bin)
        (then
          (hold (object_orientation ?r upside_down) )
          (hold (exists (?o5 - dodgeball) (and (not (on ?r ?o5) ) (in_motion ?o5) ) ) )
          (hold (on ?r ?r) )
        )
      )
    )
    (preference throwFromBehindChairsInBin
      (exists (?h - blue_cube_block ?d - game_object)
        (then
          (hold (agent_holds ?d) )
          (once (not (not (agent_holds ?d) ) ) )
          (hold (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) 3 )
)
(:scoring
  (* (* (* 2 (count-once-per-external-objects throwFromBehindChairsInBin:golfball:beachball) 3 (- 10 3 ) (count-once-per-objects blocksInPlace:hexagonal_bin:golfball) (* (* (* 3 (count smallObjectThrownToBed:tall_cylindrical_block) )
            (- 2 )
            7
          )
          (count-once blocksInPlace:dodgeball)
        )
      )
      (count blocksInPlace:yellow)
      (* 6 0.5 )
      (count throwFromBehindChairsInBin:dodgeball)
      3
      3
    )
    (* (count-once-per-objects smallObjectThrownToBed:doggie_bed) (count smallObjectThrownToBed:golfball) 10 (= (count throwFromBehindChairsInBin:basketball) (count blocksInPlace:rug:yellow:dodgeball) )
    )
  )
)
)



(define (game game-id-722) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - dodgeball)
      (forall (?s - block)
        (game-conserved
          (and
            (in_motion ?b)
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?c ?p ?s - triangular_ramp ?d - ball)
        (then
          (hold-while (on ?d ?d) (in_motion ?d) )
          (hold-while (not (in ?d ?d) ) (not (in_motion ?d) ) (<= 1 (distance west_wall ?d)) )
          (once (and (on ?d ?d) (and (agent_holds ?d) (adjacent ?d ?d) ) ) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?h - hexagonal_bin)
        (then
          (once (in ?h rug) )
          (once (agent_holds ?h) )
          (once-measure (and (agent_holds ?h) (not (and (and (and (agent_holds ?h) (in_motion ?h) ) (not (agent_holds ?h) ) ) ) ) (same_color ?h ?h) ) (distance ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (> 2 (total-score) )
)
(:scoring
  (* 2 (- (count ballNeverThrown:yellow) )
    3
    (+ (count-increasing-measure objectToBinOnFirstTry:basketball:hexagonal_bin) (* (+ (count-once-per-objects objectToBinOnFirstTry:golfball) 100 )
        (external-forall-maximize
          (count-once-per-objects ballNeverThrown:dodgeball)
        )
      )
    )
  )
)
)



(define (game game-id-723) (:domain many-objects-room-v1)
(:setup
  (forall (?d - wall ?h - pyramid_block)
    (and
      (forall (?h - dodgeball)
        (and
          (forall (?b - pyramid_block)
            (and
              (forall (?d - hexagonal_bin)
                (and
                  (game-optional
                    (in_motion ?d)
                  )
                )
              )
              (forall (?o1 - triangular_ramp)
                (and
                  (and
                    (exists (?h - (either dodgeball laptop golfball))
                      (and
                        (game-conserved
                          (agent_holds ?o1)
                        )
                      )
                    )
                  )
                  (forall (?l - shelf)
                    (game-optional
                      (equal_z_position ?l ?l)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?h - cylindrical_block)
          (game-optional
            (same_color ?h desk)
          )
        )
        (game-conserved
          (adjacent ?h ?h)
        )
        (game-optional
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - teddy_bear ?d - hexagonal_bin)
      (and
        (preference watchOnShelf
          (exists (?r - hexagonal_bin)
            (then
              (once (on ?d green) )
              (once (forall (?h - (either main_light_switch dodgeball blue_cube_block) ?d - bridge_block) (on agent ?r) ) )
              (once (and (in_motion ?r) (not (agent_holds agent) ) ) )
            )
          )
        )
      )
    )
    (forall (?p2 - cube_block ?c - hexagonal_bin ?h ?l2 - curved_wooden_ramp ?l2 - cylindrical_block)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?l1 - (either bridge_block credit_card))
            (then
              (once (not (not (not (not (and (and (agent_holds rug) (agent_holds ?l2) ) (on ?l2 ?l2) ) ) ) ) ) )
              (once (not (adjacent room_center ?l1) ) )
              (hold (agent_holds agent) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-once-per-objects dodgeballThrownToBinFromDesk:beachball) (+ 15 (* (count-once watchOnShelf:golfball) (* (+ 5 (> (* (count dodgeballThrownToBinFromDesk:beachball) (count-once-per-objects watchOnShelf:yellow) )
              2
            )
          )
          (count watchOnShelf:hexagonal_bin)
          (* (- 10 (+ 2 (count-once-per-external-objects watchOnShelf:side_table) )
            )
            5
          )
          (>= (count watchOnShelf:book) (count dodgeballThrownToBinFromDesk:dodgeball) )
        )
      )
      (count watchOnShelf:hexagonal_bin)
      1
    )
  )
)
(:scoring
  (external-forall-maximize
    (count dodgeballThrownToBinFromDesk:basketball)
  )
)
)



(define (game game-id-724) (:domain few-objects-room-v1)
(:setup
  (exists (?c - pyramid_block)
    (game-conserved
      (not
        (in_motion bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - ball)
      (and
        (preference greenObjectMovedToRoomCenter
          (exists (?b - teddy_bear)
            (then
              (once (between ?c ?b ?c) )
              (hold (agent_holds ?b) )
              (once (between ?b floor ?b) )
            )
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?l3 - dodgeball ?h - hexagonal_bin)
        (at-end
          (and
            (same_color ?h ?h)
            (agent_holds ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (count ballThrownThroughRampToBin:blue) )
)
(:scoring
  (count greenObjectMovedToRoomCenter:dodgeball:golfball)
)
)



(define (game game-id-725) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (or
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?r - teddy_bear)
        (then
          (hold (and (not (agent_holds ?r) ) (same_color ?r ?r) ) )
          (once (not (faces ?r ?r) ) )
          (once (or (agent_holds ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects thrownBallHitsBlock:beachball) )
)
(:scoring
  (+ (count thrownBallHitsBlock:book) 3 )
)
)



(define (game game-id-726) (:domain medium-objects-room-v1)
(:setup
  (exists (?b2 - cube_block)
    (game-conserved
      (same_type ?b2 ?b2)
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?w1 - hexagonal_bin)
        (then
          (once (and (and (adjacent ?w1 ?w1) (not (agent_holds ?w1) ) ) (in_motion ?w1) ) )
          (hold (is_setup_object bed) )
          (once (agent_holds ?w1) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?d2 - hexagonal_bin)
        (then
          (once (not (not (touch green rug) ) ) )
          (hold (agent_holds ?d2) )
          (once (and (in_motion ?d2) (is_setup_object ?d2) ) )
          (once (and (and (in_motion ?d2) (not (agent_holds ?d2) ) ) (in_motion ?d2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (* 3 (external-forall-maximize (count-once-per-objects ballThrowAttempt:dodgeball:pyramid_block) ) )
      (/
        (count blockPickedUp:doggie_bed)
        (count ballThrowAttempt:beachball)
      )
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-external-objects ballThrowAttempt:dodgeball:book)
  )
)
)



(define (game game-id-727) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?o - (either cube_block pyramid_block dodgeball cylindrical_block doggie_bed key_chain pyramid_block))
        (then
          (hold (exists (?b ?c - sliding_door) (and (adjacent south_wall ?b) ) ) )
          (once (and (in_motion ?o) (not (not (toggled_on ?o) ) ) ) )
          (once (or (in_motion ?o) (not (> 10 (distance desk ?o)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects throwTeddyOntoPillow:blue_pyramid_block) (* 10 (>= (count throwTeddyOntoPillow:doggie_bed) (* (* 15 (+ (count-once-per-external-objects throwTeddyOntoPillow:basketball) 9 )
          )
          (count throwTeddyOntoPillow:red_pyramid_block:basketball)
        )
      )
    )
  )
)
(:scoring
  (* (* (count-once-per-objects throwTeddyOntoPillow:dodgeball) 1 )
    (* (+ 3 (* (count-once-per-objects throwTeddyOntoPillow:yellow) (external-forall-minimize (count-once-per-objects throwTeddyOntoPillow:red) ) )
        (count-once throwTeddyOntoPillow:green)
      )
      (count throwTeddyOntoPillow:basketball:dodgeball)
    )
  )
)
)



(define (game game-id-728) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - block)
    (game-optional
      (forall (?b - dodgeball)
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?o2 - hexagonal_bin)
        (then
          (once (and (not (not (< (distance ?o2 rug) 4) ) ) (faces agent ?o2) (is_setup_object ?o2) ) )
          (once (not (same_color ?o2 ?o2) ) )
          (once (agent_holds ?o2) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?p - hexagonal_bin ?b4 - cube_block)
        (then
          (once (agent_holds ?b4) )
          (hold (in_motion ?b4) )
          (once (in_motion ?b4) )
        )
      )
    )
  )
)
(:terminal
  (>= 30 2 )
)
(:scoring
  (count throwKnocksOverBear:blue)
)
)



(define (game game-id-729) (:domain many-objects-room-v1)
(:setup
  (forall (?p3 - dodgeball ?w1 - flat_block)
    (forall (?c ?h ?d2 ?b2 ?b ?o - ball)
      (game-optional
        (agent_holds ?b2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?db - hexagonal_bin)
      (and
        (preference throwToBin
          (exists (?t1 - hexagonal_bin)
            (at-end
              (not
                (in bed ?db)
              )
            )
          )
        )
        (preference failedThrowToBin
          (exists (?o ?o1 - ball)
            (then
              (once (adjacent ?db ?db) )
              (hold (exists (?b - curved_wooden_ramp) (not (or (and (in ?o ?b) (rug_color_under ?o yellow) ) (same_color ?db agent) ) ) ) )
              (once (or (agent_holds ?o1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (+ (count failedThrowToBin:hexagonal_bin) 18 (count failedThrowToBin:pink:triangle_block) (count-once-per-objects failedThrowToBin:dodgeball) (count-overlapping throwToBin:dodgeball) 10 8 (count-once-per-objects throwToBin:basketball:golfball:yellow) 10 (count throwToBin:brown) (* (* (+ (count-once-per-objects throwToBin:yellow) (count-once-per-objects failedThrowToBin:basketball) )
          (count-once-per-external-objects failedThrowToBin:purple:yellow_pyramid_block)
        )
        2
      )
      (count-once-per-external-objects throwToBin:pink_dodgeball:green)
    )
    3
  )
)
(:scoring
  (count failedThrowToBin:dodgeball)
)
)



(define (game game-id-730) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - dodgeball ?x - orange)
      (game-conserved
        (is_setup_object ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?w1 - (either cd cube_block))
        (at-end
          (in_motion ?w1)
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference objectLandsInBin
          (exists (?l1 - (either chair cylindrical_block pencil desktop hexagonal_bin yellow_cube_block laptop) ?h - (either bridge_block yellow_cube_block curved_wooden_ramp) ?h - golfball ?b3 - ball ?d - doggie_bed)
            (then
              (once (agent_holds ?h) )
              (once (not (exists (?o ?h - block) (in_motion ?h) ) ) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?h - dodgeball)
            (then
              (once (same_type ?h ?h) )
              (once (agent_holds ?h) )
              (hold (in ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (= 4 (* 1 7 )
    )
    (count ballInOrOnBin:dodgeball)
  )
)
(:scoring
  (external-forall-maximize
    (* (* (* 1 (* (count redDodgeballThrownToBinWithoutTouchingFloor:pink) (* (count-once-per-objects objectLandsInBin:beachball:brown) 3 (count redDodgeballThrownToBinWithoutTouchingFloor:red:dodgeball) 6 )
          )
          (- (* 4 (count-once-per-objects redDodgeballThrownToBinWithoutTouchingFloor:white) )
          )
          (count ballInOrOnBin:basketball)
          (* (count-overlapping redDodgeballThrownToBinWithoutTouchingFloor:dodgeball) 10 )
          (* (* 4 4 )
            5
          )
          10
          (count ballInOrOnBin:purple)
          2
        )
        (* 6 (* (- 10 )
            (* 5 (* 0.7 3 )
            )
            (count-once-per-objects ballInOrOnBin)
            (count objectLandsInBin:cube_block)
            (external-forall-maximize
              (count redDodgeballThrownToBinWithoutTouchingFloor:tan:dodgeball)
            )
            (* 0 (count ballInOrOnBin:pink_dodgeball) )
            (count objectLandsInBin:golfball)
          )
        )
      )
      5
    )
  )
)
)



(define (game game-id-731) (:domain few-objects-room-v1)
(:setup
  (and
    (game-optional
      (= 1 7 9)
    )
  )
)
(:constraints
  (and
    (forall (?b6 - game_object ?t2 - dodgeball ?g - dodgeball)
      (and
        (preference throwBallToDoggieBed
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?h) )
              (hold-while (and (on desk bed) (in_motion ?g) (adjacent_side door front ?h) ) (agent_holds ?h) (in_motion ?h) )
              (once (on ?g ?h) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?b8 - hexagonal_bin ?h - bridge_block)
            (then
              (hold (not (agent_holds ?h) ) )
            )
          )
        )
        (preference blockIncorrectlyPicked
          (exists (?p - dodgeball ?t1 ?g - hexagonal_bin)
            (then
              (once (not (agent_holds rug) ) )
              (once (on ?t1 ?g) )
              (once (between ?t1 ?t1 ?g) )
            )
          )
        )
      )
    )
    (forall (?tb - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?p3 - ball ?w1 - hexagonal_bin)
            (at-end
              (not
                (agent_holds ?w1)
              )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (then
            (once (not (in ?tb ?tb) ) )
            (hold (in_motion blue) )
            (once (and (exists (?x - white ?w1 - triangular_ramp) (and (exists (?d2 - dodgeball) (in_motion ?d2) ) (in ?w1 ?w1) ) ) (agent_holds ?tb) ) )
          )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?d - beachball)
        (then
          (hold (and (not (in_motion brown) ) (< (distance ?d agent) (distance ?d ?d)) ) )
          (once (in_motion ?d) )
          (hold (not (exists (?b - cube_block ?s - game_object) (in_motion ?s) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions ballRolledOnRampToRug:purple:cube_block) (* (count throwBallToDoggieBed:blue_dodgeball:alarm_clock) (external-forall-maximize (* (count itemsTurnedOff:beachball) (count throwGolfballToBin:basketball) )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects throwBallToDoggieBed:book)
)
)



(define (game game-id-732) (:domain few-objects-room-v1)
(:setup
  (exists (?h - building)
    (forall (?c - doggie_bed ?y ?y0 ?y1 - diagonal)
      (game-optional
        (adjacent room_center ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?l3 - hexagonal_bin)
        (at-end
          (adjacent_side room_center right ?l3)
        )
      )
    )
  )
)
(:terminal
  (< (count pillowMovedToRoomCenter:golfball:dodgeball) (count pillowMovedToRoomCenter:basketball) )
)
(:scoring
  (count pillowMovedToRoomCenter:beachball:green:red)
)
)



(define (game game-id-733) (:domain few-objects-room-v1)
(:setup
  (forall (?o - (either laptop cd book yellow_cube_block))
    (and
      (game-conserved
        (forall (?p2 - dodgeball ?c - (either mug cube_block book))
          (> 5 7)
        )
      )
      (forall (?c2 - bridge_block)
        (game-optional
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?l1 - (either cylindrical_block doggie_bed basketball))
        (at-end
          (not
            (same_object ?l1 ?l1)
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?c5 - dodgeball ?g - (either key_chain doggie_bed pyramid_block) ?h - game_object)
        (then
          (hold (agent_holds ?h) )
          (once (not (and (on ?h top_drawer) (not (rug_color_under bed gray) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (count-once-per-objects greenObjectMovedToRoomCenter:doggie_bed) )
    (and
      (>= (total-time) (total-score) )
      (>= (count-once-per-objects pyramidBlockAtopTowerAtEnd:dodgeball) 2 )
      (>= (* (+ (- 5 )
            10
          )
          (count-longest greenObjectMovedToRoomCenter:dodgeball)
          10
          (* (count pyramidBlockAtopTowerAtEnd:pink) (count pyramidBlockAtopTowerAtEnd) )
          3
          (* (count-total greenObjectMovedToRoomCenter:orange) (count greenObjectMovedToRoomCenter:side_table) 7 )
        )
        (total-time)
      )
    )
  )
)
(:scoring
  (count-once-per-objects greenObjectMovedToRoomCenter:basketball)
)
)



(define (game game-id-734) (:domain medium-objects-room-v1)
(:setup
  (forall (?x - gray ?d - hexagonal_bin)
    (game-conserved
      (and
        (not
          (not
            (not
              (agent_holds ?d)
            )
          )
        )
        (and
          (< (distance ?d ?d) (distance rug ?d))
          (not
            (not
              (not
                (in_motion ?d)
              )
            )
          )
        )
        (and
          (exists (?h - dodgeball)
            (not
              (agent_holds ?h)
            )
          )
          (and
            (agent_holds ?d)
            (adjacent ?d ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?o3 - cube_block ?ob - (either cd key_chain) ?p - dodgeball)
        (then
          (once (not (and (exists (?o - triangular_ramp) (and (not (in_motion ?p) ) (in_motion ?o) (and (in_motion agent) (not (exists (?r - hexagonal_bin) (not (and (same_object ?p ?p) (and (agent_holds ?o) (and (agent_holds ?o) (agent_holds blue) (same_type ?o ?r) ) ) (< 1 10) (in_motion ?p) (and (and (not (and (and (not (< 3 5) ) (agent_holds ?p) ) (agent_holds ?o) ) ) (and (adjacent ?r ?p) (in_motion ?r) ) ) (exists (?c - ball ?d - block ?w2 - dodgeball) (and (exists (?o1 - hexagonal_bin ?d - (either dodgeball triangle_block)) (not (and (on agent ?d) (forall (?b - hexagonal_bin) (and (between agent ?r ?b) (and (agent_holds ?o) (and (not (touch ?w2 ?r) ) (not (agent_holds ?b) ) ) (in_motion ?p) ) (exists (?y ?y0 - (either sideways) ?d - building ?o1 - dodgeball) (agent_holds ?w2) ) ) ) ) ) ) (same_type ?r ?r) (not (in ?p ?p) ) ) ) ) (not (not (not (in_motion ?p) ) ) ) (agent_holds ?p) (agent_holds ?r) ) ) ) ) ) ) ) (< (distance_side bed back ?p) (distance ?p ?p)) ) ) )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?p2 - game_object)
        (then
          (once (agent_holds agent) )
          (once (and (agent_holds ?p2) (not (not (and (same_type ?p2 ?p2) (in_motion floor) ) ) ) ) )
          (once (rug_color_under ?p2 green) )
        )
      )
    )
    (preference throwGolfballToBin
      (exists (?d - ball ?d - (either pillow) ?h - block ?b ?l - dodgeball)
        (then
          (hold (not (agent_holds ?b) ) )
          (hold-while (agent_holds ?b) (not (in ?b ?l) ) )
          (hold (not (not (and (= 0.5 (distance ?b ?b)) (not (agent_holds ?l) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (total-time) )
)
(:scoring
  (count-once ballThrownFromObjectToBin:basketball)
)
)



(define (game game-id-735) (:domain few-objects-room-v1)
(:setup
  (exists (?h - game_object)
    (forall (?b - doggie_bed)
      (game-optional
        (on ?h ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - (either hexagonal_bin doggie_bed) ?h - pink_dodgeball)
      (and
        (preference objectWithMatchingColor
          (exists (?t - block ?b4 - block)
            (then
              (once (agent_holds ?b4) )
              (hold (and (and (agent_holds ?h) (exists (?l - (either dodgeball cube_block) ?o2 - teddy_bear) (not (< (x_position ?b4) (x_position rug)) ) ) ) ) )
              (hold (agent_crouches ) )
            )
          )
        )
        (preference towerFallsWhileBuilding
          (exists (?tb - hexagonal_bin ?c - curved_wooden_ramp ?t ?b - cube_block)
            (at-end
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count towerFallsWhileBuilding:yellow) (count-once-per-objects objectWithMatchingColor:basketball) )
)
(:scoring
  (count-once-per-objects objectWithMatchingColor:basketball:beachball)
)
)



(define (game game-id-736) (:domain many-objects-room-v1)
(:setup
  (exists (?tb - dodgeball ?h - hexagonal_bin)
    (and
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?o - ball)
        (at-end
          (touch ?o ?o)
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (> (* 1 (+ 0 3 )
          (count throwTeddyOntoPillow:doggie_bed)
          (+ 4 3 )
          (count throwTeddyOntoPillow:pink_dodgeball)
          (count throwTeddyOntoPillow:basketball:doggie_bed)
        )
        (count throwTeddyOntoPillow:dodgeball)
      )
      (>= 6 (total-score) )
      (<= (count-once throwTeddyOntoPillow:hexagonal_bin:side_table) (count throwTeddyOntoPillow:rug) )
    )
  )
)
(:scoring
  (+ (count-once-per-objects throwTeddyOntoPillow) 5 )
)
)



(define (game game-id-737) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - cube_block)
    (game-conserved
      (not
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?d - hexagonal_bin ?h - dodgeball)
        (then
          (once (exists (?h - beachball) (not (on agent ?h) ) ) )
          (once (and (touch agent ?h) (in_motion ?h) ) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-same-positions nonBlockPlacedInBuilding:dodgeball) (* 1 (count nonBlockPlacedInBuilding:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects nonBlockPlacedInBuilding:dodgeball:pink)
)
)



(define (game game-id-738) (:domain medium-objects-room-v1)
(:setup
  (exists (?o4 - hexagonal_bin ?o - dodgeball)
    (and
      (forall (?b - (either bridge_block side_table))
        (and
          (exists (?h - curved_wooden_ramp)
            (exists (?c - hexagonal_bin ?o1 - game_object)
              (forall (?b5 - ball)
                (and
                  (exists (?c - ball ?p - hexagonal_bin)
                    (forall (?b9 - (either watch cellphone))
                      (and
                        (game-conserved
                          (not
                            (in_motion desk)
                          )
                        )
                        (forall (?d - curved_wooden_ramp ?r - hexagonal_bin)
                          (game-optional
                            (not
                              (in ?h agent)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?ob ?p ?d ?d ?h ?d - hexagonal_bin)
        (then
          (hold (adjacent ?p ?d) )
        )
      )
    )
    (preference ballThrownFromDoor
      (exists (?b - building)
        (then
          (once (same_color ?b green) )
          (once (in_motion ?b) )
          (once (and (equal_z_position ?b ?b) (and (in agent ?b) (in_motion ?b) (on ?b ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (count ballThrownFromDoor:basketball:white:doggie_bed) )
)
(:scoring
  (count-once-per-objects ballThrownFromDoor:yellow_pyramid_block)
)
)



(define (game game-id-739) (:domain medium-objects-room-v1)
(:setup
  (exists (?o ?w2 - (either dodgeball yellow_cube_block) ?h - golfball ?d - bridge_block)
    (exists (?h - ball)
      (forall (?s - doggie_bed ?h - (either cube_block rug))
        (forall (?c - hexagonal_bin ?b - (either game_object top_drawer))
          (game-conserved
            (and
              (and
                (in_motion ?d)
                (not
                  (on ?d ?b)
                )
              )
              (on ?d ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either dodgeball cellphone) ?o4 - hexagonal_bin)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?c2 - golfball)
            (then
              (once (agent_holds agent) )
            )
          )
        )
        (preference ballThrownToWallToAgent
          (exists (?s - chair)
            (at-end
              (agent_holds ?s)
            )
          )
        )
        (preference dodgeballFromBlockToBin
          (then
            (once (in_motion ?o4) )
            (hold (and (and (and (agent_holds ?o4) (in ?o4 ?o4) ) (in_motion floor) ) (in_motion floor) ) )
            (hold (not (and (agent_holds ?o4) (in_motion ?o4) ) ) )
          )
        )
        (preference throwToBinFromDistance
          (exists (?w1 - (either golfball pillow))
            (then
              (once (and (on ?w1 ?w1) (or (not (exists (?c3 - (either alarm_clock mug)) (in_motion ?w1) ) ) (not (< 0 7) ) ) ) )
              (hold (not (and (and (adjacent ?o4 ?w1) (not (adjacent_side rug left agent) ) ) (and (object_orientation ?w1 upside_down) (agent_holds ?o4) (not (agent_holds ?w1) ) (not (in ?w1 ?o4) ) ) (in ?o4 ?o4) ) ) )
              (hold (agent_holds bed) )
            )
          )
        )
      )
    )
    (forall (?b - game_object ?h - cube_block ?o2 - hexagonal_bin)
      (and
        (preference blocksInPlace
          (exists (?z ?z0 ?z1 - (either left front_left_corner))
            (then
              (hold (not (in ?o2 ?o2) ) )
              (once (not (agent_holds ?o2) ) )
              (once (open ?o2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count ballThrownToWallToAgent:beachball) (count-once-per-objects throwToBinFromDistance:pink_dodgeball:cube_block) 2 )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects blocksInPlace:cube_block)
)
)



(define (game game-id-740) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - wall)
    (exists (?d - cube_block)
      (game-conserved
        (agent_holds desk)
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - flat_block)
      (and
        (preference smallItemsInPlace
          (exists (?r2 - game_object ?tb - (either golfball pen))
            (then
              (hold (in_motion ?tb) )
              (hold-while (in ?tb ?d) (not (not (equal_x_position desk ?d) ) ) )
            )
          )
        )
        (preference throwAttemptFromDoor
          (exists (?o - hexagonal_bin ?b - cylindrical_block)
            (at-end
              (and
                (on ?d ?d)
                (and
                  (in ?d ?d)
                  (in_motion ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 2 )
)
(:scoring
  (count smallItemsInPlace:beachball)
)
)



(define (game game-id-741) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - hexagonal_bin)
    (exists (?c5 - hexagonal_bin)
      (exists (?o5 - cube_block)
        (and
          (forall (?c - hexagonal_bin ?l1 - hexagonal_bin)
            (exists (?x - red)
              (exists (?h - hexagonal_bin)
                (forall (?o2 - hexagonal_bin ?w1 - block)
                  (forall (?x - light_blue)
                    (or
                      (exists (?o - block)
                        (game-conserved
                          (touch ?o5 ?c5)
                        )
                      )
                      (forall (?l2 - curved_wooden_ramp ?h - building)
                        (game-conserved
                          (agent_holds ?c5)
                        )
                      )
                      (game-conserved
                        (same_color ?l1 ?o5)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?o - dodgeball ?d - hexagonal_bin)
        (at-end
          (same_type ?d bridge_block)
        )
      )
    )
    (forall (?r2 - red_dodgeball ?b - dodgeball)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?o3 - cube_block)
            (then
              (hold (in_motion ?o3) )
              (hold (and (same_type ?b pillow) ) )
              (once (adjacent_side bed back ?o3 back) )
            )
          )
        )
        (preference ballThrownThroughRampAndBlocksToBin
          (exists (?o - triangular_ramp)
            (then
              (once (agent_holds desk) )
              (once (and (in ?o ?o) (not (or (on ?o north_wall) (< (building_size ?b) (distance ?o ?b)) ) ) ) )
              (once-measure (adjacent ?o ?b) (building_size ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (- (+ (* (count dodgeballFromDeskToTarget:alarm_clock) (count itemInClosedDrawerAtEnd:alarm_clock) )
        (* (count-once ballThrownThroughRampAndBlocksToBin:dodgeball) (+ 6 (external-forall-minimize (external-forall-maximize (count-once-per-external-objects itemInClosedDrawerAtEnd:book:dodgeball:pink_dodgeball) ) ) (* 2 4 (* 5 2 )
            )
          )
        )
      )
    )
    (total-time)
  )
)
(:scoring
  (+ (count ballThrownThroughRampAndBlocksToBin:doggie_bed) (* (* (- (count-once-per-objects dodgeballFromDeskToTarget:red:wall) )
        (* (- (* (count ballThrownThroughRampAndBlocksToBin:basketball) (* (* 2 (+ (count ballThrownThroughRampAndBlocksToBin:yellow_cube_block) 6 )
                  (+ 10 (count-once-per-objects itemInClosedDrawerAtEnd:green) 10 )
                )
                (count-once-per-objects dodgeballFromDeskToTarget:yellow)
              )
              (- (+ (count-once-per-objects ballThrownThroughRampAndBlocksToBin:doggie_bed) 0.5 1 (count ballThrownThroughRampAndBlocksToBin:hexagonal_bin) (count ballThrownThroughRampAndBlocksToBin:blue_cube_block:orange) 5 (count ballThrownThroughRampAndBlocksToBin:side_table) )
              )
              (count-once-per-objects ballThrownThroughRampAndBlocksToBin:book:pyramid_block)
            )
          )
          (* (count-once-per-objects itemInClosedDrawerAtEnd:dodgeball) 1 )
        )
      )
      (- (count itemInClosedDrawerAtEnd:red:pink_dodgeball) )
    )
  )
)
)



(define (game game-id-742) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin ?b2 - (either top_drawer yellow_cube_block) ?s - hexagonal_bin)
    (and
      (exists (?o1 - (either book chair game_object))
        (and
          (not
            (game-conserved
              (agent_holds pink)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?g - dodgeball)
        (then
          (once (exists (?p - hexagonal_bin) (not (not (agent_holds ?p) ) ) ) )
          (once (in_motion agent) )
          (once (not (and (adjacent ?g ?g) (opposite agent ?g) (same_type ?g pillow) ) ) )
          (once (not (in ?g ?g) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-score) )
)
(:scoring
  (* (* 3 7 )
    4
    (+ (count throwToBinFromDistance:red) (count throwToBinFromDistance:beachball:hexagonal_bin:golfball) )
  )
)
)



(define (game game-id-743) (:domain few-objects-room-v1)
(:setup
  (exists (?o1 - doggie_bed)
    (exists (?b3 - ball)
      (forall (?b5 - pillow ?h - dodgeball ?h - block)
        (not
          (and
            (forall (?r2 - building)
              (exists (?b - ball)
                (forall (?d - hexagonal_bin)
                  (or
                    (game-conserved
                      (and
                        (not
                          (on ?b ?h)
                        )
                        (not
                          (not
                            (exists (?o3 - ball)
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blindsOpened
      (exists (?t2 - game_object)
        (then
          (once (and (in_motion ?t2) (in_motion ?t2) (and (on ?t2 ?t2) (touch ?t2 south_wall) ) (agent_holds ?t2) (and (and (agent_holds ?t2) (exists (?c - ball ?h - (either tall_cylindrical_block hexagonal_bin yellow_cube_block) ?l3 - dodgeball ?c4 - chair ?l - game_object) (in_motion ?l) ) (touch ?t2 ?t2) (same_color ?t2 ?t2) ) (in ?t2 ?t2) (and (not (and (and (agent_holds floor) (in_motion ?t2) ) (in ?t2 ?t2) ) ) (adjacent ?t2 ?t2) ) ) (open ?t2) (in_motion ?t2) (touch ?t2 ?t2) ) )
          (once (exists (?y - upside_down ?h - dodgeball) (in ?h ?t2) ) )
        )
      )
    )
    (preference ballThrownToWallToAgent
      (exists (?c - chair)
        (then
          (hold (not (and (not (not (same_type agent ?c) ) ) (and (not (adjacent_side desk front ?c) ) (exists (?o - block ?s - (either key_chain triangle_block) ?o - hexagonal_bin ?d - hexagonal_bin) (agent_holds agent) ) ) ) ) )
          (once (not (on bed ?c) ) )
          (hold-while (same_color agent ?c) (object_orientation ?c upside_down) (in_motion ?c) )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?h - game_object)
        (at-end
          (agent_holds ?h)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects blindsOpened:dodgeball:dodgeball) (count-once-per-objects ballThrownToWallToAgent:book) )
  )
)
(:scoring
  (count ballThrownThroughRampToBin:basketball)
)
)



(define (game game-id-744) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - hexagonal_bin)
      (game-conserved
        (and
          (same_type ?r ?r)
          (opposite ?r ?r)
          (in_motion ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - red_pyramid_block ?b - building)
      (and
        (preference blockToBinFromRug
          (exists (?h - block ?o5 - ball)
            (then
              (once (not (in_motion ?o5) ) )
              (once (touch ?b ?o5) )
              (once (and (or (and (agent_holds ?b) (not (agent_holds ?b) ) ) (between ?o5 ?b ?o5) ) (is_setup_object ?o5) ) )
            )
          )
        )
        (preference gameObjectToBin
          (exists (?h - hexagonal_bin)
            (at-end
              (in_motion ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (* (* 5 (* (count gameObjectToBin:dodgeball) 1 )
        )
        9
      )
      1
    )
  )
)
(:scoring
  (* (* (count-once gameObjectToBin:basketball) (count blockToBinFromRug:basketball) 40 )
    4
  )
)
)



(define (game game-id-745) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either bridge_block hexagonal_bin alarm_clock))
    (game-conserved
      (not
        (not
          (not
            (in ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either laptop cube_block))
      (and
        (preference throwFromEdgeOfRug
          (exists (?c - ball)
            (at-end
              (on ?b ?c)
            )
          )
        )
      )
    )
    (forall (?l - building ?d - curved_wooden_ramp ?o - building ?h - curved_wooden_ramp ?b - dodgeball)
      (and
        (preference dropAttempt
          (then
            (once (agent_holds ?b) )
            (once (forall (?h - dodgeball ?d - game_object ?o - teddy_bear) (not (in_motion ?o) ) ) )
            (hold (adjacent ?b ?b) )
          )
        )
        (preference bigObjectThrownToBed
          (exists (?h - ball ?d - hexagonal_bin)
            (then
              (once (not (in_motion ?b) ) )
              (once (and (in_motion ?d) (not (and (and (and (in ?b ?b) (not (rug_color_under ?d light_blue) ) ) (agent_holds ?b) ) (open ?d) ) ) (>= (distance_side door right ?b) 1) (agent_holds ?b) ) )
              (hold-while (not (touch ?b agent) ) (not (agent_holds ?b) ) (and (not (not (> (distance ?d ?d) (distance ?b ?d)) ) ) (in_motion ?d) (not (not (not (agent_holds ?d) ) ) ) (agent_holds ?b) (exists (?z ?z0 ?z1 - front) (in_motion ?d) ) (same_color ?b ?b) ) )
            )
          )
        )
      )
    )
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?b4 - cube_block)
        (then
          (once (on ?b4 green_golfball) )
          (once (adjacent ?b4 ?b4) )
          (once (and (agent_holds ?b4) (in_motion rug) (not (and (adjacent ?b4 top_shelf) (in rug ?b4) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (<= 3 (total-time) )
    (> 3 (count-once-per-objects throwFromEdgeOfRug:hexagonal_bin) )
  )
)
(:scoring
  (-
    0
    8
  )
)
)



(define (game game-id-746) (:domain many-objects-room-v1)
(:setup
  (forall (?s - game_object)
    (game-conserved
      (game_over )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?h - (either cylindrical_block blue_cube_block))
        (then
          (hold-while (and (and (agent_holds ?h) (on ?h ?h) ) (in ?h ?h) ) (in ?h ?h) )
          (hold (< 1 1) )
          (hold (and (same_type ?h block) (agent_holds ?h) ) )
        )
      )
    )
    (forall (?h - pink_dodgeball)
      (and
        (preference throwKnocksOverBear
          (exists (?x ?x0 ?x1 - orange)
            (then
              (once (exists (?c3 - shelf) (on rug ?c3) ) )
              (once (game_over ) )
              (once (is_setup_object ?h) )
            )
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?w2 - block)
        (then
          (once (and (agent_holds ?w2) (and (and (in ?w2 ?w2) (in_motion ?w2) ) (agent_holds ?w2) ) (not (on ?w2 ?w2) ) (and (touch ?w2 ?w2) (in_motion ?w2) ) (in_motion ?w2) (agent_holds ?w2) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects binKnockedOver:blue_pyramid_block) (total-time) )
)
(:scoring
  (-
    9
    (= (count-total throwKnocksOverBear:yellow_cube_block) 3 )
  )
)
)



(define (game game-id-747) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?x ?x0 ?x1 - white ?h - game_object)
    (game-conserved
      (in_motion ?h)
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?o - pillow)
        (then
          (hold (not (equal_z_position bed ?o) ) )
          (once (same_color ?o ?o) )
          (hold (not (in_motion ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockOnBlockInTowerAtEnd:dodgeball:yellow) (total-score) )
)
(:scoring
  (* (count-unique-positions blockOnBlockInTowerAtEnd:yellow_cube_block) 2 )
)
)



(define (game game-id-748) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp)
    (game-optional
      (in ?h agent)
    )
  )
)
(:constraints
  (and
    (forall (?w2 - building)
      (and
        (preference ballOnBedAtEnd
          (exists (?b - game_object ?tb - (either dodgeball golfball wall cylindrical_block) ?r - hexagonal_bin)
            (at-end
              (exists (?h - hexagonal_bin)
                (and
                  (is_setup_object ?h)
                  (same_color ?h south_wall)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 15 (count ballOnBedAtEnd:blue_dodgeball) )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:orange)
)
)



(define (game game-id-749) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h ?b6 ?b - shelf ?r - triangular_ramp)
      (exists (?g ?b ?c - dodgeball ?z ?z0 ?z1 - (either back right back))
        (exists (?p3 - game_object)
          (forall (?w - triangular_ramp ?x - (either pink) ?b9 ?b ?h - hexagonal_bin)
            (game-conserved
              (touch ?b9 brown)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?tb - dodgeball)
        (at-end
          (in_motion ?tb)
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects objectInBuilding:pink:blue_dodgeball) (* (count objectInBuilding:basketball) 1 )
  )
)
(:scoring
  (count-unique-positions objectInBuilding:yellow_cube_block)
)
)



(define (game game-id-750) (:domain medium-objects-room-v1)
(:setup
  (exists (?b1 - hexagonal_bin)
    (or
      (forall (?h - cube_block)
        (forall (?b - hexagonal_bin)
          (game-conserved
            (not
              (touch ?b1 ?b)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?b4 - hexagonal_bin ?ob - beachball ?z - (either back))
        (then
          (hold (agent_holds ?ob) )
          (hold (in_motion ?ob) )
          (hold (adjacent ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (<= 10 (count cubeThrownToBin:dodgeball) )
)
(:scoring
  (count cubeThrownToBin:orange)
)
)



(define (game game-id-751) (:domain many-objects-room-v1)
(:setup
  (forall (?b3 - ball ?b6 - dodgeball ?g - hexagonal_bin ?h - desk_shelf)
    (exists (?h - wall)
      (game-optional
        (in_motion ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b4 - curved_wooden_ramp)
        (then
          (hold-while (is_setup_object ?b4) (adjacent ?b4 ?b4) )
          (once (> 4 (distance ?b4 ?b4)) )
          (hold (on ?b4 ?b4) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (count cubeBlockInBuilding:basketball) 2 )
  )
)
(:scoring
  (= (count cubeBlockInBuilding:beachball) )
)
)



(define (game game-id-752) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion floor)
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp ?o - (either golfball yellow_cube_block mug))
      (and
        (preference throwToBinFromDistance
          (exists (?r - (either tall_cylindrical_block alarm_clock hexagonal_bin))
            (then
              (once (in_motion ?o) )
              (once (and (not (and (in_motion ?o) (agent_holds ?r) ) ) (adjacent door ?o) ) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?r - hexagonal_bin)
        (then
          (once (agent_holds ?r) )
          (hold (in_motion agent) )
          (hold (not (in_motion ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count dodgeballAndBasketballInBin:blue_dodgeball) (count-once-per-objects dodgeballAndBasketballInBin:dodgeball) )
    (or
      (= (count dodgeballAndBasketballInBin:beachball) (* (count throwToBinFromDistance:pink) 7 )
      )
    )
    (or
      (>= (count-once-per-objects throwToBinFromDistance:dodgeball) (total-time) )
      (< (+ (+ (count-once-per-objects dodgeballAndBasketballInBin:beachball) (count-overlapping dodgeballAndBasketballInBin:brown) )
          (count dodgeballAndBasketballInBin:blue_dodgeball:golfball)
        )
        (count-same-positions dodgeballAndBasketballInBin:pink)
      )
    )
  )
)
(:scoring
  (= (count dodgeballAndBasketballInBin:book) (+ (count-once-per-objects dodgeballAndBasketballInBin:golfball:purple) (* 2 (count-once-per-objects throwToBinFromDistance:yellow) )
    )
    (count throwToBinFromDistance:golfball)
  )
)
)



(define (game game-id-753) (:domain many-objects-room-v1)
(:setup
  (forall (?b3 - (either credit_card cube_block tall_cylindrical_block golfball) ?b2 - block)
    (and
      (and
        (and
          (exists (?g - triangular_ramp ?ob - game_object ?b - (either hexagonal_bin teddy_bear lamp alarm_clock tall_cylindrical_block blue_cube_block dodgeball) ?x - orange)
            (game-optional
              (not
                (agent_holds desk)
              )
            )
          )
        )
      )
      (exists (?b - hexagonal_bin)
        (and
          (exists (?t - dodgeball)
            (game-optional
              (< 1 (distance side_table ?b))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - cube_block ?b - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (exists (?b - hexagonal_bin)
            (at-end
              (on ?b ?b)
            )
          )
        )
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?o - ball)
            (then
              (hold-while (object_orientation ?b diagonal) (in_motion ?b) )
              (once (not (agent_holds ?b) ) )
              (once (in ?o ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 3 5 5 )
      (+ 1 (* (* (* (count dodgeballHitsPillowWithoutTouchingBlock:brown) (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:hexagonal_bin) )
            (count-shortest objectThrownFromRug:dodgeball)
            (count objectThrownFromRug:book)
          )
          15
        )
      )
    )
    (+ 4 (* (count-once dodgeballHitsPillowWithoutTouchingBlock:beachball) 2 (count-once objectThrownFromRug:dodgeball) (* 5 4 )
      )
      50
    )
  )
)
(:scoring
  (+ (count-once dodgeballHitsPillowWithoutTouchingBlock:basketball:dodgeball) 0 )
)
)



(define (game game-id-754) (:domain few-objects-room-v1)
(:setup
  (exists (?c - dodgeball ?d ?b1 - dodgeball ?b3 - pyramid_block)
    (forall (?h - (either blue_cube_block tall_cylindrical_block golfball) ?l3 ?d ?p2 - cube_block)
      (game-conserved
        (in_motion ?p2)
      )
    )
  )
)
(:constraints
  (and
    (preference nonBlockPlacedInBuilding
      (exists (?h ?o - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (once (exists (?r - book) (and (not (toggled_on rug) ) (adjacent desk ?r) (and (and (same_color ?r blue) (in_motion ?h) (in_motion ?r) ) (and (in_motion ?o) (and (and (in_motion ?o) (and (not (agent_holds bed) ) (on ?r floor) ) ) (and (in ?h ?o) (on ?o ?o) ) ) (in_motion ?h) (in_motion ?r) (not (or (same_color ?r agent) (agent_holds pink) ) ) (same_type ?o pillow) (agent_holds ?o) (in ?r ?o) (agent_holds agent) (not (on ?h ?h) ) ) (agent_holds agent) ) ) ) )
          (once (and (same_color ?o ?h) (agent_holds ?o) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (* (count nonBlockPlacedInBuilding:dodgeball) 2 (+ (* (count nonBlockPlacedInBuilding:pink:basketball) (* 40 (count-unique-positions nonBlockPlacedInBuilding:dodgeball:side_table) )
            )
            1
            6
            3
            (+ 3 (* 3 (count nonBlockPlacedInBuilding:yellow) (count-once-per-objects nonBlockPlacedInBuilding:dodgeball) )
            )
            10
          )
        )
        (* (count-once-per-external-objects nonBlockPlacedInBuilding:dodgeball) (count-once nonBlockPlacedInBuilding:cylindrical_block) (count-once-per-objects nonBlockPlacedInBuilding:basketball) )
        (count-once-per-objects nonBlockPlacedInBuilding:rug)
        (count nonBlockPlacedInBuilding)
      )
    )
    (count-once-per-objects nonBlockPlacedInBuilding:pink_dodgeball)
  )
)
(:scoring
  (* (+ 3 (count nonBlockPlacedInBuilding:yellow_cube_block) )
    (+ 10 1 )
  )
)
)



(define (game game-id-755) (:domain medium-objects-room-v1)
(:setup
  (forall (?p - (either tall_cylindrical_block dodgeball))
    (game-optional
      (in_motion ?p)
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?b8 - dodgeball)
        (then
          (once (and (and (agent_holds ?b8) (not (not (in_motion ?b8) ) ) ) (in_motion ?b8) (in ?b8 ?b8) ) )
          (hold (agent_holds ?b8) )
          (once (and (and (on ?b8 ?b8) (in_motion ?b8) ) (touch ?b8 ?b8) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-objects pillowMovedToRoomCenter:golfball) )
    (- (count-once pillowMovedToRoomCenter:dodgeball) )
  )
)
(:scoring
  (count pillowMovedToRoomCenter:pink_dodgeball:blue_cube_block)
)
)



(define (game game-id-756) (:domain few-objects-room-v1)
(:setup
  (forall (?t - red_dodgeball ?c4 - game_object ?b - dodgeball)
    (exists (?b6 - (either desktop dodgeball))
      (and
        (and
          (game-conserved
            (adjacent ?b6 ?b)
          )
          (and
            (and
              (game-conserved
                (in_motion ?b)
              )
              (game-conserved
                (or
                  (rug_color_under ?b6 tan)
                  (and
                    (and
                      (not
                        (not
                          (not
                            (agent_holds ?b)
                          )
                        )
                      )
                      (not
                        (in_motion ?b)
                      )
                    )
                    (not
                      (or
                        (agent_holds ?b)
                        (and
                          (and
                            (agent_holds ?b)
                            (not
                              (not
                                (agent_holds ?b6)
                              )
                            )
                          )
                          (not
                            (in_motion ?b6)
                          )
                          (broken ?b)
                          (in_motion ?b6)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?ob - hexagonal_bin)
              (game-optional
                (in_motion ?ob)
              )
            )
          )
          (or
            (or
              (exists (?p ?b2 ?c2 ?w - chair)
                (exists (?h - hexagonal_bin ?b1 - (either dodgeball pillow alarm_clock))
                  (exists (?h - desk_shelf)
                    (exists (?b - ball)
                      (game-optional
                        (and
                          (< (distance room_center ?b) 1)
                          (forall (?d - (either top_drawer beachball))
                            (in ?b ?h)
                          )
                          (in_motion ?c2)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (above ?b6 agent)
              )
              (game-conserved
                (in ?b ?b6)
              )
            )
            (exists (?b - game_object ?g - hexagonal_bin ?c2 - teddy_bear)
              (game-conserved
                (in_motion rug)
              )
            )
          )
          (game-optional
            (touch bed ?b6)
          )
          (and
            (game-conserved
              (opposite ?b ?b6)
            )
          )
        )
        (and
          (and
            (and
              (and
                (forall (?b2 - ball)
                  (and
                    (exists (?t - hexagonal_bin ?g - hexagonal_bin)
                      (and
                        (exists (?c2 - hexagonal_bin ?b2 - green_triangular_ramp)
                          (exists (?p2 - game_object ?o2 - hexagonal_bin)
                            (exists (?c - hexagonal_bin)
                              (and
                                (game-optional
                                  (in_motion ?b2)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (not
                            (not
                              (and
                                (not
                                  (in_motion pink)
                                )
                                (and
                                  (or
                                    (agent_holds ?b)
                                    (and
                                      (not
                                        (not
                                          (agent_holds ?b6)
                                        )
                                      )
                                      (game_start )
                                    )
                                  )
                                  (agent_holds ?b)
                                )
                                (and
                                  (adjacent ?b2 ?b2)
                                  (not
                                    (equal_z_position room_center ?g)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (and
                          (game-optional
                            (or
                              (and
                                (in agent ?b6)
                                (or
                                  (faces top_shelf ?b2)
                                  (not
                                    (and
                                      (not
                                        (and
                                          (not
                                            (not
                                              (and
                                                (in ?b6 ?b6)
                                                (not
                                                  (and
                                                    (not
                                                      (agent_holds ?g)
                                                    )
                                                    (in_motion ?b2)
                                                    (is_setup_object ?b)
                                                  )
                                                )
                                                (on ?b6 ?g)
                                              )
                                            )
                                          )
                                          (and
                                            (and
                                              (in_motion ?b6)
                                              (agent_holds ?b)
                                            )
                                            (not
                                              (and
                                                (not
                                                  (broken ?b2)
                                                )
                                                (and
                                                  (agent_holds ?g)
                                                  (not
                                                    (not
                                                      (not
                                                        (agent_holds ?b2)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            (and
                                              (in_motion ?b)
                                              (agent_holds agent)
                                            )
                                            (and
                                              (not
                                                (faces ?b6 ?b6)
                                              )
                                              (touch ?b agent)
                                            )
                                          )
                                        )
                                      )
                                      (and
                                        (touch ?g ?b6)
                                        (on ?b6 ?b)
                                      )
                                    )
                                  )
                                )
                                (and
                                  (in_motion ?b6)
                                  (and
                                    (in_motion ?b2)
                                    (and
                                      (not
                                        (agent_holds ?b6)
                                      )
                                      (in_motion ?b2)
                                    )
                                  )
                                )
                                (not
                                  (and
                                    (on ?b2 ?b6)
                                    (on pink ?b2)
                                    (not
                                      (not
                                        (not
                                          (not
                                            (not
                                              (and
                                                (above ?b6 ?b2)
                                                (rug_color_under ?b2 tan)
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              (and
                                (and
                                  (touch ?b6 ?b)
                                  (agent_holds ?g)
                                )
                                (not
                                  (and
                                    (in_motion ?b)
                                    (in ?b ?b6)
                                    (in ?b ?b6)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-optional
                  (not
                    (and
                      (> (distance ?b ?b) (distance_side desk left ?b6 left))
                      (adjacent ?b6 ?b6)
                    )
                  )
                )
              )
              (forall (?c - hexagonal_bin ?tb - hexagonal_bin ?db - teddy_bear)
                (game-conserved
                  (not
                    (not
                      (in_motion ?db)
                    )
                  )
                )
              )
            )
          )
          (exists (?b6 - teddy_bear)
            (game-conserved
              (and
                (and
                  (on ?b ?b6)
                  (agent_holds agent)
                )
                (game_start )
              )
            )
          )
        )
        (forall (?t1 - triangular_ramp ?t2 - hexagonal_bin ?c3 - ball)
          (and
            (not
              (exists (?d - (either golfball basketball))
                (and
                  (game-conserved
                    (< 2 0)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l1 - cube_block ?x - tan)
        (then
          (hold (agent_holds ?l1) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count gameBlockFound) (* (* 5 (count gameBlockFound:pink_dodgeball) )
        (/
          (* (count gameBlockFound:basketball) (count gameBlockFound:basketball:dodgeball) )
          18
        )
      )
    )
  )
)
(:scoring
  (count gameBlockFound)
)
)



(define (game game-id-757) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (exists (?h - triangular_ramp)
        (not
          (not
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptKnocksBlock
      (exists (?g - (either cellphone basketball cd mug bridge_block dodgeball main_light_switch))
        (at-end
          (on ?g ?g)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (= 10 (- 5 )
        )
        (>= 5 100 )
      )
      (>= 20 (* (count throwAttemptKnocksBlock:hexagonal_bin:purple:red) (* 6 (+ 2 4 )
            (count throwAttemptKnocksBlock:basketball)
          )
        )
      )
    )
  )
)
(:scoring
  (* (+ 50 2 )
    3
  )
)
)



(define (game game-id-758) (:domain medium-objects-room-v1)
(:setup
  (exists (?b7 - teddy_bear)
    (and
      (exists (?t - curved_wooden_ramp)
        (game-conserved
          (in ?t ?b7)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o1 ?s - ball)
      (and
        (preference blockIncorrectlyPicked
          (exists (?d - teddy_bear)
            (then
              (once (on desk ?s) )
              (hold-while (faces ?s ?o1) (agent_holds ?d) (and (not (not (not (not (not (and (on ?o1 rug) (exists (?b - dodgeball ?o - (either dodgeball pillow basketball) ?c - beachball) (not (not (and (in_motion ?c) (in ?d ?c) (agent_holds ?s) ) ) ) ) ) ) ) ) ) ) (and (not (agent_holds ?o1) ) (between ?d ?d ?o1) ) ) )
              (hold (not (in_motion ?d) ) )
            )
          )
        )
        (preference ballThrownIntoTarget
          (exists (?ob - dodgeball)
            (then
              (once (agent_holds ?s) )
              (once (and (same_color ?o1 floor) (and (on floor ?s) (same_color ?o1 ?s) (and (in ?ob ?o1) (on ?ob ?ob) (not (in_motion floor) ) ) (agent_holds ?o1) ) (agent_crouches ) ) )
              (once (not (< (distance door ?ob) (x_position ?ob)) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-same-positions ballThrownIntoTarget:doggie_bed) (count ballThrownIntoTarget:beachball) )
)
(:scoring
  (external-forall-maximize
    (count blockIncorrectlyPicked:beachball)
  )
)
)



(define (game game-id-759) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - (either cd dodgeball))
    (forall (?c - (either alarm_clock main_light_switch))
      (game-optional
        (on ?b ?c)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - chair)
      (and
        (preference cubeBlockInBuilding
          (exists (?h - hexagonal_bin)
            (then
              (hold (faces floor bed) )
              (once (in_motion ?h) )
              (once (exists (?d - dodgeball) (agent_holds rug) ) )
            )
          )
        )
        (preference objectWithMatchingColor
          (exists (?d - game_object)
            (then
              (once (open ?c) )
              (once (on ?c ?d) )
              (once (and (in_motion ?c) (or (and (on ?c ?c) (in ?c ?d) ) (and (adjacent room_center ?d) (adjacent desk ?c) (in desk ?c) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?b3 - cylindrical_block)
      (and
        (preference throwAttempt
          (exists (?b1 - dodgeball)
            (then
              (hold (agent_crouches ) )
              (once (in_motion agent) )
              (hold-while (agent_holds ?b1) (and (equal_z_position room_center ?b3) (touch ?b1 ?b3) ) (on ?b3 ?b1) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 3 )
)
(:scoring
  (count-once-per-objects objectWithMatchingColor:basketball:green)
)
)



(define (game game-id-760) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (forall (?d - cube_block)
      (exists (?t ?g - dodgeball ?bl - game_object ?d - dodgeball)
        (forall (?h - cylindrical_block ?c6 - hexagonal_bin)
          (forall (?d - dodgeball ?d - (either bridge_block dodgeball))
            (or
              (game-conserved
                (exists (?o - hexagonal_bin)
                  (rug_color_under ?c6 yellow)
                )
              )
              (game-optional
                (in_motion desk)
              )
              (game-conserved
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - cube_block)
        (then
          (hold (in ?b floor) )
          (once (= 1 (distance ?b ?b) 1 (distance room_center ?b)) )
          (hold (> 8 (distance room_center ?b)) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (count-same-positions blockInTowerKnockedByDodgeball:purple) )
    (< (count-once blockInTowerKnockedByDodgeball:pink_dodgeball:red_pyramid_block:beachball) 3 )
  )
)
(:scoring
  (count blockInTowerKnockedByDodgeball:book:dodgeball)
)
)



(define (game game-id-761) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - shelf)
      (game-conserved
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?p - (either cylindrical_block wall key_chain) ?d - pyramid_block)
        (then
          (once (in ?d ?d) )
          (hold (in ?d ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count blockInTowerKnocked:book) 3 )
    (* 0 0.7 )
  )
)
(:scoring
  (* (count blockInTowerKnocked:basketball) (count blockInTowerKnocked:basketball:blue) )
)
)



(define (game game-id-762) (:domain many-objects-room-v1)
(:setup
  (exists (?d - beachball)
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (forall (?w - beachball)
      (and
        (preference blockToBinFromRug
          (exists (?x - pink)
            (then
              (hold (touch ?w ?w) )
              (once (and (agent_holds ?w) (on ?w side_table) ) )
              (hold (adjacent desk ?w) )
            )
          )
        )
        (preference throwKnocksBlock
          (exists (?b - tall_cylindrical_block ?b - dodgeball)
            (then
              (hold (and (in_motion top_drawer) (on ?b bed) ) )
              (once (< (distance desk ?w) (distance room_center ?w)) )
              (once (< (distance ?b ?b) 2) )
            )
          )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?p - game_object)
        (then
          (hold (agent_holds rug) )
          (hold (and (in_motion ?p) (< (distance desk ?p) 4) (agent_holds ?p) ) )
          (once (in_motion north_wall) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* (* 6 (- 100 )
      )
      (* 5 (count blockToBinFromRug:cube_block) )
    )
  )
)
(:scoring
  (+ 3 (* (count-once-per-objects throwToRampToBin:yellow) 5 )
  )
)
)



(define (game game-id-763) (:domain medium-objects-room-v1)
(:setup
  (forall (?b6 - wall)
    (exists (?b2 - ball)
      (exists (?h - hexagonal_bin)
        (game-conserved
          (agent_holds ?b6)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - game_object)
      (and
        (preference ballThrownThroughRampToBin
          (exists (?c - building)
            (then
              (once (exists (?o3 - (either blue_cube_block tall_cylindrical_block) ?r1 - hexagonal_bin) (in_motion ?c) ) )
              (once (equal_x_position desk ?c) )
              (hold (agent_holds ?c) )
            )
          )
        )
      )
    )
    (forall (?p - doggie_bed ?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?d - hexagonal_bin)
            (then
              (hold-while (in_motion agent) (agent_holds ?p) )
              (once (game_start ) )
              (hold (and (in_motion ?p) (< (distance ?d ?p) 1) ) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (then
            (once-measure (exists (?h - ball) (same_type ?p ?p) ) (distance bed ?p) )
            (once (not (or (in_motion agent) ) ) )
            (hold (not (not (in ?p ?p) ) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 2 (count-once-per-objects objectWithMatchingColor:dodgeball) )
  )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampToBin:blue)
)
)



(define (game game-id-764) (:domain many-objects-room-v1)
(:setup
  (forall (?o2 - (either laptop watch))
    (and
      (forall (?o - hexagonal_bin)
        (and
          (and
            (game-conserved
              (not
                (in_motion ?o2)
              )
            )
          )
          (and
            (and
              (and
                (game-conserved
                  (in_motion ?o2)
                )
              )
            )
            (exists (?b - hexagonal_bin)
              (game-conserved
                (in_motion ?b)
              )
            )
            (and
              (game-conserved
                (in_motion ?o)
              )
              (game-conserved
                (agent_holds ?o2)
              )
              (and
                (exists (?b3 - golfball ?b8 - hexagonal_bin ?h - dodgeball ?o1 - hexagonal_bin)
                  (and
                    (exists (?p1 - flat_block ?h - dodgeball ?c2 - watch)
                      (game-conserved
                        (on ?o ?o)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b1 ?d - hexagonal_bin)
        (and
          (exists (?c - ball ?o - ball)
            (game-optional
              (< 1 7)
            )
          )
        )
      )
      (game-optional
        (not
          (adjacent door ?o2)
        )
      )
      (or
        (forall (?c3 - curved_wooden_ramp ?b - curved_wooden_ramp)
          (exists (?h - pyramid_block)
            (and
              (and
                (game-optional
                  (not
                    (and
                      (and
                        (on ?b ?o2)
                        (in_motion ?b)
                        (in ?b ?o2)
                        (on bed ?h)
                        (not
                          (on ?o2 ?h)
                        )
                        (and
                          (in_motion ?b)
                          (in_motion ?b)
                          (not
                            (in ?o2 ?b)
                          )
                        )
                        (in ?o2 ?h)
                      )
                      (in_motion bed)
                      (and
                        (agent_holds ?o2)
                        (agent_holds ?o2)
                      )
                      (agent_holds ?o2)
                    )
                  )
                )
              )
            )
          )
        )
        (forall (?r - dodgeball)
          (game-conserved
            (adjacent desk ?r)
          )
        )
        (forall (?o3 - building)
          (and
            (game-conserved
              (and
                (and
                  (forall (?w - game_object ?g - hexagonal_bin ?b - game_object ?z ?z0 - (either front_left_corner left))
                    (not
                      (not
                        (agent_holds ?o3)
                      )
                    )
                  )
                  (agent_holds ?o2)
                  (agent_holds ?o2)
                )
                (and
                  (and
                    (in_motion ?o3)
                    (not
                      (in_motion ?o3)
                    )
                  )
                  (< 1 (distance ?o2 ?o2))
                  (or
                    (agent_holds ?o3)
                    (not
                      (= 1 1)
                    )
                  )
                )
                (touch ?o2 ?o2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - ball ?h - hexagonal_bin ?h - pillow ?b - dodgeball ?b - hexagonal_bin)
        (then
          (once (open ?b) )
          (hold-while (in_motion ?b) (in_motion agent) )
          (once (and (adjacent desk ?b) (in desk top_drawer) ) )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?h - hexagonal_bin)
        (then
          (hold (on ?h ?h) )
          (once (not (and (forall (?s - block) (in bed ?h) ) (is_setup_object ?h) ) ) )
          (hold (in_motion ?h) )
        )
      )
    )
  )
)
(:terminal
  (> (- 5 )
    (count-once-per-objects throwBallToBin:red:pink_dodgeball)
  )
)
(:scoring
  (count throwBallToBin)
)
)



(define (game game-id-765) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - block)
    (and
      (and
        (game-conserved
          (agent_holds ?h)
        )
        (game-conserved
          (and
            (in_motion ?h)
            (in_motion ?h)
          )
        )
        (game-conserved
          (agent_holds ?h)
        )
      )
      (and
        (exists (?c - pink_dodgeball ?b - red_dodgeball)
          (and
            (and
              (game-optional
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?b - bridge_block)
        (then
          (hold-while (on ?b ?b) (exists (?r1 ?ob ?b - (either mug cd) ?p - hexagonal_bin) (in_motion agent) ) (agent_holds ?b) )
          (once (in_motion ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (* (count-once-per-objects itemsHidingScreens) (count-shortest itemsHidingScreens:hexagonal_bin:red) )
        100
      )
    )
    (>= (count-once itemsHidingScreens:doggie_bed) 9 )
  )
)
(:scoring
  (+ (count itemsHidingScreens:tan) (external-forall-maximize (count-once-per-objects itemsHidingScreens:yellow) ) )
)
)



(define (game game-id-766) (:domain medium-objects-room-v1)
(:setup
  (exists (?o2 - ball)
    (exists (?b - hexagonal_bin)
      (game-optional
        (on ?o2 ?o2)
      )
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?g - shelf)
        (then
          (hold-while (and (not (in_motion ?g) ) (same_type ?g blinds) ) (not (on ?g ?g) ) (is_setup_object ?g) (and (toggled_on ?g) (object_orientation ?g sideways) ) )
          (hold-while (not (and (agent_holds ?g) ) ) (on ?g ?g) )
          (hold (agent_holds ?g) )
        )
      )
    )
    (forall (?h - cube_block ?r - hexagonal_bin)
      (and
        (preference ballThrowAttempt
          (exists (?l - beachball)
            (then
              (hold (in_motion ?r) )
              (once (rug_color_under ?r tan) )
              (once (not (faces ?l ?l) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) (* (* (- (count-increasing-measure ballThrowAttempt:hexagonal_bin) )
          (count-once agentLeavesDogbedOrNoMoreBalls:pink:beachball)
        )
        2
      )
    )
    (>= (total-score) (< (count-total agentLeavesDogbedOrNoMoreBalls:yellow:dodgeball) 2 )
    )
  )
)
(:scoring
  (count agentLeavesDogbedOrNoMoreBalls:beachball)
)
)



(define (game game-id-767) (:domain many-objects-room-v1)
(:setup
  (forall (?b - ball)
    (forall (?s - hexagonal_bin)
      (forall (?c5 - drawer)
        (not
          (game-conserved
            (and
              (forall (?b6 - (either cube_block golfball) ?x ?x0 ?x1 - yellow)
                (agent_holds ?b6)
              )
              (not
                (exists (?t - (either pillow golfball cube_block))
                  (agent_holds ?s)
                )
              )
              (agent_holds ?s)
              (and
                (not
                  (on desk ?c5)
                )
                (on ?b ?s)
                (touch ?c5 ?c5)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b1 - game_object ?h - hexagonal_bin)
        (then
          (once (>= (distance ?h ?h) (distance desk ?h)) )
          (once (on ?h ?h) )
          (once (agent_holds floor) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (count bigObjectThrownToBed:green) )
    (count-once-per-objects bigObjectThrownToBed:dodgeball)
  )
)
(:scoring
  (count bigObjectThrownToBed:dodgeball)
)
)



(define (game game-id-768) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?o4 - hexagonal_bin)
    (game-conserved
      (< (distance door ?o4) (distance ?o4 ?o4))
    )
  )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?h ?b7 - hexagonal_bin ?l1 - hexagonal_bin)
        (at-end
          (agent_holds agent)
        )
      )
    )
  )
)
(:terminal
  (< 4 (count agentLeavesDogbedOrNoMoreBalls:beachball) )
)
(:scoring
  (* (count-shortest agentLeavesDogbedOrNoMoreBalls:blue_cube_block) 5 )
)
)



(define (game game-id-769) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?c1 - ball)
      (game-conserved
        (<= (distance bed ?h) (distance ?c1 ?c1))
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - light_blue)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?r - cube_block ?d - dodgeball)
            (then
              (hold (not (adjacent room_center ?d) ) )
              (hold (in_motion ?d) )
              (hold (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) (- 3 4 ) )
)
(:scoring
  (>= (< 3 0 )
    10
  )
)
)



(define (game game-id-770) (:domain medium-objects-room-v1)
(:setup
  (exists (?b ?b10 - (either cd bridge_block) ?o - dodgeball)
    (forall (?b10 - (either teddy_bear bridge_block) ?x - tan)
      (exists (?r - game_object)
        (game-conserved
          (and
            (in_motion ?b10)
            (not
              (< 1 3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - (either dodgeball book) ?d - chair)
      (and
        (preference throwBallToBin
          (exists (?h - pyramid_block)
            (then
              (hold (and (agent_holds pink) (and (not (not (and (and (between ?h ?d rug) (and (not (in_motion ?h) ) (and (not (agent_holds ?d) ) (agent_holds ?h) (on ?h ?h) ) ) ) (touch ?d ?d) ) ) ) (in ?h ?h) ) ) )
              (hold (not (object_orientation ?d diagonal) ) )
              (hold (forall (?c3 - cube_block) (not (< (distance ?d ?c3) (distance ?d ?c3)) ) ) )
            )
          )
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?l2 - hexagonal_bin)
        (then
          (once (exists (?h - (either teddy_bear book)) (not (adjacent ?l2 ?h) ) ) )
          (once (agent_crouches ) )
          (once (in_motion ?l2) )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - game_object)
        (at-end
          (and
            (and
              (not
                (is_setup_object ?d)
              )
              (on ?d ?d)
            )
            (agent_holds ?d)
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count-once throwAttempt:dodgeball) (total-time) )
  )
)
(:scoring
  (* 8 7 )
)
)



(define (game game-id-771) (:domain few-objects-room-v1)
(:setup
  (exists (?d - (either wall dodgeball))
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (forall (?c3 - dodgeball ?p - pillow)
      (and
        (preference throwAttempt
          (exists (?d - curved_wooden_ramp ?p - hexagonal_bin)
            (then
              (once (exists (?t1 - bridge_block ?c - hexagonal_bin) (not (in_motion ?p) ) ) )
              (once (agent_holds desktop) )
              (once (same_color ?p ?p) )
            )
          )
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?h ?l3 - sliding_door)
        (at-end
          (in ?h ?h)
        )
      )
    )
    (forall (?t2 - curved_wooden_ramp ?b - hexagonal_bin)
      (and
        (preference failedThrowAttempt
          (exists (?d - dodgeball)
            (then
              (hold-while (and (agent_holds ?d) (agent_holds ?b) ) (and (and (on ?d west_wall) (adjacent ?d ?d) ) (and (not (not (exists (?x - color ?l - doggie_bed) (in_motion ?d) ) ) ) (in ?b ?d) (in ?b ?b) (in_motion ?d) ) ) )
              (once (agent_holds ?d) )
              (hold-while (not (in_motion ?b) ) (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (+ (- (count objectWithMatchingColor:hexagonal_bin:green) )
        3
      )
      (* (+ (= 3 4 (+ (count objectWithMatchingColor:dodgeball) (count-once-per-objects throwAttempt:basketball:dodgeball) )
          )
          2
        )
        3
      )
    )
    (count-once-per-external-objects objectWithMatchingColor:dodgeball)
  )
)
(:scoring
  (count failedThrowAttempt:beachball)
)
)



(define (game game-id-772) (:domain many-objects-room-v1)
(:setup
  (exists (?b4 ?f - hexagonal_bin ?o5 - building)
    (forall (?d - cylindrical_block)
      (exists (?o - dodgeball)
        (game-conserved
          (> 1 1)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?w2 ?b - hexagonal_bin)
        (at-end
          (not
            (and
              (and
                (on ?w2 ?b)
                (and
                  (in ?w2 ?w2)
                  (and
                    (on ?b ?b)
                    (touch ?b ?b)
                    (in_motion ?w2)
                    (not
                      (equal_z_position ?w2 ?w2)
                    )
                  )
                )
              )
              (and
                (not
                  (and
                    (agent_holds ?b)
                    (and
                      (and
                        (or
                          (not
                            (agent_holds ?b)
                          )
                          (in_motion agent)
                        )
                        (= 4 (distance ?w2 rug))
                      )
                      (not
                        (adjacent room_center ?b)
                      )
                      (and
                        (touch ?w2 ?w2)
                        (not
                          (adjacent ?w2 pink)
                        )
                      )
                    )
                  )
                )
                (and
                  (and
                    (in_motion ?b)
                    (agent_holds ?b)
                  )
                  (not
                    (agent_holds ?w2)
                  )
                )
                (adjacent bed ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< 10 (total-time) )
    (>= 1 (* (+ (count ballKnocksTeddy:golfball) 40 (count-once-per-objects ballKnocksTeddy:basketball) (count ballKnocksTeddy:doggie_bed) )
        (count ballKnocksTeddy:basketball:yellow:yellow)
      )
    )
    (<= (count-once-per-objects ballKnocksTeddy) (count ballKnocksTeddy:blue_dodgeball:green) )
  )
)
(:scoring
  (= 5 15 )
)
)



(define (game game-id-773) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o - curved_wooden_ramp ?t - hexagonal_bin)
      (and
        (and
          (not
            (game-conserved
              (same_color bed blue)
            )
          )
        )
        (game-conserved
          (on ?t ?t)
        )
        (game-conserved
          (on ?t ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - game_object ?c2 - triangular_ramp)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?c - hexagonal_bin)
            (then
              (once (agent_holds west_wall) )
              (once (and (exists (?b6 - ball) (exists (?h - drawer) (not (forall (?b - pillow) (on ?c2 ?c2) ) ) ) ) (not (adjacent bed ?c) ) ) )
              (hold (in_motion ?c2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count-unique-positions blueObjectMovedToRoomCenter:dodgeball:yellow) (* (- (* (* 1 (count blueObjectMovedToRoomCenter:green:dodgeball:basketball) 3 )
          4
        )
      )
      (* (count-once-per-external-objects blueObjectMovedToRoomCenter:pink) (external-forall-maximize (* (* 16 1 (* 2 (* (count-once-per-objects blueObjectMovedToRoomCenter:golfball) 10 )
              )
              (- 10 )
              10
              2
              (+ (count-once-per-objects blueObjectMovedToRoomCenter:blue) (count-once-per-objects blueObjectMovedToRoomCenter:basketball:basketball:block) )
              (count-once-per-objects blueObjectMovedToRoomCenter:pink)
              3
              2
              (* (* 4 (count blueObjectMovedToRoomCenter:dodgeball) (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball) (= 3 50 )
                )
                300
                (+ (count blueObjectMovedToRoomCenter:yellow) 0.7 )
                4
                (+ 2 (count blueObjectMovedToRoomCenter:pink:beachball:beachball) (external-forall-maximize (count-once-per-objects blueObjectMovedToRoomCenter:dodgeball) ) )
                10
              )
              (count blueObjectMovedToRoomCenter:dodgeball)
            )
            (count blueObjectMovedToRoomCenter:dodgeball:beachball)
          )
        )
      )
    )
  )
)
(:scoring
  (count-same-positions blueObjectMovedToRoomCenter:hexagonal_bin:white)
)
)



(define (game game-id-774) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - triangular_ramp ?o3 - (either dodgeball beachball))
    (game-conserved
      (not
        (and
          (touch ?o3 ?o3)
          (not
            (in_motion green)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?c1 - hexagonal_bin)
        (then
          (hold (agent_holds ?c1) )
          (once (agent_holds ?c1) )
          (once (not (agent_holds ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 5 (count-once-per-objects gameBlockFound:book) )
    3
  )
)
(:scoring
  (count gameBlockFound:beachball)
)
)



(define (game game-id-775) (:domain medium-objects-room-v1)
(:setup
  (not
    (exists (?t - ball)
      (and
        (forall (?b5 - (either cube_block cube_block))
          (and
            (exists (?p2 - game_object)
              (game-conserved
                (in_motion agent)
              )
            )
          )
        )
        (exists (?c - (either pencil dodgeball))
          (forall (?c2 - wall)
            (game-conserved
              (< (distance_side desk back ?c2) (distance ?t ?c2))
            )
          )
        )
        (and
          (game-optional
            (not
              (and
                (in_motion ?t)
                (and
                  (in ?t ?t)
                  (not
                    (and
                      (not
                        (in_motion ?t)
                      )
                      (not
                        (on ?t ?t)
                      )
                      (in_motion ?t)
                    )
                  )
                )
              )
            )
          )
          (forall (?g - dodgeball ?b - game_object)
            (game-conserved
              (exists (?b - ball)
                (and
                  (and
                    (on ?b ?t)
                    (agent_holds ?t)
                  )
                  (and
                    (in ?t ?t)
                    (and
                      (same_type ?b ?t)
                      (agent_holds agent)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (<= (distance room_center ?t) 1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballInOrOnBin
      (exists (?h - teddy_bear ?h - ball ?d2 - cube_block)
        (then
          (hold (not (same_color floor ?d2) ) )
          (hold (not (and (not (not (not (touch ?d2 ?d2) ) ) ) (agent_holds ?d2) (and (and (not (in_motion ?d2) ) (in_motion ?d2) ) (agent_holds ?d2) (adjacent desk ?d2) ) (in ?d2 ?d2) (in_motion ?d2) (and (not (not (in_motion ?d2) ) ) (on ?d2 ?d2) ) ) ) )
          (hold (adjacent desk ?d2) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count ballInOrOnBin:basketball) (count ballInOrOnBin:green:tall_cylindrical_block) )
    (total-score)
  )
)
(:scoring
  (count ballInOrOnBin:basketball:dodgeball)
)
)



(define (game game-id-776) (:domain few-objects-room-v1)
(:setup
  (exists (?g - block)
    (forall (?b - dodgeball)
      (forall (?r - hexagonal_bin)
        (and
          (game-optional
            (and
              (and
                (agent_holds desk)
                (agent_holds ?b)
              )
              (not
                (on ?r ?b)
              )
            )
          )
          (exists (?d - hexagonal_bin ?b - block)
            (game-optional
              (agent_holds ?g)
            )
          )
          (forall (?h - doggie_bed)
            (game-optional
              (and
                (exists (?c1 - hexagonal_bin)
                  (agent_holds pink)
                )
                (not
                  (< 3 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x - purple ?r2 - hexagonal_bin ?r - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?x ?x0 - pink)
            (then
              (once (agent_holds floor) )
              (hold (and (and (and (and (agent_holds ?r) (on rug ?r) ) (and (in_motion ?r) (agent_holds ?r) ) ) (not (is_setup_object ?r) ) ) (not (equal_z_position ?r ?r) ) ) )
              (once (on ?r ?r) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 6 0 )
    (>= 5 (total-score) )
  )
)
(:scoring
  (count-once blockInTowerAtEnd:pyramid_block)
)
)



(define (game game-id-777) (:domain many-objects-room-v1)
(:setup
  (forall (?h - ball)
    (game-optional
      (adjacent bed ?h)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?b - hexagonal_bin ?d - golfball)
        (then
          (once (touch ?d ?d) )
          (hold (and (in ?d ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 20 (count-once-per-objects cubeBlockFromBedToShelf:dodgeball) )
    (total-time)
  )
)
(:scoring
  (count cubeBlockFromBedToShelf:blue_cube_block:cube_block:hexagonal_bin)
)
)



(define (game game-id-778) (:domain few-objects-room-v1)
(:setup
  (exists (?d - building)
    (exists (?c3 - dodgeball)
      (and
        (game-optional
          (and
            (agent_holds ?c3)
            (and
              (not
                (and
                  (not
                    (not
                      (same_color ?d ?d)
                    )
                  )
                  (agent_holds ?c3)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?o4 - building ?l - hexagonal_bin)
        (then
          (hold (agent_holds ?l) )
          (once (agent_holds ?l) )
          (once (forall (?b - hexagonal_bin) (in rug ?l) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (* (+ (* (+ (- (count castleBuilt:yellow) )
              4
            )
            6
            (count castleBuilt:white)
          )
          (count castleBuilt:orange)
        )
        2
      )
    )
    (count castleBuilt:doggie_bed:green)
  )
)
(:scoring
  (* 8 6 )
)
)



(define (game game-id-779) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - game_object)
    (and
      (forall (?s - chair ?l - (either cellphone cylindrical_block))
        (forall (?d - chair)
          (game-conserved
            (<= (distance ?l ?d) 8)
          )
        )
      )
      (and
        (game-conserved
          (in_motion agent)
        )
        (game-optional
          (not
            (not
              (not
                (adjacent desk ?d1)
              )
            )
          )
        )
        (exists (?db - pyramid_block)
          (exists (?r - block ?p2 - doggie_bed)
            (exists (?x ?x0 - white ?s - (either alarm_clock dodgeball))
              (and
                (and
                  (and
                    (exists (?o5 - desk_shelf ?o5 - (either floor top_drawer) ?t2 - ball)
                      (game-optional
                        (agent_holds ?s)
                      )
                    )
                  )
                  (exists (?x - blue ?c - shelf)
                    (game-conserved
                      (and
                        (not
                          (on ?p2 agent)
                        )
                        (and
                          (in_motion ?c)
                          (in ?db ?d1)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (not
                        (same_color ?p2 ?s)
                      )
                      (agent_holds ?db)
                      (and
                        (agent_holds ?db)
                        (adjacent ?db ?s)
                        (opposite ?p2 ?d1)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectsHidden
      (exists (?o - hexagonal_bin ?s - game_object ?o1 - doggie_bed)
        (then
          (hold (in ?o1 agent) )
          (once (in_motion ?o1) )
          (once (forall (?h - cube_block ?o1 - hexagonal_bin) (< 2 (distance room_center ?o1)) ) )
          (once (in_motion rug) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-score) (total-time) )
)
(:scoring
  (count objectsHidden:doggie_bed:basketball)
)
)



(define (game game-id-780) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c4 - ball)
        (exists (?b6 ?b7 ?b10 ?b7 ?g ?b - teddy_bear ?b7 - hexagonal_bin)
          (exists (?b - dodgeball)
            (and
              (exists (?b9 - ball)
                (forall (?h - tall_cylindrical_block)
                  (game-conserved
                    (in_motion desk)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - (either laptop golfball) ?o ?w1 - yellow_pyramid_block ?x - white)
      (and
        (preference objectWithMatchingColor
          (exists (?l - ball ?l - dodgeball ?p2 - (either blue_cube_block curved_wooden_ramp))
            (then
              (once (in_motion ?o) )
              (hold (not (agent_holds ?w1) ) )
              (once (in ?o ?o) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 0 10 )
)
(:scoring
  (- 4 )
)
)



(define (game game-id-781) (:domain few-objects-room-v1)
(:setup
  (forall (?d ?g - (either golfball book))
    (exists (?c5 - game_object ?d - (either dodgeball alarm_clock dodgeball tall_cylindrical_block pencil cylindrical_block dodgeball) ?r - building)
      (and
        (exists (?h - triangular_ramp)
          (game-conserved
            (adjacent ?d ?r)
          )
        )
        (forall (?o2 - cube_block)
          (or
            (exists (?c - dodgeball)
              (and
                (game-conserved
                  (in_motion ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?o3 - pillow ?x ?x0 - orange)
        (then
          (hold (on agent ?o3) )
          (once (not (on ?o3 ?o3) ) )
          (hold (not (and (not (on ?o3 ?o3) ) (in_motion ?o3) (agent_holds agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwBallToDoggieBed:basketball) (count throwBallToDoggieBed:dodgeball) )
    (>= 2 (total-time) )
    (>= (count throwBallToDoggieBed:pink:dodgeball) 300 )
  )
)
(:scoring
  (count-once-per-objects throwBallToDoggieBed:pink)
)
)



(define (game game-id-782) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r - ball ?t - (either dodgeball cd teddy_bear) ?x ?x0 - yellow)
      (exists (?p3 ?b8 - pyramid_block ?d - ball)
        (game-conserved
          (equal_x_position ?d ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference baseBlockInTowerAtEnd
      (exists (?t1 - chair)
        (then
          (hold (on ?t1 ?t1) )
          (once (on ?t1 ?t1) )
          (hold (in_motion bed) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects baseBlockInTowerAtEnd:block) 2 )
)
(:scoring
  (count-once-per-objects baseBlockInTowerAtEnd:basketball)
)
)



(define (game game-id-783) (:domain many-objects-room-v1)
(:setup
  (exists (?r - dodgeball)
    (game-optional
      (and
        (agent_holds ?r)
        (equal_z_position ?r bed)
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - (either mug doggie_bed dodgeball bed cd golfball doggie_bed) ?c5 - ball)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?o2 - chair)
            (at-end
              (on ?c5 ?c5)
            )
          )
        )
        (preference throwAttemptFromBehindBlock
          (at-end
            (not
              (between ?c5 ?c5 agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwAttemptFromBehindBlock:yellow) (count-once throwAttemptFromBehindBlock:triangle_block:pink) )
)
(:scoring
  (* 3 (count-unique-positions woodenBlockMovedFromRugToDesk:basketball) )
)
)



(define (game game-id-784) (:domain few-objects-room-v1)
(:setup
  (forall (?b - chair)
    (and
      (exists (?l1 - (either flat_block pyramid_block doggie_bed))
        (game-optional
          (< (distance bed ?l1) (distance ?l1 ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrowAttempt
      (exists (?c - (either teddy_bear cd))
        (at-end
          (agent_holds ?c)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (>= (count ballThrowAttempt:dodgeball) (count ballThrowAttempt:dodgeball) )
      (total-score)
    )
    (<= (* (count ballThrowAttempt:dodgeball) (count ballThrowAttempt:beachball) 0 (count ballThrowAttempt:pink_dodgeball) 0.7 (count ballThrowAttempt:basketball) 50 (count ballThrowAttempt:dodgeball:dodgeball) 3 (count-once-per-objects ballThrowAttempt:dodgeball:green:dodgeball) 1 (count ballThrowAttempt) )
      (- (count ballThrowAttempt:blue_pyramid_block:yellow) )
    )
  )
)
(:scoring
  (+ (* 1 (- 4 )
    )
    (* 4 )
  )
)
)



(define (game game-id-785) (:domain few-objects-room-v1)
(:setup
  (forall (?o4 - pillow)
    (forall (?h - beachball ?l - (either teddy_bear dodgeball cylindrical_block dodgeball))
      (game-conserved
        (not
          (adjacent ?o4 bed)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either desktop))
      (and
        (preference redDodgeballThrownToBin
          (exists (?o1 - hexagonal_bin)
            (at-end
              (in ?b ?b)
            )
          )
        )
      )
    )
    (preference binKnockedOver
      (exists (?h - block)
        (then
          (once (in_motion bed) )
          (once (in_motion ?h) )
          (once (not (in ?h ?h) ) )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?t1 - wall)
        (at-end
          (not
            (and
              (on ?t1 ?t1)
              (open ?t1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-score) 5 )
    (and
      (= (count ballThrownFromBehindBlock:pink_dodgeball) (count-once binKnockedOver:green) )
      (<= (external-forall-maximize (count-overlapping redDodgeballThrownToBin:golfball) ) (count redDodgeballThrownToBin:blue_dodgeball:pink_dodgeball) )
    )
  )
)
(:scoring
  (- 100 )
)
)



(define (game game-id-786) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (not
        (in_motion agent)
      )
    )
  )
)
(:constraints
  (and
    (forall (?w1 - teddy_bear)
      (and
        (preference failedThrowToBin
          (exists (?o2 - pillow ?b - dodgeball)
            (then
              (once (not (in ?b ?w1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count failedThrowToBin:top_drawer) (total-time) )
)
(:scoring
  (- (* (count failedThrowToBin:blue_dodgeball) 20 )
  )
)
)



(define (game game-id-787) (:domain medium-objects-room-v1)
(:setup
  (forall (?o1 - hexagonal_bin)
    (exists (?r - wall ?d - (either laptop cube_block cellphone))
      (exists (?b1 - (either pencil floor mug))
        (and
          (game-conserved
            (> 8 7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?c2 - block)
        (then
          (once (adjacent_side desk front ?c2) )
          (hold (in_motion ?c2) )
          (hold-while (in agent agent) (exists (?b - hexagonal_bin) (not (and (not (not (not (and (and (in ?b ?b) (adjacent desk ?b) (not (touch ?c2 ?b) ) ) (agent_holds ?c2) (not (not (not (= (distance ?c2 ?c2) 1) ) ) ) ) ) ) ) (not (not (not (agent_holds ?c2) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (<= (count-once-per-objects cubeBlockInBuilding:dodgeball) (total-time) )
)
(:scoring
  (external-forall-maximize
    (* (+ 5 3 )
      4
    )
  )
)
)



(define (game game-id-788) (:domain medium-objects-room-v1)
(:setup
  (forall (?b6 - teddy_bear)
    (game-optional
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?h - triangular_ramp)
        (then
          (once (and (and (and (and (adjacent_side ?h front ?h) (>= (distance ?h ?h) (distance ?h rug)) (on ?h ?h) ) (and (< 1 (distance ?h ?h)) (in ?h ?h) (in_motion ?h) ) ) (forall (?p1 - cylindrical_block) (on ?p1 ?p1) ) ) (touch ?h ?h) ) )
          (hold (not (not (adjacent ?h ?h) ) ) )
          (once (in_motion agent) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (count teddyBearLandsInBin:basketball)
)
)



(define (game game-id-789) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?d - dodgeball)
      (game-conserved
        (in_motion ?d)
      )
    )
    (and
      (exists (?ob - chair)
        (exists (?p3 - hexagonal_bin)
          (exists (?b - (either blue_cube_block basketball))
            (exists (?w - ball)
              (and
                (game-conserved
                  (in_motion ?w)
                )
                (and
                  (game-optional
                    (and
                      (on ?b ?p3)
                      (not
                        (not
                          (rug_color_under agent gray)
                        )
                      )
                    )
                  )
                  (forall (?h - green_triangular_ramp ?o - hexagonal_bin ?b7 - cube_block ?o - (either dodgeball chair cube_block))
                    (and
                      (or
                        (and
                          (forall (?c - dodgeball ?d - hexagonal_bin ?p - (either basketball basketball))
                            (game-conserved
                              (or
                                (and
                                  (agent_holds ?ob)
                                  (in_motion ?p3)
                                  (not
                                    (in_motion ?p3)
                                  )
                                  (agent_holds bed)
                                )
                                (not
                                  (on ?w ?p)
                                )
                              )
                            )
                          )
                          (exists (?d2 - block ?w2 - (either golfball) ?o1 - ball)
                            (forall (?b1 - sliding_door)
                              (and
                                (forall (?b - shelf)
                                  (and
                                    (and
                                      (and
                                        (exists (?b7 - teddy_bear ?bl - curved_wooden_ramp)
                                          (and
                                            (forall (?o - hexagonal_bin)
                                              (exists (?c - hexagonal_bin ?b - triangular_ramp)
                                                (and
                                                  (and
                                                    (game-conserved
                                                      (opposite ?b1 ?b)
                                                    )
                                                  )
                                                  (game-conserved
                                                    (and
                                                      (and
                                                        (same_color ?bl ?o1)
                                                        (and
                                                          (or
                                                            (in_motion ?w)
                                                            (in_motion ?p3)
                                                            (or
                                                              (agent_holds ?ob)
                                                              (in ?b1 ?b1)
                                                              (and
                                                                (agent_holds agent)
                                                                (in_motion ?ob)
                                                                (not
                                                                  (agent_holds ?o1)
                                                                )
                                                              )
                                                            )
                                                          )
                                                          (= (distance ?b1 ?ob) (distance ?o1 ?w))
                                                        )
                                                      )
                                                      (not
                                                        (>= 0.5 9)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                        (exists (?d ?h - pink_dodgeball ?b - dodgeball)
                                          (exists (?d - game_object ?d - hexagonal_bin)
                                            (game-optional
                                              (between ?o ?o agent)
                                            )
                                          )
                                        )
                                        (exists (?h - curved_wooden_ramp)
                                          (forall (?c - (either bridge_block))
                                            (forall (?b5 - dodgeball)
                                              (forall (?l1 - hexagonal_bin ?bl - curved_wooden_ramp ?l - hexagonal_bin ?d ?d ?b - (either triangle_block flat_block) ?l ?d - cube_block)
                                                (game-optional
                                                  (and
                                                    (not
                                                      (in_motion ?b1)
                                                    )
                                                    (agent_holds ?b1)
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (game-optional
                                        (not
                                          (in_motion ?b)
                                        )
                                      )
                                      (game-conserved
                                        (not
                                          (in_motion ?b1)
                                        )
                                      )
                                    )
                                  )
                                )
                                (game-conserved
                                  (rug_color_under ?o1 green)
                                )
                              )
                            )
                          )
                        )
                        (and
                          (exists (?b - dodgeball ?d - dodgeball ?d - hexagonal_bin)
                            (and
                              (and
                                (game-conserved
                                  (agent_holds ?d)
                                )
                              )
                            )
                          )
                          (forall (?c - (either cellphone cellphone hexagonal_bin))
                            (game-optional
                              (adjacent_side ?c front ?w)
                            )
                          )
                          (and
                            (and
                              (game-conserved
                                (agent_holds ?p3)
                              )
                            )
                            (and
                              (game-optional
                                (agent_holds ?p3)
                              )
                              (and
                                (exists (?o - hexagonal_bin)
                                  (exists (?d - block)
                                    (and
                                      (forall (?c2 - (either cube_block pencil rug) ?b - (either book curved_wooden_ramp))
                                        (and
                                          (game-conserved
                                            (not
                                              (and
                                                (in_motion ?b)
                                                (agent_holds ?p3)
                                              )
                                            )
                                          )
                                        )
                                      )
                                      (game-conserved
                                        (in_motion ?o)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-conserved
                                (not
                                  (exists (?w2 - hexagonal_bin ?w - building)
                                    (not
                                      (not
                                        (exists (?l1 - ball)
                                          (not
                                            (agent_holds ?p3)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (forall (?h ?o ?h ?h - dodgeball)
                      (exists (?d ?d - cube_block)
                        (game-optional
                          (adjacent bed ?h)
                        )
                      )
                    )
                  )
                )
                (exists (?b - dodgeball)
                  (game-optional
                    (not
                      (or
                        (between ?b ?b agent)
                        (not
                          (and
                            (in_motion ?b)
                            (agent_holds ?b)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b - (either blue_cube_block golfball cube_block))
        (then
          (hold (and (game_start ) (in_motion ?b) ) )
          (hold (agent_holds ?b) )
          (hold (and (> (distance bed ?b) 6) (and (in_motion ?b) (on bed ?b) (in_motion ?b) (on ?b ?b) (< 1 (distance room_center ?b)) (< 7 1) (not (agent_holds ?b) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-increasing-measure throwBallToBin:beachball) (count-once-per-objects throwBallToBin:basketball) (count throwBallToBin:golfball:orange) )
    (total-time)
  )
)
(:scoring
  (* 5 3 )
)
)



(define (game game-id-790) (:domain many-objects-room-v1)
(:setup
  (forall (?c4 ?c - curved_wooden_ramp)
    (or
      (and
        (game-conserved
          (agent_holds ?c4)
        )
        (and
          (and
            (game-conserved
              (and
                (on ?c4 ?c4)
                (agent_holds ?c4)
                (in_motion ?c4)
              )
            )
            (forall (?b3 - game_object)
              (and
                (game-conserved
                  (not
                    (on ?c4 ?c)
                  )
                )
              )
            )
          )
        )
      )
      (exists (?z - front)
        (exists (?c2 - block)
          (game-conserved
            (and
              (in_motion ?c2)
              (in_motion ?c)
            )
          )
        )
      )
      (and
        (and
          (game-optional
            (and
              (agent_holds agent)
              (in_motion ?c)
              (and
                (not
                  (and
                    (not
                      (object_orientation ?c4 upright)
                    )
                    (agent_holds ?c)
                  )
                )
                (in ?c4 ?c)
                (not
                  (in_motion ?c)
                )
              )
            )
          )
          (game-conserved
            (in_motion ?c4)
          )
          (and
            (exists (?d - (either dodgeball wall cube_block))
              (game-conserved
                (in_motion ?d)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?h - building)
        (then
          (once (not (in ?h ?h) ) )
          (once (not (in_motion ?h) ) )
          (once (in_motion desk) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwToRampToBin:beachball) 5 )
)
(:scoring
  (count throwToRampToBin:hexagonal_bin)
)
)



(define (game game-id-791) (:domain many-objects-room-v1)
(:setup
  (exists (?c6 - block)
    (exists (?o - building)
      (exists (?b - hexagonal_bin)
        (game-conserved
          (not
            (not
              (agent_holds ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?h - dodgeball ?d - hexagonal_bin)
        (then
          (hold (and (in_motion ?d) (and (not (exists (?h - dodgeball) (and (on ?d ?d) (in ?d ?h) ) ) ) (adjacent ?d ?d) ) (same_type ?d block) (agent_holds ?d) ) )
          (once (touch bed ?d) )
          (once (in_motion ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 3 )
)
(:scoring
  (external-forall-maximize
    (+ 3 (count-once-per-objects laptopAndBookInPlace:cylindrical_block) (count-total laptopAndBookInPlace:dodgeball) 3 )
  )
)
)



(define (game game-id-792) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?h - cube_block ?h - pillow ?db - hexagonal_bin ?o2 - hexagonal_bin)
      (or
        (game-conserved
          (in_motion ?o2)
        )
        (or
          (game-optional
            (on ?o2 ?o2)
          )
          (exists (?h - dodgeball ?o - (either cube_block ball golfball pyramid_block doggie_bed flat_block alarm_clock))
            (and
              (forall (?r2 - block ?r - hexagonal_bin)
                (exists (?h - block)
                  (or
                    (exists (?l - hexagonal_bin)
                      (exists (?w - teddy_bear ?ob - (either pencil dodgeball dodgeball))
                        (exists (?d - chair)
                          (exists (?b - dodgeball)
                            (game-conserved
                              (and
                                (on rug ?o)
                                (on ?h bed)
                                (in_motion ?d)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (not
                (adjacent room_center bed)
              )
            )
          )
        )
        (game-conserved
          (not
            (in floor ?o2)
          )
        )
      )
    )
    (exists (?b5 - (either desktop blue_cube_block) ?b - hexagonal_bin)
      (game-optional
        (same_color ?b pink)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?w - hexagonal_bin ?r1 - hexagonal_bin)
        (then
          (once (same_type floor ?r1) )
          (hold (agent_holds ?r1) )
          (once (not (or (touch ?r1 ?r1) (not (in ?r1 floor) ) ) ) )
          (once (not (in agent ?r1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 6 )
)
(:scoring
  (+ (count ballThrownHitsAgent:pink) (* (= (+ (count ballThrownHitsAgent:hexagonal_bin:basketball) 4 2 )
        (* 20 (+ (count-measure ballThrownHitsAgent:blue_dodgeball) 3 6 6 )
        )
      )
      (+ 5 (* 5 60 (* (* (count-once-per-external-objects ballThrownHitsAgent:golfball) (external-forall-maximize (count ballThrownHitsAgent:red:purple) ) )
            5
          )
        )
      )
    )
  )
)
)



(define (game game-id-793) (:domain few-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin ?c - drawer)
    (game-conserved
      (and
        (adjacent bed ?c)
        (not
          (agent_crouches )
        )
        (in_motion ?c)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d - game_object)
        (then
          (once (not (above ?d ?d) ) )
          (once (in ?d ?d) )
          (once (not (and (and (in ?d ?d) (= 1 (distance ?d ?d)) (and (or (< (distance_side rug back ?d) (x_position bed)) (adjacent ?d agent) ) (in_motion ?d) ) (not (touch ?d ?d) ) ) (in_motion ?d) ) ) )
        )
      )
    )
    (preference throwToRampToBin
      (exists (?b1 - hexagonal_bin)
        (then
          (once (not (not (and (and (not (= 1 1) ) (on ?b1 ?b1) ) (and (on ?b1 ?b1) (agent_holds ?b1) ) (<= (distance_side green_golfball right ?b1 back) 8) ) ) ) )
          (once (not (not (not (agent_holds ?b1) ) ) ) )
          (once (forall (?b - hexagonal_bin) (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 2 8 )
      (total-time)
    )
    (>= (total-time) (count ballThrownFromRug:green) )
    (>= (count-once throwToRampToBin:yellow_cube_block) (count-once-per-objects ballThrownFromRug:dodgeball) )
  )
)
(:scoring
  (* (* (* (* (count-once-per-objects ballThrownFromRug:dodgeball) 2 )
        5
      )
    )
    (count-once ballThrownFromRug:dodgeball)
    2
  )
)
)



(define (game game-id-794) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?b7 - hexagonal_bin)
    (game-conserved
      (not
        (not
          (not
            (agent_holds ?b7)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectLandsInBin
      (exists (?h - game_object)
        (then
          (once (not (and (and (agent_holds ?h) (and (forall (?l - (either pencil lamp)) (on ?h ?l) ) (adjacent ?h ?h) (and (and (in_motion ?h) (adjacent desk ?h) ) (in_motion ?h) ) ) ) (= (distance_side ?h right ?h left)) ) ) )
          (hold (and (and (in_motion ?h) (not (on ?h ?h) ) (touch ?h ?h) ) (agent_holds agent) ) )
          (once (same_object ?h ?h) )
        )
      )
    )
    (preference baseBlockInTowerAtEnd
      (exists (?p2 - hexagonal_bin)
        (then
          (once (in ?p2 ?p2) )
          (once (not (agent_holds ?p2) ) )
          (once (in_motion ?p2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count baseBlockInTowerAtEnd:red) 8 )
)
(:scoring
  (count-once objectLandsInBin:yellow)
)
)



(define (game game-id-795) (:domain few-objects-room-v1)
(:setup
  (forall (?o5 - dodgeball)
    (game-conserved
      (in_motion ?o5)
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromDeskToTarget
      (exists (?s - (either blue_cube_block desktop))
        (then
          (once (on ?s ?s) )
          (once (touch ?s ?s) )
          (hold-while (and (in ?s ?s) (on ?s agent) ) (and (on ?s ?s) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) 30 )
)
(:scoring
  (<= (< (count dodgeballFromDeskToTarget:blue_dodgeball) (count dodgeballFromDeskToTarget:blue_cube_block) )
    (+ (* (count-once-per-objects dodgeballFromDeskToTarget:yellow_pyramid_block) (count dodgeballFromDeskToTarget:golfball:beachball) )
      1
    )
  )
)
)



(define (game game-id-796) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - block ?l1 - doggie_bed ?b4 - building)
      (and
        (exists (?o - doggie_bed)
          (game-conserved
            (or
              (agent_holds desk)
              (same_color ?o color)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?o2 - hexagonal_bin)
        (then
          (once (not (broken ?o2) ) )
          (hold-while (in_motion ?o2) (same_type ?o2 block) )
          (hold-while (on ?o2 ?o2) (and (in ?o2 ?o2) (and (agent_holds ?o2) (or (on ?o2 ?o2) (in floor ?o2) ) ) ) (not (and (and (exists (?b10 - chair) (in_motion ?b10) ) (on ?o2 ?o2) ) (agent_holds ?o2) ) ) (agent_holds ?o2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-increasing-measure dodgeballFromRugToBin:yellow) 20 )
)
(:scoring
  (count dodgeballFromRugToBin:dodgeball)
)
)



(define (game game-id-797) (:domain few-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (game-conserved
      (not
        (not
          (not
            (agent_holds ?r)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?h - ball ?c - wall)
        (then
          (hold-while (not (and (faces ?c ?c) (agent_holds ?c) ) ) (>= (x_position ?c) 7) (adjacent desk north_wall) )
          (hold (and (and (not (not (on ?c ?c) ) ) (and (in_motion ?c) (and (same_type ?c ?c) (toggled_on ?c) ) ) ) (agent_holds ?c) ) )
          (once (same_color ?c bed) )
        )
      )
    )
    (forall (?o - (either triangle_block basketball desktop) ?d - block)
      (and
        (preference brownObjectMovedToRoomCenter
          (exists (?b - dodgeball)
            (then
              (once (not (agent_holds ?b) ) )
              (once (not (and (and (not (agent_holds ?b) ) (not (not (adjacent desk rug) ) ) ) (< (distance bed ?d) (distance ?b ?b)) ) ) )
              (once (and (in agent ?b) (on ?b ?d) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (external-forall-maximize (count ballThrownFromObjectToBin:beachball:doggie_bed) ) )
    (> (+ (count-shortest brownObjectMovedToRoomCenter:cube_block) (= (= (* 1 10 )
            (count ballThrownFromObjectToBin)
          )
        )
      )
      (count brownObjectMovedToRoomCenter:dodgeball:tall_cylindrical_block)
    )
    (> 5 (- (+ 2 (count brownObjectMovedToRoomCenter:cylindrical_block:red) (count-once-per-objects brownObjectMovedToRoomCenter:hexagonal_bin) )
      )
    )
  )
)
(:scoring
  (count ballThrownFromObjectToBin:basketball)
)
)



(define (game game-id-798) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cylindrical_block)
    (and
      (and
        (and
          (game-optional
            (exists (?l - ball ?o - hexagonal_bin)
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?c6 - hexagonal_bin)
        (then
          (once (and (on ?c6 agent) (>= (distance_side room_center left ?c6) 0) (on ?c6 ?c6) (in ?c6 ?c6) ) )
          (hold-while (in_motion ?c6) (in_motion ?c6) )
          (once-measure (in desk ?c6) (distance ?c6 ?c6) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects throwObjectToBin:golfball:basketball) 30 )
    (total-time)
  )
)
(:scoring
  (- 6 )
)
)



(define (game game-id-799) (:domain few-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-conserved
      (not
        (not
          (not
            (in_motion ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?d - dodgeball ?r - hexagonal_bin)
        (at-end
          (in_motion ?r)
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count-once-per-objects matchingBuildingBuilt:beachball) )
)
(:scoring
  (* (+ (- 10 )
      30
      (external-forall-maximize
        (- 7 )
      )
    )
    (count matchingBuildingBuilt:yellow)
  )
)
)



(define (game game-id-800) (:domain medium-objects-room-v1)
(:setup
  (exists (?d ?b9 - dodgeball)
    (exists (?ob - dodgeball)
      (game-optional
        (agent_holds ?d)
      )
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h - hexagonal_bin)
        (then
          (once (adjacent room_center ?h) )
          (once (on blue ?h) )
          (hold (not (not (or (agent_holds ?h) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (= (count-total golfballInBinFromPillow:pink) 9 )
    )
    (>= (total-score) (count golfballInBinFromPillow:dodgeball) )
    (>= (count golfballInBinFromPillow:pink:orange) 3 )
  )
)
(:scoring
  (count golfballInBinFromPillow:golfball:pink_dodgeball)
)
)



(define (game game-id-801) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - game_object ?c3 - beachball)
    (exists (?c4 - drawer)
      (and
        (and
          (exists (?h - hexagonal_bin)
            (forall (?h - hexagonal_bin ?b - dodgeball)
              (forall (?c - shelf)
                (exists (?b - ball ?b10 - game_object ?h - yellow_cube_block)
                  (game-conserved
                    (in ?c4 ?b)
                  )
                )
              )
            )
          )
          (forall (?b1 - building)
            (not
              (and
                (forall (?b1 - game_object)
                  (exists (?b ?d ?h ?b ?o ?w ?h ?p ?r2 ?t - game_object)
                    (exists (?l2 ?h - doggie_bed ?g - beachball)
                      (game-optional
                        (on ?o ?b1)
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (in_motion ?b1)
                    (agent_holds ?b1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object ?c3 - pillow)
      (and
        (preference throwBallFromOtherBallToBin
          (exists (?b3 - block ?b3 ?b10 ?h - hexagonal_bin)
            (then
              (hold (and (exists (?ob - hexagonal_bin) (not (and (not (on ?h brown) ) (in_motion ?ob) ) ) ) (not (and (in_motion ?h) (and (and (and (on ?h ?b10) (in_motion ?b10) (in_motion agent) ) (agent_holds ?h) (< (distance ?h ?b3) 1) (between ?b3 ?b3 ?h) ) (and (and (and (not (agent_holds ?b10) ) (broken agent) ) (not (and (agent_holds ?c3) ) ) (and (in brown ?b3) (on ?b10 ?c3) ) ) (< 1 (distance bed agent)) ) ) ) ) ) )
              (hold (same_color ?b3 yellow) )
              (hold (= 1 (building_size ?c3) (distance ?b3 agent)) )
            )
          )
        )
      )
    )
    (preference throwBallToBinOffObject
      (exists (?h ?c1 - ball)
        (then
          (once (not (= (distance ?c1 ?h)) ) )
          (hold (and (adjacent south_wall ?h) (agent_holds ?h) (in ?h ?h) (agent_holds ?c1) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (count-longest throwBallToBinOffObject:blue_dodgeball) 50 )
      (total-time)
    )
  )
)
(:scoring
  (+ 30 10 )
)
)



(define (game game-id-802) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin ?h - block)
    (forall (?l1 - (either beachball pyramid_block cylindrical_block) ?t2 - building)
      (not
        (game-conserved
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b1 - chair)
      (and
        (preference nonBlockPlacedInBuilding
          (then
            (hold (and (not (agent_holds ?b1) ) (> (distance door ?b1) 1) ) )
            (hold (agent_holds ?b1) )
            (once (same_object ?b1 top_shelf) )
          )
        )
        (preference ballThrownFromBehindBlock
          (exists (?o ?g - cube_block)
            (then
              (hold (agent_holds ?o) )
              (once (not (>= (distance room_center agent) (distance ?b1 ?g)) ) )
              (once (in ?b1 ?o) )
            )
          )
        )
      )
    )
    (preference gameBlockFound
      (exists (?o - tall_cylindrical_block ?o - teddy_bear)
        (then
          (hold (not (not (game_over ) ) ) )
          (once (in_motion ?o) )
          (hold-while (adjacent ?o ?o) (not (agent_holds ?o) ) (in_motion ?o) (and (adjacent ?o ?o) (and (on ?o ?o) (not (touch agent ?o) ) ) ) )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?t1 ?l ?o ?b4 ?b ?h ?d2 ?d1 ?o2 ?h - curved_wooden_ramp ?g - tall_cylindrical_block ?db ?h ?b9 - building ?l1 - cube_block ?d - curved_wooden_ramp)
        (then
          (once (< 1 5) )
          (once (agent_holds ?d) )
          (once (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) (total-score) )
    )
    (> (* 30 (count-same-positions gameBlockFound:doggie_bed) )
      10
    )
  )
)
(:scoring
  (* (* 4 6 )
    (count nonBlockPlacedInBuilding:yellow:cube_block)
  )
)
)



(define (game game-id-803) (:domain many-objects-room-v1)
(:setup
  (forall (?b - block)
    (and
      (game-optional
        (not
          (in_motion ?b)
        )
      )
      (exists (?c3 - game_object)
        (game-optional
          (adjacent room_center agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?l - hexagonal_bin)
        (then
          (once (not (not (agent_holds pink) ) ) )
          (hold (agent_holds ?l) )
          (hold (< (distance west_wall ?l) (distance desk floor)) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once golfballLandsInBinThroughRamp:pink) (* 4 20 )
  )
)
(:scoring
  (count golfballLandsInBinThroughRamp:basketball:golfball)
)
)



(define (game game-id-804) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (exists (?t - dodgeball)
      (forall (?p - game_object ?d - dodgeball)
        (and
          (not
            (and
              (game-optional
                (broken ?d)
              )
              (game-optional
                (not
                  (in_motion ?t)
                )
              )
            )
          )
          (and
            (and
              (not
                (and
                  (game-conserved
                    (and
                      (agent_holds ?d)
                      (and
                        (and
                          (on ?h ?h)
                          (not
                            (not
                              (> (distance door ?h) 1)
                            )
                          )
                        )
                        (and
                          (equal_x_position desk ?t)
                          (between ?h ?h ?d)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (and
                      (not
                        (toggled_on ?h)
                      )
                      (faces desk ?d)
                    )
                  )
                )
              )
            )
            (game-conserved
              (in ?d ?t)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?h - golfball)
        (then
          (once (agent_holds ?h) )
          (hold (agent_holds ?h) )
          (once (agent_holds ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (total-score) 7 )
      (>= (count ballDroppedInBin:dodgeball) (* (* 5 (* 5 (count-once-per-objects ballDroppedInBin:dodgeball:cube_block) )
          )
          (count ballDroppedInBin:basketball)
          16
        )
      )
    )
    (>= (total-score) (+ (count ballDroppedInBin:pink_dodgeball) 6 )
    )
  )
)
(:scoring
  (count-overlapping ballDroppedInBin:book)
)
)



(define (game game-id-805) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - cube_block)
    (and
      (exists (?h - triangular_ramp ?p - hexagonal_bin)
        (and
          (exists (?d - desk_shelf ?w1 - hexagonal_bin)
            (exists (?p3 - curved_wooden_ramp ?g - dodgeball)
              (exists (?b - doggie_bed)
                (game-conserved
                  (on ?b ?c5)
                )
              )
            )
          )
        )
      )
      (and
        (game-optional
          (and
            (< (distance room_center ?c5) (building_size ?c5))
            (touch ?c5 ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?r1 - block)
        (at-end
          (not
            (not
              (and
                (in_motion top_shelf)
                (and
                  (in ?r1 ?r1)
                  (and
                    (not
                      (and
                        (agent_holds ?r1)
                        (same_color ?r1 ?r1)
                      )
                    )
                    (adjacent door ?r1)
                  )
                  (adjacent room_center ?r1)
                  (on ?r1 ?r1)
                )
                (in ?r1 ?r1)
              )
            )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?w2 - cube_block ?p - ball)
        (then
          (once (in_motion ?p) )
          (once (agent_crouches ) )
          (once (on ?p ?p) )
          (hold (toggled_on ?p) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 20 (count pinkObjectMovedToRoomCenter:basketball) 3 (+ (count-once pinkObjectMovedToRoomCenter:blue_cube_block) 3 (* 3 (count blocksInPlace:orange) )
      )
      2
      2
    )
    (count-once-per-external-objects pinkObjectMovedToRoomCenter:red)
  )
)
(:scoring
  (count-overlapping blocksInPlace:tall_cylindrical_block)
)
)



(define (game game-id-806) (:domain medium-objects-room-v1)
(:setup
  (forall (?s - game_object)
    (and
      (and
        (exists (?o - red_dodgeball)
          (game-conserved
            (on agent ?s)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?bl - hexagonal_bin)
      (and
        (preference golfballLandsInBinThroughRamp
          (exists (?o - red_pyramid_block ?h - hexagonal_bin)
            (then
              (once (in bed ?bl) )
              (once (exists (?p - dodgeball ?c4 ?r2 - hexagonal_bin) (on agent ?bl) ) )
              (once (on ?bl bed) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (* 4 (count-once-per-objects golfballLandsInBinThroughRamp:dodgeball) 6 )
    5
  )
)
(:scoring
  (= (* (count-once golfballLandsInBinThroughRamp:pink) 5 )
    (* 5 1 )
  )
)
)



(define (game game-id-807) (:domain few-objects-room-v1)
(:setup
  (exists (?tb - building)
    (exists (?db ?o - curved_wooden_ramp)
      (exists (?b - cylindrical_block)
        (game-conserved
          (>= 1 (distance ?b ?tb))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference pillowMovedToRoomCenter
      (exists (?h - hexagonal_bin)
        (then
          (hold (agent_holds ?h) )
          (hold (in_motion ?h) )
          (hold-while (in_motion ?h) (on agent ?h) (touch ?h ?h) )
        )
      )
    )
    (preference throwAttemptKnocksBlock
      (exists (?c - hexagonal_bin)
        (then
          (once (and (adjacent_side bed left ?c) (agent_holds ?c) ) )
          (hold (agent_holds ?c) )
          (hold-while (in_motion ?c) (not (agent_holds ?c) ) (in_motion ?c) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 180 )
)
(:scoring
  (* 7 (* (count throwAttemptKnocksBlock:purple) (count-once-per-objects pillowMovedToRoomCenter:yellow) )
  )
)
)



(define (game game-id-808) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - shelf ?c - doggie_bed ?d - hexagonal_bin)
    (exists (?d - flat_block ?r - cube_block)
      (exists (?b - doggie_bed)
        (forall (?t1 - triangular_ramp)
          (and
            (game-optional
              (rug_color_under ?d yellow)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c6 - ball)
        (then
          (once (in_motion ?c6) )
          (once (in ?c6 ?c6) )
          (once (or (not (or (exists (?p1 - hexagonal_bin ?d - chair) (> 1 3) ) (in ?c6 ?c6) ) ) (agent_holds pink) ) )
          (once (and (in_motion ?c6) (on ?c6 ?c6) (and (between agent bed ?c6) (in_motion ?c6) ) ) )
          (once (and (agent_holds ?c6) (agent_holds ?c6) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions throwAttempt:top_drawer) 180 )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-809) (:domain many-objects-room-v1)
(:setup
  (exists (?d - ball)
    (game-conserved
      (agent_holds ?d)
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?b6 - golfball ?c - wall)
        (then
          (hold (exists (?c - dodgeball) (exists (?b - (either tall_cylindrical_block dodgeball yellow_cube_block)) (agent_holds ?b) ) ) )
          (once (not (on ?c ?c) ) )
          (once (not (forall (?c2 - building ?o1 - (either pencil doggie_bed)) (agent_holds ?o1) ) ) )
        )
      )
    )
    (forall (?d - (either cube_block))
      (and
        (preference golfballInBinFromPillow
          (then
            (once (forall (?w - (either main_light_switch cube_block laptop cylindrical_block)) (not (not (between ?d ?d ?d) ) ) ) )
            (hold (not (not (not (same_color ?d ?d) ) ) ) )
            (hold (between agent ?d ?d) )
            (once (agent_holds ?d) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 9 (total-time) )
)
(:scoring
  (count-same-positions throwToBinFromDistance:blue_cube_block)
)
)



(define (game game-id-810) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - golfball)
    (and
      (forall (?b - dodgeball)
        (forall (?g - cube_block)
          (forall (?h - (either cylindrical_block pillow) ?c5 - (either laptop desktop cube_block game_object hexagonal_bin cellphone doggie_bed) ?b ?b7 - dodgeball)
            (and
              (and
                (game-conserved
                  (< (distance ?b ?b7) (distance desk agent))
                )
                (forall (?db - curved_wooden_ramp ?b - hexagonal_bin ?d - beachball)
                  (exists (?p2 - (either dodgeball blue_cube_block pyramid_block))
                    (exists (?r - ball)
                      (exists (?h - hexagonal_bin)
                        (game-conserved
                          (not
                            (same_color ?h bed)
                          )
                        )
                      )
                    )
                  )
                )
                (game-conserved
                  (and
                    (in ?b7 ?d)
                    (in_motion ?b)
                  )
                )
                (forall (?l - teddy_bear)
                  (game-conserved
                    (in_motion agent)
                  )
                )
                (forall (?d - dodgeball ?h - wall)
                  (forall (?d - cube_block)
                    (forall (?b9 - (either dodgeball yellow_cube_block flat_block laptop teddy_bear yellow_cube_block tall_cylindrical_block) ?d - chair)
                      (exists (?b7 - (either golfball cd))
                        (forall (?b - dodgeball)
                          (forall (?h - hexagonal_bin ?b8 - (either blue_cube_block pencil))
                            (game-optional
                              (agent_holds brown)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (game-conserved
        (and
          (on ?d ?d)
          (on ?d ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBed
      (exists (?ob - (either tall_cylindrical_block pyramid_block))
        (then
          (hold (touch ?ob ?ob) )
          (once (agent_holds ?ob) )
          (once (in_motion ?ob) )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?l2 - game_object)
        (at-end
          (is_setup_object ?l2)
        )
      )
    )
  )
)
(:terminal
  (>= (* (count dodgeballFromBlockToBin:hexagonal_bin) (count throwBallToDoggieBed:golfball:top_drawer) )
    (count-once-per-objects throwBallToDoggieBed:golfball)
  )
)
(:scoring
  (- (count dodgeballFromBlockToBin:alarm_clock:blue_dodgeball) )
)
)



(define (game game-id-811) (:domain few-objects-room-v1)
(:setup
  (forall (?w2 - block)
    (and
      (game-conserved
        (in agent ?w2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?t - dodgeball)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (at-end
            (adjacent_side ?t front_left_corner ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects dodgeballBouncesOnceToDoggieBed:blue_cube_block:white) (total-score) )
)
(:scoring
  (* (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball:dodgeball) 15 )
)
)



(define (game game-id-812) (:domain many-objects-room-v1)
(:setup
  (exists (?d - (either cylindrical_block hexagonal_bin) ?h - (either golfball cd))
    (and
      (forall (?c - dodgeball)
        (and
          (game-optional
            (adjacent ?c rug)
          )
          (exists (?y - sideways ?b - curved_wooden_ramp ?b3 ?b - pillow)
            (forall (?o2 - blue_pyramid_block)
              (forall (?l - hexagonal_bin)
                (and
                  (or
                    (and
                      (forall (?w2 - (either bridge_block hexagonal_bin chair))
                        (and
                          (exists (?c1 - cube_block)
                            (and
                              (game-conserved
                                (>= (distance ?c ?c1) 2)
                              )
                            )
                          )
                        )
                      )
                      (and
                        (game-optional
                          (in_motion ?l)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (game-optional
            (equal_x_position ?c ?c)
          )
          (exists (?p3 - tan_cube_block ?d - (either cd cube_block dodgeball))
            (and
              (and
                (game-optional
                  (< 1 (distance bed ?c))
                )
              )
            )
          )
          (exists (?o - cube_block)
            (forall (?b - shelf)
              (game-optional
                (in_motion ?h)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?c2 - game_object ?b - (either golfball desktop))
        (then
          (hold-while (in_motion ?b) (not (not (or (not (not (and (in_motion agent) (forall (?c1 - (either cube_block chair)) (not (in_motion ?b) ) ) ) ) ) (agent_holds ?b) (and (object_orientation ?b sideways) (not (same_color ?b ?b) ) ) ) ) ) (agent_holds ?b) )
          (once (on west_wall ?b) )
          (once (and (not (in_motion ?b) ) (not (in_motion ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (<= 1 (< 10 (count greenObjectMovedToRoomCenter:golfball:blue_pyramid_block) )
    )
    (>= (* (+ (count-once-per-objects greenObjectMovedToRoomCenter:pink) )
        5
      )
      (* (count-once-per-objects greenObjectMovedToRoomCenter:golfball:golfball) 5 )
    )
  )
)
(:scoring
  (+ (count greenObjectMovedToRoomCenter:basketball) (count greenObjectMovedToRoomCenter:pink_dodgeball) )
)
)



(define (game game-id-813) (:domain few-objects-room-v1)
(:setup
  (forall (?o - yellow_cube_block ?d - (either pyramid_block dodgeball) ?r - ball)
    (and
      (game-conserved
        (not
          (adjacent_side room_center front ?r)
        )
      )
      (and
        (forall (?b - hexagonal_bin)
          (and
            (exists (?b10 - ball)
              (and
                (and
                  (and
                    (forall (?b - hexagonal_bin ?w1 - dodgeball ?h - wall ?b2 - hexagonal_bin)
                      (and
                        (exists (?h - (either cylindrical_block dodgeball dodgeball))
                          (exists (?w1 - (either key_chain cd))
                            (game-conserved
                              (not
                                (and
                                  (and
                                    (in_motion ?b)
                                    (adjacent ?b ?w1)
                                  )
                                  (on ?b10 ?b)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballNeverThrown
      (exists (?b6 - desktop ?x - pink)
        (then
          (once (not (in_motion ?b6) ) )
          (once (not (in_motion ?b6) ) )
          (once (in_motion ?b6) )
        )
      )
    )
  )
)
(:terminal
  (> 4 (count-once-per-objects ballNeverThrown:yellow:blue_dodgeball) )
)
(:scoring
  (* (+ (+ 2 5 10 )
      3
    )
    (* 10 8 )
  )
)
)



(define (game game-id-814) (:domain medium-objects-room-v1)
(:setup
  (exists (?w1 - (either golfball pillow))
    (and
      (exists (?r - (either cellphone cellphone) ?d - hexagonal_bin)
        (or
          (forall (?p1 - cube_block)
            (forall (?o - ball)
              (not
                (and
                  (game-conserved
                    (and
                      (same_type agent pillow)
                      (agent_holds ?d)
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (not
              (> (building_size ?w1) 5)
            )
          )
          (and
            (and
              (and
                (and
                  (game-conserved
                    (agent_holds ?w1)
                  )
                  (game-conserved
                    (agent_holds agent)
                  )
                  (exists (?x - gray)
                    (and
                      (game-conserved
                        (exists (?p ?d ?p1 ?w1 ?o2 - dodgeball)
                          (agent_holds rug)
                        )
                      )
                    )
                  )
                )
              )
              (game-optional
                (and
                  (and
                    (broken ?w1)
                    (adjacent_side door front_left_corner ?d)
                  )
                  (on ?w1 ?d)
                )
              )
              (and
                (game-optional
                  (and
                    (not
                      (and
                        (and
                          (not
                            (in ?d ?d)
                          )
                          (in_motion ?w1)
                        )
                        (not
                          (same_color ?w1 ?d)
                        )
                      )
                    )
                    (agent_holds rug)
                    (in_motion ?d)
                  )
                )
                (game-optional
                  (and
                    (in ?w1 ?d)
                    (or
                      (agent_holds ?d)
                      (not
                        (and
                          (not
                            (agent_holds floor)
                          )
                          (adjacent_side room_center front ?w1 right)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (and
                    (in_motion ?d)
                    (same_type ?d pillow)
                    (agent_holds rug)
                  )
                )
              )
              (forall (?d ?t2 ?o - wall ?c - cube_block)
                (game-conserved
                  (not
                    (same_object ?w1 ?w1)
                  )
                )
              )
              (exists (?s - dodgeball)
                (and
                  (game-conserved
                    (in_motion ?w1)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - game_object ?r - hexagonal_bin)
      (and
        (preference dodgeballsInPlace
          (exists (?c - triangular_ramp)
            (then
              (once (is_setup_object ?c) )
              (hold-while (game_over ) (= 1 (distance rug ?r) 1) )
              (hold (in_motion ?c) )
            )
          )
        )
      )
    )
    (preference dodgeballFromBlockToBin
      (exists (?t1 - teddy_bear ?h - dodgeball)
        (at-end
          (and
            (exists (?o5 - curved_wooden_ramp)
              (and
                (not
                  (and
                    (agent_holds ?o5)
                    (adjacent_side ?o5 front ?h)
                  )
                )
                (not
                  (adjacent_side door front ?o5)
                )
              )
            )
            (agent_holds agent)
          )
        )
      )
    )
    (preference ballThrownThroughRampToBin
      (exists (?b - hexagonal_bin ?f - block ?db - bridge_block)
        (then
          (once (and (and (adjacent_side door back ?db) (agent_holds ?db) ) (and (in ?db ?db) (not (not (agent_holds ?db) ) ) ) ) )
          (once (above ?db ?db) )
          (hold (not (and (on ?db ?db) (agent_holds ?db) ) ) )
          (hold-while (agent_holds west_wall) (adjacent ?db ?db) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 30 )
)
(:scoring
  (external-forall-maximize
    (count dodgeballFromBlockToBin:triangle_block)
  )
)
)



(define (game game-id-815) (:domain few-objects-room-v1)
(:setup
  (forall (?c4 - (either cylindrical_block chair) ?d ?c - (either yellow_cube_block book cellphone dodgeball))
    (game-conserved
      (not
        (exists (?h - teddy_bear ?s - game_object ?x - color)
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference castleBuilt
      (exists (?p1 - (either pencil alarm_clock top_drawer))
        (then
          (hold (and (and (faces ?p1 ?p1) (and (agent_holds ?p1) (not (in_motion ?p1) ) ) (equal_z_position door ?p1) ) (in_motion ?p1) ) )
          (once (not (and (in ?p1 ?p1) (broken ?p1) ) ) )
          (once (and (in_motion ?p1) (in ?p1 ?p1) (adjacent desk ?p1) ) )
        )
      )
    )
  )
)
(:terminal
  (= 10 300 )
)
(:scoring
  (count-once-per-objects castleBuilt:orange)
)
)



(define (game game-id-816) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (not
        (= 1 (distance bed agent))
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?b5 - bridge_block)
            (then
              (once (in_motion ?b5) )
              (once (not (not (and (agent_holds ?b5) (in_motion agent) ) ) ) )
              (once (and (agent_holds ?b5) (not (is_setup_object ?b) ) ) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b6 - dodgeball)
        (then
          (hold-while (and (on ?b6 ?b6) (on ?b6 ?b6) (not (adjacent room_center ?b6) ) ) (agent_holds ?b6) )
          (once (or (not (exists (?c - triangular_ramp ?h - blinds) (adjacent desk ?b6) ) ) (and (in floor ?b6) ) ) )
          (once (in_motion ?b6) )
        )
      )
    )
    (preference redDodgeballThrownToBin
      (at-end
        (exists (?l3 - game_object ?r - dodgeball)
          (and
            (in ?r ?r)
            (adjacent_side desk back ?r)
            (exists (?w2 - cube_block ?r1 - teddy_bear)
              (not
                (and
                  (= (distance room_center ?r) 1 (distance bed agent) (distance desk ?r))
                  (on ?r1 agent)
                  (agent_holds ?r)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 40 (count-once-per-objects dodgeballBouncesOnceToDoggieBed:dodgeball) )
)
(:scoring
  (count itemsTurnedOff:rug)
)
)



(define (game game-id-817) (:domain many-objects-room-v1)
(:setup
  (not
    (exists (?h - cylindrical_block)
      (game-optional
        (and
          (in_motion ?h)
          (and
            (in_motion ?h)
            (>= 0.5 (distance desk ?h))
            (adjacent_side door front_left_corner ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?b - block)
        (at-end
          (agent_holds ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 10 1 )
)
(:scoring
  (- (count cubeBlockThrowAttempt:beachball) )
)
)



(define (game game-id-818) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d2 - dodgeball)
      (and
        (game-conserved
          (in ?d2 ?d2)
        )
        (game-conserved
          (not
            (not
              (agent_holds ?d2)
            )
          )
        )
      )
    )
    (exists (?w2 - pillow)
      (and
        (exists (?w1 ?l4 - block)
          (game-conserved
            (agent_holds ?w2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?t - (either pillow alarm_clock) ?c4 ?c ?c ?b1 - cube_block)
        (then
          (once (>= 1 (distance ?b1 ?c4)) )
          (hold (not (faces ?c4 ?c4) ) )
          (hold (and (in agent agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (> (count thrownBallHitsBlock:wall:dodgeball) 2 )
      (and
        (and
          (>= 10 (* (* (* (* 3 (count-once-per-objects thrownBallHitsBlock:red) (count thrownBallHitsBlock:basketball:beachball) 10 (count-once thrownBallHitsBlock) (count-once-per-objects thrownBallHitsBlock:golfball) )
                  (- (/ (count-once-per-objects thrownBallHitsBlock:green) (* (* (count thrownBallHitsBlock:cube_block:pink_dodgeball) (* (- (count-overlapping thrownBallHitsBlock:basketball) )
                            100
                          )
                        )
                        10
                      )
                    )
                  )
                )
                2
                (count thrownBallHitsBlock:rug:green)
                5
              )
              (* (* (* (count-once thrownBallHitsBlock:green:basketball) 5 )
                  (+ (* 300 (count thrownBallHitsBlock:beachball:top_drawer) )
                    3
                  )
                )
                (external-forall-maximize
                  (/
                    (count thrownBallHitsBlock:pink:golfball)
                    (count thrownBallHitsBlock:basketball)
                  )
                )
                2
              )
              3
            )
          )
          (>= 1 8 )
        )
        (> (total-score) (count thrownBallHitsBlock:red) )
        (not
          (or
            (>= 3 6 )
            (and
              (or
                (> (count-once-per-external-objects thrownBallHitsBlock:basketball) (total-score) )
                (= (total-time) (total-score) )
              )
              (and
                (>= 3 7 )
              )
            )
          )
        )
      )
    )
  )
)
(:scoring
  (<= 10 (* (* 10 (count-once thrownBallHitsBlock:basketball) )
      3
      (count-once-per-objects thrownBallHitsBlock:doggie_bed:beachball)
    )
  )
)
)



(define (game game-id-819) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - hexagonal_bin ?s - hexagonal_bin ?c6 - triangular_ramp ?c - triangular_ramp)
      (game-conserved
        (not
          (and
            (and
              (or
                (or
                  (and
                    (not
                      (and
                        (not
                          (agent_holds ?c)
                        )
                        (agent_holds desk)
                        (not
                          (in_motion ?c)
                        )
                      )
                    )
                    (in_motion ?c)
                  )
                  (< (distance desk ?c) (distance ?c ?c))
                )
              )
              (same_color ?c ?c)
            )
            (adjacent agent ?c)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?bl - doggie_bed ?db - curved_wooden_ramp)
        (at-end
          (not
            (and
              (in ?db ?db)
              (and
                (not
                  (< 4 1)
                )
                (in_motion ?db)
                (agent_holds ?db)
              )
            )
          )
        )
      )
    )
    (preference throwFromEdgeOfRug
      (exists (?c - book ?h - hexagonal_bin ?f - hexagonal_bin)
        (then
          (once (in ?f ?f) )
          (once (agent_holds ?f) )
          (once (not (not (agent_holds ?f) ) ) )
        )
      )
    )
    (preference throwTeddyOntoPillow
      (exists (?c - cube_block ?d - curved_wooden_ramp)
        (then
          (once (touch desk rug) )
          (once (and (agent_holds ?d) (in ?d ?d) ) )
          (once (not (on ?d ?d) ) )
          (hold (not (in_motion rug) ) )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?o4 - dodgeball)
        (then
          (hold (same_object ?o4 ?o4) )
          (once (and (agent_holds ?o4) (toggled_on ?o4) ) )
          (once (< (distance_side room_center right rug) (distance_side desk left ?o4)) )
          (once (exists (?h - teddy_bear ?b8 - ball) (in_motion agent) ) )
          (hold (not (= 1 (distance door ?o4)) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (* (count-overlapping dodgeballThrownToBin:purple) 0 4 (count itemsTurnedOff:hexagonal_bin) (* 10 (- (count throwTeddyOntoPillow:pink:red) 3 ) )
        (* (+ (count throwTeddyOntoPillow:dodgeball) 30 )
          (* (count-once-per-objects throwTeddyOntoPillow:beachball) 3 )
          (* (count-once-per-objects throwFromEdgeOfRug:green) 5 60 (count-once-per-objects throwTeddyOntoPillow) )
          10
          10
          (* 8 10 )
        )
      )
      (total-score)
    )
    (>= (count-once-per-objects itemsTurnedOff:golfball:book) (count throwFromEdgeOfRug:pink_dodgeball) )
  )
)
(:scoring
  (count throwFromEdgeOfRug:dodgeball:green)
)
)



(define (game game-id-820) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - game_object)
    (game-conserved
      (and
        (and
          (or
            (and
              (rug_color_under ?t green)
              (and
                (in ?t ?t)
                (and
                  (agent_holds ?t)
                  (and
                    (on ?t ?t)
                    (and
                      (adjacent bed ?t)
                      (not
                        (not
                          (in_motion agent)
                        )
                      )
                    )
                    (agent_holds agent)
                  )
                )
              )
            )
            (in ?t ?t)
          )
          (open ?t)
        )
        (and
          (on agent ?t)
          (in_motion agent)
        )
        (in ?t ?t)
        (not
          (not
            (in ?t ?t)
          )
        )
        (not
          (above top_shelf ?t)
        )
        (in_motion ?t)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - doggie_bed ?p2 - cube_block)
        (then
          (hold (in ?p2 ?p2) )
          (once (not (exists (?b6 - wall ?b2 ?c6 ?l ?t ?o5 ?t - red_pyramid_block) (< 2 (distance_side bed left ?p2)) ) ) )
          (once (and (not (agent_holds ?p2) ) (exists (?d - dodgeball) (> (distance desk ?p2) 1) ) (not (not (agent_holds ?p2) ) ) (on rug ?p2) (and (and (agent_holds ?p2) (and (in desk ?p2) (and (in_motion ?p2) (agent_holds ?p2) ) ) ) (not (on ?p2 ?p2) ) ) (not (not (agent_holds ?p2) ) ) (not (< (distance desk ?p2) 1) ) ) )
        )
      )
    )
    (forall (?s - cube_block ?c5 ?b1 ?s ?h - hexagonal_bin)
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?d - hexagonal_bin)
            (then
              (once (and (and (not (on ?h ?h) ) (on ?d ?b1) ) ) )
              (once (and (in_motion ?h) (not (> 1 8) ) ) )
              (once (not (and (forall (?h - ball ?b5 - hexagonal_bin) (adjacent room_center ?s) ) (on ?c5 ?h) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (total-time) (* 3 (count throwAttempt:green) (count-once-per-objects throwAttempt:dodgeball:beachball) )
    )
    (>= (count throwAttempt:alarm_clock) (total-score) )
  )
)
(:scoring
  (count-once-per-objects throwAttempt:dodgeball:beachball)
)
)



(define (game game-id-821) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - triangular_ramp ?b8 - shelf ?o1 - hexagonal_bin)
    (exists (?b - chair)
      (exists (?p - hexagonal_bin ?b - dodgeball ?o - hexagonal_bin)
        (game-optional
          (in ?o1 ?b)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference greenObjectMovedToRoomCenter
      (exists (?bl - pillow)
        (at-end
          (not
            (< (distance_side room_center front floor) 1)
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (count-measure greenObjectMovedToRoomCenter:yellow_cube_block:bed) (* 3 0.5 )
    )
    3
  )
)
(:scoring
  (* (external-forall-maximize (= 16 (* 3 (+ 100 5 )
        )
      )
    )
    5
  )
)
)



(define (game game-id-822) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin ?b - red_pyramid_block ?s - shelf)
    (and
      (exists (?c1 - doggie_bed)
        (exists (?g - cube_block ?r ?b - hexagonal_bin)
          (exists (?b6 - game_object)
            (and
              (game-optional
                (same_type ?r ?r)
              )
            )
          )
        )
      )
      (game-conserved
        (< 6 8)
      )
      (game-conserved
        (and
          (not
            (on ?s ?s)
          )
          (< (distance room_center ?s) 1)
          (and
            (in_motion ?s)
            (not
              (on ?s ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?c - triangular_ramp ?d - game_object)
        (then
          (once (agent_holds ?d) )
          (hold-while (and (not (in ?d ?d) ) (in_motion ?d) ) (and (exists (?x - color) (in_motion ?d) ) (and (adjacent ?d ?d) (and (in_motion bed) (and (agent_holds ?d) (in ?d ?d) ) ) ) ) )
          (once (not (not (touch ?d agent) ) ) )
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?b - (either triangle_block dodgeball))
        (at-end
          (in_motion ?b)
        )
      )
    )
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?h - curved_wooden_ramp ?d - wall)
        (then
          (once (> (distance desk ?d) (distance desk ?d)) )
          (hold (in_motion agent) )
          (once (in ?d bed) )
        )
      )
    )
  )
)
(:terminal
  (> 3 0 )
)
(:scoring
  (count-once-per-objects ballThrownThroughRampAndBlocksToBin:golfball)
)
)



(define (game game-id-823) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (forall (?t2 - block ?b - teddy_bear)
        (game-conserved
          (< 7 (distance bed ?b))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (at-end
        (not
          (exists (?h - bridge_block ?w1 - ball)
            (and
              (not
                (exists (?l - (either alarm_clock desktop lamp))
                  (not
                    (broken ?w1)
                  )
                )
              )
              (touch ?w1 ?w1)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (+ 10 (count ballThrownToWallToAgent:yellow) (+ 5 4 )
        (count-overlapping ballThrownToWallToAgent:hexagonal_bin)
        (* (* (count ballThrownToWallToAgent:basketball) (count ballThrownToWallToAgent:green:green) )
          (count ballThrownToWallToAgent:blue_cube_block)
        )
        (count-once-per-objects ballThrownToWallToAgent:green:yellow_cube_block)
      )
      (total-time)
    )
    (>= (count ballThrownToWallToAgent:basketball) (* 50 10 )
    )
    (or
      (>= (count ballThrownToWallToAgent:basketball) 40 )
      (>= (* (* (+ (count ballThrownToWallToAgent:basketball) 2 )
            (* 5 5 )
          )
          5
        )
        4
      )
      (> 3 (count ballThrownToWallToAgent:dodgeball) )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToWallToAgent:dodgeball)
)
)



(define (game game-id-824) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - ball)
    (and
      (exists (?c5 - ball ?b - beachball ?o - game_object)
        (exists (?c4 - doggie_bed)
          (game-conserved
            (touch ?o ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownMissesEverything
      (exists (?c - pyramid_block ?c1 - doggie_bed)
        (then
          (hold (on ?c1 ?c1) )
          (once (and (in ?c1 ?c1) (in ?c1 ?c1) ) )
          (once (>= (distance desk ?c1) (distance_side ?c1 back agent)) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 4 (count ballThrownMissesEverything:golfball) )
      (* (* (* 3 2 3 (+ (count-once-per-objects ballThrownMissesEverything:red) )
            (count-once ballThrownMissesEverything:book)
            3
          )
          (count ballThrownMissesEverything:red)
        )
        3
      )
    )
    (>= (count-once-per-objects ballThrownMissesEverything:alarm_clock:red:tall_cylindrical_block) (* 7 (count-once-per-objects ballThrownMissesEverything:beachball:beachball) (count-once-per-objects ballThrownMissesEverything:pink_dodgeball:alarm_clock) )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownMissesEverything:dodgeball)
)
)



(define (game game-id-825) (:domain medium-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (exists (?b - (either blue_cube_block dodgeball))
      (game-optional
        (and
          (on ?b ?h)
          (adjacent green_golfball west_wall)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?h - block)
        (then
          (hold (in_motion ?h) )
          (once (or (not (is_setup_object ?h) ) (not (touch agent ?h) ) ) )
          (once (on ?h ?h) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?d - dodgeball)
        (then
          (once (not (and (agent_holds ?d) (agent_holds ?d) ) ) )
          (hold-while (and (agent_holds top_shelf) (in_motion ?d) ) (and (not (agent_holds ?d) ) (in_motion ?d) ) (object_orientation ?d diagonal) (in_motion ?d) )
          (once (adjacent desk ?d) )
        )
      )
    )
  )
)
(:terminal
  (= (+ (count-once throwObjectToBin:red:alarm_clock) 8 )
    (* (count-longest throwBallToBin:dodgeball) (/ (- (count throwObjectToBin:blue_dodgeball:cube_block) )
        6
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwBallToBin:pyramid_block)
)
)



(define (game game-id-826) (:domain few-objects-room-v1)
(:setup
  (forall (?c - hexagonal_bin)
    (game-conserved
      (agent_holds desk)
    )
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?x ?x0 - color ?b2 - (either tall_cylindrical_block pencil))
        (then
          (once (not (not (and (agent_holds ?b2) (in ?b2 ?b2) ) ) ) )
          (once (in_motion ?b2) )
          (hold-while (adjacent_side bed left rug) (agent_holds ?b2) )
        )
      )
    )
    (preference gameObjectToBin
      (exists (?o ?d - game_object)
        (at-end
          (and
            (agent_holds agent)
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (- 5 )
    (+ (external-forall-maximize (count gameObjectToBin:beachball:hexagonal_bin:golfball) ) (count-once gameObjectToBin:pink) )
  )
)
(:scoring
  (+ (count-once-per-objects matchingBuildingBuilt:red) 10 (* (* (count matchingBuildingBuilt:dodgeball) 5 (* (count gameObjectToBin:golfball) (count-once-per-objects matchingBuildingBuilt:beachball) )
      )
      (* 2 (<= (count-once gameObjectToBin:dodgeball) 5 )
      )
    )
    2
    (>= (+ (< 10 (* (count gameObjectToBin:blue_cube_block:basketball) (count-overlapping gameObjectToBin:basketball) )
        )
        2
      )
      4
    )
    (count-once gameObjectToBin:hexagonal_bin)
    (count matchingBuildingBuilt:dodgeball)
    15
    (count-once gameObjectToBin:red:red)
  )
)
)



(define (game game-id-827) (:domain few-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin ?ob - hexagonal_bin)
    (game-optional
      (in_motion ?ob)
    )
  )
)
(:constraints
  (and
    (forall (?p ?ob - game_object ?s - block ?d - (either curved_wooden_ramp bridge_block wall) ?s ?h - ball)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?p - chair ?o3 - ball ?o - hexagonal_bin)
            (then
              (once (adjacent_side door right agent) )
              (hold (and (not (in agent ?o) ) (in floor ?o) ) )
              (hold (on ?h ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 3 (count-once-per-objects throwAttemptKnocksBlock:golfball) 2 (* 10 6 0 4 (* 2 (external-forall-minimize (count-overlapping throwAttemptKnocksBlock:rug) ) )
        2
        (count throwAttemptKnocksBlock:book)
        (+ (+ 5 5 )
          (+ (count-increasing-measure throwAttemptKnocksBlock:blue_cube_block) 2 )
        )
        30
      )
      2
      (count-once throwAttemptKnocksBlock:pink)
    )
    2
  )
)
(:scoring
  (count-once-per-objects throwAttemptKnocksBlock:cube_block)
)
)



(define (game game-id-828) (:domain few-objects-room-v1)
(:setup
  (exists (?l1 - ball ?p - bridge_block ?p - (either book cd pen))
    (game-conserved
      (in_motion ?p)
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c6 - ball)
        (then
          (hold (and (in ?c6 bed) ) )
          (hold (and (not (adjacent room_center ?c6) ) (in_motion ?c6) ) )
          (once (agent_holds ?c6) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?b8 - (either basketball dodgeball mug) ?h - (either pencil dodgeball golfball) ?o ?l - hexagonal_bin)
        (then
          (once (not (on ?l ?o) ) )
          (hold-while (not (in_motion ?o) ) (and (and (adjacent desk ?o) (< 4 7) ) (adjacent desk ?l) (and (not (on ?l bed) ) (in_motion floor) ) ) )
          (once (or (agent_holds ?o) (agent_holds agent) ) )
        )
      )
    )
    (forall (?p - hexagonal_bin ?y ?y0 - sideways ?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?bl - dodgeball)
            (then
              (hold (agent_holds ?b) )
              (once (and (in_motion ?bl) (on ?bl ?b) ) )
              (once (above ?b ?bl) )
            )
          )
        )
        (preference ballRolledOnRampToRug
          (exists (?o1 - (either tall_cylindrical_block dodgeball))
            (then
              (once (not (in_motion agent) ) )
              (once (not (or (on ?b ?b) (agent_holds ?b) (agent_holds ?b) (not (agent_holds ?b) ) ) ) )
            )
          )
        )
        (preference throwAttempt
          (exists (?l3 - curved_wooden_ramp)
            (then
              (hold (in_motion ?b) )
              (once (in ?l3 ?l3) )
            )
          )
        )
        (preference redDodgeballThrownToBin
          (exists (?r - ball ?h ?o1 - shelf ?p - dodgeball)
            (then
              (hold (agent_holds ?p) )
              (hold (on ?p ?p) )
              (hold (and (in_motion ?p) (in_motion ?b) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-time) (total-score) )
)
(:scoring
  (* 1 (* (count-once-per-objects throwBallToDoggieBed:pink) 2 40 (count-once ballRolledOnRampToRug:hexagonal_bin) )
  )
)
)



(define (game game-id-829) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds pink)
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?l4 - (either laptop curved_wooden_ramp))
        (at-end
          (in_motion ?l4)
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?b9 - wall ?s - dodgeball)
        (then
          (once (adjacent_side ?s front_left_corner ?s front) )
          (hold (and (agent_holds ?s) (is_setup_object top_drawer) ) )
          (once (in_motion ?s) )
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?t2 - hexagonal_bin)
        (then
          (once (and (on ?t2 ?t2) (rug_color_under ?t2 light_blue) (and (in_motion ?t2) (same_color rug ?t2) ) ) )
          (once (not (between ?t2 ?t2 ?t2) ) )
          (once (not (in_motion agent) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (* 300 3 18 )
)
)



(define (game game-id-830) (:domain many-objects-room-v1)
(:setup
  (exists (?p - (either desktop pyramid_block yellow_cube_block) ?l4 - drawer ?d - doggie_bed ?c ?b7 ?d1 - game_object)
    (or
      (and
        (and
          (exists (?p1 - hexagonal_bin)
            (exists (?z - front ?z - (either back))
              (or
                (game-conserved
                  (and
                    (adjacent desk ?p1)
                    (and
                      (and
                        (touch desk bed)
                        (on desk ?d1)
                      )
                      (and
                        (toggled_on ?c)
                        (< 0.5 (distance desk ?p1))
                      )
                    )
                  )
                )
                (game-conserved
                  (not
                    (in ?b7 pink)
                  )
                )
                (game-conserved
                  (touch ?b7 agent)
                )
              )
            )
          )
        )
      )
      (not
        (exists (?o ?h - building)
          (and
            (not
              (exists (?p1 - ball)
                (forall (?b4 - hexagonal_bin)
                  (game-conserved
                    (exists (?c4 - hexagonal_bin)
                      (same_object ?h ?b4)
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?d1)
            )
            (game-conserved
              (adjacent ?o ?o)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - teddy_bear)
      (and
        (preference throwToRampToBin
          (exists (?b6 - building)
            (at-end
              (on floor ?b)
            )
          )
        )
      )
    )
    (preference objectThrownFromRug
      (exists (?w - hexagonal_bin ?h - hexagonal_bin)
        (then
          (hold (not (agent_holds floor) ) )
          (once (agent_holds ?h) )
          (once (touch desk ?h) )
        )
      )
    )
    (preference failedThrowAttempt
      (exists (?p3 - game_object)
        (then
          (once (in_motion ?p3) )
          (once (agent_holds ?p3) )
          (once (agent_holds ?p3) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects failedThrowAttempt:pink) (total-time) )
)
(:scoring
  (count-once-per-objects failedThrowAttempt:blue_pyramid_block)
)
)



(define (game game-id-831) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (equal_z_position room_center agent)
  )
)
(:constraints
  (and
    (preference blockInTowerKnocked
      (exists (?o2 - block)
        (at-end
          (not
            (on ?o2 ?o2)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once blockInTowerKnocked:doggie_bed:dodgeball) 50 )
  )
)
(:scoring
  (count-once-per-external-objects blockInTowerKnocked:beachball)
)
)



(define (game game-id-832) (:domain many-objects-room-v1)
(:setup
  (exists (?b ?d ?bl ?o1 ?s ?c - chair)
    (game-conserved
      (and
        (not
          (on ?c agent)
        )
        (not
          (touch ?b pink)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - (either curved_wooden_ramp golfball))
      (and
        (preference throwToRampToBin
          (exists (?w1 - hexagonal_bin ?c - curved_wooden_ramp)
            (then
              (once (in_motion bed) )
              (once (agent_holds agent) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?h - dodgeball ?o ?c5 - hexagonal_bin ?w1 - doggie_bed)
        (then
          (hold-while (and (not (agent_holds rug) ) (same_object floor ?w1) (in_motion ?w1) ) (same_color ?w1 ?w1) (agent_holds ?w1) )
          (once (in_motion ?w1) )
          (once (agent_holds ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= 7 (* (count throwToRampToBin:pyramid_block:purple) )
  )
)
(:scoring
  (* (count-once-per-external-objects itemsBroken:blue_dodgeball) -30 )
)
)



(define (game game-id-833) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - hexagonal_bin ?h - hexagonal_bin ?l4 - hexagonal_bin)
      (exists (?p1 - (either blue_cube_block book) ?c - teddy_bear)
        (game-conserved
          (not
            (and
              (and
                (in rug ?c)
                (in ?c ?l4)
              )
              (equal_z_position ?c ?l4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - shelf ?w - beachball)
      (and
        (preference ballThrownToRampToBed
          (exists (?d - ball ?h - wall)
            (then
              (once (on ?h ?h) )
              (hold (on ?w ?h) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?db - hexagonal_bin ?l - ball)
        (then
          (hold (on ?l ?l) )
          (once (not (not (and (and (and (in ?l ?l) (object_orientation ?l upright) ) (< (distance door ?l) 1) ) (in_motion ?l) (in_motion ?l) ) ) ) )
          (once-measure (and (same_color ?l ?l) (agent_holds ?l) ) (distance ?l ?l) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?r - hexagonal_bin ?c2 - game_object)
        (at-end
          (adjacent room_center ?c2)
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions throwBallToBin:golfball) (count throwBallToBin:dodgeball) )
)
(:scoring
  (count throwBallToBin:yellow)
)
)



(define (game game-id-834) (:domain few-objects-room-v1)
(:setup
  (exists (?d2 - hexagonal_bin)
    (game-conserved
      (exists (?b - game_object)
        (agent_holds ?d2)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - hexagonal_bin)
        (then
          (once (in_motion ?b) )
          (once (on ?b ?b) )
          (hold (in_motion ?b) )
        )
      )
    )
    (forall (?r1 - (either lamp pencil))
      (and
        (preference ballThrownHitsAgent
          (exists (?b - shelf ?c - beachball)
            (then
              (once (not (and (in ?r1 bed) (on ?r1 ?c) ) ) )
              (once (not (< 1 5) ) )
              (hold (not (in_motion ?r1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 1 (total-time) )
)
(:scoring
  (* (* (count-once-per-objects ballThrownHitsAgent:red_pyramid_block) (count ballThrownThroughRampAndBlocksToBin:blue_pyramid_block:brown:basketball) )
    (+ (count ballThrownHitsAgent:basketball) (count-once ballThrownThroughRampAndBlocksToBin:pink) )
  )
)
)



(define (game game-id-835) (:domain few-objects-room-v1)
(:setup
  (exists (?b4 - building)
    (exists (?c - block ?w1 - ball ?b - doggie_bed)
      (and
        (game-conserved
          (and
            (not
              (in_motion agent)
            )
            (agent_holds ?b)
            (adjacent desk ?b4)
            (agent_holds ?b4)
          )
        )
        (exists (?db - beachball)
          (and
            (forall (?w - curved_wooden_ramp)
              (forall (?h - block)
                (game-conserved
                  (adjacent desk ?db)
                )
              )
            )
            (exists (?l2 - doggie_bed)
              (exists (?x ?x0 ?x1 - color ?p - shelf)
                (exists (?p2 - (either book golfball))
                  (game-conserved
                    (agent_holds ?p)
                  )
                )
              )
            )
          )
        )
        (and
          (forall (?b - teddy_bear)
            (game-conserved
              (and
                (in_motion ?b)
                (< 7 (distance ?b4 ?b))
              )
            )
          )
          (and
            (forall (?x ?x0 - color ?db - doggie_bed)
              (game-conserved
                (and
                  (in_motion ?db)
                  (on agent ?db)
                  (agent_holds ?b4)
                  (not
                    (in ?b4 ?b4)
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (is_setup_object agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballKnocksBlockFromRug
      (exists (?b5 - beachball)
        (then
          (once (not (agent_holds ?b5) ) )
          (hold (not (touch ?b5 ?b5) ) )
          (hold (and (and (agent_holds bed) (and (< (distance bed ?b5) (distance desk ?b5)) (open ?b5) ) ) (not (on bed ?b5) ) ) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?b - golfball)
        (then
          (once (agent_holds ?b) )
          (hold (in_motion ?b) )
          (once (agent_holds agent) )
        )
      )
    )
  )
)
(:terminal
  (> 1 (total-time) )
)
(:scoring
  (count-same-positions golfballUnderBridgeWithoutTouchingBlock:blue_cube_block)
)
)



(define (game game-id-836) (:domain medium-objects-room-v1)
(:setup
  (exists (?c5 - cube_block)
    (and
      (game-conserved
        (not
          (and
            (adjacent room_center ?c5)
            (in_motion floor)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?h - (either laptop pencil dodgeball cube_block game_object))
        (then
          (hold-while (agent_holds ?h) (agent_holds ?h) )
          (once (on ?h ?h) )
          (hold-while (not (not (agent_holds ?h) ) ) (on agent agent) (and (above ?h ?h) ) )
        )
      )
    )
    (forall (?h ?t2 - cylindrical_block)
      (and
        (preference pinkObjectMovedToRoomCenter
          (exists (?r2 - doggie_bed ?b - hexagonal_bin ?p2 - wall)
            (then
              (hold (in_motion brown) )
              (once (in_motion ?p2) )
              (once (touch bed ?h) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?o3 - hexagonal_bin)
            (then
              (once (agent_holds ?t2) )
              (once (and (not (and (agent_holds agent) (adjacent ?o3 ?h) ) ) (and (agent_holds ?h) (agent_holds ?h) (on ?o3 floor) ) ) )
              (once (in_motion ?o3) )
            )
          )
        )
        (preference ballKnocksTeddy
          (exists (?b - ball)
            (at-end
              (adjacent desk floor)
            )
          )
        )
        (preference throwAttempt
          (then
            (once (in_motion rug) )
            (once (agent_holds floor) )
            (hold (exists (?o - ball) (in ?h ?t2) ) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-score) (* 20 (count-once-per-external-objects pinkObjectMovedToRoomCenter:hexagonal_bin) )
    )
    (>= 5 (* (count-once ballKnocksTeddy:dodgeball) (- 1 )
      )
    )
    (> (* (* 10 (count ballKnocksTeddy:yellow) )
        3
      )
      (external-forall-maximize
        (* (* (- (count ballKnocksTeddy:golfball:golfball) )
            3
          )
          (count-longest ballOnBedAtEnd:green:cylindrical_block)
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects pinkObjectMovedToRoomCenter:red)
)
)



(define (game game-id-837) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 - drawer)
    (and
      (and
        (forall (?h - game_object)
          (exists (?w1 ?h - block ?o - dodgeball)
            (exists (?h - (either doggie_bed golfball))
              (forall (?s - game_object)
                (and
                  (exists (?c6 - hexagonal_bin)
                    (exists (?l - hexagonal_bin)
                      (and
                        (exists (?l4 - hexagonal_bin ?x ?x0 - color)
                          (exists (?c6 - doggie_bed)
                            (game-conserved
                              (and
                                (and
                                  (not
                                    (exists (?c6 - wall)
                                      (not
                                        (in_motion ?l4)
                                      )
                                    )
                                  )
                                  (not
                                    (same_color ?c6 ?l4)
                                  )
                                )
                                (and
                                  (not
                                    (not
                                      (same_object ?l ?c6)
                                    )
                                  )
                                  (in_motion ?o)
                                )
                              )
                            )
                          )
                        )
                        (game-conserved
                          (and
                            (and
                              (on agent ?b5)
                              (not
                                (and
                                  (not
                                    (and
                                      (and
                                        (and
                                          (in desk bed)
                                          (and
                                            (and
                                              (and
                                                (agent_holds ?s)
                                              )
                                              (not
                                                (and
                                                  (not
                                                    (agent_holds ?b5)
                                                  )
                                                  (agent_holds ?l)
                                                )
                                              )
                                            )
                                            (agent_holds ?s)
                                          )
                                          (in ?b5 ?c6)
                                        )
                                        (on ?c6 ?h)
                                      )
                                      (game_over )
                                    )
                                  )
                                  (agent_holds ?s)
                                )
                              )
                            )
                            (agent_holds ?s)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?h - hexagonal_bin)
        (then
          (hold (in_motion ?h) )
          (hold (touch ?h ?h) )
          (once (on ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (+ (> 50 8 )
        2
      )
      1
    )
  )
)
(:scoring
  (count bookOnDeskShelf:red)
)
)



(define (game game-id-838) (:domain few-objects-room-v1)
(:setup
  (exists (?h - cube_block ?o3 - curved_wooden_ramp ?o1 - hexagonal_bin)
    (exists (?c6 - hexagonal_bin ?d - building ?o5 - desktop)
      (and
        (and
          (and
            (and
              (exists (?o - (either desktop cellphone) ?b7 - hexagonal_bin)
                (exists (?d ?c - hexagonal_bin)
                  (game-optional
                    (not
                      (in ?o5 ?o1)
                    )
                  )
                )
              )
              (or
                (forall (?h - (either cellphone dodgeball curved_wooden_ramp))
                  (game-conserved
                    (and
                      (in_motion ?o1)
                      (and
                        (not
                          (not
                            (and
                              (not
                                (in_motion ?o5)
                              )
                              (not
                                (touch ?h ?h)
                              )
                            )
                          )
                        )
                        (same_type agent ?h)
                      )
                    )
                  )
                )
              )
            )
            (and
              (forall (?l3 - dodgeball)
                (forall (?h - block ?s - (either watch pencil))
                  (forall (?b - game_object)
                    (game-optional
                      (or
                        (in ?s ?o1)
                        (on agent ?b)
                      )
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (not
                    (open ?o5)
                  )
                  (agent_holds ?o1)
                )
              )
            )
          )
          (and
            (forall (?o1 - flat_block ?o3 - beachball)
              (exists (?d - hexagonal_bin)
                (game-conserved
                  (and
                    (< (distance ?o5 ?o3) 1)
                    (not
                      (and
                        (in_motion ?o5)
                        (on ?d ?o1)
                        (and
                          (not
                            (and
                              (agent_holds ?o3)
                              (touch ?o1 ?d)
                            )
                          )
                          (on agent ?d)
                        )
                        (and
                          (and
                            (agent_holds ?o3)
                            (exists (?b ?f - ball ?r - ball)
                              (on ?d ?o5)
                            )
                          )
                          (agent_holds ?o5)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?b9 - cylindrical_block ?d2 - ball)
              (not
                (and
                  (game-optional
                    (in ?o1 ?o5)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b8 - shelf)
      (and
        (preference ballThrownFromDoor
          (exists (?b - game_object)
            (then
              (once (exists (?d - dodgeball ?o - chair) (and (is_setup_object ?b8) (not (or (exists (?c1 - triangular_ramp) (on ?b8 ?o) ) (same_object ?b8 ?o) ) ) ) ) )
              (once (in_motion agent) )
              (hold-while (not (on ?b8 ?b8) ) (in_motion ?b8) )
            )
          )
        )
      )
    )
    (forall (?h - curved_wooden_ramp ?h - (either wall triangular_ramp))
      (and
        (preference throwMissesBin
          (exists (?d ?b - hexagonal_bin)
            (at-end
              (and
                (and
                  (and
                    (open ?d)
                    (and
                      (not
                        (not
                          (and
                            (< (distance room_center ?h) (building_size ?h))
                            (agent_holds ?d)
                            (and
                              (agent_holds ?h)
                              (< 1 9)
                              (agent_holds ?d)
                              (and
                                (< 1 5)
                                (not
                                  (in ?h ?h)
                                )
                              )
                            )
                            (on ?h ?d)
                            (agent_crouches )
                            (in_motion ?b)
                            (agent_holds floor)
                            (on ?h ?d)
                          )
                        )
                      )
                      (or
                        (adjacent room_center ?b)
                        (on floor ?h)
                      )
                    )
                  )
                  (agent_holds ?h)
                )
                (not
                  (open ?h)
                )
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= 7 (* (external-forall-maximize (* (* (* 2 (count ballThrownFromDoor:pink_dodgeball) )
            (> (count ballThrownFromDoor:hexagonal_bin) 1 )
          )
          5
        )
      )
      1
    )
  )
)
(:scoring
  (external-forall-maximize
    (count-total ballThrownFromDoor:pyramid_block)
  )
)
)



(define (game game-id-839) (:domain many-objects-room-v1)
(:setup
  (exists (?l ?c - beachball)
    (forall (?x ?x0 ?x1 - purple)
      (and
        (and
          (exists (?g - dodgeball)
            (and
              (and
                (exists (?t - hexagonal_bin)
                  (exists (?c2 - (either key_chain golfball pencil) ?d - block)
                    (and
                      (forall (?c - yellow_cube_block ?l4 - dodgeball)
                        (game-conserved
                          (exists (?o ?db - hexagonal_bin)
                            (on ?d ?c)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (exists (?o - block ?d - game_object)
                (game-optional
                  (same_color ?d ?g)
                )
              )
              (and
                (game-conserved
                  (game_start )
                )
                (exists (?r2 - pillow)
                  (and
                    (game-conserved
                      (not
                        (in_motion rug)
                      )
                    )
                    (exists (?h - dodgeball ?b1 - dodgeball ?h ?d - hexagonal_bin)
                      (exists (?h - (either dodgeball cube_block pyramid_block) ?b - curved_wooden_ramp)
                        (and
                          (forall (?d1 - dodgeball)
                            (forall (?d1 - game_object)
                              (exists (?r2 - hexagonal_bin)
                                (exists (?b - cube_block)
                                  (forall (?p - hexagonal_bin)
                                    (game-optional
                                      (in ?p ?p)
                                    )
                                  )
                                )
                              )
                            )
                          )
                          (game-conserved
                            (and
                              (not
                                (< 4 (distance door ?c))
                              )
                              (not
                                (on ?g ?g)
                              )
                            )
                          )
                          (game-optional
                            (in top_drawer agent)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - building ?b - hexagonal_bin ?b5 ?w2 - beachball)
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (exists (?r1 - game_object ?h - (either golfball pyramid_block tall_cylindrical_block))
            (then
              (hold (agent_holds ?b5) )
              (once (or (not (agent_holds ?b5) ) (not (not (not (not (not (not (in ?b5 ?w2) ) ) ) ) ) ) (agent_holds ?h) ) )
              (once-measure (in_motion ?b5) (distance room_center ?w2) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?d - block ?o - (either cylindrical_block) ?w1 - building)
        (then
          (hold (in_motion agent) )
          (once (not (on brown ?w1) ) )
          (once (not (in_motion ?w1) ) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?c2 - hexagonal_bin)
        (at-end
          (and
            (exists (?h - beachball)
              (in ?h ?c2)
            )
            (on ?c2 agent)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockPickedUp:orange) 3 )
)
(:scoring
  (count blockPickedUp:beachball)
)
)



(define (game game-id-840) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin ?d - (either main_light_switch alarm_clock))
    (game-conserved
      (in_motion ?d)
    )
  )
)
(:constraints
  (and
    (preference blockThrowAttempt
      (exists (?t - chair ?b6 - cube_block)
        (then
          (once (in_motion ?b6) )
          (hold-while (> 0 1) (object_orientation agent diagonal) )
          (hold (in_motion ?b6) )
          (once (not (in_motion ?b6) ) )
        )
      )
    )
    (forall (?h - hexagonal_bin)
      (and
        (preference ballRolledOnRampToRug
          (exists (?l2 - chair ?b - hexagonal_bin)
            (then
              (once (in_motion agent) )
              (once (on rug ?b) )
              (once (agent_holds ?h) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?g - hexagonal_bin)
            (at-end
              (and
                (exists (?b5 - hexagonal_bin ?t2 - cube_block)
                  (not
                    (in_motion ?g)
                  )
                )
                (on ?h ?g)
                (not
                  (agent_holds bed)
                )
              )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?p3 - (either floor dodgeball))
        (then
          (hold (not (and (in ?p3 ?p3) (same_color ?p3 ?p3) ) ) )
          (hold (not (and (< 8 7) (not (above ?p3 ?p3) ) ) ) )
          (once (not (not (agent_holds ?p3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (- (* (* 8 5 )
        (count blockThrowAttempt:dodgeball:orange)
      )
    )
    (count ballRolledOnRampToRug:pink_dodgeball)
  )
)
(:scoring
  (+ (count-once-per-objects woodenBlockMovedFromRugToDesk:blue_pyramid_block) (* (* (* 3 2 )
        300
      )
      (* 18 6 )
    )
  )
)
)



(define (game game-id-841) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - (either tall_cylindrical_block book golfball) ?d - dodgeball)
    (exists (?b - hexagonal_bin)
      (game-conserved
        (and
          (agent_holds ?d)
          (not
            (and
              (and
                (same_type ?b ?b)
                (not
                  (touch ?d agent)
                )
              )
              (touch ?b ?d)
              (and
                (> 0.5 (distance desk ?d))
                (adjacent ?b ?d)
              )
            )
          )
          (agent_crouches )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?o3 - dodgeball ?h - ball ?w2 - (either pillow dodgeball) ?w - (either triangle_block pencil tall_cylindrical_block cube_block) ?d - cube_block)
        (at-end
          (not
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (* (count dodgeballsInPlace:top_drawer) (count-once-per-objects dodgeballsInPlace:dodgeball) )
    )
    (- 8 )
  )
)
(:scoring
  (- (+ (count dodgeballsInPlace:dodgeball) (count dodgeballsInPlace:blue_dodgeball:dodgeball) )
  )
)
)



(define (game game-id-842) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?p - hexagonal_bin ?l4 - hexagonal_bin)
      (and
        (exists (?z - left ?l4 - desktop)
          (and
            (game-conserved
              (agent_holds ?l4)
            )
            (and
              (game-conserved
                (agent_holds ?l4)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference smallObjectThrownToBed
      (exists (?b - hexagonal_bin ?c3 - golfball)
        (then
          (hold (not (on ?c3 ?c3) ) )
          (hold-while (exists (?d - dodgeball ?b6 ?o2 ?h ?b6 ?b ?p2 - hexagonal_bin) (not (agent_holds desk) ) ) (not (and (adjacent desk ?c3) (agent_holds ?c3) (on ?c3 ?c3) ) ) (not (and (and (is_setup_object ?c3) (agent_holds ?c3) ) (on ?c3 ?c3) ) ) )
          (hold (on ?c3 ?c3) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count smallObjectThrownToBed:beachball) 6 )
    (>= 5 (total-score) )
    (>= 100 (* 1 (count smallObjectThrownToBed:side_table) )
    )
    (or
      (not
        (not
          (>= (+ 5 (* (+ (* 180 0.5 (count-once-per-objects smallObjectThrownToBed:golfball) 4 2 )
                  10
                )
                (* 4 (- (* (count-once smallObjectThrownToBed:purple) 6 (* 100 8 )
                      2
                    )
                  )
                )
              )
            )
            (count-once-per-objects smallObjectThrownToBed:golfball)
          )
        )
      )
      (or
        (>= (* 18 (* (external-forall-maximize (+ (* (count-once-per-objects smallObjectThrownToBed:basketball) (+ (count smallObjectThrownToBed:red) (- (* 50 (count smallObjectThrownToBed:dodgeball) )
                      )
                    )
                  )
                  (+ 30 (* (count-once smallObjectThrownToBed:green) 5 )
                  )
                )
              )
              (count-once-per-objects smallObjectThrownToBed:dodgeball)
            )
          )
          5
        )
      )
      (or
        (>= (- (count smallObjectThrownToBed:dodgeball) )
          (count smallObjectThrownToBed:purple)
        )
        (>= 2 (count-once-per-external-objects smallObjectThrownToBed:golfball) )
      )
    )
  )
)
(:scoring
  (* (* 10 (count-once smallObjectThrownToBed:yellow) (count-once smallObjectThrownToBed:golfball) )
    (count smallObjectThrownToBed:pink_dodgeball)
  )
)
)



(define (game game-id-843) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - wall ?l3 - dodgeball)
      (and
        (forall (?d - (either pyramid_block) ?b - dodgeball ?h - block)
          (game-conserved
            (on ?l3 ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - chair)
        (then
          (hold-while (on ?b ?b) (not (adjacent green_golfball ?b) ) (agent_holds ?b) )
          (hold-while (agent_holds ?b) (in_motion rug) )
          (once (and (in_motion ?b) (and (not (agent_holds ?b) ) (agent_holds bed) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= (external-forall-maximize (* (count-once objectInBuilding) (* 6 (count-unique-positions objectInBuilding:dodgeball) )
      )
    )
    (total-score)
  )
)
(:scoring
  (count-once-per-objects objectInBuilding:tall_cylindrical_block)
)
)



(define (game game-id-844) (:domain few-objects-room-v1)
(:setup
  (exists (?w1 - block ?b6 - red_dodgeball)
    (game-conserved
      (in ?b6 ?b6)
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - triangular_ramp)
        (then
          (hold (and (and (and (and (on bed ?b) (agent_holds ?b) ) (exists (?d - curved_wooden_ramp) (not (and (agent_holds ?b) (adjacent room_center agent) ) ) ) ) (in_motion ?b) (and (< (distance desk ?b) (distance ?b ?b)) (touch ?b ?b) ) ) (in ?b ?b) ) )
          (once (<= (distance ?b ?b) 9) )
          (hold-while (not (not (not (and (not (open ?b) ) (not (agent_holds ?b) ) ) ) ) ) (not (in_motion ?b) ) (equal_x_position ?b ?b) (in agent ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 50 (* (* 18 (* (count-once-per-objects ballOnBedAtEnd:basketball) )
      )
      (count-once-per-objects ballOnBedAtEnd:blue_cube_block)
    )
  )
)
(:scoring
  (count ballOnBedAtEnd:wall)
)
)



(define (game game-id-845) (:domain many-objects-room-v1)
(:setup
  (exists (?c - teddy_bear)
    (game-conserved
      (exists (?c - hexagonal_bin ?d2 - dodgeball ?g - ball)
        (not
          (in_motion ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?h - hexagonal_bin)
        (then
          (once (in_motion ?h) )
          (once (> (distance ?h ?h) (distance_side desk back ?h right)) )
          (hold-while (not (not (toggled_on ?h) ) ) (> (distance ?h ?h) 1) )
        )
      )
    )
  )
)
(:terminal
  (= 3 8 )
)
(:scoring
  (count throwBallToBin:blue_dodgeball:pink)
)
)



(define (game game-id-846) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - (either cube_block dodgeball) ?b - desk_shelf)
    (game-conserved
      (same_type rug block)
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?s - hexagonal_bin ?o - (either yellow_cube_block pen alarm_clock cube_block golfball hexagonal_bin tall_cylindrical_block))
        (then
          (hold-while (> 1 (distance ?o agent)) (>= (distance ?o ?o) 1) )
          (once (and (same_type ?o ?o) (and (and (not (on ?o ?o) ) ) (same_object ?o ?o) (and (and (in_motion ?o) (not (on ?o ?o) ) ) (agent_holds agent) (not (touch floor ?o) ) ) ) ) )
          (once (agent_holds ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects thrownBallHitsBlock:dodgeball) (count-once-per-objects thrownBallHitsBlock:pink_dodgeball) )
)
(:scoring
  (+ (count thrownBallHitsBlock:purple) (count thrownBallHitsBlock:beachball:basketball:blue_dodgeball) (* 3 (- (count thrownBallHitsBlock:yellow:rug) )
    )
    (* (* (count-once thrownBallHitsBlock:purple) 3 )
      2
    )
    (count-once thrownBallHitsBlock:yellow:white)
    (count-once-per-objects thrownBallHitsBlock:pink)
  )
)
)



(define (game game-id-847) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-optional
      (agent_holds bed)
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?h - teddy_bear)
        (then
          (once (touch ?h ?h) )
        )
      )
    )
  )
)
(:terminal
  (or
    (and
      (>= 5 (count-once-per-objects cubeBlockThrownToTopShelf:pink_dodgeball) )
    )
    (or
      (not
        (<= 300 (count cubeBlockThrownToTopShelf:beachball) )
      )
      (>= (count-once-per-external-objects cubeBlockThrownToTopShelf:dodgeball) (count cubeBlockThrownToTopShelf:cube_block) )
    )
    (or
      (> (* 1 (+ (count-once cubeBlockThrownToTopShelf:blue_dodgeball:dodgeball) 3 )
          (count-once-per-objects cubeBlockThrownToTopShelf:beachball)
          10
          (count cubeBlockThrownToTopShelf:yellow)
          (count-once-per-objects cubeBlockThrownToTopShelf:pyramid_block)
          4
        )
        (+ (count cubeBlockThrownToTopShelf:beachball:pink_dodgeball) 1 )
      )
      (= (+ 2 5 5 )
        1
      )
      (> (count-once-per-objects cubeBlockThrownToTopShelf:alarm_clock:pink) (total-time) )
    )
  )
)
(:scoring
  (count cubeBlockThrownToTopShelf:golfball)
)
)



(define (game game-id-848) (:domain many-objects-room-v1)
(:setup
  (exists (?s - dodgeball ?h - building)
    (game-conserved
      (not
        (and
          (in_motion ?h)
          (and
            (touch ?h ?h)
            (agent_holds bed)
            (and
              (agent_holds pink)
              (not
                (opposite ?h ?h)
              )
            )
            (in ?h ?h)
          )
          (not
            (adjacent east_sliding_door ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?r1 - dodgeball ?b4 ?o3 - (either golfball alarm_clock))
        (at-end
          (in_motion floor)
        )
      )
    )
  )
)
(:terminal
  (>= 10 10 )
)
(:scoring
  (count-longest dodgeballHitsPillowWithoutTouchingBlock:basketball)
)
)



(define (game game-id-849) (:domain few-objects-room-v1)
(:setup
  (forall (?h - cube_block)
    (and
      (game-conserved
        (adjacent_side ?h front ?h)
      )
      (game-conserved
        (and
          (on bed ?h)
          (adjacent_side ?h back ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?f - hexagonal_bin ?d - hexagonal_bin ?c3 - teddy_bear)
        (then
          (once (and (not (and (agent_holds ?c3) ) ) (not (and (and (same_type ?c3 pillow) (and (not (and (on ?c3 ?c3) (exists (?d1 - building ?o - wall) (in_motion ?o) ) ) ) (and (> (distance desk ?c3) 3) (agent_crouches ) ) (adjacent ?c3 agent) ) ) (in_motion ?c3) ) ) ) )
          (once (in_motion ?c3) )
          (hold (in_motion ?c3) )
        )
      )
    )
    (preference ballNeverThrown
      (exists (?b7 - book)
        (then
          (hold-while (agent_holds ?b7) (and (agent_holds ?b7) (in_motion ?b7) (in_motion ?b7) ) (agent_holds ?b7) )
          (once (adjacent ?b7 ?b7) )
          (hold-while (not (and (agent_holds ?b7) (and (not (in_motion ?b7) ) (in_motion ?b7) ) ) ) (and (and (is_setup_object ?b7) (not (not (on ?b7 ?b7) ) ) ) (in_motion ?b7) ) (in_motion ?b7) (in ?b7 ?b7) )
        )
      )
    )
    (preference castleBuilt
      (exists (?d - doggie_bed)
        (then
          (hold (and (and (agent_holds ?d) (same_type ?d ?d) ) (in_motion ?d) (and (>= (distance green_golfball ?d) 5) (same_object ?d ?d) ) ) )
          (once (not (in_motion ?d) ) )
          (hold-while (in_motion ?d) (adjacent_side desk back ?d) )
        )
      )
    )
  )
)
(:terminal
  (= (* 4 (count cubeThrownToBin:pink) 7 )
    (count-once castleBuilt:side_table)
  )
)
(:scoring
  (count-once ballNeverThrown:beachball)
)
)



(define (game game-id-850) (:domain few-objects-room-v1)
(:setup
  (exists (?o - hexagonal_bin)
    (and
      (game-optional
        (and
          (agent_holds ?o)
          (on ?o ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c4 - dodgeball)
      (and
        (preference smallItemsInPlace
          (exists (?h - cube_block)
            (then
              (once (broken ?h) )
              (once (and (and (or (on ?c4 ?h) (agent_holds ?h) (and (same_type ?h ?h) (agent_holds ?c4) ) (< (distance room_center ?h) 3) (not (not (not (in_motion ?c4) ) ) ) ) (same_color ?h ?h) (touch ?c4 agent) ) (and (agent_holds ?c4) (in ?c4 ?h) ) (adjacent desk brown) (not (agent_holds ?h) ) ) )
              (once (not (on desk ?h) ) )
            )
          )
        )
        (preference dodgeballHitsBin
          (exists (?b2 - dodgeball ?h - shelf)
            (at-end
              (not
                (in_motion ?h)
              )
            )
          )
        )
        (preference dodgeballHitsBinBottom
          (exists (?o - pillow ?d - sliding_door)
            (then
              (once (in_motion ?d) )
              (once (= (distance room_center ?c4) (distance ?d ?c4)) )
              (hold (adjacent door ?d) )
            )
          )
        )
        (preference bookOnDeskShelf
          (exists (?y ?y0 - upside_down)
            (then
              (once (in ?c4 ?c4) )
              (once (touch ?c4 bed) )
              (hold-while (in_motion ?c4) (not (touch ?c4 ?c4) ) )
              (hold (in_motion ?c4) )
              (once (agent_holds ?c4) )
            )
          )
        )
      )
    )
    (preference ballThrownIntoTarget
      (exists (?h - dodgeball)
        (at-end
          (exists (?h - hexagonal_bin)
            (between ?h ?h ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (< (external-forall-maximize (* (* 2 (count-same-positions smallItemsInPlace:book) )
        (+ 10 (<= (count bookOnDeskShelf:beachball:pink) 6 )
          (count bookOnDeskShelf:doggie_bed)
          (count dodgeballHitsBinBottom:cube_block)
          (count-once-per-objects dodgeballHitsBinBottom:basketball)
          2
          (count-increasing-measure dodgeballHitsBinBottom:pink)
        )
      )
    )
    (total-score)
  )
)
(:scoring
  (* (count-unique-positions dodgeballHitsBinBottom:red) 5 )
)
)



(define (game game-id-851) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (exists (?t2 - chair ?b3 - chair ?c - chair)
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (forall (?g - red_dodgeball)
      (and
        (preference ballThrownOntoTarget
          (exists (?d - (either golfball cylindrical_block) ?o - block)
            (then
              (once (not (adjacent ?o ?g) ) )
              (hold (is_setup_object ?o) )
              (once (not (< 2 1) ) )
            )
          )
        )
        (preference ballThrownToChair
          (exists (?c1 - cube_block)
            (then
              (once (opposite ?c1 ?g) )
              (once (forall (?b5 - hexagonal_bin ?f - dodgeball) (agent_holds ?f) ) )
              (once (on ?g ?c1) )
            )
          )
        )
        (preference throwInBin
          (exists (?d - curved_wooden_ramp)
            (at-end
              (in ?g top_drawer)
            )
          )
        )
      )
    )
    (forall (?bl - dodgeball ?d2 - ball)
      (and
        (preference binKnockedOver
          (then
            (once (not (and (agent_holds ?d2) (agent_holds agent) ) ) )
            (once (agent_holds ?d2) )
            (hold-while (or (touch ?d2 ?d2) (agent_holds ?d2) ) (not (in_motion rug) ) (on ?d2 ?d2) (agent_holds ?d2) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (+ (count ballThrownOntoTarget:purple) 2 )
      (= (* (* 8 4 )
          (count-total ballThrownToChair:red:yellow_cube_block)
          40
          (count ballThrownOntoTarget:yellow)
        )
      )
    )
    0
  )
)
(:scoring
  (count-same-positions ballThrownOntoTarget:pink)
)
)



(define (game game-id-852) (:domain medium-objects-room-v1)
(:setup
  (exists (?c - (either mug cellphone top_drawer))
    (and
      (exists (?b - hexagonal_bin)
        (exists (?l2 - chair ?tb - (either cube_block blue_cube_block) ?b5 - game_object)
          (forall (?b7 - chair)
            (game-conserved
              (and
                (on ?c ?c)
                (and
                  (not
                    (on ?b7 ?c)
                  )
                  (agent_holds ?b)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin ?p2 - dodgeball)
      (and
        (preference dodgeballThrownToBinFromDesk
          (exists (?p1 - hexagonal_bin)
            (at-end
              (and
                (not
                  (> 3 (distance ?p1 ?p1))
                )
                (not
                  (in_motion agent)
                )
              )
            )
          )
        )
        (preference throwAttemptKnocksBlock
          (exists (?d - dodgeball)
            (then
              (hold (in ?d ?d) )
              (once (forall (?d - hexagonal_bin) (agent_holds ?p2) ) )
              (hold-while (not (in ?p2 ?p2) ) (on agent ?p2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count dodgeballThrownToBinFromDesk:doggie_bed:yellow) (* 5 (count-unique-positions dodgeballThrownToBinFromDesk:golfball) )
  )
)
(:scoring
  (+ (+ 3 (external-forall-maximize (+ (+ (count throwAttemptKnocksBlock:yellow) (external-forall-minimize (* (- (+ 10 (external-forall-maximize (count dodgeballThrownToBinFromDesk:hexagonal_bin:hexagonal_bin) ) (count-once-per-objects throwAttemptKnocksBlock:golfball:pyramid_block) (* 2 (count dodgeballThrownToBinFromDesk:beachball) )
                    9
                    (count-once dodgeballThrownToBinFromDesk:red)
                    (count-measure throwAttemptKnocksBlock:pink_dodgeball:purple)
                    (count throwAttemptKnocksBlock:hexagonal_bin)
                    (count dodgeballThrownToBinFromDesk:dodgeball:red)
                  )
                  (count throwAttemptKnocksBlock:green)
                )
                10
              )
            )
            (count dodgeballThrownToBinFromDesk:orange:beachball)
          )
          (count-measure dodgeballThrownToBinFromDesk:beachball:white)
          (count-once-per-objects throwAttemptKnocksBlock:purple)
        )
      )
    )
    (* 6 5 )
  )
)
)



(define (game game-id-853) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (> 3 1)
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?d1 - ball)
        (then
          (once (not (and (> (distance desk ?d1) 6) (agent_holds ?d1) ) ) )
          (hold-while (and (in_motion ?d1) (exists (?b8 - dodgeball) (agent_holds ?b8) ) ) (on desk ?d1) )
          (once (between desk ?d1 ?d1) )
        )
      )
    )
    (preference dodgeballFromDeskToTarget
      (exists (?b - bridge_block ?g - cube_block)
        (then
          (once (not (not (and (in ?g bed) (on ?g desk) ) ) ) )
          (once (and (not (not (agent_crouches ) ) ) (not (touch ?g ?g) ) ) )
          (once (same_type ?g pillow) )
        )
      )
    )
  )
)
(:terminal
  (< (count ballThrownFromRug:dodgeball:doggie_bed) (total-time) )
)
(:scoring
  (count-once-per-objects dodgeballFromDeskToTarget:green)
)
)



(define (game game-id-854) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l4 - ball)
      (and
        (exists (?b3 - golfball)
          (exists (?l3 - drawer ?b9 - chair)
            (not
              (exists (?d - hexagonal_bin)
                (game-conserved
                  (and
                    (touch ?b9 ?b9)
                    (and
                      (agent_holds ?b9)
                      (equal_x_position room_center ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?b - teddy_bear ?w2 - dodgeball)
        (then
          (once (touch ?w2 ?w2) )
          (once-measure (and (agent_holds ?w2) (not (not (and (and (adjacent desk ?w2) (agent_holds ?w2) ) (not (is_setup_object ?w2) ) ) ) ) ) (distance bed ?w2) )
          (hold (not (< 1 1) ) )
        )
      )
    )
    (forall (?o - hexagonal_bin)
      (and
        (preference blockInTowerAtEnd
          (exists (?d - bridge_block ?o2 - dodgeball)
            (then
              (once (not (on floor ?o) ) )
              (once-measure (and (in ?o ?o2) (agent_holds rug) (in_motion ?o2) (not (adjacent_side desk front_left_corner agent front_left_corner) ) (and (and (and (on ?o2 agent) (in_motion ?o) ) (not (or (in_motion ?o2) (not (on ?o2 bed) ) ) ) ) (adjacent desk ?o) (agent_holds ?o2) ) (agent_holds ?o2) ) (distance ?o2 ?o2) )
              (once (in_motion floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count blockInTowerAtEnd:beachball) (total-score) )
)
(:scoring
  (* 2 7 (+ (* 2 1 )
      (* (count-once-per-objects blockInTowerAtEnd:golfball) (- 9 )
      )
    )
    -30
    3
    (count blockInTowerAtEnd:yellow:basketball)
  )
)
)



(define (game game-id-855) (:domain few-objects-room-v1)
(:setup
  (exists (?c - hexagonal_bin ?p - building ?h - block)
    (forall (?d - cube_block)
      (game-optional
        (game_over )
      )
    )
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?o - ball)
        (then
          (hold-while (and (agent_holds ?o) (agent_holds ?o) ) (and (and (in_motion ?o) (in_motion ?o) ) (in_motion ?o) (between ?o ?o rug) ) (not (not (in_motion ?o) ) ) )
          (once (and (in_motion ?o) (on ?o ?o) (in_motion ?o) ) )
          (hold (game_over ) )
        )
      )
    )
  )
)
(:terminal
  (<= 5 (* (* 4 2 1 )
      5
    )
  )
)
(:scoring
  (count-once blockOnBlockInTowerAtEnd:dodgeball)
)
)



(define (game game-id-856) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion bed)
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?h ?b ?s ?o ?o ?c2 - (either dodgeball book))
        (then
          (hold (and (and (in ?o ?h) (in ?c2 ?b) (agent_holds ?b) ) (and (and (between ?b ?b ?h) (not (agent_holds top_shelf) ) ) (open ?o) (agent_holds ?s) (and (not (on ?s ?o) ) (and (and (< (distance_side bed right ?s) (distance ?c2 ?o)) (not (not (not (object_orientation ?s upside_down) ) ) ) ) (not (adjacent ?c2 ?s) ) (not (< (distance room_center ?b) (distance ?b ?b)) ) ) ) ) (in_motion ?s) ) )
          (once (and (agent_holds agent) (in ?c2 agent) (game_start ) (agent_holds ?s) (not (agent_holds agent) ) (not (and (agent_holds ?h) (not (in_motion ?c2) ) ) ) (in_motion ?h) (and (on ?o ?h) (and (on ?h ?c2) (on agent ?b) ) ) (agent_crouches ) (in agent ?s) ) )
          (once (not (< 0.5 8) ) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?ob - cube_block)
        (then
          (once (agent_holds ?ob) )
          (hold (agent_holds ?ob) )
          (once (touch ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- (* (* 180 (count-once-per-objects dodgeballFromBlockToBin:beachball) )
          (count blockInTowerKnocked:beachball)
        )
      )
      7
    )
    (>= (count blockInTowerKnocked:pink_dodgeball) (* 1 (count dodgeballFromBlockToBin:basketball:top_drawer) )
    )
    (or
      (> (- (+ 30 2 )
        )
        6
      )
      (not
        (or
          (<= (count-once dodgeballFromBlockToBin:purple:tall_cylindrical_block:dodgeball) 4 )
          (>= (count blockInTowerKnocked:golfball) 3 )
          (= (count-once-per-objects blockInTowerKnocked:golfball) 4 )
        )
      )
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballFromBlockToBin:red:golfball)
)
)



(define (game game-id-857) (:domain few-objects-room-v1)
(:setup
  (exists (?d1 - cube_block)
    (exists (?l - building ?p2 - ball)
      (and
        (forall (?b - hexagonal_bin)
          (forall (?d1 - hexagonal_bin)
            (forall (?l - hexagonal_bin ?b7 - building)
              (game-conserved
                (is_setup_object ?d1)
              )
            )
          )
        )
        (exists (?w1 - hexagonal_bin)
          (exists (?h - beachball)
            (exists (?h ?bl - hexagonal_bin ?o - block)
              (game-conserved
                (not
                  (exists (?db - dodgeball)
                    (not
                      (agent_holds bed)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwObjectToBin
      (exists (?h - shelf)
        (then
          (once (in_motion ?h) )
          (once (and (not (agent_holds ?h) ) (not (forall (?d - hexagonal_bin) (in_motion agent) ) ) ) )
          (once (not (agent_holds ?h) ) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?h - dodgeball)
        (then
          (once (in ?h desk) )
          (hold (between ?h bed ?h) )
          (once (game_start ) )
        )
      )
    )
  )
)
(:terminal
  (< (+ 10 (* (* 5 4 (external-forall-maximize (* (* (count-once-per-objects objectToBinOnFirstTry:cylindrical_block) 5 )
              2
            )
          )
        )
        4
      )
    )
    15
  )
)
(:scoring
  (count throwObjectToBin:yellow)
)
)



(define (game game-id-858) (:domain few-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin)
        (in ?h ?h)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?b - ball)
        (then
          (once (not (between ?b ?b floor) ) )
          (once (on agent ?b) )
          (hold-while (and (or (and (on ?b agent) (in_motion floor) (and (not (touch ?b ?b) ) (agent_holds ?b) (and (not (in_motion ?b) ) (agent_holds top_shelf) (not (opposite ?b ?b) ) (game_start ) ) ) ) (in ?b rug) ) (and (< (distance_side desk left ?b front) (distance desk ?b)) (in ?b ?b) ) ) (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (= (* 3 2 )
    (total-score)
  )
)
(:scoring
  (+ 2 (count-longest dodgeballThrownToBin:pyramid_block) )
)
)



(define (game game-id-859) (:domain few-objects-room-v1)
(:setup
  (exists (?g - ball ?d - game_object ?w1 - dodgeball)
    (exists (?b - hexagonal_bin)
      (and
        (game-optional
          (and
            (is_setup_object ?b)
            (not
              (in_motion ?w1)
            )
          )
        )
        (forall (?l - curved_wooden_ramp ?l ?db ?w ?p ?l ?c ?t1 ?w1 ?w2 ?s - chair)
          (or
            (game-optional
              (and
                (not
                  (not
                    (and
                      (in_motion ?w1)
                    )
                  )
                )
                (agent_holds ?t1)
              )
            )
          )
        )
        (and
          (game-conserved
            (adjacent_side desk back ?w1)
          )
          (game-conserved
            (not
              (and
                (in_motion ?w1)
                (is_setup_object bed)
                (> (x_position ?b) 1)
              )
            )
          )
          (game-optional
            (not
              (in_motion ?w1)
            )
          )
        )
        (game-conserved
          (and
            (in_motion ?w1)
            (and
              (in_motion ?b)
              (exists (?g - hexagonal_bin)
                (< (distance_side door front ?b) 1)
              )
            )
          )
        )
        (game-conserved
          (opposite ?b ?w1)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b8 - ball ?d - triangular_ramp ?b - shelf ?p - hexagonal_bin)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - desk_shelf)
            (then
              (hold (adjacent ?d top_drawer) )
              (hold (and (agent_holds top_drawer) (in_motion ?p) ) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?t - game_object ?c - dodgeball ?b - hexagonal_bin)
        (at-end
          (on ?b ?b)
        )
      )
    )
  )
)
(:terminal
  (>= 5 (* (count-once-per-objects ballThrownFromObjectToBin:dodgeball) 5 )
  )
)
(:scoring
  (= 15 (+ 5 5 )
  )
)
)



(define (game game-id-860) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?o - game_object ?b ?d - hexagonal_bin)
      (game-optional
        (and
          (in_motion ?b)
          (on ?d ?b)
        )
      )
    )
    (exists (?d - pillow ?s - dodgeball)
      (and
        (game-conserved
          (in_motion ?s)
        )
        (exists (?h - building)
          (game-optional
            (not
              (not
                (exists (?r2 - hexagonal_bin ?c1 - (either mug tall_cylindrical_block cellphone))
                  (on ?s rug)
                )
              )
            )
          )
        )
      )
    )
    (and
      (forall (?h ?c - ball)
        (game-optional
          (not
            (in_motion ?c)
          )
        )
      )
      (exists (?c - wall ?c - wall ?tb - hexagonal_bin ?h - ball)
        (game-conserved
          (and
            (not
              (agent_holds agent)
            )
            (not
              (not
                (and
                  (< (distance desk rug) 0)
                  (and
                    (agent_holds agent)
                    (not
                      (in_motion ?h)
                    )
                  )
                )
              )
            )
          )
        )
      )
      (exists (?b - shelf)
        (or
          (and
            (and
              (and
                (game-conserved
                  (not
                    (in_motion ?b)
                  )
                )
              )
            )
            (exists (?r - building)
              (not
                (forall (?b ?b - teddy_bear)
                  (exists (?l - curved_wooden_ramp)
                    (and
                      (and
                        (exists (?t - teddy_bear)
                          (game-optional
                            (in ?b ?t)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (not
                (in_motion ?b)
              )
            )
          )
          (exists (?o - hexagonal_bin ?o2 - block)
            (game-conserved
              (agent_holds ?b)
            )
          )
          (game-optional
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?w ?c1 - hexagonal_bin)
        (then
          (once (in_motion agent) )
          (hold (on ?w ?w) )
          (once (not (toggled_on ?w) ) )
        )
      )
    )
    (preference blocksInPlace
      (exists (?s - (either alarm_clock pyramid_block golfball) ?o - hexagonal_bin ?b - (either cellphone golfball))
        (then
          (once-measure (not (agent_holds ?b) ) (distance desk ?b) )
          (once-measure (agent_holds agent) (x_position ?b) )
          (once (and (not (on ?b ?b) ) (> 1 5) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 (total-score) )
    (<= 2 (count-once blocksInPlace:dodgeball) )
    (>= 1 (count-once-per-objects blocksInPlace:dodgeball:beachball) )
  )
)
(:scoring
  (+ 3 (+ (count ballThrownToRug:pink:pink) (count-once-per-objects blocksInPlace) )
  )
)
)



(define (game game-id-861) (:domain few-objects-room-v1)
(:setup
  (exists (?h - pillow)
    (forall (?t - triangular_ramp)
      (and
        (and
          (forall (?o - ball)
            (exists (?c4 - building ?o - ball)
              (and
                (game-conserved
                  (< (distance_side door front_left_corner ?o back) (distance desk ?o))
                )
              )
            )
          )
        )
        (exists (?h - building ?d ?s - building)
          (exists (?b ?o - cube_block ?b8 ?h ?p ?c - (either pencil golfball))
            (exists (?c - flat_block)
              (forall (?g - dodgeball ?b - doggie_bed ?tb - dodgeball)
                (and
                  (and
                    (game-optional
                      (on ?c ?d)
                    )
                  )
                  (game-conserved
                    (and
                      (agent_holds ?b8)
                      (not
                        (not
                          (agent_holds ?h)
                        )
                      )
                      (= 4 0.5)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h ?d ?b4 - game_object)
      (and
        (preference smallItemsInPlace
          (exists (?c4 - hexagonal_bin)
            (at-end
              (and
                (in blue ?c4)
                (not
                  (and
                    (< (distance_side room_center right ?h) 0)
                    (and
                      (agent_holds ?h)
                      (and
                        (in ?h ?d)
                        (agent_holds floor)
                        (in_motion bed)
                      )
                    )
                    (between agent ?c4 ?b4)
                    (adjacent door ?b4)
                  )
                )
              )
            )
          )
        )
        (preference ballOnBedAtEnd
          (exists (?c6 - chair ?p1 - chair)
            (then
              (hold (touch ?p1 ?d) )
              (once (not (and (in agent ?d) (not (not (not (in_motion ?p1) ) ) ) ) ) )
              (once (in floor ?b4) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (<= 20 (count-longest smallItemsInPlace:pink_dodgeball:golfball:red) )
      (or
        (<= (count smallItemsInPlace:pink_dodgeball) 3 )
        (or
          (>= (* (+ 3 5 )
              4
            )
            1
          )
          (>= (= 5 )
            (* (external-forall-maximize (count-total ballOnBedAtEnd:red) ) (count-once smallItemsInPlace:basketball) )
          )
        )
        (>= 1 (* (count ballOnBedAtEnd:beachball) (count ballOnBedAtEnd:blue_pyramid_block:yellow) )
        )
      )
      (>= (* (* 20 5 )
          2
        )
        (count ballOnBedAtEnd:blue_cube_block)
      )
    )
  )
)
(:scoring
  (* 1 (external-forall-maximize (count ballOnBedAtEnd:white) ) 50 )
)
)



(define (game game-id-862) (:domain few-objects-room-v1)
(:setup
  (forall (?b9 - wall ?o3 - hexagonal_bin)
    (and
      (and
        (game-conserved
          (on ?o3 ?o3)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?b - (either dodgeball block cellphone) ?c - beachball)
        (at-end
          (on agent ?c)
        )
      )
    )
    (preference ballRolledOnRampToRug
      (exists (?b10 - pillow)
        (at-end
          (in_motion ?b10)
        )
      )
    )
  )
)
(:terminal
  (= (* 50 5 )
    (count-once-per-objects beachballBouncedOffRamp:blue_dodgeball)
  )
)
(:scoring
  (* (* 2 (count ballRolledOnRampToRug:dodgeball) )
    (/
      3
      (count-longest beachballBouncedOffRamp:yellow)
    )
  )
)
)



(define (game game-id-863) (:domain few-objects-room-v1)
(:setup
  (forall (?b3 - dodgeball)
    (not
      (and
        (game-optional
          (in_motion ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - pyramid_block ?c1 - game_object ?b - golfball)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?db - sliding_door)
            (then
              (once (in_motion ?b) )
              (once (not (on ?b floor) ) )
              (hold (on ?b ?db) )
            )
          )
        )
        (preference thrownBallReachesEnd
          (then
            (hold (and (and (between ?b ?b bed) (and (and (and (and (in_motion ?b) (< (distance door ?b) (distance_side ?b left agent back)) (not (on ?b ?b) ) ) (and (and (and (toggled_on ?b) (equal_z_position ?b ?b) ) (in_motion ?b) ) (not (not (agent_holds ?b) ) ) (adjacent ?b ?b) ) ) (and (agent_holds ?b) (in_motion agent) ) ) (not (agent_holds ?b) ) ) ) (on ?b ?b) ) )
            (once (adjacent_side bed left ?b) )
            (once (and (agent_holds ?b) (and (forall (?w - shelf ?d - (either basketball tall_cylindrical_block)) (not (and (adjacent desk ?b) (agent_holds ?b) ) ) ) (= 1 0) ) ) )
          )
        )
      )
    )
    (preference objectOnBed
      (exists (?l2 - beachball)
        (then
          (once (agent_holds ?l2) )
          (once (same_type agent ?l2) )
          (once (same_type ?l2 ?l2) )
        )
      )
    )
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - wall)
        (then
          (once (in ?d agent) )
          (hold (and (adjacent_side side_table right ?d) (on ?d ?d) ) )
          (hold (and (on ?d ?d) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-score) )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:basketball)
)
)



(define (game game-id-864) (:domain few-objects-room-v1)
(:setup
  (forall (?d2 - ball)
    (and
      (and
        (game-optional
          (in ?d2 ?d2)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - tall_cylindrical_block)
      (and
        (preference throwGolfballToBin
          (exists (?d - yellow_pyramid_block ?c - shelf)
            (then
              (hold-while (touch ?c agent) (or (not (in_motion ?c) ) (same_object ?c ?b2) (on ?b2 ?b2) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?d - (either triangle_block dodgeball main_light_switch pencil cube_block cube_block dodgeball))
            (at-end
              (on ?d ?d)
            )
          )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?ob - hexagonal_bin)
        (then
          (once (agent_holds ?ob) )
          (once (game_start ) )
          (once (< 2 1) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (* (count objectThrownFromRug:doggie_bed) (+ (external-forall-maximize (count ballThrownToRug:rug:basketball) ) (count-increasing-measure throwGolfballToBin:red) (- (- (= (* (count throwGolfballToBin:purple) (* (* 7 (* 0 (>= 2 20 )
                      (count ballThrownToRug:dodgeball:pyramid_block)
                    )
                  )
                  (count ballThrownToRug:orange)
                )
              )
              (count objectThrownFromRug:book)
            )
          )
        )
        (count throwGolfballToBin:yellow)
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownToRug:red)
)
)



(define (game game-id-865) (:domain few-objects-room-v1)
(:setup
  (forall (?o - desk_shelf ?t - wall)
    (game-conserved
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?b5 - (either pillow dodgeball cellphone))
        (at-end
          (on ?b5 ?b5)
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= (= 300 (* (count-same-positions golfballInBinFromPillow:dodgeball) 7 )
          )
          (total-time)
        )
        (> 30 (count-unique-positions golfballInBinFromPillow:block:orange) )
      )
    )
    (or
      (>= 2 (* 15 (count-once-per-objects golfballInBinFromPillow:dodgeball) )
      )
      (<= (total-score) 5 )
      (>= (total-score) (* (count golfballInBinFromPillow:red) 8 )
      )
    )
    (>= (count golfballInBinFromPillow:orange) (external-forall-minimize (count-once-per-objects golfballInBinFromPillow:yellow_pyramid_block) ) )
  )
)
(:scoring
  (count golfballInBinFromPillow:book:yellow)
)
)



(define (game game-id-866) (:domain few-objects-room-v1)
(:setup
  (forall (?d - pink_dodgeball ?o - pyramid_block)
    (game-conserved
      (agent_holds ?o)
    )
  )
)
(:constraints
  (and
    (preference teddyBearHitsBall
      (exists (?h - ball)
        (then
          (once-measure (in_motion floor) (distance ?h ?h) )
          (once (not (not (adjacent bed ?h) ) ) )
          (once (and (forall (?c3 - teddy_bear ?w - building) (in_motion ?h) ) (adjacent ?h ?h) ) )
        )
      )
    )
    (forall (?l2 - hexagonal_bin ?h - curved_wooden_ramp)
      (and
        (preference blockCorrectlyPicked
          (exists (?b - block)
            (then
              (hold (and (in_motion ?b) (and (and (and (on ?h ?b) (not (agent_holds ?b) ) (touch ?b ?h) (in_motion ?b) ) (< 7 (distance desk ?b)) (and (equal_z_position room_center ?b) (agent_holds ?h) ) ) (and (agent_holds ?b) (adjacent_side bed back ?h) ) (faces ?b ?h) ) ) )
              (once (not (in_motion side_table) ) )
              (once (in_motion ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (+ (* (+ (* (* (+ (count-once-per-objects teddyBearHitsBall:dodgeball) 5 )
              5
            )
            (* 10 (+ (count teddyBearHitsBall:golfball) (count blockCorrectlyPicked:dodgeball:beachball) )
              2
            )
            (count teddyBearHitsBall)
          )
          (count-once-per-objects blockCorrectlyPicked:golfball)
        )
        3
      )
      2
    )
    (count-once-per-objects blockCorrectlyPicked:red:dodgeball:basketball)
  )
)
(:scoring
  (* 5 (count blockCorrectlyPicked:pink_dodgeball:green:pink_dodgeball) )
)
)



(define (game game-id-867) (:domain medium-objects-room-v1)
(:setup
  (or
    (exists (?d - dodgeball ?b - wall)
      (and
        (game-conserved
          (on ?b ?b)
        )
        (and
          (game-conserved
            (and
              (in_motion ?b)
              (rug_color_under ?b pink)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?d - wall ?r ?h ?c - ball ?g - (either laptop ball cube_block))
        (then
          (hold-while (and (and (not (on ?g ?g) ) (in_motion ?g) ) (on bed blue) ) (and (on ?g ?g) (agent_holds ?g) ) (touch top_drawer ?g) )
        )
      )
    )
    (preference pyramidBlockAtopTowerAtEnd
      (exists (?o - hexagonal_bin)
        (then
          (once (<= 10 9) )
          (once (< (distance desk ?o) (distance room_center ?o)) )
          (once (above ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (= (+ 10 (count-once-per-objects binKnockedOver:basketball:purple) )
    (total-score)
  )
)
(:scoring
  (count binKnockedOver:bed:tall_cylindrical_block)
)
)



(define (game game-id-868) (:domain many-objects-room-v1)
(:setup
  (forall (?b - hexagonal_bin)
    (game-conserved
      (and
        (not
          (and
            (not
              (in ?b ?b)
            )
            (and
              (not
                (agent_holds ?b)
              )
              (in ?b ?b)
            )
            (and
              (> 1 (building_size ?b))
              (not
                (agent_holds ?b)
              )
            )
          )
        )
        (is_setup_object ?b)
      )
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?b - ball)
        (at-end
          (agent_holds bed)
        )
      )
    )
    (forall (?t - cube_block ?h - dodgeball)
      (and
        (preference woodenBlockMovedFromRugToDesk
          (exists (?o4 - teddy_bear)
            (at-end
              (agent_holds ?h)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-time) 1 )
      (>= 10 (total-time) )
    )
    (>= (total-time) (* 10 (* (- 3 )
          (count woodenBlockMovedFromRugToDesk:basketball)
        )
      )
    )
  )
)
(:scoring
  (count-once-per-external-objects woodenBlockMovedFromRugToDesk:blue_dodgeball:dodgeball)
)
)



(define (game game-id-869) (:domain medium-objects-room-v1)
(:setup
  (exists (?s - cube_block)
    (game-conserved
      (opposite bed ?s)
    )
  )
)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?o - hexagonal_bin)
            (at-end
              (faces floor ?b)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (count-once-per-objects objectOnBed:red) )
)
(:scoring
  (count objectOnBed:book:blue_dodgeball)
)
)



(define (game game-id-870) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?r1 - game_object ?o - (either tall_cylindrical_block wall))
      (exists (?h - pink_dodgeball)
        (forall (?p1 - cube_block ?o2 - block ?b2 - hexagonal_bin)
          (or
            (exists (?r1 - doggie_bed)
              (and
                (game-optional
                  (agent_holds ?o)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?h - pillow)
        (then
          (once (agent_holds ?h) )
          (once (agent_holds ?h) )
          (hold (and (and (< (distance desk ?h) 1) (same_type ?h ?h) ) (exists (?o - hexagonal_bin) (on ?o ?o) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwFromDoorToBin:red) 5 )
)
(:scoring
  (count throwFromDoorToBin:dodgeball)
)
)



(define (game game-id-871) (:domain medium-objects-room-v1)
(:setup
  (exists (?o5 - shelf ?z ?z0 ?z1 - front_left_corner ?h - game_object ?b1 - hexagonal_bin)
    (game-conserved
      (same_color ?b1 gray)
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?o - chair)
        (then
          (once (and (not (and (or (and (or (agent_holds ?o) (rug_color_under ?o orange) ) ) (touch agent ?o) ) (and (on ?o ?o) (on ?o ?o) ) ) ) (in_motion ?o) (agent_holds agent) (<= 1 0) (agent_holds ?o) (same_color ?o gray) (in ?o ?o) ) )
          (hold-while (in_motion ?o) (equal_x_position ?o ?o) (agent_holds ?o) )
          (once (not (and (in_motion ?o) (and (and (< (distance ?o ?o) (x_position ?o)) (on ?o agent) ) (agent_holds ?o) ) (agent_crouches ) (and (in_motion ?o) (not (not (in_motion ?o) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (* 3 (* 6 20 (* 4 10 (count dodgeballThrownToBinFromDesk:golfball) )
        )
      )
      (count-once-per-objects dodgeballThrownToBinFromDesk:book:purple)
    )
    (>= (count dodgeballThrownToBinFromDesk:golfball) (total-score) )
  )
)
(:scoring
  (* 3 (* (- (= 2 (+ (* (* 5 5 (* 5 (external-forall-maximize (* 3 (count dodgeballThrownToBinFromDesk:hexagonal_bin) )
                  )
                )
                (count-once-per-objects dodgeballThrownToBinFromDesk)
                (* (count dodgeballThrownToBinFromDesk:pyramid_block:yellow) (count dodgeballThrownToBinFromDesk:pink) )
                10
                (* (* 10 (+ 3 50 5 )
                    3
                  )
                  0
                  (count-unique-positions dodgeballThrownToBinFromDesk:blue_dodgeball:blue_cube_block)
                  (count-same-positions dodgeballThrownToBinFromDesk:dodgeball)
                  (count-once dodgeballThrownToBinFromDesk:beachball)
                  (count dodgeballThrownToBinFromDesk:blue_dodgeball:golfball)
                  (count-once-per-objects dodgeballThrownToBinFromDesk:beachball:basketball)
                  2
                  (count dodgeballThrownToBinFromDesk:doggie_bed)
                )
              )
              (count-same-positions dodgeballThrownToBinFromDesk:pyramid_block)
            )
            (-
              2
              (* (= 10 (count-once-per-objects dodgeballThrownToBinFromDesk:dodgeball) )
                (+ (- (count dodgeballThrownToBinFromDesk:dodgeball) )
                  (* 2 (count dodgeballThrownToBinFromDesk:book) )
                )
              )
            )
          )
        )
      )
      (count dodgeballThrownToBinFromDesk:orange)
    )
  )
)
)



(define (game game-id-872) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?o2 - hexagonal_bin)
      (game-conserved
        (and
          (>= 10 (distance room_center ?o2))
          (faces agent agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bounceBallToBin
      (exists (?o5 - tall_cylindrical_block)
        (then
          (once (not (and (agent_holds ?o5) (agent_holds ?o5) (not (and (in_motion ?o5) (not (agent_holds brown) ) (exists (?r2 - flat_block) (not (and (and (not (agent_holds ?r2) ) (forall (?o2 - ball) (and (agent_holds ?o5) (agent_holds blue) ) ) ) (< (distance ?o5 ?r2) (distance ?o5 ?r2)) ) ) ) ) ) ) ) )
          (hold (or (equal_z_position door ?o5) (< (distance room_center ?o5) (distance bed ?o5)) (between bed ?o5 ?o5) ) )
          (hold (agent_holds bed) )
          (once (not (and (on ?o5 ?o5) (on ?o5 ?o5) ) ) )
        )
      )
    )
    (forall (?b1 - (either pencil dodgeball tall_cylindrical_block cylindrical_block))
      (and
        (preference bookOnDeskShelf
          (then
            (once (in_motion ?b1) )
            (once (in_motion ?b1) )
            (once (agent_holds ?b1) )
          )
        )
        (preference throwGolfballToBin
          (exists (?d - hexagonal_bin)
            (then
              (hold (agent_holds rug) )
              (hold (in_motion ?b1) )
              (hold (same_type ?d ?d) )
            )
          )
        )
      )
    )
    (preference ballThrownMissesEverything
      (exists (?c - pyramid_block)
        (then
          (hold (and (and (in_motion ?c) (game_start ) ) (forall (?b7 - game_object) (and (agent_holds agent) (agent_holds bed) ) ) (in_motion ?c) (agent_holds agent) (in_motion ?c) (agent_holds ?c) ) )
          (hold (not (exists (?o - dodgeball ?b - desk_shelf) (on ?b ?c) ) ) )
          (once (not (and (in_motion ?c) (in_motion ?c) (equal_x_position room_center ?c) (opposite ?c ?c) ) ) )
        )
      )
    )
    (forall (?b1 ?ob - pillow)
      (and
        (preference ballThrowAttempt
          (exists (?o - hexagonal_bin)
            (at-end
              (and
                (not
                  (agent_holds ?o)
                )
                (not
                  (not
                    (exists (?h - hexagonal_bin)
                      (agent_holds ?ob)
                    )
                  )
                )
              )
            )
          )
        )
        (preference golfballUnderBridgeWithoutTouchingBlock
          (exists (?h - blue_cube_block ?g - hexagonal_bin)
            (then
              (once (not (on ?g ?g) ) )
              (once (in_motion ?g) )
              (once (in_motion ?b1) )
            )
          )
        )
        (preference throwAttempt
          (exists (?h - hexagonal_bin ?b - curved_wooden_ramp)
            (at-end
              (and
                (not
                  (opposite ?b1 ?b)
                )
                (in_motion ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 10 )
    (count-same-positions throwGolfballToBin:dodgeball)
  )
)
(:scoring
  (count throwGolfballToBin:basketball:dodgeball)
)
)



(define (game game-id-873) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin ?db - hexagonal_bin ?d - dodgeball)
    (and
      (game-conserved
        (not
          (not
            (agent_holds ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?o4 - triangular_ramp)
        (then
          (once (adjacent desk ?o4) )
          (once (= 1 (distance ?o4 ?o4)) )
          (hold (exists (?c - (either blue_cube_block)) (in_motion ?c) ) )
        )
      )
    )
    (preference failedThrowToBin
      (exists (?d - dodgeball)
        (at-end
          (agent_holds ?d)
        )
      )
    )
  )
)
(:terminal
  (>= (external-forall-maximize (count failedThrowToBin:golfball) ) (count-once failedThrowToBin:yellow_cube_block) )
)
(:scoring
  (>= (+ 6 (count golfballLandsInBinThroughRamp:purple) )
    (count failedThrowToBin:purple:red:blue_dodgeball)
  )
)
)



(define (game game-id-874) (:domain medium-objects-room-v1)
(:setup
  (exists (?l ?h ?h ?w1 - hexagonal_bin)
    (game-optional
      (adjacent desk ?h)
    )
  )
)
(:constraints
  (and
    (preference dodgeballAndBasketballInBin
      (exists (?b4 - dodgeball)
        (then
          (hold-while (adjacent_side ?b4 left ?b4 left) (adjacent ?b4 ?b4) )
          (once-measure (adjacent ?b4 ?b4) (distance room_center ?b4) )
          (hold (game_over ) )
        )
      )
    )
    (preference objectToBinOnFirstTry
      (exists (?t - pillow)
        (then
          (once (not (in_motion ?t) ) )
          (once (on ?t ?t) )
          (hold (in_motion ?t) )
        )
      )
    )
  )
)
(:terminal
  (>= 0 (total-time) )
)
(:scoring
  (* (* 4 5 2 )
    (count dodgeballAndBasketballInBin:dodgeball)
  )
)
)



(define (game game-id-875) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l - (either yellow_cube_block cellphone mug))
      (or
        (game-conserved
          (exists (?b4 - doggie_bed)
            (and
              (agent_holds ?l)
              (agent_holds agent)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - block)
      (and
        (preference throwAttempt
          (then
            (once (on ?h ?h) )
            (hold (in agent bed) )
            (once (not (game_start ) ) )
            (once (agent_holds floor) )
          )
        )
        (preference objectInBuilding
          (exists (?c6 - desktop)
            (then
              (once (not (in_motion ?h) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-once-per-objects throwAttempt:dodgeball) (* 50 (external-forall-minimize (* 0.5 (* 2 (* (+ (count-overlapping objectInBuilding:hexagonal_bin) 3 )
                (count-overlapping throwAttempt:dodgeball)
              )
              3
            )
          )
        )
      )
    )
    (>= (total-time) (count objectInBuilding:dodgeball) )
  )
)
(:scoring
  (* 10 7 )
)
)



(define (game game-id-876) (:domain many-objects-room-v1)
(:setup
  (exists (?c1 - doggie_bed)
    (game-conserved
      (not
        (< 1 3)
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallHitsBlock
      (exists (?h - (either dodgeball cylindrical_block key_chain))
        (then
          (hold (not (in_motion ?h) ) )
          (once (not (agent_holds ?h) ) )
          (once (and (adjacent ?h ?h) (not (agent_holds ?h) ) ) )
        )
      )
    )
    (forall (?d - drawer)
      (and
        (preference bounceBallToBin
          (exists (?c ?p3 - ball ?l - (either cylindrical_block game_object))
            (then
              (once (agent_holds ?l) )
              (once (agent_holds ?d) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count bounceBallToBin:hexagonal_bin) 1 )
    1
  )
)
(:scoring
  (+ (count-once-per-objects bounceBallToBin:golfball) 2 )
)
)



(define (game game-id-877) (:domain medium-objects-room-v1)
(:setup
  (game-conserved
    (adjacent desk side_table)
  )
)
(:constraints
  (and
    (preference matchingBuildingBuilt
      (exists (?d - (either triangle_block floor) ?c - block)
        (then
          (hold (forall (?c - (either dodgeball alarm_clock)) (and (in_motion ?c) (not (on ?c ?c) ) ) ) )
          (hold-while (not (and (same_object ?c ?c) (and (on ?c ?c) (in_motion ?c) (agent_holds ?c) ) ) ) (agent_holds ?c) )
          (once (same_color side_table ?c) )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?r2 - game_object)
        (then
          (once (and (or (and (agent_holds ?r2) (same_type ?r2 ?r2) ) (on ?r2 ?r2) ) (not (agent_holds west_wall) ) ) )
          (once (or (agent_holds agent) ) )
          (once (agent_holds ?r2) )
        )
      )
    )
    (preference cubeBlockThrownToTopShelf
      (exists (?g - (either dodgeball bridge_block dodgeball dodgeball) ?o - cube_block)
        (then
          (hold (and (in_motion ?o) (exists (?g - wall) (not (agent_holds ?g) ) ) ) )
          (hold (not (adjacent_side ?o front_left_corner ?o front) ) )
          (once (same_color agent ?o) )
        )
      )
    )
    (preference ballThrownToRampToBed
      (exists (?tb ?b4 - pillow ?o - hexagonal_bin)
        (then
          (once (agent_holds ?o) )
          (once (adjacent ?o ?o) )
          (once (adjacent rug ?o) )
        )
      )
    )
    (preference throwMissesBin
      (exists (?o ?b10 - building)
        (then
          (once (agent_holds ?b10) )
          (hold-while (in_motion ?b10) (<= 0 1) (agent_holds ?b10) )
          (once (< 2 1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count throwMissesBin:basketball) (count ballThrownToRampToBed:dodgeball) )
    (not
      (>= (count-once-per-objects cubeBlockThrownToTopShelf:dodgeball:green) 1 )
    )
  )
)
(:scoring
  (- 5 )
)
)



(define (game game-id-878) (:domain medium-objects-room-v1)
(:setup
  (exists (?b5 ?b5 - ball)
    (and
      (game-conserved
        (agent_holds ?b5)
      )
      (game-conserved
        (and
          (on ?b5 ?b5)
        )
      )
      (and
        (exists (?t - block)
          (and
            (game-optional
              (agent_holds ?t)
            )
          )
        )
        (forall (?bl - building)
          (game-conserved
            (not
              (agent_holds ?bl)
            )
          )
        )
        (forall (?ob - game_object)
          (and
            (exists (?l3 - flat_block)
              (game-conserved
                (and
                  (agent_holds desk)
                  (and
                    (in_motion ?b5)
                    (forall (?o - hexagonal_bin)
                      (agent_holds ?o)
                    )
                    (not
                      (same_type ?l3 block)
                    )
                  )
                  (same_object ?l3 ?ob)
                )
              )
            )
            (game-conserved
              (in ?ob ?ob)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?db - wall)
        (at-end
          (agent_holds ?db)
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?c2 - shelf ?b - triangular_ramp)
        (then
          (once (adjacent ?b ?b) )
          (hold (not (adjacent ?b ?b) ) )
          (hold (and (agent_holds ?b) (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (> (* (= (count-once-per-objects smallItemsInPlace:beachball) (* (count-once-per-objects objectInBuilding) 1 5 )
        )
        (count-once-per-objects objectInBuilding:brown)
      )
      (+ (* 100 (count smallItemsInPlace:dodgeball) 15 )
        3
        (count-once-per-objects smallItemsInPlace:blue_pyramid_block)
      )
    )
  )
)
(:scoring
  (count objectInBuilding:pink)
)
)



(define (game game-id-879) (:domain many-objects-room-v1)
(:setup
  (exists (?l - dodgeball)
    (exists (?s - hexagonal_bin)
      (not
        (or
          (game-optional
            (exists (?b ?r1 ?h - wall ?bl - doggie_bed)
              (not
                (agent_holds ?l)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?d - dodgeball ?b ?c ?h - green_triangular_ramp)
        (then
          (once (and (< (distance door ?h) (distance green_golfball ?c)) (game_start ) ) )
          (once (agent_holds ?h) )
          (hold (not (same_color agent yellow) ) )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?h - hexagonal_bin)
        (then
          (once (< (distance room_center ?h) 8) )
          (hold (>= 5 1) )
          (once (not (in_motion ?h) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 180 (total-score) )
)
(:scoring
  (count pillowThrownToDoggieBed:beachball)
)
)



(define (game game-id-880) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?b - golfball ?w - (either teddy_bear triangle_block))
      (exists (?x - color)
        (and
          (exists (?w1 - (either laptop cd))
            (exists (?s - shelf)
              (forall (?b - hexagonal_bin ?o - hexagonal_bin)
                (game-optional
                  (agent_holds ?w)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b - wall ?b8 - doggie_bed)
        (then
          (once (not (not (in_motion ?b8) ) ) )
          (once (same_color ?b8 ?b8) )
        )
      )
    )
  )
)
(:terminal
  (or
    (not
      (>= (total-score) (count cubeBlockInBuilding:pink_dodgeball) )
    )
    (= (total-score) (count cubeBlockInBuilding:basketball) )
  )
)
(:scoring
  (count-once-per-objects cubeBlockInBuilding:blue_dodgeball)
)
)



(define (game game-id-881) (:domain few-objects-room-v1)
(:setup
  (exists (?z ?z0 ?z1 - right)
    (exists (?b ?d - hexagonal_bin)
      (game-conserved
        (is_setup_object top_shelf)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?g ?b4 ?b3 ?o1 ?l3 ?o3 - game_object)
        (then
          (once (rug_color_under ?o3 light_blue) )
          (hold (in ?g ?o1) )
          (hold (agent_holds ?o1) )
        )
      )
    )
  )
)
(:terminal
  (< (- 3 )
    (total-score)
  )
)
(:scoring
  (count-once-per-external-objects dodgeballThrownToBin:yellow)
)
)



(define (game game-id-882) (:domain many-objects-room-v1)
(:setup
  (exists (?o3 - (either dodgeball cellphone))
    (game-conserved
      (agent_holds ?o3)
    )
  )
)
(:constraints
  (and
    (preference beachballBouncedOffRamp
      (exists (?g ?p - cube_block ?bl - cylindrical_block)
        (then
          (once (not (agent_holds green_golfball) ) )
          (hold-while (not (in_motion ?bl) ) (not (or (in_motion agent) (not (and (adjacent room_center ?bl) (agent_holds ?bl) (game_over ) (on ?bl ?bl) (above ?bl ?bl) (adjacent desk ?bl) (and (on ?bl ?bl) (faces desk ?bl) (and (and (and (in_motion ?bl) (and (in green ?bl) (< 1 1) ) ) (in ?bl ?bl) ) (in_motion ?bl) ) ) (not (on ?bl ?bl) ) (and (on ?bl ?bl) (in_motion ?bl) (and (and (not (agent_holds ?bl) ) (and (not (in_motion ?bl) ) (> (distance ?bl agent) (distance room_center ?bl)) (agent_holds ?bl) ) ) (not (in ?bl ?bl) ) ) ) (and (not (agent_holds ?bl) ) (agent_holds ?bl) (not (adjacent desk agent) ) ) ) ) ) ) )
          (once (in_motion ?bl) )
        )
      )
    )
  )
)
(:terminal
  (< (total-time) 10 )
)
(:scoring
  (count beachballBouncedOffRamp:red)
)
)



(define (game game-id-883) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion bed)
  )
)
(:constraints
  (and
    (forall (?p3 - cube_block)
      (and
        (preference failedThrowAttempt
          (exists (?h - teddy_bear ?o4 - dodgeball)
            (then
              (once (< 1 (distance room_center ?o4)) )
              (hold-while (in_motion ?o4) (in rug ?p3) )
              (hold (not (in_motion ?o4) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (- 0 (count failedThrowAttempt) ) 4 )
    (>= 10 5 )
    (> (count failedThrowAttempt:pink_dodgeball:dodgeball) (total-score) )
  )
)
(:scoring
  (* 0 (* (= (count-once-per-objects failedThrowAttempt:blue_dodgeball) 10 3 )
      10
    )
  )
)
)



(define (game game-id-884) (:domain many-objects-room-v1)
(:setup
  (or
    (exists (?d - ball ?g - shelf)
      (exists (?b - dodgeball)
        (exists (?c - (either credit_card dodgeball key_chain))
          (exists (?l2 - block ?h - chair)
            (exists (?f - hexagonal_bin)
              (game-conserved
                (same_type ?g ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownObjectHitsComputer
      (exists (?o - ball)
        (at-end
          (not
            (not
              (in_motion ?o)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count-total thrownObjectHitsComputer:purple) (count-measure thrownObjectHitsComputer:dodgeball:alarm_clock) )
  )
)
(:scoring
  (* (count-once thrownObjectHitsComputer:beachball) (count-once-per-objects thrownObjectHitsComputer:doggie_bed) )
)
)



(define (game game-id-885) (:domain medium-objects-room-v1)
(:setup
  (forall (?b - ball)
    (game-conserved
      (agent_holds ?b)
    )
  )
)
(:constraints
  (and
    (forall (?h - (either bridge_block doggie_bed))
      (and
        (preference failedThrowToBin
          (exists (?h - pillow)
            (then
              (once (and (not (in_motion ?h) ) (= (distance desk ?h) 1) ) )
              (once (not (not (not (in_motion ?h) ) ) ) )
              (hold (on ?h ?h) )
            )
          )
        )
        (preference blindsOpened
          (exists (?h - ball)
            (at-end
              (and
                (in ?h ?h)
                (in_motion ?h)
                (not
                  (agent_holds ?h)
                )
                (in_motion ?h)
                (= 2 9)
                (and
                  (on ?h ?h)
                  (agent_holds ?h)
                )
                (not
                  (in_motion rug)
                )
              )
            )
          )
        )
      )
    )
    (forall (?h - cube_block)
      (and
        (preference cubeBlockThrownToTopShelf
          (exists (?o5 - hexagonal_bin ?h - wall)
            (then
              (hold-while (adjacent_side desk back ?h) (agent_holds ?h) (not (in agent ?h) ) )
              (hold (and (not (agent_holds ?h) ) (and (in_motion ?h) (and (not (in_motion agent) ) (not (not (not (agent_holds ?h) ) ) ) ) ) ) )
              (hold (same_color bed ?h) )
              (hold (and (in_motion ?h) (agent_holds agent) (> (distance door ?h) (distance ?h desk)) ) )
            )
          )
        )
        (preference throwMovesBeachballWithoutKnockingTeddy
          (exists (?h - (either key_chain watch))
            (then
              (once (on ?h ?h) )
              (once (on ?h ?h) )
              (once (not (in_motion agent) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 7 (count blindsOpened:cylindrical_block) )
    (count-once blindsOpened:dodgeball)
  )
)
(:scoring
  (count throwMovesBeachballWithoutKnockingTeddy:hexagonal_bin)
)
)



(define (game game-id-886) (:domain few-objects-room-v1)
(:setup
  (forall (?b1 - ball)
    (forall (?o - doggie_bed)
      (game-optional
        (adjacent ?b1 agent)
      )
    )
  )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?r2 - curved_wooden_ramp)
        (then
          (once (in_motion ?r2) )
          (hold (on ?r2 ?r2) )
          (hold (in ?r2 ?r2) )
          (hold (and (agent_holds ?r2) (agent_holds ?r2) ) )
          (once (in_motion ?r2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (not
        (>= 4 10 )
      )
      (or
        (or
          (or
            (>= (total-score) (total-score) )
          )
        )
        (>= (count woodenBlockMovedFromRugToDesk:dodgeball) (* 3 15 )
        )
      )
      (<= 18 (* (count woodenBlockMovedFromRugToDesk:pink) )
      )
    )
    (or
      (>= (+ (count woodenBlockMovedFromRugToDesk:golfball:cube_block) 15 )
        (count-measure woodenBlockMovedFromRugToDesk:dodgeball)
      )
      (not
        (<= 2 (count woodenBlockMovedFromRugToDesk:golfball:brown) )
      )
    )
  )
)
(:scoring
  (- (count-once woodenBlockMovedFromRugToDesk:dodgeball:pink) )
)
)



(define (game game-id-887) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (not
      (agent_holds pink)
    )
  )
)
(:constraints
  (and
    (preference objectThrownFromRug
      (exists (?c - building ?g - curved_wooden_ramp ?b - hexagonal_bin)
        (then
          (hold (agent_holds ?b) )
          (once (adjacent desk ?b) )
          (once (and (touch ?b ?b) (not (touch ?b bed) ) ) )
          (once (and (not (and (forall (?h - ball) (or (agent_holds ?b) (agent_holds ?b) ) ) (on ?b ?b) ) ) (not (and (not (agent_holds ?b) ) (in ?b ?b) (game_over ) (and (not (touch ?b ?b) ) (in_motion agent) ) ) ) ) )
          (hold (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count objectThrownFromRug:dodgeball:basketball) )
)
(:scoring
  (count objectThrownFromRug:dodgeball)
)
)



(define (game game-id-888) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b8 - dodgeball)
      (and
        (and
          (game-conserved
            (agent_holds ?b8)
          )
        )
        (game-conserved
          (and
            (or
              (< (x_position desk) 2)
            )
            (not
              (not
                (on ?b8 agent)
              )
            )
          )
        )
        (and
          (and
            (and
              (game-conserved
                (not
                  (and
                    (in ?b8 ?b8)
                    (in_motion floor)
                  )
                )
              )
              (exists (?b9 - (either flat_block bridge_block))
                (forall (?p - hexagonal_bin ?c4 - ball ?d - ball)
                  (and
                    (game-conserved
                      (above agent ?d)
                    )
                    (game-optional
                      (agent_holds ?b9)
                    )
                    (and
                      (exists (?p - shelf)
                        (and
                          (or
                            (exists (?o2 - dodgeball)
                              (game-conserved
                                (faces ?b8 ?p)
                              )
                            )
                            (game-optional
                              (same_color ?b8 ?d)
                            )
                          )
                        )
                      )
                      (game-optional
                        (not
                          (in_motion ?b9)
                        )
                      )
                      (forall (?c - cube_block)
                        (and
                          (game-conserved
                            (and
                              (> (distance ?b9 ?b9) 1)
                              (in_motion ?b9)
                              (in ?d ?c)
                              (in_motion ?b8)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (and
                (game-conserved
                  (in_motion ?b8)
                )
              )
            )
            (and
              (forall (?h - game_object ?p - (either blue_cube_block dodgeball))
                (game-conserved
                  (and
                    (on ?p ?b8)
                    (forall (?c - red_dodgeball)
                      (forall (?r1 - hexagonal_bin)
                        (adjacent ?p ?b8)
                      )
                    )
                  )
                )
              )
            )
            (forall (?d - pyramid_block)
              (and
                (exists (?b8 - wall)
                  (exists (?s - shelf)
                    (forall (?h ?t - dodgeball)
                      (exists (?b - hexagonal_bin ?x - tan ?h - cylindrical_block)
                        (and
                          (exists (?b7 - hexagonal_bin ?p - (either dodgeball book))
                            (game-conserved
                              (in_motion ?d)
                            )
                          )
                          (forall (?c6 - block ?tb - cylindrical_block)
                            (game-optional
                              (not
                                (not
                                  (and
                                    (not
                                      (in_motion ?s)
                                    )
                                    (and
                                      (adjacent desk ?b8)
                                      (not
                                        (on desk ?tb)
                                      )
                                    )
                                    (on ?h ?b8)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-optional
              (agent_holds ?b8)
            )
          )
          (game-optional
            (not
              (not
                (in_motion agent)
              )
            )
          )
          (game-conserved
            (not
              (same_object ?b8 ?b8)
            )
          )
          (exists (?c - ball ?o - (either cube_block dodgeball))
            (game-conserved
              (>= 1 1)
            )
          )
        )
      )
    )
    (forall (?d2 - hexagonal_bin)
      (game-optional
        (same_color ?d2 ?d2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - ball ?l2 - dodgeball)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?o - pillow)
            (then
              (hold-while (game_over ) (in_motion ?l2) (and (and (object_orientation ?l2 upright) (opposite ?o ?l2) ) (in ?l2 ?o) ) )
              (hold (and (<= 8 (distance room_center ?o)) (and (not (in_motion ?o) ) (= (distance ?o ?o) 1 (distance door ?l2)) ) ) )
              (hold-while (toggled_on agent) (and (agent_holds agent) (not (in ?o ?l2) ) ) )
              (once (agent_holds ?l2) )
              (once (and (agent_holds ?o) (game_over ) ) )
            )
          )
        )
      )
    )
    (forall (?g - doggie_bed)
      (and
        (preference cubeThrownToBin
          (exists (?y - (either diagonal diagonal))
            (at-end
              (> (distance ?g bed) (distance ?g ?g))
            )
          )
        )
        (preference throwAttempt
          (exists (?d - wall ?c - cube_block)
            (at-end
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 8 (total-score) )
)
(:scoring
  (+ 3 3 )
)
)



(define (game game-id-889) (:domain few-objects-room-v1)
(:setup
  (exists (?o3 - game_object)
    (game-optional
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?b - hexagonal_bin)
        (then
          (once (between ?b brown ?b) )
          (once (agent_holds pink) )
          (hold (not (> 4 (distance ?b ?b)) ) )
          (hold (is_setup_object ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count objectInBuilding:yellow) (count-increasing-measure objectInBuilding:basketball) )
    (* (count-once objectInBuilding:green) 9 )
  )
)
(:scoring
  (* (* 4 (count-once-per-objects objectInBuilding:bed:beachball) )
    2
    (+ 5 (= 6 1 )
    )
    (count objectInBuilding:blue_pyramid_block)
    2
    5
  )
)
)



(define (game game-id-890) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - shelf)
    (exists (?r - dodgeball)
      (game-conserved
        (or
          (agent_holds ?t)
          (not
            (in_motion tan)
          )
          (and
            (same_object bed rug)
            (not
              (agent_holds ?t)
            )
          )
          (opposite ?t ?t)
          (agent_holds ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - drawer)
      (and
        (preference cubeBlockInBuilding
          (exists (?b2 - dodgeball)
            (then
              (hold-while (exists (?f - dodgeball) (not (same_color ?f ?f) ) ) (not (agent_holds ?b2) ) )
              (once (and (not (in_motion ?b2) ) (not (on ?b2 ?b) ) ) )
              (once (not (touch ?b ?b) ) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?t - cube_block)
        (then
          (once (and (not (agent_holds ?t) ) (and (agent_holds agent) (and (not (not (equal_x_position ?t floor) ) ) (same_color green_golfball ?t) ) ) ) )
          (once (not (agent_holds ?t) ) )
          (once (is_setup_object ?t) )
        )
      )
    )
    (forall (?d - wall ?o1 - doggie_bed)
      (and
        (preference throwMissesBin
          (exists (?h - building)
            (then
              (hold-while (on ?h ?o1) (not (not (< 1 (x_position ?h)) ) ) )
              (once (in_motion ?o1) )
              (once (in_motion ?h) )
            )
          )
        )
        (preference throwObjectToBin
          (at-end
            (on ?o1 ?o1)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (+ (count throwObjectToBin:beachball) 30 )
  )
)
(:scoring
  (count-shortest cubeBlockInBuilding:dodgeball)
)
)



(define (game game-id-891) (:domain many-objects-room-v1)
(:setup
  (exists (?t1 - dodgeball ?d - game_object ?c - hexagonal_bin)
    (game-conserved
      (in_motion ?c)
    )
  )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - doggie_bed ?b3 - hexagonal_bin)
        (then
          (hold (on side_table ?b3) )
          (once (adjacent ?b3 ?b3) )
          (hold (< (distance ?b3 ?b3) 1) )
        )
      )
    )
  )
)
(:terminal
  (> (count-increasing-measure throwFromEdgeOfRug:blue_dodgeball) (* (+ (count throwFromEdgeOfRug:doggie_bed) 5 )
      100
    )
  )
)
(:scoring
  (* 10 (count throwFromEdgeOfRug:yellow) )
)
)



(define (game game-id-892) (:domain many-objects-room-v1)
(:setup
  (forall (?o4 - dodgeball ?b8 - game_object)
    (game-conserved
      (agent_holds ?b8)
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?w1 - wall ?b1 - dodgeball)
        (then
          (once (exists (?h - (either side_table) ?b2 - shelf) (not (agent_holds ?b2) ) ) )
          (hold (agent_holds ?b1) )
          (once (not (in ?b1 ?b1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (total-time) )
)
(:scoring
  (count teddyBearLandsInBin:hexagonal_bin)
)
)



(define (game game-id-893) (:domain few-objects-room-v1)
(:setup
  (forall (?c - yellow_pyramid_block)
    (game-optional
      (agent_holds ?c)
    )
  )
)
(:constraints
  (and
    (forall (?o1 - game_object ?w2 - building)
      (and
        (preference objectMoved
          (exists (?d1 - curved_wooden_ramp ?db - hexagonal_bin)
            (then
              (hold (agent_holds ?db) )
              (once (forall (?o - game_object) (and (in_motion ?o) (agent_holds rug) ) ) )
              (hold-while (not (adjacent ?w2 ?db) ) (agent_holds ?db) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (count objectMoved:dodgeball) )
)
(:scoring
  (count objectMoved:blue_dodgeball:beachball)
)
)



(define (game game-id-894) (:domain medium-objects-room-v1)
(:setup
  (exists (?t1 - doggie_bed)
    (game-conserved
      (not
        (touch ?t1 ?t1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?c - book ?w1 - (either dodgeball floor laptop))
        (then
          (once (and (>= (distance desk agent) 1) (broken ?w1) ) )
          (once (and (adjacent door ?w1) (in_motion ?w1) ) )
          (once (agent_holds south_wall) )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (* 30 (external-forall-maximize (count throwBallToBinOffObject:dodgeball:blue_pyramid_block) ) (* (- (* 5 (* (= 10 (* (* 3 2 )
                  (count-overlapping throwBallToBinOffObject:yellow_cube_block)
                )
              )
              (= (count-measure throwBallToBinOffObject:beachball) )
            )
          )
        )
        2
        2
        20
        (count-once-per-objects throwBallToBinOffObject:green:basketball)
        (* (* 4 (* (count-once-per-objects throwBallToBinOffObject:pink_dodgeball:beachball) (count-once-per-objects throwBallToBinOffObject:hexagonal_bin:beachball) )
            (* 2 4 )
          )
          3
        )
      )
      (- 10 )
      1
    )
  )
)
(:scoring
  (external-forall-maximize
    (* 9 (+ (- 7 6 ) 7 )
    )
  )
)
)



(define (game game-id-895) (:domain many-objects-room-v1)
(:setup
  (forall (?d1 - hexagonal_bin)
    (game-optional
      (and
        (in ?d1 ?d1)
        (same_type ?d1 ?d1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball)
      (and
        (preference blockFromRugToDesk
          (exists (?ob - dodgeball)
            (then
              (once (and (in_motion floor) (exists (?b - red_dodgeball ?c - dodgeball) (on ?c bed) ) (agent_crouches ) ) )
              (once (and (in_motion ?ob) (not (in agent ?ob) ) ) )
              (once (not (agent_holds ?b) ) )
            )
          )
        )
        (preference objectMoved
          (then
            (once (not (and (adjacent room_center ?b) (agent_holds floor) ) ) )
            (once (on ?b ?b) )
            (hold (same_color ?b ?b) )
            (hold (on ?b agent) )
            (once (in_motion ?b) )
            (once (not (in_motion ?b) ) )
          )
        )
      )
    )
    (preference blocksInPlace
      (exists (?c - doggie_bed)
        (then
          (hold-while (agent_holds ?c) (and (and (agent_holds ?c) (not (in_motion ?c) ) ) (not (in_motion ?c) ) ) )
          (hold-while (on ?c ?c) (in_motion ?c) (on ?c top_shelf) )
          (hold (not (agent_holds ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= (* 2 3 7 (>= (external-forall-minimize (+ (+ (* (count-once blocksInPlace) (* 30 (count blockFromRugToDesk:dodgeball) )
                    2
                  )
                  (count blockFromRugToDesk:red)
                  (count objectMoved)
                )
                (* (- 2 )
                  100
                )
              )
            )
            2
          )
          3
          (+ (external-forall-maximize (* (count-once-per-objects objectMoved:beachball) 2 )
            )
            (* (count objectMoved:blue_dodgeball) 1 )
          )
          (+ (count-once-per-objects objectMoved:basketball:golfball) (count-once-per-objects blockFromRugToDesk:block:dodgeball:dodgeball) )
          (count blockFromRugToDesk:dodgeball)
          (* 9 10 )
        )
        8
      )
      (>= (total-time) (count-overlapping objectMoved:wall:pink_dodgeball:pink) )
    )
  )
)
(:scoring
  (- (+ (count-once-per-external-objects blockFromRugToDesk:pink) 10 (count-same-positions objectMoved:tall_cylindrical_block) 2 )
  )
)
)



(define (game game-id-896) (:domain medium-objects-room-v1)
(:setup
  (exists (?d - (either alarm_clock dodgeball dodgeball) ?h - curved_wooden_ramp)
    (forall (?b2 - bridge_block ?o2 - (either alarm_clock pyramid_block))
      (exists (?b - curved_wooden_ramp ?o - shelf)
        (exists (?l1 - (either blue_cube_block cube_block))
          (game-conserved
            (in ?h ?o)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromBehindBlock
      (exists (?o - cylindrical_block)
        (then
          (once (agent_holds ?o) )
          (once (and (equal_z_position door ?o) (not (in_motion ?o) ) (agent_holds ?o) (agent_holds ?o) ) )
          (once (adjacent ?o ?o) )
        )
      )
    )
    (preference bookOnDeskShelf
      (exists (?l3 ?b - teddy_bear)
        (then
          (once (adjacent desk ?l3) )
          (once (agent_holds ?b) )
          (hold (agent_crouches ) )
        )
      )
    )
    (preference throwInBin
      (exists (?z ?z0 ?z1 - left ?w1 ?c6 - ball)
        (at-end
          (agent_holds ?c6)
        )
      )
    )
  )
)
(:terminal
  (or
    (= 1 -10 )
    (<= (count-measure bookOnDeskShelf:golfball) (* (- (count throwAttemptFromBehindBlock:side_table) )
        (count throwAttemptFromBehindBlock:beachball)
      )
    )
  )
)
(:scoring
  (count-once-per-objects throwInBin:beachball)
)
)



(define (game game-id-897) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?l3 - ball)
      (exists (?w1 - cylindrical_block ?b3 - (either lamp) ?h - hexagonal_bin ?b3 - (either laptop dodgeball))
        (game-conserved
          (in ?b3 ?b3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?h - dodgeball)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?b - ball)
            (then
              (hold (and (not (touch ?h floor) ) (same_color agent ?b) ) )
              (once (agent_holds ?h) )
              (hold (and (in_motion ?h) (not (in_motion ?b) ) ) )
              (once (touch ?b ?h) )
            )
          )
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?b - cylindrical_block)
        (then
          (once (in_motion ?b) )
          (once (and (and (< 1 1) (agent_holds ?b) ) (in_motion ?b) ) )
          (once (in_motion rug) )
        )
      )
    )
    (preference beachballBouncedOffRamp
      (exists (?o - chair ?t - hexagonal_bin)
        (at-end
          (or
            (agent_holds agent)
            (agent_holds ?t)
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 9 (count itemsTurnedOff) )
    (total-score)
  )
)
(:scoring
  (/
    (count baseBlockInTowerAtEnd)
    (+ (* (* (- 2 )
          (count baseBlockInTowerAtEnd:golfball)
        )
        (* 7 (count-once-per-objects itemsTurnedOff:blue_cube_block) )
      )
      (count beachballBouncedOffRamp:dodgeball)
      (= 2 (count baseBlockInTowerAtEnd:beachball) )
    )
  )
)
)



(define (game game-id-898) (:domain medium-objects-room-v1)
(:setup
  (exists (?d1 - cube_block)
    (game-optional
      (and
        (not
          (and
            (on ?d1 ?d1)
            (in ?d1 ?d1)
            (and
              (agent_holds ?d1)
              (in_motion ?d1)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?w2 - hexagonal_bin ?h - hexagonal_bin)
        (at-end
          (on ?h ?h)
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (- 3 )
      (+ (+ (count-once-per-objects ballOnBedAtEnd:dodgeball:blue_dodgeball) )
        (* (- 10 )
          (count ballOnBedAtEnd:red_pyramid_block)
        )
      )
    )
  )
)
(:scoring
  (- (* 10 4 )
  )
)
)



(define (game game-id-899) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?p - (either cylindrical_block cube_block mug))
      (and
        (exists (?b - hexagonal_bin)
          (and
            (and
              (not
                (game-optional
                  (in ?b ?p)
                )
              )
            )
          )
        )
      )
    )
    (exists (?h - building)
      (game-conserved
        (and
          (in_motion ?h)
          (not
            (not
              (exists (?b3 - ball)
                (not
                  (same_color ?h agent)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?s - hexagonal_bin ?o3 - chair ?h - ball)
        (then
          (once (on ?h ?h) )
          (once (in_motion ?h) )
          (hold (and (not (on ?h ?h) ) (in_motion bed) ) )
        )
      )
    )
    (preference beachballOnRug
      (exists (?d - hexagonal_bin)
        (at-end
          (in_motion ?d)
        )
      )
    )
    (forall (?s - game_object ?h - doggie_bed ?b1 - hexagonal_bin)
      (and
        (preference laptopAndBookInPlace
          (then
            (hold-while (not (between ?b1 agent ?b1) ) (is_setup_object ?b1) (in_motion ?b1) )
            (once (not (agent_holds ?b1) ) )
            (once (in ?b1 ?b1) )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (< (- 2 )
      (* 4 (external-forall-maximize (> 2 30 )
        )
        12
      )
    )
  )
)
(:scoring
  (count beachballOnRug:golfball)
)
)



(define (game game-id-900) (:domain many-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin ?b - cube_block)
    (and
      (game-optional
        (not
          (open agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - beachball)
      (and
        (preference teddyBearLandsInBin
          (then
            (once (agent_holds ?b2) )
            (once (agent_holds ?b2) )
            (once (touch ?b2 floor) )
          )
        )
      )
    )
    (preference ballKnocksTeddy
      (exists (?r - dodgeball)
        (then
          (hold (not (on rug ?r) ) )
          (once (agent_holds blue) )
          (hold (not (adjacent ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once teddyBearLandsInBin:pink) (* (count-once-per-external-objects teddyBearLandsInBin:green) 30 (count ballKnocksTeddy:yellow) )
  )
)
(:scoring
  (* (* (* (+ (* (count ballKnocksTeddy:pink_dodgeball:purple:blue_dodgeball) (+ 10 (count-increasing-measure ballKnocksTeddy:bed) )
            10
          )
          (count teddyBearLandsInBin:pink:pink_dodgeball)
        )
        5
      )
      5
    )
    3
  )
)
)



(define (game game-id-901) (:domain few-objects-room-v1)
(:setup
  (forall (?c5 - desk_shelf)
    (and
      (and
        (exists (?c1 - hexagonal_bin ?d - (either basketball cellphone))
          (exists (?c - triangular_ramp)
            (exists (?r1 - block)
              (game-conserved
                (agent_holds tan)
              )
            )
          )
        )
      )
      (game-conserved
        (exists (?h - shelf)
          (not
            (and
              (or
                (and
                  (not
                    (in_motion ?c5)
                  )
                  (or
                    (in_motion ?c5)
                    (agent_holds ?h)
                  )
                )
                (agent_holds ?c5)
              )
              (same_color ?c5 brown)
            )
          )
        )
      )
      (forall (?d - (either golfball cd))
        (game-conserved
          (in_motion ?c5)
        )
      )
      (and
        (game-conserved
          (not
            (agent_holds ?c5)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b7 - teddy_bear)
      (and
        (preference ballOnBedAtEnd
          (exists (?x - light_blue)
            (at-end
              (in ?b7 ?b7)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (count-once-per-objects ballOnBedAtEnd:green) (total-score) )
    )
    (or
      (or
        (and
          (>= (count ballOnBedAtEnd:dodgeball) (total-time) )
          (or
            (>= (count-increasing-measure ballOnBedAtEnd:dodgeball:beachball) (total-score) )
            (or
              (>= (count-once-per-objects ballOnBedAtEnd:yellow:orange) (count-once-per-objects ballOnBedAtEnd) )
              (>= 1 (count-once-per-objects ballOnBedAtEnd:basketball:blue_dodgeball) )
            )
          )
        )
        (and
          (> (* (+ (count-same-positions ballOnBedAtEnd:golfball) 5 )
              (* 10 5 )
              (count-once-per-objects ballOnBedAtEnd:pink)
              10
              3
              (count ballOnBedAtEnd:golfball)
            )
            3
          )
          (>= 4 (total-time) )
          (>= (total-time) (* 1 (count ballOnBedAtEnd:pink_dodgeball) )
          )
        )
      )
      (<= 50 (count-once-per-objects ballOnBedAtEnd:beachball) )
    )
    (or
      (>= 2 (count-unique-positions ballOnBedAtEnd:book:blue_dodgeball) )
      (>= (total-score) 6 )
    )
  )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:tan:orange)
)
)



(define (game game-id-902) (:domain many-objects-room-v1)
(:setup
  (exists (?x - (either orange green) ?s - building)
    (exists (?b1 - dodgeball)
      (game-conserved
        (< (distance desk ?s) (distance ?s ?b1))
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - dodgeball ?b10 - dodgeball)
      (and
        (preference throwAttempt
          (exists (?c4 - hexagonal_bin)
            (then
              (once (not (and (between ?b10 ?b10 agent) (and (and (and (not (agent_holds ?b10) ) (agent_holds ?c4) (in_motion ?c4) ) (in_motion ?b10) (and (in agent ?c4) (and (touch ?c4 desk) (>= (distance door floor) 8) ) ) (and (and (toggled_on ?c4) (and (not (agent_holds desk) ) (agent_holds ?c4) ) (in ?b10 rug) ) (agent_holds ?b10) ) (on ?b10 ?b10) (agent_holds ?b10) (opposite ?c4 ?c4) ) (in_motion ?c4) (not (in ?b10 ?c4) ) ) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 (= (count throwAttempt:wall) 5 )
    )
  )
)
(:scoring
  (+ (+ (= 5 18 8 )
      3
    )
    (count-unique-positions throwAttempt:pink)
  )
)
)



(define (game game-id-903) (:domain few-objects-room-v1)
(:setup
  (exists (?t1 - flat_block)
    (game-conserved
      (agent_holds ?t1)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?o5 - curved_wooden_ramp ?x - red ?c - hexagonal_bin)
        (then
          (hold (rug_color_under ?c green) )
          (once (and (agent_holds ?c) (in_motion ?c) ) )
          (once (agent_holds ?c) )
        )
      )
    )
    (forall (?h - cube_block ?p2 - doggie_bed)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?l1 - triangular_ramp)
            (then
              (hold (not (toggled_on rug) ) )
              (once (touch ?p2 agent) )
              (hold (adjacent side_table ?l1) )
            )
          )
        )
        (preference dodgeballAndBasketballInBin
          (exists (?p3 - ball)
            (then
              (hold-while (adjacent ?p3 ?p3) (and (exists (?bl - shelf) (in_motion desk) ) (agent_holds ?p3) ) (rug_color_under ?p3 pink) )
              (once (on ?p3 ?p3) )
              (hold (not (not (in_motion ?p2) ) ) )
            )
          )
        )
      )
    )
    (preference ballThrowAttempt
      (exists (?b - teddy_bear)
        (then
          (hold (in_motion rug) )
          (once (in_motion ?b) )
          (hold (and (on ?b ?b) (same_color ?b orange) (in ?b ?b) ) )
        )
      )
    )
  )
)
(:terminal
  (< (count-once-per-objects dodgeballAndBasketballInBin:tall_cylindrical_block:blue_dodgeball) (count ballThrowAttempt:hexagonal_bin) )
)
(:scoring
  (* 3 1 )
)
)



(define (game game-id-904) (:domain many-objects-room-v1)
(:setup
  (and
    (and
      (exists (?b9 - ball)
        (and
          (game-conserved
            (adjacent ?b9 agent)
          )
        )
      )
    )
    (and
      (forall (?l - beachball ?l4 - chair)
        (game-conserved
          (not
            (in_motion ?l4)
          )
        )
      )
      (exists (?db - pillow)
        (or
          (game-conserved
            (agent_crouches )
          )
          (exists (?d - (either basketball blue_cube_block))
            (game-conserved
              (object_orientation ?db upside_down)
            )
          )
          (and
            (game-optional
              (same_color agent ?db)
            )
            (and
              (exists (?l3 - hexagonal_bin)
                (forall (?h - game_object)
                  (game-conserved
                    (touch ?h ?l3)
                  )
                )
              )
            )
            (or
              (and
                (game-optional
                  (in ?db agent)
                )
                (exists (?p - dodgeball)
                  (game-optional
                    (on ?p pink)
                  )
                )
                (and
                  (game-optional
                    (and
                      (on ?db agent)
                      (<= (distance ?db ?db) 1)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?ob - cube_block)
        (then
          (hold (is_setup_object floor) )
          (hold (< (distance ?ob ?ob) 1) )
          (once (not (not (in_motion ?ob) ) ) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?l1 - hexagonal_bin ?h - (either cube_block) ?d - tall_cylindrical_block)
        (then
          (once (= 1 (distance desk ?d) 1) )
          (hold (in ?d ?d) )
          (once (touch ?d ?d) )
        )
      )
    )
    (forall (?g ?db - drawer)
      (and
        (preference beachballOnRug
          (exists (?b - triangular_ramp)
            (then
              (once (between ?db ?b ?db) )
              (hold (and (< 1 (distance room_center agent)) (on ?g rug) ) )
              (once (rug_color_under ?g yellow) )
            )
          )
        )
        (preference thrownBallHitsBlock
          (exists (?b4 - chair ?b - block)
            (then
              (once (not (and (in ?db ?db) (touch ?db ?db) ) ) )
              (hold (forall (?l2 - hexagonal_bin ?o - block) (adjacent_side ?b front_left_corner ?g) ) )
              (once (in_motion ?b) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 8 )
)
(:scoring
  (count-once-per-objects beachballOnRug:basketball)
)
)



(define (game game-id-905) (:domain few-objects-room-v1)
(:setup
  (exists (?s - hexagonal_bin ?b - dodgeball ?r - (either game_object doggie_bed top_drawer))
    (game-conserved
      (same_type ?r ?r)
    )
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h - triangular_ramp ?s - hexagonal_bin)
        (then
          (once (adjacent ?s agent) )
          (once (not (not (toggled_on ?s) ) ) )
          (once (and (or (in_motion ?s) (in_motion ?s) ) (and (and (and (and (toggled_on desk) (not (agent_holds ?s) ) ) (and (not (adjacent ?s ?s) ) (and (< 10 1) (agent_holds ?s) ) ) ) (< 2 (distance ?s ?s)) ) (not (between ?s ?s ?s) ) ) (and (agent_holds ?s) (on ?s ?s) ) ) )
        )
      )
    )
    (preference ballThrownMissesEverything
      (at-end
        (open agent)
      )
    )
    (preference blockInTowerKnockedByDodgeball
      (exists (?d - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once (on ?d ?d) )
          (hold-while (in_motion agent) (in ?d ?d) (exists (?o2 ?c3 ?c1 ?h ?h ?b8 - hexagonal_bin) (not (and (not (and (not (agent_holds ?c3) ) (agent_holds ?h) ) ) (on ?c1 ?d) (in ?o2 ?d) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (count-longest throwBallToDoggieBedOffWall:basketball) (count ballThrownMissesEverything:doggie_bed) )
)
(:scoring
  (count-overlapping throwBallToDoggieBedOffWall:basketball:dodgeball)
)
)



(define (game game-id-906) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b8 - teddy_bear ?s - dodgeball ?o4 - wall)
      (and
        (exists (?c6 - doggie_bed)
          (game-conserved
            (not
              (in pink ?c6)
            )
          )
        )
        (game-optional
          (not
            (in ?o4 ?o4)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?d ?l2 ?c - dodgeball)
        (then
          (once (adjacent_side ?c front_left_corner agent back) )
          (once (not (agent_holds ?l2) ) )
          (once (touch ?l2 ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (+ (count blockPickedUp:golfball) (* 5 (count-once blockPickedUp) )
    )
  )
)
(:scoring
  (count blockPickedUp)
)
)



(define (game game-id-907) (:domain few-objects-room-v1)
(:setup
  (forall (?o - doggie_bed ?h - block)
    (exists (?b - wall ?bl - dodgeball)
      (and
        (exists (?h - hexagonal_bin ?c4 - cube_block)
          (and
            (game-conserved
              (agent_holds ?c4)
            )
            (game-optional
              (agent_holds ?h)
            )
            (forall (?h - hexagonal_bin ?o3 - hexagonal_bin ?b - game_object)
              (and
                (game-optional
                  (< 1 (distance ?h agent))
                )
                (and
                  (forall (?x ?x0 ?x1 - green)
                    (and
                      (game-conserved
                        (broken ?h)
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?h - desk_shelf)
          (game-conserved
            (and
              (same_type ?h bridge_block)
              (and
                (not
                  (touch ?h ?h)
                )
                (and
                  (agent_holds ?bl)
                  (in ?bl ?bl)
                )
              )
            )
          )
        )
        (forall (?c1 - pillow ?w - hexagonal_bin)
          (not
            (or
              (or
                (exists (?r - beachball ?bl - (either laptop dodgeball))
                  (game-optional
                    (touch ?bl desk)
                  )
                )
                (game-conserved
                  (agent_holds ?bl)
                )
                (and
                  (forall (?o5 - doggie_bed)
                    (forall (?b - (either pillow book))
                      (game-optional
                        (and
                          (in_motion ?bl)
                          (and
                            (and
                              (and
                                (agent_holds ?bl)
                                (and
                                  (on ?w ?w)
                                )
                                (and
                                  (on ?bl ?h)
                                  (adjacent bed ?o5)
                                  (agent_holds ?w)
                                )
                              )
                              (on ?w ?b)
                            )
                            (adjacent_side desk front brown)
                          )
                          (in_motion floor)
                        )
                      )
                    )
                  )
                  (game-conserved
                    (agent_holds ?h)
                  )
                  (game-optional
                    (and
                      (and
                        (< 1 1)
                        (exists (?o4 - (either doggie_bed dodgeball))
                          (agent_holds ?h)
                        )
                      )
                      (in_motion desk)
                    )
                  )
                )
              )
              (and
                (or
                  (and
                    (and
                      (and
                        (game-conserved
                          (agent_holds ?bl)
                        )
                        (and
                          (and
                            (forall (?g - game_object)
                              (game-conserved
                                (>= (distance agent ?w) 1)
                              )
                            )
                          )
                          (exists (?o3 - cube_block)
                            (game-optional
                              (in_motion agent)
                            )
                          )
                        )
                      )
                      (and
                        (and
                          (exists (?b4 - (either dodgeball game_object) ?o1 - bridge_block)
                            (exists (?l3 - (either wall cube_block) ?b - building)
                              (exists (?o - ball)
                                (game-conserved
                                  (adjacent_side room_center front ?o back)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (game-conserved
                      (not
                        (< (distance room_center ?w) (distance ?w ?bl))
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (exists (?s - pillow)
          (and
            (game-optional
              (in ?s ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?tb ?l1 ?b2 ?d ?s ?d ?b ?b ?c4 ?r - hexagonal_bin ?d - curved_wooden_ramp)
      (and
        (preference throwGolfballToBin
          (exists (?h - dodgeball)
            (then
              (once (touch ?h ?d) )
            )
          )
        )
      )
    )
    (preference thrownBallReachesEnd
      (exists (?d - triangular_ramp ?b - wall)
        (then
          (hold (and (agent_holds ?b) (not (on agent ?b) ) ) )
          (once (not (in_motion ?b) ) )
          (hold (in agent ?b) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?o - game_object ?d - hexagonal_bin)
        (at-end
          (or
            (between brown ?d ?d)
            (on ?d ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count throwGolfballToBin:beachball) (count thrownBallReachesEnd:dodgeball) )
    (* (count throwGolfballToBin:red:dodgeball) 1 )
  )
)
(:scoring
  (+ (+ (+ (* (count-once throwGolfballToBin:blue_dodgeball) 4 )
        (count-once blockKnockedFromBuildingInBin:beachball)
      )
      (count thrownBallReachesEnd:basketball)
      (count throwGolfballToBin:dodgeball:beachball)
    )
    2
    7
  )
)
)



(define (game game-id-908) (:domain medium-objects-room-v1)
(:setup
  (forall (?r - block)
    (exists (?h - hexagonal_bin ?h - doggie_bed)
      (exists (?h - (either dodgeball doggie_bed flat_block blue_cube_block floor doggie_bed dodgeball))
        (and
          (and
            (exists (?r - cube_block)
              (and
                (exists (?c5 - ball)
                  (forall (?b - dodgeball)
                    (game-optional
                      (touch ?r ?b)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?c - wall ?p2 - block)
        (at-end
          (in_motion ?p2)
        )
      )
    )
    (preference itemsTurnedOff
      (exists (?r - wall)
        (then
          (hold (not (< 2 1) ) )
          (hold (not (not (and (or (adjacent desk ?r) (in_motion ?r) ) (agent_holds ?r) ) ) ) )
          (once (not (adjacent ?r ?r) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (total-score) (= 8 (count-once itemsTurnedOff:red:hexagonal_bin:book) 10 )
    )
  )
)
(:scoring
  (count itemsTurnedOff:pink)
)
)



(define (game game-id-909) (:domain many-objects-room-v1)
(:setup
  (forall (?o3 - teddy_bear ?h - block)
    (and
      (exists (?b9 - cube_block ?h ?c3 - doggie_bed)
        (forall (?d1 - building)
          (game-optional
            (touch ?c3 ?d1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectMovedRoomSide
      (exists (?s - beachball ?c4 - (either doggie_bed desktop cd flat_block watch))
        (then
          (once (forall (?l1 - shelf) (< (distance ?c4 ?c4) 10) ) )
          (once (and (on ?c4 agent) (agent_holds agent) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 4 15 )
    (or
      (<= (count objectMovedRoomSide:cylindrical_block:dodgeball) (count-once objectMovedRoomSide:yellow) )
      (= (* (* 0 (count-unique-positions objectMovedRoomSide:dodgeball) )
          (count-shortest objectMovedRoomSide:golfball)
        )
        (* (count-once-per-objects objectMovedRoomSide:dodgeball) 30 )
      )
      (or
        (or
          (>= (- (* 20 (count objectMovedRoomSide:blue_dodgeball:dodgeball) )
            )
            (total-score)
          )
          (> (total-score) (count-once-per-objects objectMovedRoomSide:basketball:pink_dodgeball) )
          (<= (count-once-per-objects objectMovedRoomSide:tall_cylindrical_block) (total-score) )
        )
        (>= (- (count-overlapping objectMovedRoomSide:beachball) (* (+ 6 (* 3 9 )
              )
              4
            )
          )
          (- (count-once-per-objects objectMovedRoomSide:golfball) )
        )
      )
    )
  )
)
(:scoring
  (* (* (count objectMovedRoomSide:golfball) 6 )
    (count objectMovedRoomSide)
    (count objectMovedRoomSide:golfball)
    (/
      (* (count objectMovedRoomSide:pink) (count-once-per-objects objectMovedRoomSide:golfball) )
      (- 4 )
    )
  )
)
)



(define (game game-id-910) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c6 - (either dodgeball tall_cylindrical_block))
      (exists (?db - game_object ?b7 - doggie_bed ?c3 - hexagonal_bin)
        (exists (?b2 ?b3 - (either cellphone cube_block) ?d - hexagonal_bin)
          (exists (?r - hexagonal_bin)
            (game-optional
              (not
                (and
                  (touch ?d ?c3)
                  (and
                    (not
                      (touch ?r ?c6)
                    )
                    (not
                      (agent_holds ?d)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?h - cube_block)
        (then
          (hold (on ?h ?h) )
          (hold-while (< (distance desk ?h) 0) (or (not (adjacent_side bed back desk) ) (in_motion ?h) ) )
          (hold (and (same_color ?h purple) (not (= 4 1 (distance ?h ?h)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= 6 (* 180 (count-once-per-objects throwAttempt:pink_dodgeball:side_table) (count-once-per-objects throwAttempt:pink:blue_dodgeball) )
      )
      (>= (- 10 )
        (= (* (count-once-per-objects throwAttempt) 8 )
          (count-once-per-objects throwAttempt:beachball)
        )
      )
    )
    (> 10 7 )
  )
)
(:scoring
  (+ (count throwAttempt:golfball:beachball) 7 )
)
)



(define (game game-id-911) (:domain medium-objects-room-v1)
(:setup
  (exists (?b ?b - pillow)
    (and
      (and
        (or
          (game-conserved
            (in_motion ?b)
          )
          (game-conserved
            (agent_holds ?b)
          )
          (exists (?o1 - ball)
            (game-optional
              (not
                (not
                  (agent_holds ?o1)
                )
              )
            )
          )
        )
        (or
          (exists (?h - game_object ?o - curved_wooden_ramp)
            (and
              (game-conserved
                (and
                  (on ?o ?b)
                  (same_color ?o yellow)
                )
              )
            )
          )
          (game-conserved
            (and
              (adjacent desk ?b)
              (in ?b ?b)
            )
          )
          (exists (?b - cube_block)
            (game-conserved
              (same_color ?b ?b)
            )
          )
        )
      )
      (game-conserved
        (and
          (not
            (adjacent bed ?b)
          )
          (not
            (agent_holds ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrowAttempt
      (exists (?r - teddy_bear ?o1 - hexagonal_bin)
        (then
          (hold (adjacent room_center ?o1) )
          (once (not (same_type ?o1 ?o1) ) )
          (hold (and (not (< (distance ?o1 ?o1) 1) ) (not (agent_holds ?o1) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects cubeBlockThrowAttempt:beachball) (count cubeBlockThrowAttempt:yellow:orange) )
    (>= (count cubeBlockThrowAttempt:block) (* 15 2 (<= (* 3 (count-once-per-objects cubeBlockThrowAttempt:red) 3 )
          100
        )
        (* (+ 2 (* (+ (* 1 (+ 12 4 )
                  4
                  (< (count-once-per-objects cubeBlockThrowAttempt:pink_dodgeball) (count-once cubeBlockThrowAttempt:yellow:green) )
                  (count cubeBlockThrowAttempt:basketball)
                  (+ (count cubeBlockThrowAttempt:dodgeball) (count-once-per-objects cubeBlockThrowAttempt:blue_cube_block) )
                )
                8
              )
              8
            )
          )
          (+ (* (count cubeBlockThrowAttempt:yellow_cube_block) (count cubeBlockThrowAttempt:beachball) )
            10
          )
        )
      )
    )
  )
)
(:scoring
  (count cubeBlockThrowAttempt:orange)
)
)



(define (game game-id-912) (:domain medium-objects-room-v1)
(:setup
  (exists (?b - desktop)
    (game-conserved
      (in_motion ?b)
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?o5 - (either desktop main_light_switch cd))
        (then
          (once (in_motion ?o5) )
          (once (and (not (on agent ?o5) ) (on ?o5 desk) ) )
          (hold-while (< (distance desk ?o5) (distance ?o5 ?o5)) (toggled_on ?o5) (> 1 (distance ?o5 ?o5)) (touch ?o5 ?o5) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count ballThrownToRampToBed:dodgeball) 2 )
    (total-score)
  )
)
(:scoring
  (* (count ballThrownToRampToBed:red) (* (+ (count ballThrownToRampToBed:doggie_bed) (count ballThrownToRampToBed:golfball:basketball) )
      (count-once-per-external-objects ballThrownToRampToBed:side_table)
    )
  )
)
)



(define (game game-id-913) (:domain many-objects-room-v1)
(:setup
  (forall (?h - (either tall_cylindrical_block tall_cylindrical_block) ?r - curved_wooden_ramp)
    (forall (?t - dodgeball)
      (game-conserved
        (not
          (touch ?r ?r)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dropAttempt
      (exists (?b9 - block)
        (then
          (hold (agent_holds ?b9) )
          (once (game_over ) )
          (once (in_motion ?b9) )
        )
      )
    )
    (preference blockPlacedInBuilding
      (exists (?b4 - hexagonal_bin)
        (then
          (once (same_color ?b4 red) )
          (hold (and (not (agent_holds ?b4) ) (in_motion ?b4) ) )
          (once (< (distance room_center ?b4) 10) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-measure blockPlacedInBuilding:blue_pyramid_block) 2 )
)
(:scoring
  (count dropAttempt:doggie_bed)
)
)



(define (game game-id-914) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (agent_holds floor)
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?b ?b2 - doggie_bed)
        (at-end
          (in_motion ?b2)
        )
      )
    )
  )
)
(:terminal
  (<= 10 (total-score) )
)
(:scoring
  (count-once-per-external-objects itemsBroken:yellow)
)
)



(define (game game-id-915) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - hexagonal_bin)
    (exists (?b - block)
      (and
        (forall (?tb ?c - curved_wooden_ramp)
          (and
            (game-conserved
              (not
                (and
                  (same_color ?d ?c)
                  (and
                    (agent_holds ?d)
                    (and
                      (on ?d ?c)
                      (in_motion ?b)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (in_motion ?d)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?o - dodgeball ?c3 - doggie_bed ?h - hexagonal_bin ?d - hexagonal_bin)
        (at-end
          (and
            (and
              (exists (?b6 ?b - ball ?c1 - dodgeball ?b5 - cylindrical_block)
                (in_motion ?b5)
              )
              (and
                (agent_holds ?d)
                (not
                  (agent_holds ?d)
                )
                (and
                  (not
                    (not
                      (in_motion ?d)
                    )
                  )
                  (not
                    (on ?d ?d)
                  )
                )
              )
            )
            (in ?d ?d)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 4 )
  )
)
(:scoring
  (count-increasing-measure blockFromRugToDesk:triangle_block)
)
)



(define (game game-id-916) (:domain few-objects-room-v1)
(:setup
  (exists (?p2 - wall ?h - dodgeball)
    (exists (?o - cube_block)
      (exists (?s ?d1 ?bl - hexagonal_bin)
        (game-optional
          (agent_holds ?o)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?h - red_dodgeball)
        (then
          (once (and (same_type ?h blinds) (and (and (not (and (is_setup_object bed) (equal_x_position desk ?h) ) ) (in_motion ?h) ) (in ?h ?h) ) (on ?h ?h) ) )
          (hold (adjacent room_center ?h) )
          (hold (same_type bed ?h) )
        )
      )
    )
    (forall (?t1 ?l2 ?t - hexagonal_bin ?h ?c4 - tall_cylindrical_block)
      (and
        (preference itemsTurnedOff
          (at-end
            (and
              (not
                (in_motion ?c4)
              )
              (in_motion ?c4)
            )
          )
        )
        (preference ballToBinFromBed
          (exists (?l - dodgeball)
            (then
              (hold (on ?l ?h) )
              (once (in_motion ?l) )
              (hold (exists (?p2 - shelf) (touch ?h ?p2) ) )
            )
          )
        )
        (preference dodgeballFromDeskToTarget
          (exists (?c2 ?c ?d - ball ?h - hexagonal_bin)
            (then
              (once (not (and (same_color agent color) (not (on ?h ?h) ) (in_motion ?h) ) ) )
              (once (agent_holds ?c4) )
              (hold (agent_holds ?c4) )
            )
          )
        )
      )
    )
    (forall (?c - hexagonal_bin ?w1 - dodgeball ?o - pillow ?o2 - wall ?w2 - hexagonal_bin)
      (and
        (preference throwAttempt
          (exists (?f - hexagonal_bin ?z - left)
            (then
              (once (not (in_motion ?f) ) )
              (once (in ?f ?f) )
              (once (not (in_motion ?f) ) )
            )
          )
        )
        (preference throwFromEdgeOfRug
          (exists (?r - pyramid_block ?w - (either cube_block game_object) ?s - chair)
            (then
              (hold (same_object agent ?s) )
              (once (< (distance desk ?s) (distance bed ?w2)) )
              (once (in ?s ?w2) )
            )
          )
        )
        (preference teddyBearLandsInBin
          (exists (?b6 - hexagonal_bin ?x - color)
            (then
              (once (agent_holds ?b6) )
              (once (agent_holds ?b6) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (count-once-per-objects throwFromEdgeOfRug:dodgeball:dodgeball) )
)
(:scoring
  (+ 2 (count-once blockIncorrectlyPicked:pink) )
)
)



(define (game game-id-917) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion rug)
  )
)
(:constraints
  (and
    (forall (?h - cube_block ?x - (either light_blue yellow white))
      (and
        (preference ballThrownToChair
          (exists (?b8 - green_triangular_ramp)
            (then
              (once (and (not (in_motion floor) ) (in_motion ?b8) ) )
              (hold (in_motion ?h) )
              (hold (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (- (+ (count ballThrownToChair:cylindrical_block) 15 )
    )
    10
  )
)
(:scoring
  (count-once-per-objects ballThrownToChair:dodgeball:golfball)
)
)



(define (game game-id-918) (:domain few-objects-room-v1)
(:setup
  (forall (?b10 - dodgeball)
    (and
      (and
        (game-optional
          (and
            (and
              (<= (distance room_center agent) (building_size ?b10))
              (and
                (not
                  (rug_color_under ?b10 tan)
                )
                (not
                  (not
                    (in_motion pink)
                  )
                )
              )
            )
            (broken ?b10)
            (in_motion ?b10)
          )
        )
        (game-conserved
          (agent_holds ?b10)
        )
        (and
          (and
            (and
              (game-optional
                (or
                  (not
                    (and
                      (toggled_on ?b10)
                      (in_motion ?b10)
                    )
                  )
                  (= (distance ?b10 ?b10) 1)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?db ?o2 - hexagonal_bin)
        (then
          (once (agent_holds ?db) )
          (once (forall (?t2 - wall) (in_motion ?db) ) )
          (once (< 2 (distance ?db ?o2)) )
        )
      )
    )
  )
)
(:terminal
  (<= 300 (+ (count-increasing-measure blocksInPlace:blue_pyramid_block:basketball) 9 )
  )
)
(:scoring
  (* (count blocksInPlace:yellow:yellow) 12 )
)
)



(define (game game-id-919) (:domain medium-objects-room-v1)
(:setup
  (forall (?h - dodgeball)
    (forall (?d2 - (either flat_block cd))
      (and
        (game-optional
          (and
            (on ?d2 ?h)
            (= (distance room_center ?d2))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockToBinFromRug
      (exists (?p2 - cube_block ?b1 - hexagonal_bin ?h - cube_block)
        (at-end
          (not
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (= (total-score) 2 )
)
(:scoring
  (count blockToBinFromRug:dodgeball)
)
)



(define (game game-id-920) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (on pink top_shelf)
  )
)
(:constraints
  (and
    (preference throwBallToDoggieBedOffWall
      (exists (?h - chair)
        (at-end
          (in_motion ?h)
        )
      )
    )
    (preference ballNeverThrown
      (exists (?y ?y0 ?y1 - sideways ?ob - (either cube_block pyramid_block))
        (then
          (hold (in_motion ?ob) )
          (hold (touch agent ?ob) )
          (once (on ?ob ?ob) )
        )
      )
    )
  )
)
(:terminal
  (< (* (+ (- 2 )
        3
      )
      (count ballNeverThrown:pink_dodgeball)
    )
    (* (count-once-per-objects throwBallToDoggieBedOffWall:basketball) 5 )
  )
)
(:scoring
  (count-overlapping ballNeverThrown:hexagonal_bin:basketball)
)
)



(define (game game-id-921) (:domain medium-objects-room-v1)
(:setup
  (exists (?o - chair)
    (and
      (game-optional
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?g - bridge_block)
      (and
        (preference throwAttemptKnocksBlock
          (exists (?b - ball ?b - ball)
            (then
              (once (agent_holds ?b) )
              (once (not (not (adjacent desk ?g) ) ) )
              (hold (and (not (not (not (adjacent ?g ?g) ) ) ) (and (and (same_object agent ?b) (not (not (in_motion ?b) ) ) ) (or (in_motion ?g) (in_motion ?b) (in_motion ?g) (in ?g agent) (not (and (on ?b ?g) (toggled_on ?g) ) ) ) (agent_holds ?b) ) ) )
            )
          )
        )
        (preference ballKnocksBlockFromRug
          (exists (?w2 - block)
            (then
              (hold (in_motion ?w2) )
              (once (same_object ?g ?g) )
              (hold (and (in ?g rug) (and (and (agent_holds ?w2) (in_motion ?w2) (agent_holds ?w2) ) (not (on ?g ?w2) ) ) (on ?w2 ?g) (in_motion agent) (agent_crouches ) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?h - ball)
            (then
              (hold (faces ?g ?g) )
              (once (not (exists (?ob - building) (not (not (in_motion ?ob) ) ) ) ) )
              (once (agent_holds floor) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (and
      (>= 180 (* 50 5 (* (* 6 (- (* 60 (* (<= 5 (* 5 (* 10 (* 4 (count-once throwBallToBin:red:dodgeball) )
                        )
                        30
                      )
                    )
                    8
                  )
                )
              )
            )
            (count-once-per-objects throwAttemptKnocksBlock:pink)
          )
        )
      )
      (<= (* (count ballKnocksBlockFromRug:yellow) (count-once-per-objects throwBallToBin:blue_pyramid_block) )
        (* (external-forall-maximize (* (count-once-per-objects ballKnocksBlockFromRug:pink) 2 )
          )
          1
        )
      )
      (or
        (or
          (<= (count throwAttemptKnocksBlock:dodgeball) (total-score) )
          (and
            (and
              (<= (> (* (+ 2 (count throwAttemptKnocksBlock) )
                    (count ballKnocksBlockFromRug:bed)
                  )
                  (count throwAttemptKnocksBlock:red)
                )
                (count-once ballKnocksBlockFromRug:brown)
              )
            )
          )
          (= 10 (* 3 16 (/ (count throwAttemptKnocksBlock:alarm_clock:dodgeball) 2 ) )
          )
        )
        (> 6 (count-once-per-objects ballKnocksBlockFromRug:basketball) )
      )
    )
  )
)
(:scoring
  (< 6 5 )
)
)



(define (game game-id-922) (:domain few-objects-room-v1)
(:setup
  (exists (?g - hexagonal_bin)
    (exists (?o - ball)
      (game-conserved
        (and
          (agent_holds ?o)
          (in_motion agent)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?b6 - dodgeball)
        (at-end
          (>= (x_position ?b6) (distance ?b6 ?b6))
        )
      )
    )
    (preference dodgeballHitsBinBottom
      (exists (?w - pillow)
        (then
          (once (in ?w ?w) )
          (once (in_motion ?w) )
          (hold (exists (?d - drawer ?f - pyramid_block ?r - hexagonal_bin) (and (agent_holds ?r) (in_motion ?r) (same_color bed ?w) (on ?r ?w) (adjacent ?r ?r) (and (not (on ?r ?r) ) (agent_holds ?r) ) (and (not (same_color ?r ?w) ) (not (not (not (on ?r ?w) ) ) ) ) (and (same_type floor bridge_block) (or (and (in_motion ?w) (and (in_motion ?w) (not (in_motion ?r) ) ) ) (agent_holds ?r) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 25 (count dodgeballHitsBinBottom:doggie_bed) )
)
(:scoring
  (count dodgeballsInPlace:beachball)
)
)



(define (game game-id-923) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (exists (?d2 - hexagonal_bin)
        (and
          (forall (?c2 - shelf ?b5 - (either curved_wooden_ramp bridge_block) ?w2 - (either pen book))
            (game-optional
              (in agent ?d2)
            )
          )
          (game-conserved
            (not
              (agent_holds ?d2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?b - wall)
        (at-end
          (in ?b ?b)
        )
      )
    )
    (preference teddyBearHitsBall
      (exists (?l2 ?c - (either dodgeball wall cd))
        (then
          (hold (in_motion ?c) )
          (once (in agent ?c) )
          (once (on top_drawer ?l2) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (external-forall-minimize (count teddyBearHitsBall:top_drawer) ) (count teddyBearHitsBall:beachball) )
    (>= (count-once ballThrownToRug:dodgeball) 10 )
  )
)
(:scoring
  (count-once ballThrownToRug:basketball:green)
)
)



(define (game game-id-924) (:domain many-objects-room-v1)
(:setup
  (forall (?c - wall)
    (game-conserved
      (not
        (and
          (in_motion ?c)
          (same_type ?c ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwMissesBin
      (exists (?c5 - flat_block ?b1 - dodgeball)
        (then
          (hold (and (not (on ?b1 ?b1) ) (not (and (agent_holds ?b1) (not (in_motion ?b1) ) ) ) (and (and (in_motion ?b1) (and (in_motion ?b1) (agent_holds agent) (on ?b1 ?b1) ) ) (not (agent_holds agent) ) ) ) )
          (once (adjacent_side room_center right ?b1) )
          (once (adjacent desk ?b1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> 8 (total-time) )
    (>= (count-unique-positions throwMissesBin:purple:pink) (total-time) )
  )
)
(:scoring
  (/
    4
    (* 0.7 (count-once throwMissesBin:green:blue_dodgeball) )
  )
)
)



(define (game game-id-925) (:domain many-objects-room-v1)
(:setup
  (exists (?p - game_object)
    (and
      (and
        (game-conserved
          (in ?p ?p)
        )
        (and
          (and
            (game-conserved
              (agent_holds ?p)
            )
            (game-conserved
              (agent_holds ?p)
            )
          )
          (game-optional
            (and
              (adjacent desk ?p)
              (on ?p agent)
            )
          )
        )
        (game-conserved
          (and
            (in_motion ?p)
            (in_motion ?p)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?s ?b1 - (either cellphone key_chain) ?b - doggie_bed)
      (and
        (preference objectMovedRoomSide
          (exists (?c6 - teddy_bear)
            (then
              (once (not (on ?c6 ?b) ) )
              (hold-while (and (on ?c6 floor) (on floor ?c6) ) (game_start ) )
              (once (faces agent ?c6) )
              (hold (not (adjacent ?c6 ?b) ) )
              (once (not (agent_holds agent) ) )
            )
          )
        )
      )
    )
    (preference greenObjectMovedToRoomCenter
      (exists (?o2 - building ?b2 - triangular_ramp)
        (at-end
          (or
            (on ?b2 ?b2)
            (in_motion ?b2)
          )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (total-time) )
)
(:scoring
  (* (count-once-per-external-objects greenObjectMovedToRoomCenter:orange) (count-total objectMovedRoomSide:dodgeball) )
)
)



(define (game game-id-926) (:domain many-objects-room-v1)
(:setup
  (exists (?f - wall ?b10 - block)
    (game-conserved
      (and
        (not
          (touch ?b10 agent)
        )
        (in_motion ?b10)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l4 - doggie_bed)
      (and
        (preference golfballUnderBridgeWithoutTouchingBlock
          (then
            (once (exists (?b - hexagonal_bin) (forall (?t - cube_block) (on ?b ?t) ) ) )
            (once (and (agent_holds ?l4) (agent_holds ?l4) ) )
          )
        )
        (preference blindsOpened
          (exists (?o - ball ?p - block)
            (then
              (once (not (and (adjacent ?l4 ?l4) ) ) )
              (once (object_orientation ?p upright) )
              (once (exists (?h - building) (and (and (< (distance ?p ?h) 4) (agent_holds ?l4) ) (agent_holds south_wall) ) ) )
              (once (between agent ?l4 ?p) )
              (once (in_motion ?p) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count-unique-positions golfballUnderBridgeWithoutTouchingBlock:book) (<= (<= 10 (count-once golfballUnderBridgeWithoutTouchingBlock:book) )
      2
    )
  )
)
(:scoring
  (count golfballUnderBridgeWithoutTouchingBlock:golfball)
)
)



(define (game game-id-927) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - ball)
      (and
        (game-conserved
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?w1 - (either mug cellphone))
        (then
          (hold (agent_holds ?w1) )
          (once (agent_holds ?w1) )
          (once (rug_color_under ?w1 tan) )
          (once (not (exists (?c1 - (either cd)) (and (not (game_start ) ) (not (equal_z_position ?w1 ?w1) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (or
        (>= 3 (total-score) )
        (= (count throwAttempt:yellow:dodgeball) (* (count throwAttempt:top_drawer) (count-overlapping throwAttempt:yellow) )
        )
      )
    )
    (>= 6 5 )
  )
)
(:scoring
  (* 0 (< 50 (+ 8 3 )
    )
  )
)
)



(define (game game-id-928) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?b6 - (either hexagonal_bin dodgeball book))
        (then
          (once (not (and (in_motion ?b6) (not (not (or (not (and (in_motion ?b6) (same_color ?b6 gray) ) ) (in_motion ?b6) ) ) ) (agent_holds ?b6) (not (on ?b6 ?b6) ) ) ) )
          (once (in_motion agent) )
          (once (and (and (and (not (touch ?b6 ?b6) ) (agent_holds ?b6) ) (in ?b6 ?b6) (same_type ?b6 bridge_block) ) (on ?b6 ?b6) ) )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (total-score) )
)
(:scoring
  (= (>= (* 6 (count pinkObjectMovedToRoomCenter:dodgeball) )
      (* (count-once-per-objects pinkObjectMovedToRoomCenter:blue) (* 3 (count-overlapping pinkObjectMovedToRoomCenter:beachball) )
      )
    )
    (* (count-once pinkObjectMovedToRoomCenter:book) (- 5 )
    )
  )
)
)



(define (game game-id-929) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (forall (?o - chair)
      (and
        (preference itemsTurnedOff
          (exists (?x - white ?c - drawer ?s - cube_block)
            (then
              (hold (agent_holds ?o) )
              (once (agent_holds ?s) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count itemsTurnedOff:green) (total-time) )
    (< (count-once-per-objects itemsTurnedOff:basketball) (count itemsTurnedOff:beachball) )
    (>= (* 5 (count itemsTurnedOff:book) (* (count-once-per-objects itemsTurnedOff:basketball:yellow) 3 )
        (* (- 9 )
          (- 2 )
        )
        (count-once-per-objects itemsTurnedOff:basketball)
        (* 10 (* 10 (* 2 )
          )
        )
        2
        2
        (* 5 (count-once-per-objects itemsTurnedOff:basketball) (count itemsTurnedOff:dodgeball) )
      )
      (total-score)
    )
  )
)
(:scoring
  (* 3 6 (count itemsTurnedOff:red) )
)
)



(define (game game-id-930) (:domain medium-objects-room-v1)
(:setup
  (forall (?o - hexagonal_bin ?h - ball ?w2 - hexagonal_bin ?b10 - (either key_chain dodgeball))
    (exists (?w2 ?b3 ?c1 ?o - cube_block)
      (game-conserved
        (in ?w2 ?b10)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c1 - dodgeball)
        (then
          (once (in_motion ?c1) )
          (once (and (agent_holds ?c1) (object_orientation ?c1 upside_down) ) )
          (once (agent_holds ?c1) )
          (once (and (and (agent_holds ?c1) ) (not (not (in ?c1 ?c1) ) ) ) )
          (hold (not (and (agent_holds ?c1) (< 1 (distance ?c1 ?c1)) ) ) )
        )
      )
    )
    (forall (?b5 - (either triangle_block cellphone))
      (and
        (preference redDodgeballThrownToBinWithoutTouchingFloor
          (then
            (once (not (in_motion bed) ) )
            (once (< 4 (distance desk ?b5)) )
            (once (and (and (agent_holds bed) (and (not (in_motion ?b5) ) (on ?b5 top_drawer) ) (= (distance desk ?b5) 5) ) (not (agent_holds ?b5) ) ) )
            (once (in ?b5 ?b5) )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (total-score) )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-931) (:domain medium-objects-room-v1)
(:setup
  (not
    (forall (?d - bridge_block)
      (exists (?b5 - tall_cylindrical_block)
        (exists (?c5 - hexagonal_bin ?p - curved_wooden_ramp)
          (forall (?c6 - hexagonal_bin)
            (forall (?w - dodgeball)
              (exists (?w2 - chair ?b6 - (either game_object cylindrical_block hexagonal_bin))
                (exists (?r2 - wall)
                  (and
                    (exists (?d - hexagonal_bin)
                      (exists (?l - doggie_bed ?d - wall ?x - green)
                        (forall (?l3 ?l1 - wall)
                          (or
                            (forall (?c4 - ball)
                              (forall (?b - doggie_bed ?bl - game_object ?o - dodgeball)
                                (exists (?c4 - building ?b - teddy_bear)
                                  (game-optional
                                    (not
                                      (not
                                        (and
                                          (not
                                            (not
                                              (and
                                                (and
                                                  (not
                                                    (in_motion ?b)
                                                  )
                                                  (in agent ?p)
                                                )
                                                (not
                                                  (agent_holds ?d)
                                                )
                                                (touch ?b ?c6)
                                              )
                                            )
                                          )
                                          (and
                                            (agent_holds ?b6)
                                            (not
                                              (or
                                                (and
                                                  (agent_holds top_shelf)
                                                  (touch ?c6 ?b)
                                                )
                                                (in agent desk)
                                              )
                                            )
                                            (rug_color_under ?d yellow)
                                            (agent_holds ?w)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (and
                              (exists (?h - doggie_bed)
                                (exists (?c2 - (either wall bridge_block pyramid_block))
                                  (exists (?h - game_object ?o1 - triangular_ramp)
                                    (game-conserved
                                      (adjacent desk ?o1)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference watchOnShelf
      (exists (?b6 - block)
        (then
          (once (not (in_motion ?b6) ) )
          (once (and (adjacent_side bed back ?b6) (and (on ?b6 agent) (in_motion ?b6) ) ) )
          (once (and (toggled_on ?b6) (< 1 9) (opposite floor ?b6) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= (count watchOnShelf:blue_pyramid_block:purple) (count-once-per-objects watchOnShelf:pink:basketball) )
      (> (count watchOnShelf:top_drawer:alarm_clock) (total-score) )
    )
  )
)
(:scoring
  (= 3 (* 5 (* (count-once watchOnShelf:purple) )
    )
  )
)
)



(define (game game-id-932) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - cube_block ?c - building)
    (forall (?d - hexagonal_bin ?o - dodgeball)
      (or
        (game-optional
          (on ?o ?c)
        )
        (game-conserved
          (toggled_on ?c)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBinOffObject
      (exists (?b7 - building)
        (at-end
          (on ?b7 ?b7)
        )
      )
    )
    (preference throwBallFromOtherBallToBin
      (exists (?f - chair)
        (then
          (once (in_motion ?f) )
          (hold (exists (?d - hexagonal_bin) (agent_holds ?f) ) )
          (once (same_type ?f ?f) )
        )
      )
    )
    (preference throwInBin
      (exists (?g - hexagonal_bin)
        (then
          (hold (on bed ?g) )
          (once (not (in_motion ?g) ) )
          (once (not (agent_holds ?g) ) )
        )
      )
    )
    (preference cubeBlockThrowAttempt
      (exists (?h - chair)
        (then
          (once (exists (?o - shelf) (not (agent_holds ?h) ) ) )
          (once (and (agent_holds ?h) (on ?h ?h) (agent_holds ?h) (< 5 2) (not (< (building_size ?h) (building_size ?h)) ) (agent_holds ?h) (touch ?h rug) ) )
          (once (agent_holds ?h) )
        )
      )
    )
    (preference blindsOpened
      (exists (?b9 - chair ?h - hexagonal_bin)
        (then
          (hold (on rug ?h) )
          (hold (not (in_motion ?h) ) )
          (once (adjacent ?h ?h) )
        )
      )
    )
    (forall (?c - pillow ?b - block)
      (and
        (preference blockFromRugToDesk
          (exists (?w - hexagonal_bin ?p - beachball)
            (then
              (hold (not (not (not (same_color ?b rug) ) ) ) )
              (hold (in_motion ?p) )
              (hold (not (agent_holds rug) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= 6 (count throwInBin:pink) )
)
(:scoring
  (< 10 (count-once-per-objects throwBallToBinOffObject:dodgeball) )
)
)



(define (game game-id-933) (:domain medium-objects-room-v1)
(:setup
  (exists (?r1 - game_object)
    (game-optional
      (and
        (and
          (not
            (exists (?c1 - desktop ?b9 - dodgeball)
              (not
                (agent_holds ?b9)
              )
            )
          )
          (in_motion ?r1)
          (in_motion ?r1)
        )
        (agent_holds ?r1)
      )
    )
  )
)
(:constraints
  (and
    (preference redDodgeballThrownToBin
      (exists (?g - building)
        (at-end
          (and
            (in_motion ?g)
            (adjacent room_center ?g)
          )
        )
      )
    )
    (forall (?h - dodgeball)
      (and
        (preference itemsHidingScreens
          (exists (?w1 - cube_block ?h - triangular_ramp)
            (then
              (once (in_motion ?h) )
              (once (adjacent desk agent) )
            )
          )
        )
        (preference throwObjectToBin
          (exists (?o - (either side_table pyramid_block))
            (then
              (hold (same_type ?o block) )
              (once (not (in ?o ?o) ) )
              (once (in_motion blue) )
            )
          )
        )
        (preference itemsTurnedOff
          (exists (?c - ball)
            (then
              (hold (in_motion ?h) )
              (hold (agent_holds ?c) )
              (once (and (not (agent_holds ?c) ) (in_motion ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (count redDodgeballThrownToBin:blue) (total-score) )
)
(:scoring
  (count throwObjectToBin:doggie_bed)
)
)



(define (game game-id-934) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (agent_holds agent)
  )
)
(:constraints
  (and
    (forall (?d - cube_block)
      (and
        (preference dodgeballAndBasketballInBin
          (exists (?s ?h - golfball)
            (then
              (hold (and (not (not (in_motion ?h) ) ) ) )
              (once (open ?h) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (total-time) )
)
(:scoring
  (count dodgeballAndBasketballInBin:beachball)
)
)



(define (game game-id-935) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin ?r - wall)
      (game-conserved
        (and
          (agent_holds ?r)
          (or
            (not
              (= 1 1)
            )
            (not
              (in_motion ?r)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?l2 - chair)
      (and
        (preference throwToDrawerOrBin
          (exists (?h - game_object ?h - golfball)
            (then
              (once (agent_holds ?l2) )
              (once (agent_holds ?h) )
              (once (adjacent desk ?l2) )
              (once (in ?l2 rug) )
              (once (not (and (touch ?l2 ?l2) ) ) )
              (once (not (equal_x_position ?l2 ?h) ) )
            )
          )
        )
      )
    )
    (preference throwMissesBin
      (exists (?h - pyramid_block)
        (then
          (once (agent_holds ?h) )
          (once (agent_holds ?h) )
          (once (broken ?h) )
        )
      )
    )
    (forall (?l1 - teddy_bear)
      (and
        (preference throwToBin
          (exists (?p1 - cylindrical_block ?w - tall_cylindrical_block)
            (at-end
              (not
                (in ?l1 ?l1)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ 30 4 (* (- (count-same-positions throwToDrawerOrBin:beachball) )
        6
      )
    )
    (count-overlapping throwMissesBin:beachball)
  )
)
(:scoring
  (count-once-per-objects throwMissesBin:green)
)
)



(define (game game-id-936) (:domain few-objects-room-v1)
(:setup
  (exists (?ob - game_object)
    (and
      (game-optional
        (not
          (equal_x_position ?ob ?ob)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownHitsAgent
      (exists (?s - block ?o - (either key_chain game_object))
        (then
          (once (in_motion ?o) )
          (once (and (in ?o ?o) (rug_color_under ?o blue) (and (agent_holds ?o) (in_motion ?o) ) ) )
          (hold (exists (?p3 - (either bridge_block cylindrical_block) ?h - (either pen cylindrical_block cellphone) ?d - hexagonal_bin) (agent_holds ?d) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (not
          (and
            (< (> 3 4 )
              (total-score)
            )
            (>= (+ 5 (+ (+ (count-once ballThrownHitsAgent:red) 3 )
                  3
                )
              )
              2
            )
            (not
              (>= (count ballThrownHitsAgent) (+ (count ballThrownHitsAgent:dodgeball) 2 )
              )
            )
          )
        )
        (>= (total-time) 5 )
      )
      (and
        (>= (+ 3 3 )
          (* (count-longest ballThrownHitsAgent:basketball) (count ballThrownHitsAgent:pink) (count ballThrownHitsAgent:golfball) (count ballThrownHitsAgent:dodgeball:red_pyramid_block) (count ballThrownHitsAgent:beachball:pink) )
        )
        (and
          (>= 2 2 )
          (or
            (< 3 (total-time) )
            (>= (count ballThrownHitsAgent:dodgeball:dodgeball:bed) 8 )
          )
        )
      )
      (not
        (>= 15 (count-once-per-external-objects ballThrownHitsAgent:green) )
      )
    )
    (< 50 (- (+ (count-once-per-objects ballThrownHitsAgent:dodgeball) 3 )
      )
    )
    (>= (>= 40 6 )
      (count-once ballThrownHitsAgent:white)
    )
  )
)
(:scoring
  (count ballThrownHitsAgent:orange)
)
)



(define (game game-id-937) (:domain many-objects-room-v1)
(:setup
  (exists (?l3 - (either alarm_clock cube_block) ?o - curved_wooden_ramp)
    (and
      (and
        (exists (?b3 - dodgeball ?d - game_object ?w2 - (either laptop blue_cube_block cube_block))
          (and
            (and
              (forall (?t - hexagonal_bin)
                (exists (?h - building)
                  (forall (?b - shelf ?b8 - cube_block)
                    (game-optional
                      (or
                        (equal_x_position bed ?t)
                        (and
                          (in_motion rug)
                          (agent_holds ?t)
                        )
                      )
                    )
                  )
                )
              )
            )
            (game-conserved
              (in_motion ?o)
            )
          )
        )
        (forall (?b ?w1 - tall_cylindrical_block)
          (forall (?b - cube_block)
            (and
              (game-conserved
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c6 - game_object)
        (at-end
          (and
            (not
              (and
                (agent_holds ?c6)
                (touch ?c6 agent)
                (and
                  (or
                    (and
                      (game_start )
                      (in_motion agent)
                    )
                    (in_motion ?c6)
                  )
                  (in ?c6 ?c6)
                )
                (same_type ?c6 ?c6)
                (and
                  (adjacent_side desk front ?c6 left)
                  (>= (distance bed agent) 7)
                )
                (not
                  (agent_holds ?c6)
                )
                (not
                  (or
                    (in_motion ?c6)
                    (adjacent desk ?c6)
                  )
                )
                (and
                  (touch ?c6 ?c6)
                  (not
                    (on ?c6 ?c6)
                  )
                )
              )
            )
            (not
              (not
                (on ?c6 rug)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (* (count-once-per-objects blockFromRugToDesk:dodgeball) (+ (* (= (count-once-per-objects blockFromRugToDesk:golfball) (count blockFromRugToDesk:rug) )
        )
        (count blockFromRugToDesk:hexagonal_bin)
      )
      (count blockFromRugToDesk:red:dodgeball:cylindrical_block)
    )
  )
)
(:scoring
  (- (+ 40 (* 5 (count-shortest blockFromRugToDesk:red) )
    )
  )
)
)



(define (game game-id-938) (:domain many-objects-room-v1)
(:setup
  (exists (?b - ball)
    (game-optional
      (and
        (exists (?c - hexagonal_bin)
          (is_setup_object ?b)
        )
        (forall (?bl - teddy_bear ?c2 - desk_shelf)
          (agent_holds ?c2)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference beachballOnRug
      (at-end
        (agent_holds agent)
      )
    )
  )
)
(:terminal
  (or
    (>= (* 6 (* (count-once-per-external-objects beachballOnRug:dodgeball:dodgeball) 0 9 (< (count beachballOnRug:red:beachball) (= (count-measure beachballOnRug:blue_pyramid_block:red) )
          )
          (count beachballOnRug:hexagonal_bin)
          (-
            (count-once-per-objects beachballOnRug:blue)
            (count beachballOnRug:dodgeball:book:dodgeball)
          )
        )
      )
      2
    )
    (= (total-score) (count beachballOnRug:beachball) )
    (>= (count beachballOnRug:hexagonal_bin) (count beachballOnRug:blue_dodgeball:dodgeball) )
  )
)
(:scoring
  (count beachballOnRug:white)
)
)



(define (game game-id-939) (:domain few-objects-room-v1)
(:setup
  (exists (?o3 - (either basketball dodgeball) ?x - light_blue)
    (and
      (and
        (exists (?h - hexagonal_bin)
          (exists (?d - doggie_bed ?b1 - red_pyramid_block ?h - game_object ?c1 - game_object ?p - (either pyramid_block cd))
            (exists (?ob - cube_block ?x ?x0 ?x1 - color)
              (exists (?l2 ?c - dodgeball)
                (and
                  (exists (?r - hexagonal_bin)
                    (game-conserved
                      (in ?p agent)
                    )
                  )
                )
              )
            )
          )
        )
        (game-optional
          (on ?o3 ?o3)
        )
      )
      (and
        (and
          (and
            (forall (?o - red_dodgeball)
              (game-optional
                (same_type ?o3 ?o)
              )
            )
            (and
              (game-optional
                (not
                  (in_motion ?o3)
                )
              )
              (or
                (and
                  (and
                    (and
                      (and
                        (forall (?p3 - chair ?z - front_left_corner)
                          (forall (?x ?x0 ?x1 - color ?db - building)
                            (game-optional
                              (on ?o3 ?p3)
                            )
                          )
                        )
                      )
                    )
                    (exists (?b - dodgeball)
                      (exists (?r - cylindrical_block)
                        (not
                          (game-conserved
                            (< (distance ?b ?b) 2)
                          )
                        )
                      )
                    )
                  )
                  (and
                    (exists (?o - pink_dodgeball)
                      (and
                        (game-conserved
                          (on ?o3 ?o3)
                        )
                      )
                    )
                  )
                )
                (game-optional
                  (in_motion ?o3)
                )
                (exists (?r - dodgeball)
                  (and
                    (game-conserved
                      (> (distance ?o3 ?o3) (distance ?o3 ?r))
                    )
                    (and
                      (exists (?o1 - wall)
                        (forall (?d - teddy_bear ?d - hexagonal_bin)
                          (forall (?w - building ?d1 - flat_block)
                            (exists (?tb - cube_block ?d - hexagonal_bin)
                              (game-optional
                                (not
                                  (adjacent bed ?d1)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (forall (?o - hexagonal_bin)
                (game-optional
                  (in ?o ?o)
                )
              )
              (and
                (exists (?c - chair)
                  (game-conserved
                    (on ?c ?o3)
                  )
                )
                (forall (?r - cube_block ?b - hexagonal_bin)
                  (game-optional
                    (equal_z_position bed ?b)
                  )
                )
              )
              (exists (?o4 - ball)
                (forall (?o1 - block)
                  (exists (?s - (either lamp cylindrical_block))
                    (and
                      (game-conserved
                        (in_motion ?o4)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (and
        (forall (?h - building)
          (forall (?d - flat_block)
            (forall (?b - hexagonal_bin)
              (forall (?c - building ?d - ball)
                (game-optional
                  (and
                    (equal_x_position ?o3 ?o3)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - hexagonal_bin)
        (then
          (hold-while (exists (?h - golfball) (agent_holds ?o) ) (agent_holds agent) (in_motion floor) (< (distance ?o agent) (distance ?o ?o)) )
          (once (adjacent bed ?o) )
          (hold (and (in_motion ?o) (agent_holds ?o) ) )
        )
      )
    )
    (preference throwKnocksOverBear
      (exists (?h - dodgeball ?ob - doggie_bed ?s - dodgeball)
        (at-end
          (and
            (and
              (faces ?s agent)
              (agent_holds ?s)
            )
          )
        )
      )
    )
    (preference smallItemsInPlace
      (exists (?o - hexagonal_bin)
        (then
          (once (same_type ?o drawer) )
          (hold (in ?o ?o) )
          (once (not (exists (?t - cylindrical_block) (object_orientation ?t upside_down) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 -10 )
)
(:scoring
  (external-forall-maximize
    (+ (count-once-per-objects smallItemsInPlace:red) (* (* 10 (- 10 )
          (* (count-longest throwKnocksOverBear:tan:dodgeball) (< (count-once-per-objects objectInBuilding:basketball) (- (count-once-per-objects throwKnocksOverBear:green) )
            )
          )
        )
        (count throwKnocksOverBear:book)
        10
      )
      (+ (* 10 18 )
        (count-once throwKnocksOverBear:pink_dodgeball)
        (count-once smallItemsInPlace:dodgeball)
      )
    )
  )
)
)



(define (game game-id-940) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (game_over )
  )
)
(:constraints
  (and
    (forall (?g - dodgeball ?d - building)
      (and
        (preference dodgeballBouncesOnceToDoggieBed
          (exists (?ob - ball ?o2 ?b1 ?b3 ?c4 - game_object)
            (then
              (once (not (on ?o2 ?c4) ) )
              (once (< (distance west_wall ?c4) 0) )
              (once (and (on ?b1 ?b3) (> (distance ?o2 ?o2) 3) (agent_holds ?b1) (touch ?o2 rug) ) )
            )
          )
        )
      )
    )
    (forall (?o - dodgeball)
      (and
        (preference basketMadeFromRug
          (exists (?d - game_object ?o - ball)
            (at-end
              (agent_holds ?o)
            )
          )
        )
        (preference ballThrownToChair
          (exists (?b2 - triangular_ramp)
            (then
              (hold (and (exists (?c ?c1 - block) (and (not (in_motion ?c) ) (on ?c bed) ) ) (not (exists (?b - hexagonal_bin) (not (agent_holds ?o) ) ) ) (touch ?o ?b2) ) )
              (once (agent_holds ?b2) )
              (hold (and (in_motion ?o) (on ?o ?o) ) )
              (once-measure (opposite ?o agent) (distance room_center ?b2) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (count ballThrownToChair) (count dodgeballBouncesOnceToDoggieBed:orange) )
  )
)
(:scoring
  (* 5 20 )
)
)



(define (game game-id-941) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l4 - pillow ?s - doggie_bed ?o - dodgeball)
      (exists (?ob - cube_block)
        (and
          (and
            (and
              (exists (?w - game_object ?b10 - game_object)
                (forall (?d - block ?s - pillow)
                  (game-conserved
                    (and
                      (and
                        (not
                          (or
                            (in_motion ?o)
                            (not
                              (and
                                (and
                                  (agent_holds ?b10)
                                  (agent_holds ?ob)
                                )
                                (and
                                  (on ?b10 ?b10)
                                  (exists (?o - curved_wooden_ramp)
                                    (in_motion ?ob)
                                  )
                                )
                              )
                            )
                          )
                        )
                        (exists (?h - hexagonal_bin)
                          (and
                            (> (distance ?b10 ?b10) 0)
                            (not
                              (not
                                (and
                                  (exists (?b9 - building)
                                    (not
                                      (and
                                        (not
                                          (agent_holds agent)
                                        )
                                        (on ?b10 ?b10)
                                      )
                                    )
                                  )
                                  (and
                                    (and
                                      (agent_holds ?b10)
                                      (adjacent ?o ?b10)
                                    )
                                    (agent_holds ?b10)
                                    (agent_holds ?ob)
                                    (agent_holds ?h)
                                  )
                                )
                              )
                            )
                            (in_motion rug)
                            (agent_holds ?h)
                          )
                        )
                      )
                      (agent_holds ?b10)
                      (or
                        (agent_holds ?b10)
                      )
                    )
                  )
                )
              )
            )
          )
          (game-conserved
            (< (distance bed ?o) 2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference golfballLandsInBinThroughRamp
      (exists (?o2 - hexagonal_bin ?t - hexagonal_bin)
        (then
          (once (agent_holds ?t) )
          (once (in_motion ?t) )
          (hold-while (not (exists (?l3 - cube_block) (exists (?b - red_dodgeball) (and (in_motion pink) (and (exists (?b3 - ball ?c - hexagonal_bin) (not (in ?b ?l3) ) ) (and (same_object ?t ?l3) ) ) ) ) ) ) (and (game_start ) ) (and (exists (?d - triangular_ramp ?b - bridge_block) (adjacent ?t ?b) ) (and (exists (?b7 - hexagonal_bin) (in ?b7 ?b7) ) (and (in ?t rug) (agent_holds ?t) (in_motion ?t) (agent_holds ?t) (not (not (broken bed) ) ) (and (and (in_motion green) (< (distance room_center ?t) (distance desk ?t)) ) (and (or (in agent ?t) (exists (?o3 - block ?b - hexagonal_bin) (in_motion ?b) ) ) (not (agent_holds ?t) ) ) (in_motion ?t) ) (agent_holds ?t) ) ) ) )
        )
      )
    )
    (preference dodgeballAndBasketballInBin
      (exists (?w - (either cylindrical_block doggie_bed))
        (then
          (once (in_motion agent) )
          (once (in_motion agent) )
          (once (forall (?p3 - drawer) (and (not (not (in_motion bed) ) ) (agent_holds agent) (not (on ?p3 ?w) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 4 (count dodgeballAndBasketballInBin:beachball) (count golfballLandsInBinThroughRamp) (count-once-per-objects golfballLandsInBinThroughRamp:tall_cylindrical_block) (external-forall-minimize (count-once-per-objects golfballLandsInBinThroughRamp:side_table) ) (count-increasing-measure golfballLandsInBinThroughRamp:hexagonal_bin:basketball) (count-once-per-objects golfballLandsInBinThroughRamp:blue_dodgeball:pyramid_block) (* (count dodgeballAndBasketballInBin:dodgeball) (count-once-per-objects golfballLandsInBinThroughRamp:beachball) (count dodgeballAndBasketballInBin:red) )
      (external-forall-maximize
        (* (* (count-longest golfballLandsInBinThroughRamp:yellow) 5 )
          4
        )
      )
      20
      3
      8
    )
    5
  )
)
(:scoring
  (count-once golfballLandsInBinThroughRamp:golfball:beachball)
)
)



(define (game game-id-942) (:domain few-objects-room-v1)
(:setup
  (forall (?ob - hexagonal_bin ?db - block)
    (game-conserved
      (on ?db ?db)
    )
  )
)
(:constraints
  (and
    (forall (?x ?x0 - blue)
      (and
        (preference throwToBinFromOppositeWall
          (exists (?c6 - blinds ?b3 - cube_block)
            (then
              (once (adjacent ?b3 ?b3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (= 6 (count throwToBinFromOppositeWall:beachball) )
)
(:scoring
  (+ 15 (count throwToBinFromOppositeWall:red) )
)
)



(define (game game-id-943) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b - (either pen laptop) ?h - block)
        (or
          (exists (?b - triangular_ramp)
            (exists (?o - hexagonal_bin)
              (exists (?h - wall)
                (exists (?o - flat_block)
                  (exists (?d - pillow)
                    (forall (?x ?x0 ?x1 - green)
                      (game-optional
                        (in_motion ?d)
                      )
                    )
                  )
                )
              )
            )
          )
          (or
            (exists (?b - ball)
              (game-conserved
                (same_color ?h orange)
              )
            )
            (game-conserved
              (and
                (in_motion ?h)
                (adjacent green_golfball ?h)
                (or
                  (agent_holds ?h)
                  (= (distance ?h ?h) 1)
                )
              )
            )
            (game-optional
              (< 4 (distance ?h ?h))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockInBuilding
      (exists (?b2 - (either alarm_clock tall_cylindrical_block))
        (at-end
          (agent_holds ?b2)
        )
      )
    )
    (preference objectWithMatchingColor
      (exists (?b2 - hexagonal_bin)
        (then
          (once (not (agent_holds floor) ) )
          (once (and (in_motion ?b2) (not (in_motion ?b2) ) (and (and (in_motion agent) (not (same_color ?b2 ?b2) ) ) (not (agent_holds ?b2) ) (or (on ?b2 agent) ) ) (not (< 1 1) ) ) )
          (once (<= 1 10) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 (+ 6 (count-once-per-objects cubeBlockInBuilding:yellow) )
  )
)
(:scoring
  (* 4 7 )
)
)



(define (game game-id-944) (:domain few-objects-room-v1)
(:setup
  (exists (?p - block ?h - hexagonal_bin)
    (and
      (and
        (and
          (exists (?ob - cube_block ?b - pyramid_block)
            (game-conserved
              (not
                (agent_holds agent)
              )
            )
          )
          (game-optional
            (and
              (not
                (in_motion ?h)
              )
              (< (distance ?h ?h) (distance ?h ?h))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?d2 - dodgeball)
        (then
          (once (touch ?d2 ?d2) )
          (hold (opposite ?d2 agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (* 7 (* (count-once objectOnBed:basketball) 5 )
        )
        (count-once objectOnBed:alarm_clock:red)
      )
      (>= (count objectOnBed:golfball) (count objectOnBed:dodgeball) )
    )
    (total-score)
  )
)
(:scoring
  (* 1 (count-once objectOnBed:yellow) )
)
)



(define (game game-id-945) (:domain medium-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?l4 - pillow)
        (in_motion ?l4)
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b - dodgeball ?o - (either ball alarm_clock))
        (then
          (hold (in_motion ?o) )
          (once (in_motion ?o) )
          (once-measure (and (not (agent_holds ?o) ) (not (agent_holds green) ) (and (not (in ?o ?o) ) (above ?o ?o) ) (on green ?o) ) (distance ?o ?o) )
        )
      )
    )
  )
)
(:terminal
  (> 300 (+ (count itemInClosedDrawerAtEnd:pink) (- (= (= (- (count itemInClosedDrawerAtEnd:beachball) )
            -10
          )
        )
      )
    )
  )
)
(:scoring
  (count itemInClosedDrawerAtEnd:beachball:dodgeball)
)
)



(define (game game-id-946) (:domain few-objects-room-v1)
(:setup
  (exists (?b - (either pencil lamp))
    (game-conserved
      (not
        (agent_crouches )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?h - hexagonal_bin)
        (then
          (once (< 1 (distance door ?h)) )
          (hold (in ?h ?h) )
          (once (and (adjacent ?h ?h) (in_motion ?h) ) )
        )
      )
    )
    (forall (?t - block)
      (and
        (preference itemsBroken
          (exists (?c - triangular_ramp)
            (at-end
              (on ?c ?t)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count itemInClosedDrawerAtEnd:basketball:basketball) (total-score) )
)
(:scoring
  (* 15 (* 100 (* 10 10 )
      1
      (count-once-per-objects itemsBroken:beachball)
    )
  )
)
)



(define (game game-id-947) (:domain many-objects-room-v1)
(:setup
  (exists (?b4 ?p - (either laptop alarm_clock))
    (exists (?o5 - cube_block)
      (game-conserved
        (agent_holds ?b4)
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballThrownToBin
      (exists (?t - wall)
        (then
          (hold (not (not (in_motion ?t) ) ) )
          (hold (= 6 2) )
          (hold (not (not (in agent ?t) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-minimize (count-same-positions dodgeballThrownToBin:blue_dodgeball) ) (count dodgeballThrownToBin:dodgeball) )
    (count-once dodgeballThrownToBin:basketball)
  )
)
(:scoring
  (count dodgeballThrownToBin:pink_dodgeball)
)
)



(define (game game-id-948) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (not
      (agent_holds agent)
    )
  )
)
(:constraints
  (and
    (preference throwAttemptFromDoor
      (exists (?g - dodgeball)
        (then
          (once (agent_holds ?g) )
          (hold-while (agent_holds ?g) (not (faces ?g ?g) ) )
          (once (not (not (on ?g ?g) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwAttemptFromDoor) (count-once-per-objects throwAttemptFromDoor:basketball) )
)
(:scoring
  (count-increasing-measure throwAttemptFromDoor:pyramid_block)
)
)



(define (game game-id-949) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (exists (?c2 - (either dodgeball basketball))
        (exists (?o - shelf)
          (and
            (game-optional
              (and
                (not
                  (not
                    (agent_holds ?o)
                  )
                )
                (< 8 (building_size ?o))
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?c2 - tan_cube_block)
        (then
          (once (in ?c2 ?c2) )
          (hold (and (and (not (< 7 (x_position ?c2)) ) (= (distance ?c2 ?c2) 1) ) ) )
          (once (in_motion ?c2) )
        )
      )
    )
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?b7 - building)
        (then
          (once (on ?b7 ?b7) )
          (hold-while (in_motion ?b7) (adjacent ?b7 ?b7) )
        )
      )
    )
  )
)
(:terminal
  (>= (= 1 )
    2
  )
)
(:scoring
  (count-once-per-objects throwOverRamp:hexagonal_bin:beachball)
)
)



(define (game game-id-950) (:domain medium-objects-room-v1)
(:setup
  (exists (?t - (either cylindrical_block book))
    (exists (?b - dodgeball)
      (forall (?w2 - hexagonal_bin)
        (game-optional
          (not
            (not
              (in_motion ?w2)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?b6 - hexagonal_bin)
        (then
          (once (and (agent_holds ?b6) (and (in rug ?b6) (not (exists (?b5 - hexagonal_bin) (and (> (distance ?b5 ?b5) (distance_side desk front_left_corner ?b6 back)) (in ?b5 ?b5) ) ) ) ) ) )
          (hold (not (not (touch ?b6 floor) ) ) )
          (hold (not (agent_holds ?b6) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 10 (count-once dodgeballHitsPillowWithoutTouchingBlock:alarm_clock) )
)
(:scoring
  (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:pink:basketball)
)
)



(define (game game-id-951) (:domain medium-objects-room-v1)
(:setup
  (forall (?w1 - cube_block ?db - beachball)
    (and
      (exists (?bl - block ?c1 - hexagonal_bin)
        (game-conserved
          (and
            (in ?db ?c1)
            (agent_holds ?db)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?o - wall)
        (then
          (once (on ?o ?o) )
          (once (in_motion ?o) )
          (once (in_motion ?o) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* 10 (external-forall-maximize (/ (count throwKnocksOverBear:beachball) (count-shortest throwKnocksOverBear:beachball) ) ) (count throwKnocksOverBear:dodgeball) )
  )
)
(:scoring
  (count-once throwKnocksOverBear:beachball:yellow_cube_block:dodgeball)
)
)



(define (game game-id-952) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (>= 1 8)
  )
)
(:constraints
  (and
    (preference blockOnBlockInTowerAtEnd
      (exists (?c5 - bridge_block ?d - hexagonal_bin)
        (then
          (hold (agent_holds ?d) )
          (once-measure (> (building_size agent) 1) (distance ?d ?d) )
          (once (exists (?g - cube_block ?w1 - shelf) (agent_holds ?w1) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (or
      (<= 180 (total-time) )
    )
  )
)
(:scoring
  (count-once blockOnBlockInTowerAtEnd:pink)
)
)



(define (game game-id-953) (:domain few-objects-room-v1)
(:setup
  (exists (?h - dodgeball ?d1 - hexagonal_bin)
    (game-optional
      (and
        (not
          (and
            (and
              (adjacent ?d1 ?d1)
              (agent_holds rug)
            )
          )
        )
        (and
          (and
            (exists (?r2 ?b10 ?o4 - hexagonal_bin ?o - hexagonal_bin)
              (not
                (in_motion ?o)
              )
            )
          )
          (adjacent desk ?d1)
        )
        (agent_holds ?d1)
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?b - shelf ?b - hexagonal_bin ?d - building)
        (at-end
          (and
            (not
              (and
                (and
                  (adjacent_side ?d right ?d)
                  (and
                    (< 6 (distance ?d agent))
                    (and
                      (agent_holds ?d)
                      (agent_holds ?d)
                    )
                  )
                )
                (adjacent ?d ?d)
              )
            )
            (and
              (not
                (not
                  (< (distance ?d desk) (building_size ?d))
                )
              )
              (faces ?d ?d)
              (game_start )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (= (count throwAttempt:pink_dodgeball) (- (count-longest throwAttempt:beachball) )
    )
    4
  )
)
(:scoring
  (* 1 40 )
)
)



(define (game game-id-954) (:domain few-objects-room-v1)
(:setup
  (exists (?b ?r ?b ?d - dodgeball)
    (and
      (game-optional
        (not
          (not
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?b4 - building)
        (then
          (once (broken ?b4) )
          (once (in ?b4 ?b4) )
          (hold (and (same_color ?b4 ?b4) (and (in_motion ?b4) ) (agent_holds ?b4) (adjacent desk ?b4) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-objects throwInBin:pink) (total-time) )
    (or
      (< 2 (* (/ (* (>= 2 3 )
              (* (count throwInBin:basketball:dodgeball) (count-once throwInBin:dodgeball) )
              2
            )
            (count-same-positions throwInBin:red)
          )
          (count throwInBin:basketball)
        )
      )
      (>= 1 (total-score) )
    )
    (or
      (< (count throwInBin:blue_pyramid_block) (count throwInBin:blue_dodgeball:top_drawer) )
      (>= 3 (total-score) )
    )
    (not
      (< (* (count-same-positions throwInBin:basketball) (count-once-per-objects throwInBin:golfball) )
        (count-once throwInBin)
      )
    )
  )
)
(:scoring
  (count throwInBin:basketball:green)
)
)



(define (game game-id-955) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - hexagonal_bin ?c3 - block ?l - game_object)
    (game-conserved
      (on ?l ?l)
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?o - (either blue_cube_block top_drawer))
        (then
          (once (not (< (distance desk ?o) (distance room_center ?o)) ) )
          (once (rug_color_under ?o yellow) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference pinkObjectMovedToRoomCenter
      (exists (?o5 - dodgeball)
        (then
          (hold (in_motion ?o5) )
          (hold (agent_holds ?o5) )
          (hold (not (not (in_motion ?o5) ) ) )
          (once (agent_holds ?o5) )
        )
      )
    )
  )
)
(:terminal
  (< (count itemsHidingScreens:beachball) (total-score) )
)
(:scoring
  (count itemsHidingScreens:pink)
)
)



(define (game game-id-956) (:domain many-objects-room-v1)
(:setup
  (exists (?b - hexagonal_bin)
    (game-conserved
      (and
        (agent_holds floor)
        (and
          (broken ?b)
          (and
            (not
              (not
                (not
                  (not
                    (on ?b ?b)
                  )
                )
              )
            )
            (= (distance desk ?b) (x_position desk))
          )
        )
        (exists (?b - ball)
          (and
            (and
              (not
                (and
                  (and
                    (agent_holds ?b)
                    (on ?b ?b)
                    (and
                      (not
                        (agent_holds ?b)
                      )
                      (and
                        (adjacent room_center ?b)
                        (agent_holds ?b)
                      )
                      (on ?b ?b)
                      (not
                        (and
                          (and
                            (in agent ?b)
                            (same_color ?b tan)
                            (agent_holds ?b)
                          )
                          (and
                            (not
                              (forall (?b - golfball ?b10 - doggie_bed)
                                (not
                                  (not
                                    (not
                                      (and
                                        (not
                                          (in_motion ?b10)
                                        )
                                        (and
                                          (< (distance bed ?b10) 1)
                                          (agent_holds ?b)
                                        )
                                        (and
                                          (not
                                            (and
                                              (agent_holds ?b)
                                              (not
                                                (agent_holds ?b)
                                              )
                                            )
                                          )
                                          (and
                                            (in_motion ?b10)
                                            (agent_holds ?b)
                                          )
                                        )
                                        (not
                                          (on ?b10 ?b)
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            (not
                              (not
                                (exists (?t - (either bridge_block cylindrical_block triangle_block))
                                  (in_motion ?t)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                    (adjacent_side room_center front_left_corner green_golfball)
                  )
                  (agent_holds ?b)
                )
              )
              (on ?b ?b)
              (agent_holds ?b)
              (and
                (and
                  (not
                    (not
                      (is_setup_object ?b)
                    )
                  )
                )
                (not
                  (faces ?b ?b)
                )
              )
            )
            (in ?b ?b)
          )
        )
        (game_over )
        (on ?b ?b)
        (and
          (agent_holds ?b)
          (in_motion ?b)
          (adjacent desk ?b)
        )
        (and
          (and
            (< (distance ?b ?b) (distance ?b ?b))
            (in_motion ?b)
          )
          (not
            (agent_holds desk)
          )
          (in_motion desk)
        )
        (agent_holds ?b)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either book pencil wall tall_cylindrical_block golfball))
      (and
        (preference objectOnBed
          (exists (?d - building)
            (then
              (hold-while (in_motion ?c) (in ?c ?d) )
              (hold-while (in_motion ?d) (exists (?h - dodgeball) (is_setup_object ?h) ) )
              (hold-while (and (in_motion ?d) (not (and (agent_holds ?c) (agent_holds ?c) ) ) (in_motion ?c) ) (not (agent_holds agent) ) (not (and (not (and (on ?d ?d) (and (in_motion ?d) (> (distance bed ?d) 6) ) ) ) (adjacent desk ?d) (in_motion ?c) (object_orientation ?d diagonal) (object_orientation ?c sideways) (not (agent_holds ?d) ) (and (and (not (on ?c ?d) ) ) (same_type ?c ?c) (same_object ?d ?c) ) (exists (?b1 - teddy_bear) (exists (?d - hexagonal_bin) (agent_holds ?d) ) ) (and (rug_color_under ?d light_blue) (in_motion bed) (agent_holds ?c) ) (agent_holds ?d) ) ) )
            )
          )
        )
      )
    )
    (forall (?l2 - (either yellow_cube_block golfball bridge_block) ?h - game_object ?c5 - curved_wooden_ramp)
      (and
        (preference objectWithMatchingColor
          (exists (?b - hexagonal_bin)
            (then
              (hold-while (not (and (in ?b ?c5) (in_motion ?b) ) ) (> (distance desk ?b) 7) )
              (hold (not (on ?b ?c5) ) )
            )
          )
        )
        (preference cubeBlockInBuilding
          (exists (?h - game_object)
            (then
              (once (agent_holds ?c5) )
              (once (and (game_over ) (and (< 1 (distance ?h ?c5)) (agent_holds ?h) ) ) )
              (once (not (same_object bed ?c5) ) )
            )
          )
        )
      )
    )
    (forall (?p3 - desk_shelf ?g - (either dodgeball beachball pyramid_block))
      (and
        (preference agentLeavesDogbedOrNoMoreBalls
          (exists (?o4 - (either dodgeball laptop))
            (then
              (once (agent_holds ?g) )
              (once (not (not (object_orientation ?g diagonal) ) ) )
              (once (in_motion ?g) )
            )
          )
        )
        (preference bookOnDeskShelf
          (at-end
            (adjacent rug ?g)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (> (count agentLeavesDogbedOrNoMoreBalls:yellow) 10 )
    (> 3 (count agentLeavesDogbedOrNoMoreBalls:hexagonal_bin) )
  )
)
(:scoring
  (count-once-per-objects agentLeavesDogbedOrNoMoreBalls:hexagonal_bin)
)
)



(define (game game-id-957) (:domain medium-objects-room-v1)
(:setup
  (exists (?p ?c5 - wall)
    (game-optional
      (not
        (in_motion rug)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference ballRolledOnRampToRug
          (exists (?h - teddy_bear)
            (at-end
              (and
                (and
                  (not
                    (in_motion ?b)
                  )
                  (and
                    (on ?b ?h)
                    (same_color ?h ?b)
                    (on ?h agent)
                  )
                )
                (same_color ?h green)
                (agent_holds floor)
              )
            )
          )
        )
      )
    )
    (forall (?c3 ?o1 - golfball)
      (and
        (preference throwFromBehindChairsInBin
          (exists (?b1 - hexagonal_bin)
            (at-end
              (not
                (in_motion ?c3)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 6 )
)
(:scoring
  (count-once-per-objects throwFromBehindChairsInBin:yellow:beachball)
)
)



(define (game game-id-958) (:domain many-objects-room-v1)
(:setup
  (game-optional
    (exists (?d2 - pyramid_block)
      (and
        (game_start )
        (on agent ?d2)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?b3 - (either main_light_switch hexagonal_bin))
        (then
          (once (agent_holds ?b3) )
          (once (in_motion ?b3) )
          (hold (and (not (in_motion ?b3) ) ) )
        )
      )
    )
  )
)
(:terminal
  (> (* (count throwKnocksOverBear:golfball) (* 10 (count throwKnocksOverBear:orange) )
      (* (* (count-longest throwKnocksOverBear:tan) (count-once-per-objects throwKnocksOverBear:wall:hexagonal_bin) )
        (count throwKnocksOverBear:golfball)
      )
      5
      6
      (count throwKnocksOverBear:yellow)
    )
    5
  )
)
(:scoring
  (count throwKnocksOverBear:cube_block:green)
)
)



(define (game game-id-959) (:domain medium-objects-room-v1)
(:setup
  (forall (?d - dodgeball)
    (game-optional
      (and
        (not
          (in_motion ?d)
        )
        (not
          (agent_holds ?d)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?b5 - wall ?o1 - block)
        (then
          (once-measure (in_motion ?o1) (distance ?o1 ?o1) )
          (hold (and (equal_z_position bed ?o1) (and (agent_holds ?o1) (agent_holds ?o1) ) ) )
          (once (agent_holds ?o1) )
        )
      )
    )
    (forall (?p - dodgeball)
      (and
        (preference redDodgeballThrownToBin
          (exists (?t - chair)
            (then
              (once (or (in_motion floor) (exists (?l1 - hexagonal_bin) (and (and (on ?l1 ?p) (not (not (>= 1 (distance ?t ?t)) ) ) (adjacent_side ?l1 front ?l1) ) (not (agent_crouches ) ) (not (and (exists (?b - cube_block ?c1 - dodgeball) (in_motion ?l1) ) (and (in_motion ?t) (in_motion ?t) ) ) ) ) ) ) )
              (once (agent_holds ?p) )
              (hold-while (not (on ?t ?t) ) (forall (?b6 ?g - cube_block) (exists (?b3 - game_object) (forall (?c1 - chair ?b7 - cube_block) (agent_holds ?t) ) ) ) )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?d1 - hexagonal_bin)
            (then
              (hold (< (distance desk ?p) 1) )
              (hold-while (in ?p ?p) (= 1 10) )
              (once (and (and (not (not (object_orientation ?d1 diagonal) ) ) ) (not (agent_holds ?p) ) (and (not (and (in_motion ?d1) (adjacent ?d1 ?p) ) ) (on ?p ?d1) (< 0 (distance bed ?p)) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) 40 )
)
(:scoring
  (count-once-per-objects throwToBinFromOppositeWall)
)
)



(define (game game-id-960) (:domain few-objects-room-v1)
(:setup
  (forall (?o - (either hexagonal_bin laptop))
    (game-conserved
      (in_motion ?o)
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b5 - dodgeball ?x ?x0 ?x1 - pink)
        (at-end
          (game_start )
        )
      )
    )
    (preference gameBlockFound
      (exists (?w2 - dodgeball ?bl - hexagonal_bin)
        (then
          (once (agent_holds ?bl) )
          (hold (and (on desk ?bl) ) )
          (once (and (< 1 1) (and (not (adjacent ?bl ?bl) ) (> (distance room_center ?bl) (distance room_center ?bl)) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count gameBlockFound:basketball) 50 )
    (total-score)
  )
)
(:scoring
  (+ 3 10 )
)
)



(define (game game-id-961) (:domain medium-objects-room-v1)
(:setup
  (exists (?ob - wall)
    (game-conserved
      (agent_crouches )
    )
  )
)
(:constraints
  (and
    (forall (?d - game_object)
      (and
        (preference dodgeballHitsPillowWithoutTouchingBlock
          (exists (?g - pillow)
            (then
              (hold (agent_holds agent) )
              (hold (adjacent desk ?g) )
              (once (adjacent desk ?g) )
            )
          )
        )
        (preference cubeBlockThrownToTopShelf
          (exists (?o - building)
            (at-end
              (agent_holds bed)
            )
          )
        )
        (preference throwAttempt
          (exists (?d2 - (either basketball) ?b10 ?h - desk_shelf)
            (then
              (once (on ?b10 ?b10) )
            )
          )
        )
      )
    )
    (forall (?b4 - hexagonal_bin)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?o ?b4 - block)
            (then
              (once (and (and (not (same_color ?o ?o) ) (open ?o) ) (not (agent_holds ?b4) ) ) )
              (hold-while (adjacent desk ?b4) (adjacent desk agent) )
              (hold-while (and (in ?b4 ?o) (object_orientation ?b4 upright) ) (> (distance_side desk back ?b4) (distance ?o ?b4)) (on ?b4 agent) )
            )
          )
        )
        (preference ballInOrOnBin
          (exists (?p - game_object)
            (then
              (once (on ?p top_shelf) )
              (once (and (agent_holds ?p) (and (in_motion ?p) ) ) )
              (hold (not (object_orientation desk upright) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (+ (count tanObjectMovedToRoomCenter:beachball) (* (+ (count-overlapping tanObjectMovedToRoomCenter:pink) (+ 2 (count dodgeballHitsPillowWithoutTouchingBlock:alarm_clock) )
        )
        (count cubeBlockThrownToTopShelf:pink)
        2
        (* (+ (count-once-per-objects dodgeballHitsPillowWithoutTouchingBlock:red) (* (count-same-positions tanObjectMovedToRoomCenter:hexagonal_bin) 0 )
            (count ballInOrOnBin:basketball)
            (* 10 (count throwAttempt:yellow_pyramid_block) )
            2
            (+ (count-once-per-objects ballInOrOnBin:orange:yellow_cube_block) 5 )
            (* 5 (count-once-per-objects cubeBlockThrownToTopShelf:hexagonal_bin:dodgeball:top_drawer) )
            (count cubeBlockThrownToTopShelf:yellow_cube_block)
            (* (* (- 50 )
                (/
                  6
                  2
                )
              )
              (* (count-longest ballInOrOnBin:beachball) (count throwAttempt:dodgeball) (+ (external-forall-minimize (count-once-per-objects tanObjectMovedToRoomCenter:book) ) 5 )
                (count-unique-positions throwAttempt:dodgeball:alarm_clock)
                1
                (count dodgeballHitsPillowWithoutTouchingBlock)
              )
            )
          )
          (* (* 2 4 )
            (external-forall-maximize
              (count throwAttempt:hexagonal_bin:tall_cylindrical_block:dodgeball)
            )
          )
          (+ (* (* 20 (+ (+ 8 (count-once-per-objects ballInOrOnBin:dodgeball:blue_cube_block:beachball) )
                  (count-once-per-objects tanObjectMovedToRoomCenter:yellow:orange)
                )
              )
              (count-once dodgeballHitsPillowWithoutTouchingBlock:pyramid_block)
            )
            10
          )
        )
      )
      (count tanObjectMovedToRoomCenter:dodgeball:beachball)
      2
    )
  )
)
(:scoring
  (count tanObjectMovedToRoomCenter:cube_block)
)
)



(define (game game-id-962) (:domain few-objects-room-v1)
(:setup
  (exists (?o - wall ?b1 - (either bridge_block alarm_clock alarm_clock) ?s - hexagonal_bin)
    (game-conserved
      (and
        (and
          (in_motion ?s)
          (touch ?s ?s)
        )
        (not
          (and
            (and
              (agent_holds rug)
              (agent_holds ?s)
            )
            (and
              (in_motion ?s)
              (in ?s ?s)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?r - dodgeball)
        (at-end
          (and
            (in_motion ?r)
            (not
              (on top_drawer ?r)
            )
            (agent_holds ?r)
          )
        )
      )
    )
    (preference throwAttemptFromBehindBlock
      (exists (?r - (either beachball mug golfball))
        (then
          (once (in_motion floor) )
          (hold (agent_crouches ) )
          (once-measure (not (not (between ?r ?r rug) ) ) (distance ?r ?r) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?c4 - cube_block)
        (then
          (once (not (not (exists (?db - dodgeball ?b - building ?s - hexagonal_bin ?h - ball) (not (on ?c4 ?h) ) ) ) ) )
          (once (exists (?p - game_object) (in_motion ?p) ) )
          (once (and (on ?c4 ?c4) (= (distance ?c4 ?c4)) (touch ?c4 brown) ) )
          (hold (agent_holds ?c4) )
        )
      )
    )
    (preference tanObjectMovedToRoomCenter
      (exists (?c - (either golfball dodgeball))
        (then
          (once (agent_crouches ) )
          (hold (and (in ?c ?c) (>= (distance door ?c) 2) ) )
          (once (and (agent_holds ?c) (in_motion ?c) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 1 )
)
(:scoring
  (count-once-per-objects throwAttemptFromBehindBlock:dodgeball:yellow)
)
)



(define (game game-id-963) (:domain many-objects-room-v1)
(:setup
  (exists (?d - bridge_block ?t - block)
    (game-conserved
      (opposite ?t ?t)
    )
  )
)
(:constraints
  (and
    (preference ballToBinFromBed
      (exists (?w1 - red_dodgeball)
        (then
          (hold-while (and (in_motion rug) ) (and (on ?w1 ?w1) (broken ?w1) ) (and (and (not (in_motion ?w1) ) (on ?w1 ?w1) ) (in_motion ?w1) ) )
          (hold (adjacent ?w1 ?w1) )
          (hold (not (not (exists (?h - block) (not (on bed ?h) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= 40 10 )
  )
)
(:scoring
  (- (count-overlapping ballToBinFromBed:blue_dodgeball) )
)
)



(define (game game-id-964) (:domain many-objects-room-v1)
(:setup
  (exists (?b1 - hexagonal_bin)
    (exists (?c2 - dodgeball)
      (not
        (and
          (exists (?l - chair)
            (and
              (and
                (game-conserved
                  (< 2 (distance rug ?l))
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownIntoTarget
      (exists (?b - dodgeball)
        (then
          (once (and (and (touch ?b ?b) (and (in_motion ?b) (not (in ?b agent) ) ) (not (and (not (rug_color_under ?b blue) ) (and (and (not (on ?b ?b) ) (in ?b ?b) ) (and (agent_holds ?b) (and (agent_holds ?b) (agent_holds ?b) ) ) ) (not (< 1 (distance desk ?b)) ) ) ) ) (< 1 1) ) )
          (hold (agent_holds agent) )
          (once (not (not (on blue ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (= (total-time) (total-time) )
    (>= 10 (* (* (* 2 30 )
          (count-longest ballThrownIntoTarget:red_pyramid_block)
        )
        (count-once-per-objects ballThrownIntoTarget:pyramid_block)
      )
    )
    (>= (* 15 1 -30 5 )
      2
    )
    (< (count-same-positions ballThrownIntoTarget:golfball) (* 6 (count ballThrownIntoTarget:dodgeball:golfball) )
    )
  )
)
(:scoring
  (* (+ 10 (* 5 3 16 (count-once ballThrownIntoTarget:hexagonal_bin) 50 (count ballThrownIntoTarget:basketball:blue_dodgeball) )
    )
    (* 6 20 )
  )
)
)



(define (game game-id-965) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?o4 - block)
      (and
        (and
          (forall (?b - (either pencil book desktop dodgeball) ?b - hexagonal_bin)
            (game-conserved
              (not
                (and
                  (agent_holds ?o4)
                  (and
                    (on ?o4 ?b)
                    (in_motion ?b)
                  )
                )
              )
            )
          )
          (and
            (game-conserved
              (on ?o4 ?o4)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?r ?r ?c - pink_dodgeball)
      (and
        (preference beachballOnRug
          (exists (?r - wall)
            (at-end
              (and
                (in_motion ?c)
                (not
                  (exists (?h - (either blue_cube_block cellphone credit_card cd))
                    (>= 10 (distance desk agent))
                  )
                )
                (not
                  (and
                    (not
                      (not
                        (equal_x_position ?c ?r)
                      )
                    )
                    (same_type ?r bridge_block)
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count-once-per-external-objects beachballOnRug:book) 0 )
    (<= 2 (count-unique-positions beachballOnRug:golfball:yellow_pyramid_block) )
  )
)
(:scoring
  (* 3 (count beachballOnRug:golfball:golfball) )
)
)



(define (game game-id-966) (:domain few-objects-room-v1)
(:setup
  (forall (?d - curved_wooden_ramp ?y ?y0 - (either sideways) ?db - flat_block)
    (and
      (game-optional
        (in_motion ?db)
      )
      (game-conserved
        (exists (?b - dodgeball)
          (same_type agent pillow)
        )
      )
      (and
        (game-conserved
          (agent_holds ?db)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blocksInPlace
      (exists (?p2 - beachball)
        (then
          (once (on ?p2 ?p2) )
          (once (not (agent_holds agent) ) )
          (once (and (in_motion ?p2) (adjacent desk ?p2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 2 (* (count blocksInPlace:top_drawer) (* (- (count-once-per-objects blocksInPlace:golfball) )
          (- (- 50 )
          )
        )
      )
    )
    (not
      (>= 5 (* 10 3 )
      )
    )
  )
)
(:scoring
  (- (count blocksInPlace:basketball:green) )
)
)



(define (game game-id-967) (:domain few-objects-room-v1)
(:setup
  (forall (?b - block ?w2 - building)
    (game-optional
      (same_object ?w2 ?w2)
    )
  )
)
(:constraints
  (and
    (preference pillowThrownToDoggieBed
      (exists (?d - ball ?b4 - dodgeball)
        (then
          (once (and (exists (?b5 - hexagonal_bin) (agent_holds ?b5) ) (in_motion ?b4) ) )
          (hold (not (in_motion ?b4) ) )
          (hold-while (adjacent_side ?b4 right ?b4 left) (not (agent_holds ?b4) ) (not (agent_holds ?b4) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count pillowThrownToDoggieBed:blue_dodgeball) 2 )
)
(:scoring
  (count pillowThrownToDoggieBed:blue_pyramid_block:golfball)
)
)



(define (game game-id-968) (:domain few-objects-room-v1)
(:setup
  (exists (?h - hexagonal_bin)
    (game-optional
      (not
        (and
          (not
            (in_motion west_wall)
          )
          (not
            (is_setup_object agent)
          )
          (agent_holds ?h)
          (in_motion ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?p - hexagonal_bin ?p2 - game_object)
        (then
          (hold (same_color ?p2 pink) )
          (hold (faces ?p2 ?p2) )
          (once (not (and (adjacent_side desk front agent) (not (touch ?p2 ?p2) ) (adjacent ?p2 agent) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* (external-forall-maximize (external-forall-maximize (count-once-per-objects towerFallsWhileBuilding:dodgeball:golfball) ) ) (count towerFallsWhileBuilding:yellow) )
      10
    )
    (count-shortest towerFallsWhileBuilding:dodgeball)
  )
)
(:scoring
  (count towerFallsWhileBuilding:yellow)
)
)



(define (game game-id-969) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - hexagonal_bin ?o ?d ?b1 ?b ?b ?o1 - doggie_bed ?b8 - hexagonal_bin ?ob - dodgeball)
      (exists (?r - drawer ?o ?b - ball)
        (forall (?d - hexagonal_bin)
          (exists (?o - (either pillow rug))
            (and
              (forall (?b - (either teddy_bear cube_block))
                (exists (?t - (either yellow_cube_block cylindrical_block))
                  (forall (?tb - hexagonal_bin ?c - cylindrical_block ?d - dodgeball ?l3 - hexagonal_bin)
                    (and
                      (game-conserved
                        (< (distance room_center bed) (distance room_center ?d))
                      )
                    )
                  )
                )
              )
              (game-conserved
                (and
                  (agent_holds agent)
                  (in ?b ?d)
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?c - hexagonal_bin ?d1 - (either bridge_block main_light_switch hexagonal_bin))
        (then
          (once (not (on ?d1 ?d1) ) )
          (once (not (agent_holds ?d1) ) )
          (hold (on ?d1 ?d1) )
        )
      )
    )
  )
)
(:terminal
  (or
    (>= (count bigObjectThrownToBed:beachball) (count bigObjectThrownToBed:hexagonal_bin) )
    (>= (* (count bigObjectThrownToBed:green) (external-forall-maximize (external-forall-maximize (* (count bigObjectThrownToBed:basketball) 3 )
          )
        )
      )
      (- 3 )
    )
  )
)
(:scoring
  (count bigObjectThrownToBed:pink)
)
)



(define (game game-id-970) (:domain many-objects-room-v1)
(:setup
  (exists (?d - hexagonal_bin)
    (forall (?o - (either cylindrical_block main_light_switch floor))
      (game-conserved
        (<= (distance desk ?o) 8)
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?db - beachball ?c2 - pink_dodgeball)
        (at-end
          (adjacent ?c2 ?c2)
        )
      )
    )
    (forall (?b5 - hexagonal_bin ?g - doggie_bed)
      (and
        (preference binKnockedOver
          (exists (?c3 - dodgeball)
            (then
              (once (< 0.5 1) )
              (once (opposite agent ?c3) )
              (once (in_motion ?c3) )
            )
          )
        )
      )
    )
    (forall (?p1 - building)
      (and
        (preference blockInTowerKnocked
          (exists (?h - hexagonal_bin ?l3 - (either dodgeball yellow_cube_block) ?b2 - teddy_bear)
            (then
              (once (not (object_orientation ?p1 upright) ) )
              (hold (and (same_color ?b2 ?b2) (in_motion ?b2) (agent_holds ?b2) (same_object bed ?p1) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (* 20 15 )
    (* 5 1 (count cubeBlockFromBedToShelf:basketball:dodgeball) )
  )
)
(:scoring
  (count cubeBlockFromBedToShelf:bed)
)
)



(define (game game-id-971) (:domain few-objects-room-v1)
(:setup
  (forall (?w1 - hexagonal_bin ?b - wall)
    (and
      (and
        (game-optional
          (in_motion ?b)
        )
        (exists (?o - ball)
          (exists (?w1 - hexagonal_bin ?w - dodgeball)
            (exists (?z - back)
              (forall (?r - hexagonal_bin)
                (and
                  (forall (?ob - triangular_ramp)
                    (exists (?c2 - hexagonal_bin)
                      (game-conserved
                        (agent_holds desk)
                      )
                    )
                  )
                  (exists (?b4 - cube_block ?d - dodgeball)
                    (forall (?h - doggie_bed)
                      (not
                        (and
                          (and
                            (game-conserved
                              (in_motion ?r)
                            )
                          )
                          (exists (?ob - hexagonal_bin)
                            (game-conserved
                              (and
                                (on ?h ?w)
                                (in_motion ?r)
                                (in_motion ?d)
                                (in_motion ?w)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (and
                    (game-conserved
                      (on ?o ?o)
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?t1 - drawer)
        (at-end
          (in_motion ?t1)
        )
      )
    )
  )
)
(:terminal
  (>= 15 (= (count ballThrownFromRug:dodgeball) (* (count ballThrownFromRug:dodgeball) (+ (count ballThrownFromRug:dodgeball) 4 )
      )
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:orange)
)
)



(define (game game-id-972) (:domain many-objects-room-v1)
(:setup
  (forall (?o1 - hexagonal_bin ?r - doggie_bed)
    (game-conserved
      (agent_holds ?r)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h - hexagonal_bin)
        (at-end
          (agent_holds ?h)
        )
      )
    )
    (preference throwAttempt
      (exists (?p1 - hexagonal_bin)
        (then
          (once (adjacent ?p1 ?p1) )
          (once (on ?p1 green_golfball) )
          (once (not (toggled_on ?p1) ) )
          (once (exists (?b4 - curved_wooden_ramp) (faces agent ?b4) ) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?b4 - (either laptop laptop))
        (at-end
          (and
            (< (distance ?b4 ?b4) 1)
            (agent_holds agent)
          )
        )
      )
    )
    (forall (?b2 - yellow_cube_block)
      (and
        (preference ballThrownIntoTarget
          (exists (?l1 - doggie_bed)
            (then
              (hold (and (not (not (not (agent_holds ?b2) ) ) ) (in agent ?b2) (and (and (and (and (not (on bed ?l1) ) (in ?b2 ?l1) ) (in_motion bed) ) (not (in ?b2 ?l1) ) (and (not (same_object ?b2 south_wall) ) (not (in_motion ?l1) ) (adjacent_side desk front ?b2) (in ?l1 ?b2) ) (and (exists (?o - dodgeball ?ob - block ?s - ball) (and (in_motion ?s) (exists (?d - hexagonal_bin ?b3 - curved_wooden_ramp ?c - curved_wooden_ramp) (adjacent ?s rug) ) (not (agent_holds ?s) ) (in_motion ?l1) ) ) (and (> 1 5) (on ?l1 ?b2) ) ) ) (in_motion ?b2) ) ) )
              (once (in ?b2 ?b2) )
              (hold (on ?b2 ?b2) )
            )
          )
        )
        (preference woodenBlockMovedFromRugToDesk
          (exists (?h - curved_wooden_ramp ?o - cube_block)
            (then
              (hold (in ?o agent) )
              (hold-while (< 0 1) (in_motion floor) (not (or (agent_holds floor) (on ?o ?o) ) ) (or (touch ?b2 ?b2) (opposite ?b2 ?b2) ) )
              (once (not (and (same_color ?o ?o) (game_start ) ) ) )
            )
          )
        )
        (preference throwFromBehindChairsInBin
          (exists (?c - hexagonal_bin)
            (then
              (once (not (> (distance bed ?b2) (distance desk ?b2)) ) )
              (hold (agent_holds ?b2) )
              (hold (not (agent_holds ?c) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (count golfballInBinFromPillow:green) (total-score) )
)
(:scoring
  (* 3 (* (* (* (count woodenBlockMovedFromRugToDesk:book) 10 )
        (+ (* (count-once-per-objects throwFromBehindChairsInBin:hexagonal_bin:beachball:brown) 5 )
          (count golfballInBinFromPillow:dodgeball:blue_dodgeball)
          10
        )
      )
      (+ 2 100 )
    )
  )
)
)



(define (game game-id-973) (:domain many-objects-room-v1)
(:setup
  (forall (?b ?t2 - hexagonal_bin)
    (game-optional
      (agent_holds ?t2)
    )
  )
)
(:constraints
  (and
    (forall (?p - (either laptop bridge_block) ?b2 - hexagonal_bin)
      (and
        (preference objectOnBed
          (exists (?z ?z0 - (either front_left_corner))
            (then
              (hold (equal_z_position door ?b2) )
              (hold (not (in ?b2 ?b2) ) )
              (once (agent_holds rug) )
            )
          )
        )
        (preference pillowMovedToRoomCenter
          (exists (?h - teddy_bear ?b5 - hexagonal_bin)
            (at-end
              (= 2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count objectOnBed:yellow_cube_block) 5 )
    (+ (+ 2 5 )
      4
    )
  )
)
(:scoring
  (count pillowMovedToRoomCenter:blue_pyramid_block)
)
)



(define (game game-id-974) (:domain few-objects-room-v1)
(:setup
  (forall (?b - block)
    (exists (?b1 - hexagonal_bin ?w1 - hexagonal_bin)
      (exists (?h - pillow ?c1 - (either golfball cylindrical_block))
        (and
          (game-conserved
            (not
              (and
                (above ?w1 ?w1)
                (in ?c1 ?c1)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference thrownBallReachesEnd
      (exists (?g - hexagonal_bin ?h - ball ?p1 - yellow_cube_block)
        (then
          (once (equal_x_position ?p1 desk) )
          (hold (agent_holds ?p1) )
          (hold (< 8 1) )
        )
      )
    )
    (preference watchOnShelf
      (exists (?d - doggie_bed)
        (then
          (once (in_motion ?d) )
          (once (and (not (in_motion ?d) ) (in_motion ?d) ) )
          (hold (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (count thrownBallReachesEnd:doggie_bed:yellow:tall_cylindrical_block) (* (count-same-positions thrownBallReachesEnd:blue_dodgeball) 1 )
  )
)
(:scoring
  (* 5 1 )
)
)



(define (game game-id-975) (:domain medium-objects-room-v1)
(:setup
  (forall (?c2 - hexagonal_bin)
    (game-optional
      (touch ?c2 ?c2)
    )
  )
)
(:constraints
  (and
    (forall (?b - triangular_ramp)
      (and
        (preference itemInClosedDrawerAtEnd
          (exists (?o - hexagonal_bin)
            (then
              (hold (and (> (distance room_center ?o) 1) (and (in_motion ?b) (in_motion bed) ) ) )
              (once (on ?b ?b) )
              (hold (in_motion ?o) )
            )
          )
        )
      )
    )
    (forall (?t ?s - ball ?w ?c - cube_block ?b ?h - hexagonal_bin)
      (and
        (preference objectThrownFromRug
          (exists (?w1 - hexagonal_bin)
            (then
              (once (not (agent_holds ?b) ) )
              (once (touch ?b ?h) )
              (once (not (and (in_motion ?h) (and (or (not (exists (?x ?x0 - purple ?r - doggie_bed) (< 2 (distance ?r ?w1)) ) ) (agent_holds main_light_switch) (and (in ?b ?w1) (not (not (not (and (and (on ?w1 ?w1) (game_over ) ) (and (not (in_motion ?h) ) (in_motion ?w1) ) ) ) ) ) ) ) (not (agent_holds ?b) ) (not (in_motion ?b) ) (not (in_motion agent) ) (and (game_over ) (and (not (and (adjacent west_wall ?b) (and (same_color ?b ?b) (on ?b top_shelf) (agent_holds ?w1) ) (in_motion ?b) (< 4 (distance room_center bed)) ) ) (not (not (agent_holds ?b) ) ) (not (and (not (same_color ?b ?b) ) (and (agent_holds ?w1) (on floor ?h) (same_color ?w1 ?h) (agent_holds ?h) ) (touch ?w1 ?w1) ) ) ) ) (and (and (adjacent ?w1 ?w1) (and (agent_holds ?w1) (and (not (in_motion ?h) ) (agent_holds ?h) (not (agent_holds ?w1) ) ) ) (< 1 6) (in_motion ?w1) ) (and (not (not (and (not (in_motion ?h) ) (and (and (on ?b ?w1) (not (not (same_type ?b blinds) ) ) ) (exists (?t1 - ball) (on ?h ?w1) ) (not (not (not (on ?b ?b) ) ) ) (agent_holds ?w1) ) ) ) ) (not (equal_z_position ?b ?b) ) ) ) ) ) ) )
            )
          )
        )
      )
    )
    (forall (?c1 ?l2 ?b7 - blinds)
      (and
        (preference otherObjectsOnDeskShelf
          (exists (?g - (either desktop pyramid_block) ?h ?d ?s - ball)
            (at-end
              (and
                (not
                  (agent_holds ?b7)
                )
                (above ?s ?h)
              )
            )
          )
        )
        (preference blockToBinFromRug
          (at-end
            (in ?l2 ?b7)
          )
        )
      )
    )
  )
)
(:terminal
  (= (* (* 40 2 )
      (+ (count-once-per-objects blockToBinFromRug:golfball) 10 )
    )
    (count objectThrownFromRug:blue)
  )
)
(:scoring
  (count-once-per-objects blockToBinFromRug:golfball)
)
)



(define (game game-id-976) (:domain many-objects-room-v1)
(:setup
  (exists (?c2 - hexagonal_bin)
    (and
      (game-optional
        (and
          (not
            (on ?c2 ?c2)
          )
          (and
            (rug_color_under top_drawer light_blue)
            (< 1 (x_position ?c2))
          )
        )
      )
      (and
        (exists (?h - bridge_block)
          (forall (?w2 - (either cube_block golfball))
            (game-optional
              (and
                (adjacent rug ?w2)
                (in_motion ?w2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?t1 - hexagonal_bin)
        (then
          (once (not (adjacent desk ?t1) ) )
          (once (on ?t1 ?t1) )
          (hold (and (toggled_on ?t1) (in_motion ?t1) ) )
        )
      )
    )
  )
)
(:terminal
  (<= 6 (count blockIncorrectlyPicked:side_table:top_drawer) )
)
(:scoring
  (- (* (* 3 (- (* (< (count-once-per-external-objects blockIncorrectlyPicked:dodgeball) (* 2 (count blockIncorrectlyPicked:dodgeball) )
            )
            (* (count blockIncorrectlyPicked:basketball) (count-measure blockIncorrectlyPicked:alarm_clock:beachball) )
          )
        )
      )
      (* 15 (* 5 6 )
      )
    )
  )
)
)



(define (game game-id-977) (:domain medium-objects-room-v1)
(:setup
  (and
    (and
      (forall (?c - teddy_bear ?w1 ?r ?c4 - ball)
        (game-conserved
          (not
            (not
              (adjacent bed ?w1)
            )
          )
        )
      )
    )
    (exists (?l - doggie_bed)
      (exists (?z ?z0 ?z1 - (either left) ?t - block ?l2 - hexagonal_bin)
        (exists (?d - dodgeball)
          (and
            (not
              (forall (?d - block)
                (and
                  (and
                    (exists (?b2 - cube_block)
                      (exists (?d - ball)
                        (and
                          (or
                            (and
                              (forall (?o3 ?b3 - hexagonal_bin)
                                (and
                                  (game-optional
                                    (not
                                      (not
                                        (on ?l2 ?o3)
                                      )
                                    )
                                  )
                                )
                              )
                              (game-optional
                                (and
                                  (agent_holds ?d)
                                  (> (distance desk ?d) (distance bed ?l2))
                                )
                              )
                            )
                            (game-conserved
                              (agent_holds ?l2)
                            )
                          )
                          (game-conserved
                            (and
                              (agent_holds ?d)
                              (agent_holds ?b2)
                            )
                          )
                          (game-optional
                            (or
                              (not
                                (agent_holds ?l2)
                              )
                              (touch ?d ?l2)
                            )
                          )
                        )
                      )
                    )
                    (and
                      (exists (?b - wall)
                        (game-optional
                          (agent_holds green_golfball)
                        )
                      )
                    )
                  )
                )
              )
            )
            (exists (?t - (either beachball desktop))
              (forall (?t - (either laptop dodgeball cd yellow_cube_block desktop))
                (game-conserved
                  (in_motion ?t)
                )
              )
            )
          )
        )
      )
    )
    (exists (?p1 - hexagonal_bin)
      (and
        (and
          (exists (?b - triangular_ramp ?o2 - teddy_bear)
            (exists (?bl - bridge_block)
              (and
                (exists (?l4 - game_object)
                  (forall (?ob - hexagonal_bin)
                    (game-optional
                      (not
                        (in_motion ?o2)
                      )
                    )
                  )
                )
              )
            )
          )
          (forall (?b10 - hexagonal_bin)
            (game-conserved
              (in ?b10 ?b10)
            )
          )
        )
        (forall (?w1 - game_object)
          (and
            (and
              (game-conserved
                (agent_holds ?p1)
              )
              (exists (?b - ball)
                (forall (?c - (either game_object golfball))
                  (exists (?c - drawer ?d ?c1 ?h ?tb - chair)
                    (game-conserved
                      (in ?w1 ?h)
                    )
                  )
                )
              )
              (game-optional
                (and
                  (agent_holds ?p1)
                  (in ?w1 ?p1)
                )
              )
              (game-optional
                (agent_holds ?w1)
              )
              (exists (?c3 - hexagonal_bin)
                (game-optional
                  (and
                    (agent_holds ?c3)
                    (not
                      (not
                        (in ?c3 agent)
                      )
                    )
                    (or
                      (in ?c3 ?p1)
                    )
                  )
                )
              )
            )
          )
        )
        (game-conserved
          (not
            (and
              (and
                (not
                  (touch ?p1 desk)
                )
                (agent_holds ?p1)
              )
              (not
                (not
                  (not
                    (and
                      (not
                        (same_object ?p1 ?p1)
                      )
                      (or
                        (and
                          (exists (?b - hexagonal_bin ?d - building ?w1 - doggie_bed)
                            (or
                              (agent_holds ?p1)
                              (and
                                (or
                                  (adjacent room_center ?p1)
                                  (and
                                    (and
                                      (not
                                        (not
                                          (agent_holds floor)
                                        )
                                      )
                                      (same_object ?p1 agent)
                                    )
                                    (between bed ?p1 ?p1)
                                  )
                                )
                                (and
                                  (touch ?p1 ?w1)
                                  (exists (?h - hexagonal_bin)
                                    (on agent ?h)
                                  )
                                )
                              )
                            )
                          )
                          (touch agent ?p1)
                        )
                        (agent_holds ?p1)
                        (not
                          (< (distance desk ?p1) 2)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?b - cube_block)
        (at-end
          (not
            (exists (?d - block)
              (and
                (or
                  (and
                    (and
                      (in_motion ?b)
                      (and
                        (in_motion ?b)
                        (not
                          (and
                            (not
                              (and
                                (not
                                  (in ?b ?d)
                                )
                                (agent_holds ?b)
                              )
                            )
                            (and
                              (and
                                (and
                                  (agent_holds ?d)
                                  (agent_holds ?d)
                                )
                                (and
                                  (and
                                    (agent_holds ?b)
                                    (not
                                      (and
                                        (not
                                          (adjacent door ?d)
                                        )
                                        (in_motion ?b)
                                      )
                                    )
                                  )
                                  (in ?d ?b)
                                  (not
                                    (adjacent_side door back main_light_switch)
                                  )
                                )
                              )
                              (in_motion ?d)
                            )
                          )
                        )
                      )
                      (same_color ?d ?b)
                    )
                    (not
                      (not
                        (same_color ?d ?b)
                      )
                    )
                    (touch ?b ?d)
                  )
                  (not
                    (on ?b ?b)
                  )
                  (and
                    (agent_holds ?d)
                    (not
                      (exists (?d - red_pyramid_block ?y ?y0 - upright)
                        (not
                          (adjacent ?b ?d)
                        )
                      )
                    )
                  )
                )
                (in ?d green)
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (> (total-time) (* (* 10 (+ (* 15 5 )
          (* 100 (count-once-per-objects teddyBearLandsInBin:beachball) (count teddyBearLandsInBin) 5 (= (external-forall-maximize (* (* (+ (= 5 2 )
                      -30
                    )
                    4
                  )
                  (count-longest teddyBearLandsInBin:beachball:dodgeball:orange)
                )
              )
              (count teddyBearLandsInBin:blue_pyramid_block)
            )
            5
            (* 9 (count teddyBearLandsInBin:pink) )
            3
            (+ 1 (* (count teddyBearLandsInBin:beachball:tan) 4 (count teddyBearLandsInBin:blue_cube_block:beachball) )
            )
            (count-once-per-objects teddyBearLandsInBin:blue_cube_block)
            (+ (count-once-per-objects teddyBearLandsInBin:yellow_cube_block) 3 )
            (+ 3 (* 4 5 )
            )
          )
        )
      )
      (count teddyBearLandsInBin:golfball)
    )
  )
)
(:scoring
  (- 50 )
)
)



(define (game game-id-978) (:domain many-objects-room-v1)
(:setup
  (forall (?l4 - dodgeball ?y ?y0 ?y1 - upside_down)
    (and
      (game-conserved
        (not
          (not
            (agent_holds ?l4)
          )
        )
      )
      (game-optional
        (in_motion ?l4)
      )
    )
  )
)
(:constraints
  (and
    (preference laptopAndBookInPlace
      (exists (?o - dodgeball ?b ?w2 - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (in bed ?b) ) )
          (once (and (same_color ?b ?w2) (adjacent ?b agent) ) )
          (once (and (not (forall (?bl - (either book bridge_block blue_cube_block) ?r - cube_block ?b - game_object) (not (and (agent_holds ?w2) (agent_holds ?w2) ) ) ) ) (< 4 2) (in ?w2 bed) (and (and (in_motion ?b) (on ?b ?b) (not (and (on ?b ?w2) (and (above ?b ?b) (adjacent ?w2 ?w2) (agent_holds ?b) ) (agent_holds ?w2) (agent_holds ?w2) ) ) ) (on ?w2 ?b) ) (not (not (in_motion ?w2) ) ) (and (agent_holds ?b) (agent_holds ?b) (game_over ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (count laptopAndBookInPlace:pink_dodgeball:basketball) (count-once-per-objects laptopAndBookInPlace:pink_dodgeball) )
  )
)
(:scoring
  (count-measure laptopAndBookInPlace:doggie_bed)
)
)



(define (game game-id-979) (:domain few-objects-room-v1)
(:setup
  (exists (?t2 - hexagonal_bin ?l - dodgeball)
    (forall (?c - hexagonal_bin ?b ?h ?p ?c4 ?o - (either cube_block wall) ?o - hexagonal_bin)
      (game-conserved
        (exists (?o - game_object)
          (in ?o ?l)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - (either laptop mug))
        (at-end
          (> (distance ?d ?d) 3)
        )
      )
    )
    (preference ballThrownToRug
      (exists (?ob - block ?h ?o3 ?c3 - block)
        (then
          (once (and (agent_holds ?h) (< (distance ?c3 rug) 1) ) )
          (once (and (on floor ?c3) (in ?c3 ?o3) ) )
          (once (on ?c3 ?h) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (count-shortest ballThrownToBin:blue_dodgeball) )
)
(:scoring
  (count ballThrownToRug:hexagonal_bin)
)
)



(define (game game-id-980) (:domain few-objects-room-v1)
(:setup
  (exists (?b - yellow_pyramid_block ?r - game_object ?b2 - dodgeball)
    (forall (?g - hexagonal_bin)
      (exists (?c2 - curved_wooden_ramp ?d - hexagonal_bin ?b - hexagonal_bin)
        (and
          (forall (?db - hexagonal_bin)
            (exists (?r1 - ball)
              (game-conserved
                (and
                  (and
                    (< (distance desk ?r1) 0.5)
                    (< (distance desk ?b2) 10)
                  )
                  (in_motion agent)
                )
              )
            )
          )
          (and
            (game-optional
              (and
                (in ?g ?b2)
                (and
                  (game_over )
                  (not
                    (in_motion ?b)
                  )
                )
                (agent_holds ?b)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPickedUp
      (exists (?b - (either cellphone) ?w1 - hexagonal_bin)
        (then
          (hold (in_motion ?w1) )
          (hold (and (agent_holds ?w1) (not (agent_holds ?w1) ) (in desk ?w1) (agent_holds ?w1) ) )
          (once (in ?w1 ?w1) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-objects blockPickedUp:golfball) (+ 5 (count-once-per-objects blockPickedUp:yellow:hexagonal_bin) (count-once-per-objects blockPickedUp:basketball:dodgeball) )
  )
)
(:scoring
  (count-unique-positions blockPickedUp:golfball:green)
)
)



(define (game game-id-981) (:domain medium-objects-room-v1)
(:setup
  (forall (?l1 - hexagonal_bin)
    (game-conserved
      (in ?l1 ?l1)
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?l - dodgeball)
        (at-end
          (and
            (and
              (not
                (in_motion ?l)
              )
              (agent_holds ?l)
              (not
                (and
                  (not
                    (and
                      (and
                        (and
                          (not
                            (and
                              (on ?l ?l)
                              (and
                                (in_motion agent)
                                (in_motion ?l)
                              )
                            )
                          )
                          (touch ?l ?l)
                          (agent_holds ?l)
                          (not
                            (agent_holds ?l)
                          )
                          (adjacent ?l ?l)
                          (in_motion ?l)
                        )
                        (agent_holds ?l)
                        (and
                          (in_motion floor)
                          (in ?l ?l)
                          (on ?l ?l)
                        )
                      )
                      (in_motion agent)
                      (exists (?r - game_object)
                        (not
                          (agent_holds agent)
                        )
                      )
                      (in_motion ?l)
                    )
                  )
                  (= (distance ?l ?l) 1)
                )
              )
            )
            (not
              (agent_holds ?l)
            )
          )
        )
      )
    )
    (preference pillowThrownToDoggieBed
      (exists (?d - ball ?b - dodgeball)
        (then
          (once (and (same_color ?b ?b) (and (agent_holds ?b) (toggled_on ?b) ) ) )
          (once (not (on ?b ?b) ) )
          (hold-while (in_motion ?b) (and (touch ?b ?b) (< 4 (distance desk ?b)) ) )
        )
      )
    )
    (preference dropAttempt
      (exists (?o - cube_block)
        (at-end
          (same_object desk agent)
        )
      )
    )
  )
)
(:terminal
  (<= 30 (/ (+ (* 6 (count pillowThrownToDoggieBed:blue_dodgeball) )
        1
      )
      7
    )
  )
)
(:scoring
  (count pillowThrownToDoggieBed:block)
)
)



(define (game game-id-982) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?d - (either pyramid_block tall_cylindrical_block desktop) ?d - dodgeball ?tb - ball)
      (and
        (exists (?o2 - beachball ?l - shelf ?t2 - cube_block ?d - ball)
          (and
            (exists (?s ?c - ball)
              (exists (?h - dodgeball ?b - game_object)
                (forall (?t2 - hexagonal_bin)
                  (forall (?b - game_object)
                    (exists (?b - hexagonal_bin)
                      (exists (?b - triangular_ramp ?d - ball)
                        (exists (?d1 - wall)
                          (game-conserved
                            (in ?d ?d1)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?b4 - wall)
        (at-end
          (not
            (in_motion ?b4)
          )
        )
      )
    )
  )
)
(:terminal
  (and
    (or
      (>= (total-score) (count-once-per-objects dodgeballHitsBin:purple:pyramid_block) )
    )
  )
)
(:scoring
  (count-once-per-external-objects dodgeballHitsBin:golfball)
)
)



(define (game game-id-983) (:domain medium-objects-room-v1)
(:setup
  (exists (?p - cube_block ?b - building)
    (game-optional
      (opposite ?b ?b)
    )
  )
)
(:constraints
  (and
    (forall (?b3 - (either pyramid_block book) ?bl - hexagonal_bin ?b - block)
      (and
        (preference blockPickedUp
          (exists (?c1 - (either dodgeball main_light_switch))
            (then
              (hold (agent_holds ?b) )
              (once (in_motion ?b) )
              (once (agent_holds ?c1) )
            )
          )
        )
      )
    )
    (preference itemsHidingScreens
      (exists (?b - cube_block ?o1 - hexagonal_bin)
        (then
          (once (agent_holds ?o1) )
          (once (not (not (agent_holds ?o1) ) ) )
          (hold (and (and (not (on ?o1 ?o1) ) (and (not (agent_holds ?o1) ) (and (equal_z_position bed ?o1) (or (in_motion ?o1) (not (and (on ?o1 ?o1) (agent_holds ?o1) ) ) ) ) ) ) (touch ?o1 ?o1) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (external-forall-minimize (count-increasing-measure blockPickedUp:red) ) 0.7 (count-once itemsHidingScreens:dodgeball) )
    (+ (external-forall-maximize (count itemsHidingScreens:tan:basketball) ) 2 )
  )
)
(:scoring
  (* (count-increasing-measure itemsHidingScreens:red_pyramid_block) 18 )
)
)



(define (game game-id-984) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?o - ball)
      (and
        (forall (?h ?w2 - triangular_ramp)
          (exists (?d - triangular_ramp)
            (not
              (and
                (game-conserved
                  (not
                    (on ?h ?o)
                  )
                )
                (and
                  (exists (?d2 - game_object)
                    (and
                      (game-conserved
                        (in ?d2 ?d2)
                      )
                      (forall (?h - building)
                        (game-conserved
                          (and
                            (adjacent door ?d)
                            (agent_holds ?d)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?x ?x0 ?x1 - yellow)
      (and
        (preference throwTeddyOntoPillow
          (exists (?h - hexagonal_bin)
            (then
              (once (same_color ?h ?h) )
              (hold (or (agent_holds ?h) ) )
              (once (not (not (equal_z_position door ?h) ) ) )
            )
          )
        )
        (preference blockFromRugToDesk
          (exists (?c ?d ?d - chair)
            (then
              (hold (in ?d ?c) )
              (once (and (same_object agent ?c) (in_motion ?c) ) )
              (once (and (not (on ?d ?d) ) (and (not (in ?d rug) ) (on ?d ?c) ) (exists (?l - (either cube_block dodgeball cd alarm_clock)) (same_color ?l color) ) ) )
            )
          )
        )
        (preference throwBallToBin
          (exists (?w2 ?l2 - (either yellow_cube_block pillow tall_cylindrical_block cylindrical_block))
            (then
              (once (in ?l2 ?w2) )
              (hold (not (agent_holds ?w2) ) )
              (hold (on ?w2 ?w2) )
            )
          )
        )
        (preference beachballBouncedOffRamp
          (exists (?g - doggie_bed)
            (then
              (once (and (touch ?g ?g) (in_motion ?g) (and (and (in_motion ?g) (< (distance desk ?g) 10) ) (not (in ?g top_drawer) ) ) (on ?g ?g) ) )
              (once (on ?g bed) )
              (once (adjacent ?g ?g) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (+ (count-unique-positions blockFromRugToDesk:beachball) 12 )
    (total-score)
  )
)
(:scoring
  (* 4 (< 10 (count-same-positions beachballBouncedOffRamp:doggie_bed) )
  )
)
)



(define (game game-id-985) (:domain few-objects-room-v1)
(:setup
  (exists (?d ?d2 - hexagonal_bin ?h - (either laptop dodgeball dodgeball))
    (and
      (and
        (and
          (and
            (forall (?c3 - hexagonal_bin)
              (exists (?h - cube_block ?b2 - teddy_bear)
                (and
                  (exists (?b5 - dodgeball)
                    (game-conserved
                      (and
                        (in_motion ?h)
                        (between ?b5 agent rug)
                        (agent_holds ?c3)
                        (and
                          (open ?b5)
                          (in_motion rug)
                          (not
                            (in_motion agent)
                          )
                          (in agent ?c3)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?c - red_pyramid_block)
            (or
              (exists (?b5 - doggie_bed)
                (and
                  (not
                    (game-conserved
                      (not
                        (forall (?y ?y0 ?y1 - diagonal ?l - shelf)
                          (on ?h ?l)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        (and
          (exists (?c2 - game_object)
            (and
              (game-conserved
                (and
                  (not
                    (and
                      (and
                        (agent_holds ?c2)
                        (not
                          (in ?h ?c2)
                        )
                      )
                      (on ?c2 agent)
                    )
                  )
                  (and
                    (toggled_on ?c2)
                    (and
                      (not
                        (not
                          (exists (?p1 - (either cylindrical_block) ?o1 - chair)
                            (in_motion ?o1)
                          )
                        )
                      )
                      (agent_holds ?c2)
                    )
                  )
                )
              )
              (game-optional
                (and
                  (in_motion ?c2)
                  (agent_holds ?c2)
                )
              )
            )
          )
        )
        (game-optional
          (not
            (in_motion ?h)
          )
        )
      )
      (and
        (game-conserved
          (in bed ?h)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?o - pyramid_block)
      (and
        (preference itemsTurnedOff
          (exists (?b - dodgeball ?o - dodgeball)
            (then
              (once (touch ?o ?o) )
              (once (not (in_motion ?o) ) )
              (once (touch bed ?o) )
            )
          )
        )
      )
    )
    (preference ballThrownFromRug
      (exists (?d - hexagonal_bin)
        (at-end
          (not
            (not
              (in_motion ?d)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count itemsTurnedOff:purple:dodgeball) (count-once-per-objects ballThrownFromRug:green) )
    (count itemsTurnedOff:brown)
  )
)
(:scoring
  (count-measure itemsTurnedOff:beachball)
)
)



(define (game game-id-986) (:domain many-objects-room-v1)
(:setup
  (forall (?b2 - pillow)
    (exists (?c3 - game_object)
      (and
        (forall (?c1 - doggie_bed ?h - ball ?o - cube_block)
          (forall (?b - wall)
            (game-conserved
              (agent_holds ?c3)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?b - doggie_bed)
        (then
          (once (in ?b rug) )
          (once (agent_holds ?b) )
          (once-measure (not (not (on floor ?b) ) ) (building_size agent) )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemInClosedDrawerAtEnd:dodgeball) 5 )
)
(:scoring
  (* (* (external-forall-maximize (- (count itemInClosedDrawerAtEnd:doggie_bed) )
      )
      2
      (count-once itemInClosedDrawerAtEnd:basketball:dodgeball)
      (* 10 (count-once-per-objects itemInClosedDrawerAtEnd:golfball:basketball:pink) )
      3
      (count itemInClosedDrawerAtEnd:blue_dodgeball:yellow)
      3
    )
    (count itemInClosedDrawerAtEnd:golfball)
    (> (count-increasing-measure itemInClosedDrawerAtEnd:pink:dodgeball) 8 )
    (+ (count itemInClosedDrawerAtEnd:pink) (count-once-per-objects itemInClosedDrawerAtEnd:beachball:wall) )
  )
)
)



(define (game game-id-987) (:domain few-objects-room-v1)
(:setup
  (forall (?bl - chair ?c - hexagonal_bin ?b - game_object)
    (and
      (exists (?c - (either dodgeball cylindrical_block laptop) ?f - hexagonal_bin)
        (game-conserved
          (agent_crouches )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b - wall)
      (and
        (preference ballThrownToRug
          (exists (?d - hexagonal_bin)
            (then
              (once (agent_holds floor) )
              (once (or (in ?b ?b) ) )
              (once (same_type ?d bridge_block) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (<= (total-time) (count-once-per-objects ballThrownToRug:top_drawer:basketball) )
)
(:scoring
  (count ballThrownToRug:beachball:purple)
)
)



(define (game game-id-988) (:domain many-objects-room-v1)
(:setup
  (exists (?o2 - building)
    (and
      (game-optional
        (touch agent ?o2)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l1 - dodgeball)
      (and
        (preference objectsHidden
          (at-end
            (in_motion ?l1)
          )
        )
      )
    )
    (forall (?t1 - game_object)
      (and
        (preference blockPlacedInBuilding
          (exists (?o - cube_block)
            (at-end
              (on ?o agent)
            )
          )
        )
      )
    )
    (forall (?c4 - pillow)
      (and
        (preference blueObjectMovedToRoomCenter
          (exists (?d1 - doggie_bed)
            (then
              (once (on ?d1 agent) )
              (once (and (not (not (and (and (and (and (and (in_motion ?d1) (agent_holds ?c4) ) (toggled_on agent) ) (and (in_motion ?d1) (and (and (> (distance ?d1 ?c4) 1) (agent_holds ?c4) ) (agent_holds ?d1) (in ?c4 ?d1) ) ) ) (not (rug_color_under ?c4 color) ) ) (and (and (agent_holds ?c4) (in_motion ?d1) ) (and (in_motion ?d1) (exists (?o - (either dodgeball pyramid_block)) (in_motion ?d1) ) (and (adjacent ?d1 ?c4) (adjacent ?d1 ?c4) ) (not (on ?d1 ?c4) ) ) (agent_holds ?d1) ) (touch ?c4 ?d1) (in ?d1 ?d1) ) ) ) (and (object_orientation agent sideways) ) (in ?d1 ?d1) (adjacent ?d1 ?c4) (agent_holds ?c4) (in_motion desktop) (and (and (not (< (distance_side room_center front_left_corner ?d1 front) 1) ) (touch ?c4 bed) (in_motion ?c4) ) (in ?c4 ?c4) ) (not (not (in_motion agent) ) ) ) )
              (once (and (and (equal_x_position east_sliding_door ?c4) (and (on ?d1 ?d1) (> (distance bed ?d1) (distance bed ?c4)) ) ) (adjacent desk desk) (not (and (in_motion ?d1) (agent_holds floor) (in_motion rug) ) ) ) )
            )
          )
        )
        (preference blockCorrectlyPicked
          (exists (?b - doggie_bed ?c4 ?c2 ?d ?c4 ?b3 - (either bridge_block laptop book) ?h - (either book pen cylindrical_block))
            (at-end
              (in_motion desk)
            )
          )
        )
        (preference throwBallToDoggieBedOffWall
          (exists (?r1 - shelf ?b1 - wall)
            (then
              (hold-while (on ?b1 ?b1) (or (and (same_color ?b1 ?b1) (in_motion ?b1) ) (touch ?c4 ?c4) ) )
              (hold-while (< (distance ?c4 ?b1) 1) (touch agent ?b1) (and (agent_holds ?c4) (in_motion ?b1) ) )
              (once (adjacent desk rug) )
            )
          )
        )
      )
    )
    (preference itemsBroken
      (exists (?r2 - building ?c5 - dodgeball)
        (then
          (once (and (in_motion ?c5) (in_motion ?c5) ) )
          (once (and (not (in_motion ?c5) ) (and (on ?c5 ?c5) (same_object ?c5 ?c5) (>= 1 2) ) ) )
          (once (agent_holds rug) )
        )
      )
    )
    (forall (?b - cube_block)
      (and
        (preference throwToBinFromOppositeWall
          (at-end
            (on ?b ?b)
          )
        )
      )
    )
  )
)
(:terminal
  (<= (external-forall-maximize (count objectsHidden:pink) ) (count-once-per-objects throwToBinFromOppositeWall:yellow:basketball) )
)
(:scoring
  (count itemsBroken:orange)
)
)



(define (game game-id-989) (:domain few-objects-room-v1)
(:setup
  (exists (?w2 - hexagonal_bin ?o - ball)
    (game-conserved
      (and
        (not
          (exists (?c - ball)
            (and
              (in_motion ?c)
              (not
                (in_motion ?c)
              )
              (<= (distance desk agent) (distance west_wall ?o))
            )
          )
        )
        (agent_holds ?o)
        (faces ?o ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?o2 - ball ?b1 - curved_wooden_ramp)
      (and
        (preference throwTeddyOntoPillow
          (exists (?p - dodgeball)
            (then
              (hold (in ?p ?p) )
              (once (and (and (is_setup_object ?p) (and (forall (?h - (either cylindrical_block cd tall_cylindrical_block)) (agent_holds ?h) ) (same_color ?b1 ?b1) ) ) (agent_holds ?b1) ) )
              (once (equal_x_position room_center ?p) )
            )
          )
        )
      )
    )
    (preference itemInClosedDrawerAtEnd
      (exists (?b - hexagonal_bin)
        (then
          (once (not (and (and (in ?b ?b) (on floor ?b) (not (and (agent_holds ?b) (in ?b ?b) ) ) ) (agent_holds ?b) ) ) )
          (once (object_orientation ?b upright) )
          (once (on ?b ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (count itemInClosedDrawerAtEnd:basketball) (total-time) )
)
(:scoring
  (count throwTeddyOntoPillow:blue_dodgeball)
)
)



(define (game game-id-990) (:domain few-objects-room-v1)
(:setup
  (game-optional
    (< 3 3)
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?y ?y0 ?y1 - sideways ?b1 ?d - bridge_block)
        (at-end
          (not
            (on ?d ?b1)
          )
        )
      )
    )
    (forall (?t1 - (either blue_cube_block dodgeball) ?d - chair)
      (and
        (preference ballThrownToRug
          (exists (?c - beachball ?h - hexagonal_bin)
            (at-end
              (not
                (in_motion ?d)
              )
            )
          )
        )
        (preference dodgeballFromRugToBin
          (exists (?d - red_dodgeball ?c5 - game_object)
            (then
              (hold-while (between ?d ?c5 ?c5) (in ?c5 ?c5) (game_over ) )
              (once (agent_holds ?d) )
              (once (and (not (< 1 3) ) (in agent ?c5) (and (< 3 6) (agent_holds ?d) ) ) )
            )
          )
        )
        (preference ballThrownMissesEverything
          (exists (?r - hexagonal_bin ?b5 - building ?h - curved_wooden_ramp)
            (then
              (hold-while (agent_holds ?h) (not (and (between floor ?d ?d) (> 1 (x_position ?d)) (agent_holds ?d) ) ) )
              (once (and (on ?d ?h) (agent_holds ?h) ) )
              (once (agent_holds ?h) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (and
        (> (count-once-per-objects ballThrownMissesEverything:basketball) (count-overlapping ballThrownMissesEverything:top_drawer) )
        (>= 1 (total-time) )
      )
      (>= (external-forall-maximize (* (= (* (count dodgeballFromRugToBin:tan:yellow) 6 )
              (+ 6 (+ (+ 3 (* 3 (count-once-per-objects dodgeballFromRugToBin:cube_block) )
                    2
                  )
                  10
                  (= 7 (count dodgeballFromRugToBin:alarm_clock:pink) (* (count ballThrownMissesEverything:basketball) 2 )
                  )
                )
              )
            )
            (count-once-per-objects ballThrownMissesEverything:triangle_block)
          )
        )
        5
      )
      (>= (* 10 (- (+ (= 100 6 )
              (* (count ballThrownMissesEverything:blue_dodgeball) (count ballThrownFromRug:green:pink_dodgeball) (- (external-forall-maximize (* 1 (count ballThrownFromRug:green:red_pyramid_block) )
                  )
                )
              )
            )
          )
        )
        (total-score)
      )
    )
    (<= (count dodgeballFromRugToBin:red) 5 )
    (>= 15 (+ 5 (* (count-once-per-objects ballThrownMissesEverything:dodgeball) 50 (count-longest ballThrownMissesEverything:doggie_bed) (* 6 (count-longest ballThrownToRug:doggie_bed) 5 )
        )
      )
    )
  )
)
(:scoring
  (* 6 )
)
)



(define (game game-id-991) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b - building)
      (not
        (not
          (not
            (game-conserved
              (in_motion ?b)
            )
          )
        )
      )
    )
    (exists (?c1 - dodgeball ?d - building)
      (forall (?p - dodgeball)
        (game-optional
          (in_motion ?p)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockPlacedInBuilding
      (exists (?o - block ?b - dodgeball ?p1 - dodgeball)
        (then
          (once (< (distance bed ?p1) 1) )
          (once (exists (?c1 - hexagonal_bin) (not (not (in ?p1 ?p1) ) ) ) )
          (once (and (in bed ?p1) (on ?p1 ?p1) ) )
        )
      )
    )
    (preference objectMoved
      (exists (?w2 - (either laptop yellow_cube_block cellphone) ?l2 ?o - building)
        (then
          (once (agent_holds ?l2) )
          (once (game_over ) )
          (once (in_motion bed) )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (- (count-once-per-external-objects blockPlacedInBuilding:yellow_pyramid_block) )
    )
    (> 10 (* (+ (count-once-per-objects objectMoved:dodgeball) 100 )
        (external-forall-maximize
          (+ (+ 3 5 18 (count-once blockPlacedInBuilding:pink_dodgeball) )
            10
          )
        )
      )
    )
    (>= (total-time) (count-once-per-objects objectMoved:red_pyramid_block) )
  )
)
(:scoring
  (* 50 (* (count objectMoved:beachball) 5 )
  )
)
)



(define (game game-id-992) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - hexagonal_bin)
    (and
      (game-conserved
        (in_motion ?r)
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 - (either golfball))
      (and
        (preference teddyBearHitsBall
          (exists (?h - (either golfball key_chain basketball))
            (then
              (once (and (in ?b2 ?b2) (and (exists (?b - drawer) (forall (?l - cube_block) (agent_holds ?b2) ) ) (in_motion ?h) ) ) )
              (hold (agent_holds ?b2) )
              (hold (not (not (on rug ?h) ) ) )
            )
          )
        )
      )
    )
    (forall (?w1 - chair ?b - ball)
      (and
        (preference gameObjectToBin
          (exists (?w1 - cube_block)
            (then
              (once (agent_holds desk) )
              (once (on ?w1 ?b) )
              (once (in ?w1 ?b) )
            )
          )
        )
        (preference throwKnocksOverBear
          (then
            (once (and (not (< (distance bed ?b) 2) ) (object_orientation agent sideways) ) )
            (once (agent_holds ?b) )
            (once (agent_holds top_shelf) )
          )
        )
      )
    )
    (preference ballThrownFromBehindBlock
      (exists (?w2 - building)
        (then
          (hold (and (equal_x_position ?w2 ?w2) (not (and (in ?w2 ?w2) (adjacent_side ?w2 back agent) ) ) ) )
          (hold (in_motion ?w2) )
          (hold (same_color ?w2 agent) )
        )
      )
    )
  )
)
(:terminal
  (and
    (> 7 (count ballThrownFromBehindBlock:green) )
  )
)
(:scoring
  (count-once-per-objects gameObjectToBin:beachball:blue_dodgeball)
)
)



(define (game game-id-993) (:domain medium-objects-room-v1)
(:setup
  (forall (?r1 - (either key_chain alarm_clock))
    (and
      (exists (?b1 - dodgeball)
        (game-conserved
          (same_color ?b1 ?r1)
        )
      )
      (game-optional
        (not
          (and
            (in agent bed)
            (in ?r1 ?r1)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromRug
      (exists (?b2 - ball)
        (then
          (hold (and (in ?b2 ?b2) (in ?b2 ?b2) ) )
          (once (not (< 1 (distance desk ?b2)) ) )
          (once (in ?b2 ?b2) )
        )
      )
    )
  )
)
(:terminal
  (>= 2 (+ (* (count ballThrownFromRug:pink_dodgeball) (count-once-per-objects ballThrownFromRug:blue_dodgeball:golfball) )
      3
    )
  )
)
(:scoring
  (count-once-per-objects ballThrownFromRug:purple)
)
)



(define (game game-id-994) (:domain few-objects-room-v1)
(:setup
  (forall (?c - game_object)
    (and
      (and
        (exists (?h ?d1 ?b4 ?d ?b9 ?b ?b ?bl ?o1 ?tb - cube_block)
          (exists (?c - (either pillow hexagonal_bin))
            (and
              (exists (?b - cube_block ?t2 - curved_wooden_ramp)
                (game-conserved
                  (agent_holds bed)
                )
              )
              (and
                (game-optional
                  (adjacent ?tb ?c)
                )
              )
            )
          )
        )
      )
      (game-conserved
        (< (distance ?c ?c) 5)
      )
      (game-conserved
        (and
          (in_motion ?c)
          (not
            (and
              (in ?c ?c)
              (adjacent ?c ?c)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeThrownToBin
      (exists (?h - hexagonal_bin ?r2 - (either alarm_clock golfball))
        (then
          (hold (in_motion ?r2) )
          (once (on ?r2 ?r2) )
          (once (between ?r2 agent ?r2) )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-time) (count-once-per-objects cubeThrownToBin:basketball) )
  )
)
(:scoring
  (count-once-per-objects cubeThrownToBin:beachball)
)
)



(define (game game-id-995) (:domain many-objects-room-v1)
(:setup
  (forall (?o - (either blue_cube_block pyramid_block))
    (and
      (game-conserved
        (in_motion ?o)
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - doggie_bed)
      (and
        (preference dodgeballThrownToBin
          (at-end
            (in_motion ?c)
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (+ (count-shortest dodgeballThrownToBin:dodgeball:orange) (count dodgeballThrownToBin:orange:beachball) )
      4
    )
  )
)
(:scoring
  (count-once-per-objects dodgeballThrownToBin:green)
)
)



(define (game game-id-996) (:domain few-objects-room-v1)
(:setup
  (game-conserved
    (not
      (in_motion green_golfball)
    )
  )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?o - game_object)
        (then
          (hold (< (distance ?o ?o) (distance desk ?o)) )
          (hold (agent_holds rug) )
          (once (agent_holds ?o) )
        )
      )
    )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?d - hexagonal_bin)
        (then
          (once (< 1 (distance room_center ?d)) )
          (hold (not (agent_holds ?d) ) )
          (once (not (not (not (not (agent_holds agent) ) ) ) ) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?bl - wall ?r2 - hexagonal_bin)
        (at-end
          (in_motion ?r2)
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (* 1 (count-once-per-objects objectMovedRoomSide:golfball) )
  )
)
(:scoring
  (- (count golfballUnderBridgeWithoutTouchingBlock:yellow) )
)
)



(define (game game-id-997) (:domain few-objects-room-v1)
(:setup
  (forall (?t - game_object)
    (game-optional
      (in_motion ?t)
    )
  )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?c - curved_wooden_ramp)
        (at-end
          (not
            (and
              (agent_holds ?c)
              (not
                (touch ?c ?c)
              )
              (not
                (on ?c ?c)
              )
              (in_motion ?c)
              (not
                (same_object ?c ?c)
              )
              (agent_holds ?c)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (total-time) (count dodgeballsInPlace:golfball) )
)
(:scoring
  (count dodgeballsInPlace:yellow_cube_block)
)
)



(define (game game-id-998) (:domain medium-objects-room-v1)
(:setup
  (game-optional
    (in_motion agent)
  )
)
(:constraints
  (and
    (preference objectOnBed
      (exists (?b - hexagonal_bin ?h - dodgeball)
        (at-end
          (and
            (not
              (agent_holds ?h)
            )
            (on ?h ?h)
          )
        )
      )
    )
    (preference basketMadeFromRug
      (exists (?d - cylindrical_block)
        (then
          (once (agent_holds ?d) )
          (hold (agent_holds floor) )
          (once (in ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (>= (* (count-once-per-objects basketMadeFromRug:beachball) 5 )
    8
  )
)
(:scoring
  (* (count basketMadeFromRug:pink) 50 )
)
)



(define (game game-id-999) (:domain medium-objects-room-v1)
(:setup
  (exists (?r - teddy_bear)
    (game-optional
      (< 1 10)
    )
  )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?g - (either desktop cylindrical_block doggie_bed) ?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright) )
          (hold (and (and (and (and (and (between ?h ?h bed) (same_color ?h ?h) (and (exists (?b10 - blinds ?bl - building) (and (not (on ?bl agent) ) (and (not (< (distance ?h ?bl) (distance ?bl ?h)) ) (touch ?h ?h) ) ) ) (in_motion ?h) ) ) (agent_holds ?h) ) (in_motion ?h) ) (adjacent_side ?h front ?h) (and (not (not (in_motion ?h) ) ) (agent_holds ?h) (on ?h ?h) ) ) ) )
          (once (exists (?o2 - hexagonal_bin) (in_motion ?o2) ) )
        )
      )
    )
  )
)
(:terminal
  (or
    (or
      (>= 4 (* (* (count-once throwBallFromOtherBallToBin:green) (+ (count-once-per-objects throwBallFromOtherBallToBin:cylindrical_block) (count-unique-positions throwBallFromOtherBallToBin:dodgeball) (+ (count throwBallFromOtherBallToBin:purple:yellow) (count-unique-positions throwBallFromOtherBallToBin:green) (external-forall-maximize (* 2 (* (count throwBallFromOtherBallToBin:dodgeball:hexagonal_bin) (+ 3 (count-once throwBallFromOtherBallToBin:dodgeball) )
                    )
                  )
                )
              )
              (* 2 (* (count-overlapping throwBallFromOtherBallToBin:basketball) (external-forall-maximize (count throwBallFromOtherBallToBin:dodgeball) ) )
              )
              (- (count-once-per-objects throwBallFromOtherBallToBin:beachball) )
              (* (count throwBallFromOtherBallToBin:red:pink) (count throwBallFromOtherBallToBin:basketball) (<= 1 (count-once throwBallFromOtherBallToBin:dodgeball:golfball) )
              )
            )
          )
          10
          (+ 3 (count-once-per-objects throwBallFromOtherBallToBin:hexagonal_bin) )
          (count throwBallFromOtherBallToBin:dodgeball)
          (count-once-per-objects throwBallFromOtherBallToBin:blue_dodgeball)
          (count throwBallFromOtherBallToBin:dodgeball)
        )
      )
    )
    (>= 6 (* (count-once-per-objects throwBallFromOtherBallToBin:beachball) (+ (count throwBallFromOtherBallToBin:dodgeball:basketball) (* (count throwBallFromOtherBallToBin:pink) 2 )
        )
      )
    )
    (>= (count throwBallFromOtherBallToBin:basketball) (total-time) )
  )
)
(:scoring
  (count-once-per-external-objects throwBallFromOtherBallToBin:basketball)
)
)



(define (game game-id-1000) (:domain many-objects-room-v1)
(:setup
  (forall (?b - dodgeball)
    (exists (?d - ball)
      (game-optional
        (and
          (on ?b blue)
          (in ?d ?b)
          (forall (?b9 - block)
            (in_motion ?b9)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b9 - dodgeball ?b - cube_block)
        (then
          (once (in_motion ?b) )
          (once (and (not (in ?b ?b) ) (and (and (and (in_motion ?b) (in_motion ?b) (adjacent desk ?b) ) (not (not (agent_holds ?b) ) ) ) (not (exists (?b6 - drawer) (not (exists (?b7 - golfball) (on agent ?b7) ) ) ) ) ) ) )
          (once (and (not (not (exists (?c - chair ?r - triangular_ramp) (and (in ?r bed) (on ?b ?r) ) ) ) ) (not (on rug ?b) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (* 10 (count-once-per-objects towerFallsWhileBuilding) )
    10
  )
)
(:scoring
  (count-longest towerFallsWhileBuilding:golfball)
)
)



(define (game game-id-1001) (:domain many-objects-room-v1)
(:setup
  (exists (?o3 - hexagonal_bin)
    (and
      (and
        (game-optional
          (on ?o3 ?o3)
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - cube_block)
      (and
        (preference ballOnBedAtEnd
          (exists (?d - chair)
            (at-end
              (not
                (in ?d ?d)
              )
            )
          )
        )
      )
    )
    (preference throwToBin
      (exists (?h - cube_block)
        (then
          (once (not (>= (distance bed ?h) 0.5) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (count-once-per-external-objects throwToBin:basketball) (* 9 1 (count-once-per-external-objects ballOnBedAtEnd:beachball) )
  )
)
(:scoring
  (* (external-forall-maximize (count ballOnBedAtEnd:dodgeball) ) 2 )
)
)



(define (game game-id-1002) (:domain few-objects-room-v1)
(:setup
  (exists (?p1 - dodgeball ?o2 - dodgeball)
    (game-conserved
      (agent_holds ?o2)
    )
  )
)
(:constraints
  (and
    (preference blockIncorrectlyPicked
      (exists (?b3 - ball ?o2 - hexagonal_bin)
        (at-end
          (not
            (not
              (agent_holds ?o2)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 3 (count-once-per-objects blockIncorrectlyPicked:cube_block) (* (count blockIncorrectlyPicked:dodgeball) (count-once-per-objects blockIncorrectlyPicked:beachball) 8 )
      (* (count blockIncorrectlyPicked:dodgeball) 20 )
      10
      (* 10 2 )
    )
    (count-once-per-objects blockIncorrectlyPicked:golfball)
  )
)
(:scoring
  (* (* (* (count-once-per-objects blockIncorrectlyPicked:dodgeball) (count blockIncorrectlyPicked:dodgeball) )
      3
    )
    5
  )
)
)



(define (game game-id-1003) (:domain few-objects-room-v1)
(:setup
  (exists (?h - (either alarm_clock pyramid_block triangular_ramp))
    (game-conserved
      (in ?h ?h)
    )
  )
)
(:constraints
  (and
    (forall (?d - block)
      (and
        (preference bookOnDeskShelf
          (exists (?b - ball)
            (then
              (hold (agent_holds ?d) )
              (once (not (on ?b ?b) ) )
              (hold (in_motion ?d) )
            )
          )
        )
      )
    )
    (forall (?l2 - (either cube_block hexagonal_bin))
      (and
        (preference watchOnShelf
          (exists (?o3 - cube_block)
            (then
              (once (in ?o3 ?l2) )
              (hold (and (and (and (and (> 0.5 (distance door ?o3)) (on agent ?o3) ) ) (agent_holds ?o3) ) (and (agent_holds agent) (forall (?l - hexagonal_bin ?c5 - game_object) (and (in ?l2 ?c5) (not (and (same_color ?c5 ?o3) (not (and (not (in_motion ?o3) ) (not (not (in_motion ?o3) ) ) ) ) ) ) (not (not (in_motion ?o3) ) ) ) ) ) (in_motion ?o3) ) )
              (once (and (on ?l2 ?l2) (and (touch ?l2 agent) (and (on agent ?o3) (in bed ?o3) ) (in west_wall ?o3) ) ) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (< (count bookOnDeskShelf:beachball) 0 )
)
(:scoring
  (* (- (* 2 (* 20 (count-once bookOnDeskShelf) )
        (count-once-per-external-objects bookOnDeskShelf:tan)
      )
    )
    6
    (count-once watchOnShelf:dodgeball)
  )
)
)



(define (game game-id-1004) (:domain many-objects-room-v1)
(:setup
  (exists (?w1 - teddy_bear ?g - dodgeball)
    (game-conserved
      (or
        (not
          (adjacent ?g ?g)
        )
        (< (distance ?g bed) 1)
      )
    )
  )
)
(:constraints
  (and
    (preference binKnockedOver
      (exists (?b - game_object)
        (then
          (once (in_motion ?b) )
          (hold (and (and (in ?b ?b) (agent_holds ?b) ) (equal_x_position bed ?b) ) )
          (once (in_motion ?b) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (> (count binKnockedOver:purple) (count binKnockedOver:hexagonal_bin) )
      (count-longest binKnockedOver:hexagonal_bin)
    )
    2
  )
)
(:scoring
  (count-once-per-objects binKnockedOver:golfball)
)
)



(define (game game-id-1005) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b2 - hexagonal_bin)
      (and
        (forall (?tb - doggie_bed)
          (game-optional
            (on agent ?b2)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference itemsHidingScreens
      (exists (?z ?z0 - (either right front back) ?t - game_object ?o2 ?h ?tb - game_object ?p1 - hexagonal_bin)
        (at-end
          (agent_holds ?p1)
        )
      )
    )
  )
)
(:terminal
  (< 3 (* (+ (count-once-per-objects itemsHidingScreens:basketball) (> (external-forall-maximize (count-once-per-objects itemsHidingScreens:blue_pyramid_block) ) (count itemsHidingScreens:triangle_block:orange) )
      )
      (count itemsHidingScreens:basketball)
      15
    )
  )
)
(:scoring
  (count itemsHidingScreens:dodgeball)
)
)



(define (game game-id-1006) (:domain many-objects-room-v1)
(:setup
  (exists (?b - ball ?p - (either cube_block flat_block))
    (exists (?c - pillow)
      (game-optional
        (in_motion ?p)
      )
    )
  )
)
(:constraints
  (and
    (preference itemsBroken
      (exists (?c6 - building ?w1 - pillow)
        (then
          (once (exists (?t - red_dodgeball) (not (not (or (in ?w1 ?t) (in_motion ?w1) ) ) ) ) )
          (once (agent_holds agent) )
          (once (not (not (not (not (exists (?b - triangular_ramp) (exists (?tb - block ?w2 - hexagonal_bin) (on ?b ?w2) ) ) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 4 (* 3 (>= (* 10 (* 3 )
        )
        1
      )
      (count itemsBroken:purple:pink)
    )
  )
)
(:scoring
  (* (count-shortest itemsBroken:blue_cube_block) (* 1 2 )
  )
)
)



(define (game game-id-1007) (:domain medium-objects-room-v1)
(:setup
  (exists (?l2 - game_object)
    (and
      (and
        (game-conserved
          (on ?l2 ?l2)
        )
      )
      (and
        (exists (?h - wall ?l4 ?c - ball)
          (game-optional
            (agent_holds ?c)
          )
        )
      )
      (and
        (forall (?d1 - hexagonal_bin ?w2 - cube_block)
          (exists (?d - pink_dodgeball ?c3 - (either floor beachball doggie_bed) ?o3 - beachball)
            (exists (?w2 - red_pyramid_block)
              (game-optional
                (in ?o3 ?l2)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownFromObjectToBin
      (exists (?o - dodgeball ?c - hexagonal_bin)
        (at-end
          (same_type ?c block)
        )
      )
    )
  )
)
(:terminal
  (>= 5 2 )
)
(:scoring
  (count ballThrownFromObjectToBin:blue_cube_block:basketball)
)
)



(define (game game-id-1008) (:domain few-objects-room-v1)
(:setup
  (forall (?h - hexagonal_bin)
    (and
      (exists (?x - yellow ?bl - curved_wooden_ramp)
        (and
          (forall (?d - game_object ?g - curved_wooden_ramp)
            (and
              (and
                (forall (?t - teddy_bear ?h - cylindrical_block)
                  (game-conserved
                    (not
                      (exists (?c3 - block ?y ?y0 - diagonal)
                        (agent_holds ?g)
                      )
                    )
                  )
                )
                (exists (?d1 - hexagonal_bin)
                  (and
                    (exists (?b - doggie_bed ?c - hexagonal_bin)
                      (game-conserved
                        (on ?g ?c)
                      )
                    )
                    (and
                      (forall (?h - ball ?c2 - (either desktop desktop) ?d - (either dodgeball wall))
                        (exists (?b1 - block)
                          (game-optional
                            (and
                              (in ?d ?d)
                              (not
                                (adjacent desk ?bl)
                              )
                              (not
                                (and
                                  (agent_holds ?h)
                                  (and
                                    (in_motion ?d)
                                    (in rug ?g)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                      (game-optional
                        (not
                          (and
                            (forall (?b - dodgeball)
                              (in_motion ?bl)
                            )
                            (and
                              (same_type ?d1 ?d1)
                              (and
                                (< (distance_side desk back ?g) 0)
                                (in ?h ?h)
                                (agent_holds floor)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (exists (?l1 - (either tall_cylindrical_block beachball))
            (game-conserved
              (not
                (adjacent desk ?h)
              )
            )
          )
          (game-conserved
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference throwInBin
      (exists (?g - (either golfball dodgeball) ?d - building)
        (then
          (once (on ?d ?d) )
          (hold (and (is_setup_object agent) (adjacent ?d bed) ) )
          (hold-while (and (agent_holds ?d) (in_motion ?d) ) (in_motion ?d) )
          (once (agent_holds ?d) )
        )
      )
    )
    (preference ballThrownOntoTarget
      (exists (?p - wall)
        (then
          (once (and (touch ?p ?p) (touch agent ?p) (in_motion ?p) (in ?p ?p) ) )
          (once (not (in ?p ?p) ) )
          (once (not (agent_holds ?p) ) )
        )
      )
    )
    (preference throwBallToBin
      (exists (?d - (either cube_block bridge_block) ?c - hexagonal_bin)
        (at-end
          (and
            (not
              (on ?c ?c)
            )
            (and
              (not
                (in_motion ?c)
              )
              (broken agent)
              (and
                (same_color agent ?c)
                (between ?c ?c ?c)
                (in_motion ?c)
                (faces pink bottom_shelf)
              )
              (on agent agent)
            )
          )
        )
      )
    )
    (forall (?y ?y0 ?y1 - (either diagonal) ?o - hexagonal_bin)
      (and
        (preference ballThrownHitsAgent
          (exists (?g - game_object ?c - hexagonal_bin)
            (then
              (hold (in ?o ?c) )
              (once (not (is_setup_object ?o) ) )
              (hold (on ?o ?o) )
              (hold (and (touch ?c ?o) (on ?o agent) (not (in_motion ?c) ) ) )
            )
          )
        )
      )
    )
    (preference throwAttempt
      (exists (?o - dodgeball ?d2 - (either ball flat_block))
        (then
          (once (object_orientation ?d2 sideways) )
          (once (adjacent ?d2 ?d2) )
          (hold (not (and (and (and (same_color ?d2 tan) (not (in ?d2 ?d2) ) ) (touch ?d2 agent) ) (agent_holds ?d2) ) ) )
          (once (in ?d2 ?d2) )
        )
      )
    )
  )
)
(:terminal
  (>= (count throwBallToBin:orange) (count-once-per-objects ballThrownOntoTarget:pink_dodgeball:golfball) )
)
(:scoring
  (* (count throwBallToBin:dodgeball) 40 )
)
)



(define (game game-id-1009) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (exists (?g - ball)
      (and
        (touch ?g ?g)
        (in_motion ?g)
      )
    )
  )
)
(:constraints
  (and
    (preference throwKnocksOverBear
      (exists (?d - (either dodgeball teddy_bear))
        (then
          (once (and (and (same_color ?d ?d) (on ?d ?d) (agent_holds ?d) (in_motion rug) ) (not (not (and (same_type ?d pillow) (agent_holds ?d) ) ) ) ) )
          (hold (and (not (in_motion ?d) ) (touch ?d bed) ) )
          (once (forall (?c - hexagonal_bin) (< (distance ?d ?c) (distance desk ?d)) ) )
        )
      )
    )
  )
)
(:terminal
  (>= (+ (count-once-per-objects throwKnocksOverBear:beachball) (count throwKnocksOverBear:hexagonal_bin) )
    (count-shortest throwKnocksOverBear:yellow)
  )
)
(:scoring
  (count throwKnocksOverBear:bed)
)
)



(define (game game-id-1010) (:domain medium-objects-room-v1)
(:setup
  (exists (?b1 - game_object)
    (forall (?c - dodgeball)
      (game-conserved
        (in_motion ?b1)
      )
    )
  )
)
(:constraints
  (and
    (forall (?l3 - game_object)
      (and
        (preference smallItemsInPlace
          (exists (?b5 - building)
            (then
              (hold (and (in ?l3 desk) (touch ?l3 ?l3) ) )
              (hold (agent_holds ?l3) )
            )
          )
        )
      )
    )
    (preference watchOnShelf
      (exists (?t - beachball ?x - pink ?f - dodgeball)
        (at-end
          (between ?f ?f ?f)
        )
      )
    )
  )
)
(:terminal
  (or
    (>= 3 5 )
  )
)
(:scoring
  (+ (count watchOnShelf:doggie_bed) (* 4 5 3 )
  )
)
)



(define (game game-id-1011) (:domain medium-objects-room-v1)
(:setup
  (forall (?t - game_object)
    (and
      (and
        (exists (?b2 - dodgeball ?b - flat_block)
          (game-conserved
            (< 4 1)
          )
        )
        (game-optional
          (in_motion ?t)
        )
      )
    )
  )
)
(:constraints
  (and
    (preference blockCorrectlyPicked
      (exists (?d - cube_block)
        (then
          (hold (in_motion ?d) )
          (once (= (distance room_center ?d) (x_position agent)) )
          (once (in ?d ?d) )
        )
      )
    )
    (preference ballThrownToRug
      (exists (?t1 - hexagonal_bin)
        (then
          (hold (not (= 8 10) ) )
          (hold-while (agent_holds ?t1) (in ?t1 desk) (>= 6 (x_position ?t1)) )
          (hold-while (on ?t1 ?t1) (in_motion ?t1) (in_motion agent) )
        )
      )
    )
    (preference blockPickedUp
      (exists (?bl - hexagonal_bin)
        (then
          (once (in_motion ?bl) )
          (once (and (on ?bl ?bl) (agent_holds ?bl) ) )
          (once (not (in_motion ?bl) ) )
        )
      )
    )
  )
)
(:terminal
  (< (total-score) 2 )
)
(:scoring
  (* (count blockCorrectlyPicked:pink_dodgeball) (count-once-per-objects ballThrownToRug:dodgeball) (* 6 (external-forall-minimize (* (count-once-per-objects ballThrownToRug:yellow) (/ (- 3 )
            4
          )
          (* (+ (count-same-positions blockPickedUp:dodgeball) 2 )
            (count blockCorrectlyPicked:pink:alarm_clock)
          )
        )
      )
    )
    (* (* (* (* 3 (- 10 )
          )
          6
        )
        (count ballThrownToRug:basketball)
      )
      (* -30 (external-forall-minimize (* 6 (- (* 5 (count blockCorrectlyPicked:dodgeball) )
            )
          )
        )
      )
    )
  )
)
)



(define (game game-id-1012) (:domain medium-objects-room-v1)
(:setup
  (forall (?g - hexagonal_bin ?o - ball)
    (forall (?l3 - block)
      (game-conserved
        (game_start )
      )
    )
  )
)
(:constraints
  (and
    (preference dodgeballFromBlockToBin
      (exists (?d - sliding_door)
        (then
          (once (on ?d ?d) )
          (hold-while (in_motion ?d) (forall (?h - wall ?h - pillow ?h ?b ?o ?d ?tb ?b ?o ?b ?o ?o1 - (either golfball chair tall_cylindrical_block)) (and (in ?b bed) (exists (?x ?x0 ?x1 - yellow) (agent_holds ?b) ) ) ) )
          (once (on ?d ?d) )
        )
      )
    )
    (preference blockKnockedFromBuildingInBin
      (exists (?l1 ?r - (either main_light_switch key_chain))
        (then
          (hold (agent_holds ?r) )
          (hold (in_motion ?l1) )
          (hold (agent_holds ?r) )
        )
      )
    )
    (preference blockInTowerKnocked
      (exists (?p2 - game_object)
        (at-end
          (adjacent_side ?p2 front ?p2)
        )
      )
    )
  )
)
(:terminal
  (not
    (<= (* (- (- (count-once-per-objects blockInTowerKnocked:pink_dodgeball) )
        )
        (* (* (+ (count blockInTowerKnocked:book) 2 (count dodgeballFromBlockToBin) )
            (count dodgeballFromBlockToBin:basketball:dodgeball)
          )
          (count-once-per-objects dodgeballFromBlockToBin:basketball)
          3
        )
      )
      30
    )
  )
)
(:scoring
  (count blockKnockedFromBuildingInBin:yellow)
)
)



(define (game game-id-1013) (:domain many-objects-room-v1)
(:setup
  (forall (?p3 - hexagonal_bin)
    (exists (?c - game_object ?w - (either cylindrical_block cd))
      (forall (?t2 - building ?h - hexagonal_bin)
        (game-optional
          (not
            (or
              (not
                (and
                  (and
                    (< (distance door ?p3) 1)
                    (in rug agent)
                  )
                  (and
                    (in_motion ?w)
                    (object_orientation ?p3 upside_down)
                  )
                )
              )
              (on ?h ?h)
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b3 - desk_shelf)
      (and
        (preference itemsBroken
          (exists (?o4 - block ?d - game_object)
            (then
              (once (and (not (and (not (and (adjacent_side desk front ?d front_left_corner) (on ?d ?d) ) ) (and (exists (?p - cube_block) (touch ?p ?b3) ) (in ?b3 agent) ) ) ) (on ?d ?d) ) )
              (once (not (not (and (in_motion ?b3) (and (broken ?d) (or (not (touch ?d ?b3) ) (agent_holds bed) ) ) ) ) ) )
              (once (not (and (in ?d ?b3) (and (not (in_motion ?b3) ) (agent_holds ?d) ) ) ) )
            )
          )
        )
        (preference objectThrownFromRug
          (exists (?y - upright)
            (at-end
              (agent_holds ?b3)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (or
    (> (total-time) (+ 15 (* 2 (+ (* 2 (count objectThrownFromRug:basketball:yellow) )
            (count-once itemsBroken:beachball)
          )
        )
      )
    )
    (>= (* (count-once-per-external-objects itemsBroken:rug) (* 7 (count-longest itemsBroken:blue_cube_block:beachball) )
        (count-once-per-objects itemsBroken:green)
      )
      (count-same-positions itemsBroken:dodgeball)
    )
  )
)
(:scoring
  (count itemsBroken:pink)
)
)



(define (game game-id-1014) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?h - doggie_bed)
      (and
        (and
          (and
            (game-conserved
              (not
                (agent_holds blue)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference cubeBlockThrownToTopShelf
      (exists (?b - pyramid_block)
        (at-end
          (on ?b ?b)
        )
      )
    )
    (forall (?d - hexagonal_bin)
      (and
        (preference objectMovedRoomSide
          (exists (?l3 - (either pyramid_block desktop) ?d2 - hexagonal_bin ?c - hexagonal_bin)
            (at-end
              (adjacent ?d agent)
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* 9 8 )
    (total-score)
  )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide:pink)
  )
)
)



(define (game game-id-1015) (:domain medium-objects-room-v1)
(:setup
  (exists (?b1 - (either hexagonal_bin pen) ?b - hexagonal_bin)
    (and
      (game-conserved
        (and
          (adjacent desk ?b)
          (< 4 1)
          (exists (?b - triangular_ramp)
            (in_motion ?b)
          )
          (not
            (agent_holds agent)
          )
          (and
            (agent_holds ?b)
            (and
              (not
                (not
                  (agent_holds ?b)
                )
              )
              (not
                (in_motion ?b)
              )
            )
            (<= 1 5)
            (not
              (not
                (not
                  (in_motion ?b)
                )
              )
            )
            (touch ?b ?b)
            (not
              (and
                (agent_holds ?b)
                (in_motion agent)
              )
            )
            (agent_holds ?b)
            (not
              (equal_z_position ?b agent)
            )
          )
          (in_motion ?b)
          (exists (?o - ball ?d - game_object)
            (in_motion ?b)
          )
          (and
            (not
              (on ?b ?b)
            )
            (agent_holds ?b)
          )
        )
      )
      (exists (?b ?c1 - hexagonal_bin ?b - teddy_bear)
        (exists (?w1 - hexagonal_bin)
          (game-optional
            (< 10 (distance desk ?b))
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?b2 ?r - ball ?r - ball)
      (and
        (preference ballThrownToBin
          (then
            (once (agent_holds ?r) )
            (once (or (exists (?o2 - doggie_bed) (faces ?r agent) ) (adjacent ?r bed) ) )
            (once (in_motion ?r) )
          )
        )
      )
    )
  )
)
(:terminal
  (not
    (>= (total-score) 5 )
  )
)
(:scoring
  (count ballThrownToBin:wall)
)
)



(define (game game-id-1016) (:domain few-objects-room-v1)
(:setup
  (and
    (and
      (forall (?b4 - triangular_ramp)
        (game-conserved
          (in ?b4 ?b4)
        )
      )
      (forall (?h ?c6 ?c - dodgeball)
        (exists (?c ?ob ?s - hexagonal_bin)
          (forall (?db - (either doggie_bed dodgeball book))
            (game-conserved
              (toggled_on ?c)
            )
          )
        )
      )
      (exists (?o - hexagonal_bin)
        (and
          (and
            (exists (?c2 - game_object)
              (game-conserved
                (not
                  (not
                    (and
                      (not
                        (adjacent ?c2 ?c2)
                      )
                      (and
                        (adjacent_side ?c2 left ?o)
                        (and
                          (touch ?o ?c2)
                          (and
                            (in_motion ?c2)
                            (same_color ?c2 green)
                            (touch ?c2 ?c2)
                            (in_motion ?o)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (forall (?l4 - (either blue_cube_block cube_block dodgeball))
      (exists (?h ?b ?o3 ?g ?w ?h - dodgeball)
        (and
          (exists (?r - pillow ?b ?d ?t2 - game_object)
            (forall (?b7 - hexagonal_bin)
              (game-conserved
                (agent_holds ?g)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - (either cd floor main_light_switch) ?o - building)
      (and
        (preference throwAttempt
          (exists (?x - (either yellow))
            (then
              (hold-while (on ?o ?o) (not (in ?o ?o) ) (or (open bed) (agent_holds ?o) ) )
              (once (agent_holds ?o) )
              (once (and (touch ?o rug) (agent_holds ?o) ) )
            )
          )
        )
      )
    )
    (preference throwToBinFromDistance
      (exists (?d - ball)
        (then
          (once (on top_drawer floor) )
          (once (and (not (not (and (on bed ?d) (and (above ?d ?d) (and (broken ?d) (on ?d ?d) ) ) ) ) ) (agent_holds ?d) ) )
          (hold (on ?d ?d) )
        )
      )
    )
  )
)
(:terminal
  (> (total-score) (count throwAttempt:beachball) )
)
(:scoring
  (count-once-per-external-objects throwAttempt:dodgeball)
)
)



(define (game game-id-1017) (:domain many-objects-room-v1)
(:setup
  (exists (?d - curved_wooden_ramp)
    (game-optional
      (in ?d ?d)
    )
  )
)
(:constraints
  (and
    (forall (?r - hexagonal_bin ?o5 - chair)
      (and
        (preference dropAttempt
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?h) )
              (once (or (in ?h ?o5) (and (and (is_setup_object agent) (and (adjacent ?h agent) (not (on ?o5 ?o5) ) ) ) (and (touch rug ?h) (agent_holds ?h) ) ) ) )
              (once (not (in_motion agent) ) )
              (once (agent_holds ?o5) )
            )
          )
        )
        (preference golfballLandsInBinThroughRamp
          (exists (?o1 - dodgeball)
            (then
              (once (in_motion ?o1) )
              (once-measure (on ?o5 agent) (x_position agent) )
              (hold (in ?o1 bed) )
            )
          )
        )
      )
    )
    (preference bounceBallToBin
      (exists (?l - dodgeball ?y ?y0 ?y1 - upright)
        (then
          (once (agent_holds ?l) )
          (hold (and (not (adjacent_side ?l front_left_corner ?l) ) (same_color agent ?l) ) )
          (once (and (not (in_motion ?l) ) (and (and (in_motion ?l) (agent_holds ?l) (< 8 0.5) ) (and (in_motion ?l) (or (not (agent_holds ?l) ) (and (rug_color_under agent tan) (in_motion agent) (on floor ?l) (not (in ?l bed) ) ) (agent_holds ?l) ) ) ) ) )
        )
      )
    )
  )
)
(:terminal
  (= 30 5 )
)
(:scoring
  (* (count bounceBallToBin:cylindrical_block) (count dropAttempt:blue_pyramid_block:bed) )
)
)



(define (game game-id-1018) (:domain many-objects-room-v1)
(:setup
  (exists (?r - chair ?b - cube_block)
    (or
      (and
        (game-conserved
          (touch ?b ?b)
        )
        (game-optional
          (on ?b ?b)
        )
        (exists (?l1 - block ?d ?o ?b2 - (either dodgeball key_chain))
          (exists (?o1 - block)
            (game-optional
              (not
                (in_motion ?o)
              )
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (forall (?c - hexagonal_bin)
      (and
        (preference blockOnBlockInTowerAtEnd
          (exists (?b1 - dodgeball ?t - hexagonal_bin)
            (at-end
              (not
                (adjacent ?c ?t)
              )
            )
          )
        )
        (preference blockInTowerKnockedByDodgeball
          (exists (?c3 - yellow_cube_block)
            (then
              (hold (same_type ?c3 ?c) )
              (once (and (forall (?w2 - ball) (not (in_motion agent) ) ) (and (not (exists (?d - hexagonal_bin) (not (on ?c3 ?c3) ) ) ) (between ?c ?c3 desk) (not (on ?c agent) ) ) ) )
              (once (in_motion ?c3) )
            )
          )
        )
      )
    )
  )
)
(:terminal
  (>= (* (* 3 (count blockInTowerKnockedByDodgeball:yellow_cube_block) )
      15
    )
    2
  )
)
(:scoring
  (count blockOnBlockInTowerAtEnd:pink_dodgeball)
)
)



(define (game game-id-1019) (:domain few-objects-room-v1)
(:setup
  (forall (?b6 - hexagonal_bin)
    (exists (?t - (either key_chain tall_cylindrical_block))
      (exists (?g - game_object ?x ?x0 - color)
        (exists (?b6 - (either alarm_clock dodgeball))
          (game-optional
            (agent_holds ?t)
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBed
      (exists (?c2 - green_triangular_ramp)
        (then
          (once (not (agent_holds ?c2) ) )
          (once (agent_holds ?c2) )
          (once (in_motion ?c2) )
        )
      )
    )
  )
)
(:terminal
  (>= 3 (- (count-once-per-objects ballThrownToBed:basketball:beachball) )
  )
)
(:scoring
  (* (<= 7 2 )
    7
  )
)
)



(define (game game-id-1020) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?r - block)
      (exists (?h - ball)
        (forall (?p - (either book cd pyramid_block block cellphone cylindrical_block cd))
          (game-optional
            (not
              (< (distance desk agent) (distance desk floor))
            )
          )
        )
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?p1 - hexagonal_bin)
        (then
          (once-measure (on ?p1 bed) (distance bed ?p1) )
          (once (not (not (forall (?b6 - dodgeball) (opposite ?p1 ?p1) ) ) ) )
          (once (is_setup_object ?p1) )
          (hold (in_motion ?p1) )
        )
      )
    )
    (preference objectMovedRoomSide
      (exists (?d2 - curved_wooden_ramp)
        (then
          (hold-while (agent_holds ?d2) (and (same_object ?d2 ?d2) (and (on ?d2 ?d2) (agent_holds ?d2) ) (and (and (in_motion ?d2) (adjacent desk ?d2) (in rug ?d2) (in_motion ?d2) (not (not (and (not (on ?d2 ?d2) ) (= 1 1) ) ) ) (in ?d2 ?d2) ) (and (agent_holds ?d2) (in_motion ?d2) ) ) ) )
          (once (adjacent room_center south_wall) )
          (once (forall (?d - cube_block) (not (not (touch ?d2 ?d2) ) ) ) )
        )
      )
    )
    (preference rollBallToBin
      (exists (?r - hexagonal_bin ?p - (either cube_block doggie_bed))
        (then
          (once (and (and (in_motion ?p) (not (in_motion ?p) ) ) (or (in_motion ?p) (agent_holds agent) ) ) )
          (hold (and (and (agent_holds ?p) (adjacent_side bed front bed left) ) (and (in_motion ?p) (agent_holds agent) ) ) )
          (hold (not (not (in_motion floor) ) ) )
        )
      )
    )
  )
)
(:terminal
  (and
    (>= (count ballThrownToWallToAgent:yellow) 3 )
  )
)
(:scoring
  (count-once-per-objects rollBallToBin:pink_dodgeball)
)
)



(define (game game-id-1021) (:domain few-objects-room-v1)
(:setup
  (exists (?d - block)
    (forall (?o5 ?w1 - doggie_bed)
      (game-optional
        (< 0 (distance rug ?d))
      )
    )
  )
)
(:constraints
  (and
    (preference throwAttempt
      (exists (?c - building ?s - (either cellphone cube_block))
        (then
          (hold (agent_holds ?s) )
          (once (in_motion ?s) )
          (once (agent_holds ?s) )
        )
      )
    )
  )
)
(:terminal
  (>= (total-score) (* (- 5 )
      (count-once-per-objects throwAttempt:yellow)
      3
      (= (* (* (+ 6 1 )
            (* 5 (+ 6 (* 2 1 )
              )
            )
          )
          9
          10
          (* 1 20 (count-increasing-measure throwAttempt:dodgeball) (count throwAttempt:basketball:red) (count-once-per-objects throwAttempt:pink_dodgeball) 2 )
          (- 180 )
          20
        )
        (count-once-per-objects throwAttempt:brown)
      )
      (* (count throwAttempt:beachball:red) 18 )
      (count throwAttempt:purple)
    )
  )
)
(:scoring
  (count throwAttempt:dodgeball)
)
)



(define (game game-id-1022) (:domain many-objects-room-v1)
(:setup
  (forall (?r1 - game_object ?b1 - golfball ?d - block)
    (game-conserved
      (and
        (game_over )
        (and
          (agent_crouches )
          (>= (distance ?d ?d) (distance desk ?d))
        )
      )
    )
  )
)
(:constraints
  (and
    (preference objectWithMatchingColor
      (exists (?b - hexagonal_bin ?t - (either wall))
        (then
          (once (in_motion ?t) )
          (once (adjacent ?t ?t) )
          (once (not (in_motion brown) ) )
        )
      )
    )
  )
)
(:terminal
  (>= 5 3 )
)
(:scoring
  (+ (* (- (count objectWithMatchingColor:dodgeball) )
      (count objectWithMatchingColor:purple)
      (+ 9 (* (count-increasing-measure objectWithMatchingColor:basketball) (+ 6 4 )
          2
        )
        (- (- (* 2 (count-once-per-objects objectWithMatchingColor:wall) )
          )
        )
      )
    )
    5
  )
)
)



(define (game game-id-1023) (:domain medium-objects-room-v1)
(:setup
  (exists (?c1 - ball)
    (game-conserved
      (and
        (and
          (not
            (and
              (not
                (agent_holds ?c1)
              )
              (not
                (agent_holds ?c1)
              )
            )
          )
          (not
            (adjacent ?c1 agent)
          )
          (adjacent desk ?c1)
          (forall (?w1 - ball)
            (not
              (in_motion ?c1)
            )
          )
          (and
            (in_motion ?c1)
            (in ?c1 floor)
          )
          (and
            (equal_z_position desk bed)
            (in ?c1 ?c1)
            (exists (?ob - teddy_bear)
              (and
                (agent_holds ?ob)
                (agent_holds ?c1)
              )
            )
          )
          (agent_holds ?c1)
          (and
            (and
              (not
                (not
                  (not
                    (agent_holds ?c1)
                  )
                )
              )
              (not
                (and
                  (not
                    (in_motion ?c1)
                  )
                  (is_setup_object ?c1)
                  (and
                    (and
                      (agent_holds ?c1)
                      (in agent ?c1)
                    )
                    (in_motion agent)
                  )
                )
              )
            )
            (in_motion ?c1)
          )
          (and
            (agent_holds ?c1)
            (in_motion floor)
            (on ?c1 ?c1)
          )
          (in ?c1 ?c1)
        )
        (not
          (on ?c1 ?c1)
        )
        (agent_holds ?c1)
      )
    )
  )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?ob - ball ?h ?h - hexagonal_bin)
        (at-end
          (and
            (not
              (and
                (adjacent ?h ?h)
                (on ?h ?h)
              )
            )
            (in_motion ?h)
          )
        )
      )
    )
  )
)
(:terminal
  (> (* (* 9 (= (count-longest ballThrownToBin:dodgeball) (count-longest ballThrownToBin:pink_dodgeball) )
      )
      3
    )
    7
  )
)
(:scoring
  (count-once ballThrownToBin:yellow)
)
)
